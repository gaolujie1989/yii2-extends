{
  "info": {
    "description": "Sponsored Ad recommendations for Amazon Advertiser accounts.<table><tr><th>Recommendation_type</th><th>Description</th></tr><tr><td>NEW_CAMPAIGN</td><td>Create new campaigns to increase visibility</td></tr><tr><td>NEW_VIDEO_CAMPAIGN</td><td>Create new video campaigns to increase visibility</td></tr><tr><td>NEW_AD_GROUP</td><td>Create new ad groups to increase visibility</td></tr><tr><td>CAMPAIGN_BIDDING_STRATEGY</td><td>Update the bidding strategy to win at auction</td></tr><tr><td>CAMPAIGN_BUDGET</td><td>Update the campaign budget to remain active</td></tr><tr><td>CAMPAIGN_END_DATE</td><td>Update the end date of the campaign</td></tr><tr><td>CAMPAIGN_TOP_PLACEMENT</td><td>Make adjustments to compete for top of search placements</td></tr><tr><td>CAMPAIGN_PRODUCT_PLACEMENT</td><td>Make adjustments to compete for product page placements</td></tr><tr><td>CAMPAIGN_STATE</td><td>Update status of the campaign based on performance</td></tr><tr><td>NEW_CAMPAIGN_BIDDING_RULE</td><td>Create bidding rules for specific campaigns</td></tr><tr><td>CAMPAIGN_BIDDING_RULE</td><td>Update existing bidding rules</td></tr><tr><td>NEW_CAMPAIGN_BUDGET_RULE</td><td>Create new budget rules for holidays and sales events</td></tr><tr><td>CAMPAIGN_BUDGET_RULE</td><td>Update budget rules for holidays and sales events</td></tr><tr><td>AD_GROUP_STATE</td><td>Update status of the agroup based on performance</td></tr><tr><td>AD_GROUP_DEFAULT_BID</td><td>Update ad group bid values to win at auction</td></tr><tr><td>AD_GROUP_BID_OPTIMIZATION</td><td>Update ad group bid optimization strategy to improve engagement</td></tr><tr><td>NEW_KEYWORD</td><td>Create new keywords to increase visibility</td></tr><tr><td>KEYWORD_BID</td><td>Update bids for each keyword to win at auction</td></tr><tr><td>KEYWORD_STATE</td><td>Update status of keywords based on performance</td></tr><tr><td>NEW_NEGATIVE_KEYWORD</td><td>Create new negative keywords to reduce unwanted traffic</td></tr><tr><td>NEGATIVE_KEYWORD_STATE</td><td>Update status of negative keywords based on performance</td></tr><tr><td>NEW_PRODUCT_AD</td><td>Create new product ad to increase visibility</td></tr><tr><td>PRODUCT_AD_STATE</td><td>Update status of the product based on performance</td></tr><tr><td>NEW_PRODUCT_TARGETING</td><td>Create new product targets to increase visibility</td></tr><tr><td>PRODUCT_TARGETING_STATE</td><td>Update status of the product target based on performance</td></tr><tr><td>PRODUCT_TARGETING_BID</td><td>Update bids for each product target to win at auction</td></tr><tr><td>NEW_NEGATIVE_PRODUCT_TARGETING</td><td>Create new negative product targets to reduce unwanted traffic</td></tr><tr><td>NEGATIVE_PRODUCT_TARGETING_STATE</td><td>Update status of the negative product target based on performance</td></tr><tr><td>NEW_AUDIENCE_TARGETING</td><td>Create new audience targets to increase visibility</td></tr><tr><td>AUDIENCE_TARGETING_STATE</td><td>Update status of the audience target based on performance</td></tr><tr><td>AUDIENCE_TARGETING_BID</td><td>Update bids for each audience target to win at auction</td></tr><tr><td>NEW_NEGATIVE_AUDIENCE_TARGETING</td><td>Create new negative audience targets to reduce unwanted traffic</td></tr><tr><td>NEGATIVE_AUDIENCE_TARGETING_STATE</td><td>Update status of the negative audience target based on performance</td></tr></table>",
    "title": "Recommendations",
    "version": "3.0"
  },
  "paths": {
    "/recommendations/list": {
      "post": {
        "summary": "Retrieves a list of recommendations.",
        "requestBody": {
          "content": {
            "application/vnd.listRecommendationsRequest.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/ListRecommendationsRequest"
              }
            }
          },
          "required": true
        },
        "operationId": "ListRecommendations",
        "description": "Retrieves a paginated list of recommendations with optional filtering.",
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/vnd.listRecommendationsResponse.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ListRecommendationsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/vnd.recommendationApiError.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - Something went wrong on the server.",
            "content": {
              "application/vnd.recommendationApiError.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests - Request was denied due to request throttling. Please try again later.",
            "content": {
              "application/vnd.recommendationApiError.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. account.",
            "required": false
          }
        ],
        "tags": [
          "Recommendations"
        ]
      }
    },
    "/recommendations/apply": {
      "post": {
        "summary": "Applies one or more recommendations.",
        "requestBody": {
          "content": {
            "application/vnd.applyRecommendationsRequest.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplyRecommendationsRequest"
              }
            }
          },
          "required": true
        },
        "operationId": "ApplyRecommendations",
        "description": "Applies one or more recommendations.\n\nWhen applying recommendations with recommendationType NEW_CAMPAIGN or NEW_VIDEO_CAMPAIGN, this will return HTTP status code ACCEPTED to indicate that it has been accepted for processing.\nYou can then use POST /recommendations/list to check for the status of these recommendations.\n\nA recommendation's status will be APPLY_SUCCESS if it has been successfully applied. Otherwise, the status will be APPLY_FAILED.\n",
        "responses": {
          "400": {
            "description": "Bad request.",
            "content": {
              "application/vnd.recommendationApiError.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - Something went wrong on the server.",
            "content": {
              "application/vnd.recommendationApiError.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            }
          },
          "207": {
            "description": "Multi-status.",
            "content": {
              "application/vnd.applyRecommendationsResponse.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplyRecommendationsResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests - Request was denied due to request throttling. Please try again later.",
            "content": {
              "application/vnd.recommendationApiError.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.",
            "required": false
          }
        ],
        "tags": [
          "Recommendations"
        ]
      }
    },
    "/recommendations/{recommendationId}": {
      "put": {
        "summary": "Updates a recommendation.",
        "requestBody": {
          "content": {
            "application/vnd.updateRecommendationRequest.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRecommendationRequest"
              }
            }
          },
          "required": true
        },
        "operationId": "UpdateRecommendation",
        "description": "Updates a recommendation.",
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/vnd.recommendation.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Recommendation"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/vnd.recommendationApiError.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - Something went wrong on the server.",
            "content": {
              "application/vnd.recommendationApiError.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            }
          },
          "404": {
            "description": "Bad request - Requested resource was not found.",
            "content": {
              "application/vnd.recommendationApiError.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests - Request was denied due to request throttling. Please try again later.",
            "content": {
              "application/vnd.recommendationApiError.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/APIError"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. account.",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "recommendationId",
            "description": "The identifier of the recommendation.",
            "required": true
          }
        ],
        "tags": [
          "Recommendations"
        ]
      }
    }
  },
  "components": {
    "headers": {},
    "examples": {},
    "schemas": {
      "UpdateRecommendationRequest": {
        "type": "object",
        "properties": {
          "ruleBasedBidding": {
            "$ref": "#/components/schemas/UpdateRuleBasedBidding"
          },
          "recommendedValue": {
            "description": "Recommended value of the recommendation. Type of data expected for each recommendation type:\n| Recommendation type | Data type |\n|---|---|\n| CAMPAIGN_BUDGET, CAMPAIGN_TOP_PLACEMENT, CAMPAIGN_PRODUCT_PLACEMENT, AD_GROUP_DEFAULT_BID, NEW_KEYWORD, KEYWORD_BID, NEW_PRODUCT_TARGETING, PRODUCT_TARGETING_BID, NEW_AUDIENCE_TARGETING, AUDIENCE_TARGETING_BID | number |\n| CAMPAIGN_END_DATE | string($YYYY-MM-DD) |\n| AD_GROUP_BID_OPTIMIZATION | One of [ CLICKS, CONVERSIONS, REACH ] |\n| CAMPAIGN_BIDDING_STRATEGY | One of [ LEGACY_FOR_SALES, AUTO_FOR_SALES, MANUAL ] |\n| CAMPAIGN_STATE, AD_GROUP_STATE, KEYWORD_STATE, NEGATIVE_KEYWORD_STATE, PRODUCT_AD_STATE, PRODUCT_TARGETING_STATE, NEGATIVE_PRODUCT_TARGETING_STATE, AUDIENCE_TARGETING_STATE, NEGATIVE_AUDIENCE_TARGETING_STATE | One of [ ENABLED, PAUSED, ARCHIVED ] |\n",
            "type": "string"
          },
          "budgetRule": {
            "$ref": "#/components/schemas/UpdateBudgetRule"
          }
        },
        "required": [
          "recommendationId"
        ]
      },
      "EstimatedImpactRoas": {
        "description": "Estimated impact of the recommendation on ROAS.",
        "type": "object",
        "properties": {
          "forecastedRecommendedLowerBound": {
            "description": "Lower bound of the forecasted ROAS for the campaign, if the recommendation is adopted, based on data from similar advertisers during the specified time period.",
            "type": "number"
          },
          "incrementalUpperBound": {
            "description": "Upper bound of the estimated change in ROAS seen for similar advertisers within the time period indicated when the recommendation is adopted.",
            "type": "number"
          },
          "incrementalLowerBound": {
            "description": "Lower bound of the estimated change in ROAS seen for similar advertisers within the time period indicated when the recommendation is adopted.",
            "type": "number"
          },
          "forecastedCurrentUpperBound": {
            "description": "Upper bound of the forecasted ROAS for the campaign, based on the current campaign settings and data from similar advertisers during the specified time period.",
            "type": "number"
          },
          "forecastedCurrentLowerBound": {
            "description": "Lower bound of the forecasted ROAS for the campaign, based on the current campaign settings and data from similar advertisers during the specified time period.",
            "type": "number"
          },
          "forecastedRecommendedUpperBound": {
            "description": "Upper bound of the forecasted ROAS for the campaign, if the recommendation is adopted, based on data from similar advertisers during the specified time period.",
            "type": "number"
          }
        }
      },
      "ConsolidatedRecommendation": {
        "description": "Data for a group of recommendations.",
        "type": "object",
        "properties": {
          "sevenDaysEstimatedOpportunities": {
            "$ref": "#/components/schemas/SevenDaysEstimatedOpportunities"
          },
          "recommendationReasons": {
            "$ref": "#/components/schemas/RecommendationReasons"
          }
        }
      },
      "CampaignPlacement": {
        "description": "Placement details of the campaign.",
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CampaignPlacementType"
          },
          "value": {
            "description": "Percentage value of the placement.",
            "maximum": 900,
            "type": "integer",
            "minimum": 0
          }
        },
        "required": [
          "type",
          "value"
        ]
      },
      "CampaignPlacementType": {
        "description": "Type of the campaign placement.",
        "type": "string",
        "enum": [
          "PLACEMENT_TOP",
          "PLACEMENT_PRODUCT_PAGE"
        ]
      },
      "PublishedBy": {
        "description": "Publisher of the recommendation.",
        "type": "string",
        "enum": [
          "AMAZON_ADS_ACCOUNT_TEAM"
        ]
      },
      "RecommendationReasons": {
        "minItems": 0,
        "maxItems": 100,
        "description": "List of reasons why the recommendation was created",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/RecommendationReason"
        }
      },
      "BidOptimization": {
        "description": "A type of bid optimization used by an Ad Group.",
        "type": "string",
        "enum": [
          "CLICKS",
          "CONVERSIONS",
          "REACH"
        ]
      },
      "ApplyRecommendationsRequest": {
        "type": "object",
        "properties": {
          "recommendationIds": {
            "minItems": 1,
            "maxItems": 100,
            "description": "Recommendation identifier.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "recommendationIds"
        ]
      },
      "UpdateBudgetRuleDurationDateRange": {
        "type": "object",
        "properties": {
          "endDate": {
            "format": "date",
            "description": "End date of the budget rule in YYYY-MM-DD format. The end date is inclusive.",
            "type": "string"
          }
        }
      },
      "BenchmarkContext": {
        "description": "Benchmark Context for the recommendation. \n | Benchmark | Description |\n|---|---|\n| Impressions | Impressions received by the campaign over the specified time period |\n| Roas | Return on ad spend (RoAS) for the campaign over the specified time period |\n| AdSpend | The ad spend incurrend by the campaign over the specified time period |\n| ClickthroughRate | The clickthrough rate of the campaign over the specified time period |\n| BudgetUtilization | Average budget used by the campaign as a percent of total budget allocated, over the specified time period |\n| BrandedSearches | The branded searches of the campaign over the specified time period |\n| DetailPageViews | The detail page views of the campaign over the specified time period |\n| AttributedOrders | The attributed orders of the campaign over the specified time period |\n| CostPerBrandedSearch | The cost per branded search of the campaign over the specified time period |\n| CostPerDetailPageView | The cost per detail page view of the campaign over the specified time period |",
        "type": "object",
        "properties": {
          "clickthroughRate": {
            "$ref": "#/components/schemas/Benchmark"
          },
          "costPerDetailPageView": {
            "$ref": "#/components/schemas/Benchmark"
          },
          "attributedOrders": {
            "$ref": "#/components/schemas/Benchmark"
          },
          "detailPageViews": {
            "$ref": "#/components/schemas/Benchmark"
          },
          "brandedSearches": {
            "$ref": "#/components/schemas/Benchmark"
          },
          "costPerBrandedSearch": {
            "$ref": "#/components/schemas/Benchmark"
          },
          "budgetUtilization": {
            "$ref": "#/components/schemas/Benchmark"
          },
          "roas": {
            "$ref": "#/components/schemas/Benchmark"
          },
          "impressions": {
            "$ref": "#/components/schemas/Benchmark"
          },
          "adSpend": {
            "$ref": "#/components/schemas/Benchmark"
          }
        }
      },
      "ApplyRecommendationsResponse": {
        "type": "object",
        "properties": {
          "failures": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplyRecommendationFailure"
            }
          },
          "successes": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplyRecommendationSuccess"
            }
          }
        },
        "required": [
          "successes",
          "failures"
        ]
      },
      "CreateRecommendationsRequest": {
        "type": "object",
        "properties": {
          "recommendations": {
            "minItems": 1,
            "maxItems": 1000,
            "description": "List of recommendations to create.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateRecommendationRequest"
            }
          }
        },
        "required": [
          "recommendations"
        ]
      },
      "TargetingMatchType": {
        "description": "Match type of the target for keyword and targeting recommendations.",
        "type": "string",
        "enum": [
          "EXACT",
          "PHRASE",
          "BROAD",
          "NEGATIVE_BROAD",
          "NEGATIVE_EXACT",
          "NEGATIVE_PHRASE",
          "TARGETING_EXPRESSION",
          "TARGETING_EXPRESSION_PREDEFINED",
          "THEME"
        ]
      },
      "EstimatedImpactTopOfSearchImpressionShare": {
        "description": "Estimated impact of the recommendation on top of search impression share.",
        "type": "object",
        "properties": {
          "incrementalUpperBound": {
            "description": "Upper bound of the estimated change in top of search impression share when the create grow brand impression share campaign recommendation is adopted.",
            "type": "number"
          },
          "incrementalLowerBound": {
            "description": "Lower bound of the estimated change in top of search impression share when the create grow brand impression share campaign recommendation is adopted.",
            "type": "number"
          }
        },
        "required": [
          "incrementalUpperBound",
          "incrementalLowerBound"
        ]
      },
      "RecommendationType": {
        "description": "Type of recommendation to apply certain changes to the advertiser's sponsored ads.",
        "type": "string",
        "enum": [
          "NEW_CAMPAIGN",
          "NEW_VIDEO_CAMPAIGN",
          "NEW_AD_GROUP",
          "CAMPAIGN_BIDDING_STRATEGY",
          "CAMPAIGN_BUDGET",
          "CAMPAIGN_END_DATE",
          "CAMPAIGN_TOP_PLACEMENT",
          "CAMPAIGN_PRODUCT_PLACEMENT",
          "CAMPAIGN_STATE",
          "NEW_CAMPAIGN_BIDDING_RULE",
          "CAMPAIGN_BIDDING_RULE",
          "NEW_CAMPAIGN_BUDGET_RULE",
          "CAMPAIGN_BUDGET_RULE",
          "AD_GROUP_STATE",
          "AD_GROUP_DEFAULT_BID",
          "AD_GROUP_BID_OPTIMIZATION",
          "NEW_KEYWORD",
          "KEYWORD_BID",
          "KEYWORD_STATE",
          "NEW_NEGATIVE_KEYWORD",
          "NEGATIVE_KEYWORD_STATE",
          "NEW_PRODUCT_AD",
          "PRODUCT_AD_STATE",
          "NEW_PRODUCT_TARGETING",
          "PRODUCT_TARGETING_STATE",
          "PRODUCT_TARGETING_BID",
          "NEW_NEGATIVE_PRODUCT_TARGETING",
          "NEGATIVE_PRODUCT_TARGETING_STATE",
          "NEW_AUDIENCE_TARGETING",
          "AUDIENCE_TARGETING_STATE",
          "AUDIENCE_TARGETING_BID",
          "NEW_NEGATIVE_AUDIENCE_TARGETING",
          "NEGATIVE_AUDIENCE_TARGETING_STATE"
        ]
      },
      "EventTypeRuleDuration": {
        "description": "Object representing event type rule duration.",
        "type": "object",
        "properties": {
          "eventId": {
            "description": "The event identifier. This value is available from the budget rules recommendation API.",
            "type": "string"
          },
          "endDate": {
            "format": "date",
            "description": "The event end date in YYYY-MM-DD format.",
            "type": "string"
          },
          "eventName": {
            "description": "The event name.",
            "type": "string"
          },
          "startDate": {
            "format": "date",
            "description": "The event start date in YYYY-MM-DD format.",
            "type": "string"
          }
        },
        "required": [
          "eventId"
        ]
      },
      "ListDisplayMappingsRequest": {
        "type": "object",
        "properties": {
          "rankType": {
            "$ref": "#/components/schemas/RankType"
          },
          "maxResults": {
            "default": 20,
            "maximum": 40,
            "type": "integer",
            "minimum": 1
          },
          "filters": {
            "minItems": 0,
            "maxItems": 10,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DisplayMappingsFilter"
            }
          },
          "locale": {
            "$ref": "#/components/schemas/Locale"
          }
        }
      },
      "DeleteRecommendationsFailure": {
        "type": "object",
        "properties": {
          "index": {
            "description": "Index of the recommendation in the array from the request body.",
            "type": "number"
          },
          "recommendationId": {
            "description": "Recommendation identifier.",
            "type": "string"
          },
          "error": {
            "$ref": "#/components/schemas/APIError"
          }
        },
        "required": [
          "index",
          "recommendationId",
          "error"
        ]
      },
      "PublishRecommendationsFailure": {
        "type": "object",
        "properties": {
          "index": {
            "description": "Index of the recommendation in the array from the request body.",
            "type": "number"
          },
          "recommendationId": {
            "description": "Recommendation identifier.",
            "type": "string"
          },
          "error": {
            "$ref": "#/components/schemas/APIError"
          }
        },
        "required": [
          "index",
          "recommendationId",
          "error"
        ]
      },
      "SevenDaysEstimatedOpportunities": {
        "description": "Seven days of estimated opportunities.",
        "type": "object",
        "properties": {
          "estimatedIncrementalClicksLower": {
            "description": "Lower bound of estimated incremental clicks that could be gained if all recommendations are applied.",
            "type": "integer"
          },
          "estimatedIncrementalClicksUpper": {
            "description": "Upper bound of estimated incremental clicks that could be gained if all recommendations are applied.",
            "type": "integer"
          },
          "endDate": {
            "format": "date-time",
            "description": "End date of the opportunities date range in YYYY-MM-DDTHH:mm:ssZ format.",
            "type": "string"
          },
          "startDate": {
            "format": "date-time",
            "description": "Start date of the opportunities date range in YYYY-MM-DDTHH:mm:ssZ format.",
            "type": "string"
          }
        },
        "required": [
          "startDate",
          "endDate"
        ]
      },
      "RecurrenceType": {
        "description": "The frequency of the rule application.",
        "type": "string",
        "enum": [
          "DAILY",
          "WEEKLY"
        ]
      },
      "UpdateRecommendationsFailure": {
        "type": "object",
        "properties": {
          "index": {
            "description": "Index of the recommendation in the array from the request body.",
            "type": "number"
          },
          "error": {
            "$ref": "#/components/schemas/APIError"
          }
        },
        "required": [
          "index",
          "error"
        ]
      },
      "RuleType": {
        "description": "<table><tr><th>Rule Type<\/th><th>The type of budget rule.<\/th><\/tr><tr><td>SCHEDULE<\/td><td>A budget rule based on a start and end date.<\/td><\/tr><tr><td>PERFORMANCE<\/td><td>A budget rule based on advertising performance criteria.<\/td><\/tr><\/table>.",
        "type": "string",
        "enum": [
          "SCHEDULE",
          "PERFORMANCE"
        ]
      },
      "PublishRecommendationsSuccess": {
        "type": "object",
        "properties": {
          "success": {
            "$ref": "#/components/schemas/APISuccess"
          },
          "index": {
            "description": "Index of the recommendation in the array from the request body.",
            "type": "number"
          },
          "recommendation": {
            "$ref": "#/components/schemas/TacticalRecommendation"
          },
          "recommendationId": {
            "description": "Recommendation identifier.",
            "type": "string"
          }
        },
        "required": [
          "index",
          "recommendationId",
          "recommendation",
          "success"
        ]
      },
      "DeleteRecommendationsSuccess": {
        "type": "object",
        "properties": {
          "success": {
            "$ref": "#/components/schemas/APISuccess"
          },
          "index": {
            "description": "Index of the recommendation in the array from the request body.",
            "type": "number"
          },
          "recommendationId": {
            "description": "Recommendation identifier.",
            "type": "string"
          }
        },
        "required": [
          "index",
          "recommendationId",
          "success"
        ]
      },
      "GroupingTypeFilter": {
        "description": "Filter recommendations by grouping type.",
        "type": "object",
        "properties": {
          "include": {
            "minItems": 1,
            "maxItems": 10,
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GroupingType"
            }
          },
          "exists": {
            "description": "Returns recommendations that contains a value for the field.",
            "type": "boolean"
          }
        }
      },
      "Recommendation": {
        "type": "object",
        "properties": {
          "budgetRecommendation": {
            "$ref": "#/components/schemas/BudgetRecommendation"
          },
          "publishMetadata": {
            "$ref": "#/components/schemas/PublishMetadata"
          },
          "resolvedTargeting": {
            "description": "Resolved targeting expression to which this recommendation is associated.",
            "type": "string"
          },
          "recommendedValue": {
            "description": "Recommended value of the campaign entity to which this recommendation is associated.",
            "type": "string"
          },
          "adGroupId": {
            "description": "Identifier of the ad group to which this recommendation is associated.",
            "type": "string"
          },
          "consolidatedRecommendation": {
            "$ref": "#/components/schemas/ConsolidatedRecommendation"
          },
          "targeting": {
            "description": "Targeting expression to which this recommendation is associated.",
            "type": "string"
          },
          "estimatedImpact": {
            "$ref": "#/components/schemas/EstimatedImpact"
          },
          "asinGroupTemplateId": {
            "description": "Identifier of the asin group template to which this recommendation is associated.",
            "type": "string"
          },
          "campaignTemplateId": {
            "description": "Identifier of the campaign template to which this recommendation is associated.",
            "type": "string"
          },
          "recommendationType": {
            "$ref": "#/components/schemas/RecommendationType"
          },
          "sku": {
            "description": "SKU associated with the product. Defined for seller accounts only.",
            "type": "string"
          },
          "targetingMatchType": {
            "$ref": "#/components/schemas/TargetingMatchType"
          },
          "targetId": {
            "description": "Identifier of the target to which this recommendation is associated.",
            "type": "string"
          },
          "adProduct": {
            "$ref": "#/components/schemas/AdProduct"
          },
          "campaignId": {
            "description": "Identifier of the campaign to which this recommendation is associated.",
            "type": "string"
          },
          "applyFailureReason": {
            "description": "A human-readable description of why the recommendation failed to apply.",
            "type": "string"
          },
          "keywordSortingDimension": {
            "$ref": "#/components/schemas/KeywordSortingDimension"
          },
          "recommendationId": {
            "description": "Recommendation identifier.",
            "type": "string"
          },
          "keywordSortingRank": {
            "description": "Sorting rank for new keyword recommendations.",
            "type": "integer"
          },
          "recommendationContext": {
            "$ref": "#/components/schemas/RecommendationContext"
          },
          "adId": {
            "description": "Identifier of the product ad to which this recommendation is associated.",
            "type": "string"
          },
          "groupingType": {
            "$ref": "#/components/schemas/GroupingType"
          },
          "asin": {
            "description": "ASIN associated with the product. Defined for vendors only.",
            "type": "string"
          },
          "ruleBasedBidding": {
            "$ref": "#/components/schemas/RuleBasedBidding"
          },
          "currentValue": {
            "description": "Current value of the campaign entity to which this recommendation is associated. Will be null if the recommendation is for a new campaign entity.",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/RecommendationStatus"
          },
          "budgetRule": {
            "$ref": "#/components/schemas/BudgetRule"
          }
        },
        "required": [
          "recommendationId",
          "adProduct",
          "recommendationType",
          "status"
        ]
      },
      "MissedOpportunities": {
        "description": "Missed opportunity metrics of the recommendation.",
        "type": "object",
        "properties": {
          "conversions": {
            "$ref": "#/components/schemas/Range"
          },
          "endDate": {
            "format": "date",
            "description": "End date of the date range in local time and YYYY-MM-DD format for which missed opportunity metrics are provided.",
            "type": "string"
          },
          "clicks": {
            "$ref": "#/components/schemas/Range"
          },
          "impressions": {
            "$ref": "#/components/schemas/Range"
          },
          "percentTimeInBudget": {
            "description": "Percentage of time the campaign is active with a budget.",
            "type": "number"
          },
          "startDate": {
            "format": "date",
            "description": "Start date of the date range in local time and YYYY-MM-DD format for which missed opportunity metrics are provided.",
            "type": "string"
          }
        },
        "required": [
          "startDate",
          "endDate"
        ]
      },
      "AdProduct": {
        "type": "string",
        "enum": [
          "SP",
          "SB",
          "SD",
          "ST"
        ]
      },
      "FilterOperator": {
        "description": "Operator to filter field by.",
        "type": "string",
        "enum": [
          "EXACT"
        ]
      },
      "BudgetRuleDetails": {
        "type": "object",
        "properties": {
          "duration": {
            "$ref": "#/components/schemas/BudgetRuleDuration"
          },
          "ruleType": {
            "description": "Type of budget rule.",
            "type": "string"
          },
          "budgetIncreaseBy": {
            "$ref": "#/components/schemas/BudgetRuleIncreaseBy"
          },
          "ruleName": {
            "description": "Name of the budget rule.",
            "type": "string"
          },
          "performanceMeasureCondition": {
            "$ref": "#/components/schemas/BudgetRulePerformanceMeasureCondition"
          }
        }
      },
      "UpdateProductAd": {
        "description": "A campaign product ad.",
        "type": "object",
        "properties": {
          "adId": {
            "description": "Product ad identifier",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/ProductAdState"
          }
        }
      },
      "PublishRecommendationsResponse": {
        "type": "object",
        "properties": {
          "failures": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PublishRecommendationsFailure"
            }
          },
          "successes": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PublishRecommendationsSuccess"
            }
          }
        },
        "required": [
          "successes",
          "failures"
        ]
      },
      "DisplayMapping": {
        "type": "object",
        "properties": {
          "recommendationIds": {
            "minItems": 1,
            "maxItems": 20,
            "description": "RecommendationIds of the newest recommendations.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "rank": {
            "description": "Suggested rank of recommendation display mapping.",
            "type": "integer"
          },
          "expirationTimestamp": {
            "pattern": "date-time",
            "description": "Expiration date of the display mapping in YYYY-MM-DDTHH:mm:ssZ format.",
            "type": "string"
          },
          "displayMappingId": {
            "description": "Identifier for type of recommendation display mapping.",
            "type": "string"
          },
          "displayAttributes": {
            "$ref": "#/components/schemas/DisplayAttributes"
          }
        },
        "required": [
          "displayMappingId",
          "expirationTimestamp",
          "recommendationIds"
        ]
      },
      "PlaybookRequestIdFilter": {
        "description": "Filter recommendations by the list of playbook request identifiers.",
        "type": "object",
        "properties": {
          "include": {
            "minItems": 1,
            "maxItems": 10,
            "uniqueItems": true,
            "type": "array",
            "items": {
              "description": "Playbook request identifiers.",
              "type": "string"
            }
          }
        },
        "required": [
          "include"
        ]
      },
      "EstimatedImpactOpportunityLostPurchaseJourney": {
        "description": "Estimated impact of the recommendation on lost purchase journey opportunities.",
        "type": "object",
        "properties": {
          "incrementalUpperBound": {
            "description": "Upper bound of the estimated change in customers with no further engagement with brand when the create grow brand impression share campaign recommendation is adopted.",
            "type": "number"
          },
          "incrementalLowerBound": {
            "description": "Lower bound of the estimated change in customers with no further engagement with brand when the create grow brand impression share campaign recommendation is adopted.",
            "type": "number"
          }
        },
        "required": [
          "incrementalUpperBound",
          "incrementalLowerBound"
        ]
      },
      "RecommendationTypeRank": {
        "type": "object",
        "properties": {
          "adProduct": {
            "$ref": "#/components/schemas/AdProduct"
          },
          "rankType": {
            "$ref": "#/components/schemas/RankType"
          },
          "rank": {
            "description": "Rank of the recommendation type for this advertiser.",
            "type": "number"
          },
          "recommendationType": {
            "$ref": "#/components/schemas/RecommendationType"
          }
        },
        "required": [
          "adProduct",
          "recommendationType",
          "rankType",
          "rank"
        ]
      },
      "UpdateRecommendationsSuccess": {
        "type": "object",
        "properties": {
          "success": {
            "$ref": "#/components/schemas/APISuccess"
          },
          "index": {
            "description": "Index of the recommendation in the array from the request body.",
            "type": "number"
          },
          "recommendation": {
            "$ref": "#/components/schemas/TacticalRecommendation"
          },
          "recommendationId": {
            "description": "Recommendation identifier.",
            "type": "string"
          }
        },
        "required": [
          "index",
          "recommendationId",
          "recommendation",
          "success"
        ]
      },
      "RecommendationIdFilter": {
        "description": "Filter recommendations by the list of recommendation identifiers.",
        "type": "object",
        "properties": {
          "include": {
            "minItems": 1,
            "maxItems": 10,
            "uniqueItems": true,
            "type": "array",
            "items": {
              "description": "Recommendation identifier.",
              "type": "string"
            }
          }
        },
        "required": [
          "include"
        ]
      },
      "PerformanceMeasureCondition": {
        "description": "Performance measure condition of the budget rule.",
        "type": "object",
        "properties": {
          "metricName": {
            "$ref": "#/components/schemas/PerformanceMetric"
          },
          "comparisonOperator": {
            "$ref": "#/components/schemas/ComparisonOperator"
          },
          "threshold": {
            "format": "double",
            "description": "The performance threshold value.",
            "type": "number"
          }
        },
        "required": [
          "metricName",
          "comparisonOperator",
          "threshold"
        ]
      },
      "EstimatedImpact": {
        "description": "Estimated impact of the recommendation.",
        "type": "object",
        "properties": {
          "campaign": {
            "$ref": "#/components/schemas/CampaignEstimatedImpact"
          }
        }
      },
      "UpdateRuleBasedBiddingV2": {
        "description": "Rule based bidding for the campaign to which this recommendation is associated.",
        "type": "object",
        "properties": {
          "ruleRoas": {
            "format": "double",
            "description": "Threshold of the RoAS performance metric.",
            "type": "number"
          }
        },
        "required": [
          "ruleRoas"
        ]
      },
      "KeywordSortingDimension": {
        "description": "Sorting dimension for new keyword recommendations.",
        "type": "string",
        "enum": [
          "CLICK",
          "CONVERSION"
        ]
      },
      "GroupingType": {
        "description": "Type of grouping for consolidated recommendation data. \n | Type of grouping | Description |\n|---|---|\n| CAMPAIGN_INCREASE_CLICKS | Recommendation grouping type for generating additional clicks for campaigns |\n| OPTIMIZE_ATTRIBUTED_ORDERS | Recommendation grouping type for optimizing attributed orders |\n| OPTIMIZE_CLICKS | Recommendation grouping type for optimizing clicks |\n| OPTIMIZE_COST_PER_CLICK | Recommendation grouping type for optimizing cost per click |\n| OPTIMIZE_COST_PER_NEW_TO_BRAND_ORDERS | Recommendation grouping type for optimizing cost per new-to-brand orders |\n| OPTIMIZE_NEW_TO_BRAND_ORDERS | Recommendation grouping type for optimizing new-to-brand orders |\n| OPTIMIZE_ROAS | Recommendation grouping type for optimizing ROAS |\n| OPTIMIZE_BRANDED_SEARCHES | Recommendation grouping type for optimizing branded searches |\n| OPTIMIZE_COST_PER_BRANDED_SEARCH | Recommendation grouping type for optimizing cost per branded search |\n| OPTIMIZE_DETAIL_PAGE_VIEWS | Recommendation grouping type for optimizing detail page views |\n| OPTIMIZE_COST_PER_DETAIL_PAGE_VIEW | Recommendation grouping type for optimizing cost per detail page view |\n| UNDERPERFORMING_CAMPAIGN_INCREASE_CLICKS | Recommendation grouping type for zero-click campaigns |\n| INCREASE_BUDGET_CONTEXTUAL | Recommendation grouping type for increasing budget based on contextual diagnostics |\n| INCREASE_BID_CONTEXTUAL | Recommendation grouping type for increasing bids based on contextual diagnostics |\n| DECREASE_BID_CONTEXTUAL | Recommendation grouping type for decreasing bids based on contextual diagnostics |\n| ADD_TARGETS_CONTEXTUAL | Recommendation grouping type for adding targets based on contextual diagnostics |\n| IN_SEASON_ASIN | Recommendation grouping type for ASINs that are in-season |\n| INCREASE_CLICKTHROUGH_RATE | Recommendation grouping type for ASINs that have low clickthrough rate compared to benchmarks |\n| INCREASE_CONVERSION_RATE | Recommendation grouping type for ASINs that have low conversion rate compared to benchmarks |\n| NEW_ASIN | Recommendation grouping type for unadvertised ASINs that have recently been added to the catalog |\n| NEW_CAMPAIGN_ATTRIBUTED_ORDERS | Recommendation grouping type for new campaigns that aim to improve attributed orders |\n| NEW_CAMPAIGN_NEW_TO_BRAND_ORDERS | Recommendation grouping type for new campaigns that aim to improve new to brand orders |\n| NEW_CAMPAIGN_CLICKS | Recommendation grouping type for new campaigns that aim to improve clicks |\n| NEW_CAMPAIGN_GROW_BRAND_IMPRESSION_SHARE | Recommendation grouping type for new campaigns to optimize for a brand's top-of-search impression share |\n| NEW_CAMPAIGN_GROW_BIS_IMAGE_GENERAL | Recommendation grouping type for new campaigns to optimize for a brand's top-of-search impression share using general brand text |\n| NEW_CAMPAIGN_GROW_BIS_IMAGE_SPECIFIC | Recommendation grouping type for new campaigns to optimize for a brand's top-of-search impression share using brand specific text |\n| NEW_CAMPAIGN_PRE_COMPUTED_RECOMMENDATION_BUNDLE | Recommendation grouping type for pre-compute recommended bundle |",
        "type": "string",
        "enum": [
          "CAMPAIGN_INCREASE_CLICKS",
          "OPTIMIZE_ATTRIBUTED_ORDERS",
          "OPTIMIZE_CLICKS",
          "OPTIMIZE_COST_PER_CLICK",
          "OPTIMIZE_COST_PER_NEW_TO_BRAND_ORDERS",
          "OPTIMIZE_NEW_TO_BRAND_ORDERS",
          "OPTIMIZE_ROAS",
          "OPTIMIZE_BRANDED_SEARCHES",
          "OPTIMIZE_COST_PER_BRANDED_SEARCH",
          "OPTIMIZE_DETAIL_PAGE_VIEWS",
          "OPTIMIZE_COST_PER_DETAIL_PAGE_VIEW",
          "UNDERPERFORMING_CAMPAIGN_INCREASE_CLICKS",
          "INCREASE_BUDGET_CONTEXTUAL",
          "INCREASE_BID_CONTEXTUAL",
          "DECREASE_BID_CONTEXTUAL",
          "ADD_TARGETS_CONTEXTUAL",
          "IN_SEASON_ASIN",
          "INCREASE_CLICKTHROUGH_RATE",
          "INCREASE_CONVERSION_RATE",
          "NEW_ASIN",
          "NEW_CAMPAIGN_ATTRIBUTED_ORDERS",
          "NEW_CAMPAIGN_NEW_TO_BRAND_ORDERS",
          "NEW_CAMPAIGN_CLICKS",
          "NEW_CAMPAIGN_GROW_BRAND_IMPRESSION_SHARE",
          "NEW_CAMPAIGN_GROW_BIS_IMAGE_GENERAL",
          "NEW_CAMPAIGN_GROW_BIS_IMAGE_SPECIFIC",
          "NEW_CAMPAIGN_PRE_COMPUTED_RECOMMENDATION_BUNDLE"
        ]
      },
      "PublishedDateFilter": {
        "description": "Filter recommendations based on the specified range of published dates.",
        "type": "object",
        "properties": {
          "afterDate": {
            "format": "date-time",
            "description": "Start date of the published date range in ISO-8601 format, the maximum lookback period is 6 months.",
            "type": "string"
          },
          "beforeDate": {
            "format": "date-time",
            "description": "End date of the published date range in ISO-8601 format, the maximum lookback period is 6 months.",
            "type": "string"
          }
        }
      },
      "SevenDaysMissedOpportunities": {
        "description": "Seven days of missed opportunities.",
        "type": "object",
        "properties": {
          "estimatedMissedSalesLower": {
            "description": "Lower bound of estimated missed sales. Provided in local currency.",
            "type": "number"
          },
          "estimatedMissedSalesUpper": {
            "description": "Upper bound of estimated missed sales. Provided in local currency.",
            "type": "number"
          },
          "endDate": {
            "format": "date",
            "description": "End date of the date range in local time and YYYY-MM-DD format for which missed opportunity metrics are provided.",
            "type": "string"
          },
          "estimatedMissedImpressionsLower": {
            "description": "Lower bound of estimated missed impressions.",
            "type": "integer"
          },
          "estimatedMissedClicksLower": {
            "description": "Lower bound of estimated missed clicks.",
            "type": "integer"
          },
          "estimatedMissedClicksUpper": {
            "description": "Upper bound of estimated missed clicks.",
            "type": "integer"
          },
          "estimatedMissedImpressionsUpper": {
            "description": "Upper bound of estimated missed impressions.",
            "type": "integer"
          },
          "percentTimeInBudget": {
            "description": "Percentage of time the campaign is active with a budget.",
            "type": "number"
          },
          "startDate": {
            "format": "date",
            "description": "Start date of the date range in local time and YYYY-MM-DD format for which missed opportunity metrics are provided. ",
            "type": "string"
          }
        },
        "required": [
          "startDate",
          "endDate"
        ]
      },
      "PublishRecommendationRequest": {
        "type": "object",
        "properties": {
          "expiryDate": {
            "format": "date-time",
            "description": "The expiration date of the recommendation in ISO-8601 format. It must be within a range of 1 to 14 days from the published date. By default, it is set to 14 days from the published date.",
            "type": "string"
          },
          "recommendationId": {
            "description": "Recommendation identifier.",
            "type": "string"
          }
        },
        "required": [
          "recommendationId"
        ]
      },
      "BudgetRuleDuration": {
        "type": "object",
        "properties": {
          "dateRangeTypeDuration": {
            "$ref": "#/components/schemas/BudgetRuleDateRangeTypeDuration"
          },
          "eventTypeDuration": {
            "$ref": "#/components/schemas/BudgetRuleEventTypeDuration"
          }
        }
      },
      "Target": {
        "description": "Object representing a target. Can be a product, keyword or audience.",
        "type": "object",
        "properties": {
          "targeting": {
            "description": "The targeting value of the target.",
            "type": "string"
          },
          "targetId": {
            "description": "Target identifier.",
            "type": "string"
          },
          "matchType": {
            "$ref": "#/components/schemas/TargetingMatchType"
          },
          "state": {
            "$ref": "#/components/schemas/TargetState"
          },
          "bid": {
            "format": "double",
            "description": "The bid value of the target.",
            "type": "number"
          },
          "resolvedTargeting": {
            "description": "The resolved targeting value of the target.",
            "type": "string"
          }
        }
      },
      "RuleDuration": {
        "description": "Object representing rule duration.",
        "type": "object",
        "properties": {
          "eventTypeRuleDuration": {
            "$ref": "#/components/schemas/EventTypeRuleDuration"
          },
          "dateRangeTypeRuleDuration": {
            "$ref": "#/components/schemas/DateRangeTypeRuleDuration"
          }
        }
      },
      "DiagnosticContext": {
        "description": "Underlying diagnostic context behind generating the recommendation.",
        "type": "object",
        "properties": {
          "summary": {
            "$ref": "#/components/schemas/Summary"
          },
          "benchmarkContext": {
            "$ref": "#/components/schemas/BenchmarkContext"
          },
          "diagnosticDate": {
            "format": "date",
            "description": "The date on which the campaign was diagnosed.",
            "type": "string"
          },
          "asinAge": {
            "description": "The number of days since the ASIN was added to the advertiser\u2019s catalog.",
            "type": "number"
          }
        }
      },
      "CreateRecommendationsResponse": {
        "type": "object",
        "properties": {
          "failures": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateRecommendationsFailure"
            }
          },
          "successes": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateRecommendationsSuccess"
            }
          }
        },
        "required": [
          "successes",
          "failures"
        ]
      },
      "Budget": {
        "description": "Budget of the campaign.",
        "type": "object",
        "properties": {
          "campaignBudget": {
            "format": "double",
            "description": "Budget of the campaign.",
            "type": "number"
          },
          "budgetRule": {
            "$ref": "#/components/schemas/BudgetRuleData"
          }
        }
      },
      "UpdateRecommendationsRequest": {
        "type": "object",
        "properties": {
          "recommendations": {
            "minItems": 1,
            "maxItems": 1000,
            "description": "List of recommendations to update.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateRecommendationRequestV2"
            }
          }
        },
        "required": [
          "recommendations"
        ]
      },
      "ListRecommendationsRequest": {
        "type": "object",
        "properties": {
          "maxResults": {
            "default": 500,
            "maximum": 500,
            "type": "integer",
            "minimum": 1
          },
          "nextToken": {
            "description": "Token to retrieve the next page of results.",
            "type": "string"
          },
          "filters": {
            "minItems": 1,
            "maxItems": 10,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListRecommendationsFilter"
            }
          },
          "locale": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Locale"
              }
            ],
            "description": "This will control the language of preference returned for the summary field."
          }
        }
      },
      "ApplyRecommendationSuccess": {
        "type": "object",
        "properties": {
          "success": {
            "$ref": "#/components/schemas/APISuccess"
          },
          "index": {
            "description": "Index of the recommendation in the array from the request body.",
            "type": "number"
          },
          "recommendation": {
            "$ref": "#/components/schemas/Recommendation"
          },
          "recommendationId": {
            "description": "Recommendation identifier.",
            "type": "string"
          }
        },
        "required": [
          "index",
          "recommendationId",
          "recommendation",
          "success"
        ]
      },
      "CreateRecommendationRequestStatus": {
        "description": "Status of the recommendation.",
        "type": "string",
        "enum": [
          "PENDING",
          "DRAFT"
        ]
      },
      "DisplayMappingsFilter": {
        "type": "object",
        "properties": {
          "field": {
            "$ref": "#/components/schemas/DisplayFilterField"
          },
          "values": {
            "minItems": 1,
            "maxItems": 10,
            "type": "array",
            "items": {
              "description": "| Field | Data type |\n|---|---|\n| AD_PRODUCT | [ SP, SB, SD, ST ] |",
              "type": "string"
            }
          },
          "operator": {
            "$ref": "#/components/schemas/FilterOperator"
          }
        },
        "required": [
          "field",
          "values",
          "operator"
        ]
      },
      "EstimatedImpactImpressions": {
        "description": "Estimated impact of the recommendation on impressions.",
        "type": "object",
        "properties": {
          "forecastedRecommendedLowerBound": {
            "description": "Lower bound of the forecasted number of impressions for the campaign, if the recommendation is adopted, based on data from similar advertisers during the specified time period.",
            "type": "number"
          },
          "incrementalUpperBound": {
            "description": "Upper bound of the estimated change in impressions seen for similar advertisers within the time period indicated when the recommendation is adopted.",
            "type": "number"
          },
          "incrementalLowerBound": {
            "description": "Lower bound of the estimated change in impressions seen for similar advertisers within the time period indicated when the recommendation is adopted.",
            "type": "number"
          },
          "forecastedCurrentUpperBound": {
            "description": "Upper bound of the forecasted number of impressions for the campaign, based on the current campaign settings and data from similar advertisers during the specified time period.",
            "type": "number"
          },
          "forecastedCurrentLowerBound": {
            "description": "Lower bound of the forecasted number of impressions for the campaign, based on the current campaign settings and data from similar advertisers during the specified time period.",
            "type": "number"
          },
          "forecastedRecommendedUpperBound": {
            "description": "Upper bound of the forecasted number of impressions for the campaign, if the recommendation is adopted, based on data from similar advertisers during the specified time period.",
            "type": "number"
          }
        }
      },
      "RuleBasedBidding": {
        "description": "Rule based bidding for the campaign to which this recommendation is associated.",
        "type": "object",
        "properties": {
          "campaignOptimizationId": {
            "description": "Identifier of the campaign optimization.",
            "type": "string"
          },
          "recommendedRuleRoas": {
            "description": "Recommended threshold of the RoAS performance metric.",
            "type": "number"
          },
          "currentRuleRoas": {
            "description": "Current threshold of the RoAS performance metric.",
            "type": "number"
          },
          "currentBiddingStrategy": {
            "$ref": "#/components/schemas/BiddingStrategy"
          },
          "recommendedBiddingStrategy": {
            "$ref": "#/components/schemas/BiddingStrategy"
          }
        },
        "required": [
          "recommendedBiddingStrategy",
          "recommendedRuleRoas"
        ]
      },
      "RecommendationReason": {
        "description": "Type of reason why the recommendation was created. \n | Type of reason | Description |\n|---|---|\n| AT_NOT_ALL_MATCH_TYPE_ENABLED | Auto targeting campaign does not have all match types enabled |\n| AT_BID_FALLBACK | Auto targeting bid fallback reason |\n| MT_NOT_ENOUGH_TOP_IMPRESSIONS | Manual targeting campaign not getting enough top impressions |\n| MT_BID_FALLBACK | Manual targeting bid fallback reason |\n| MT_KEYWORDS_HAVE_LOW_IMPRESSIONS | Manual targeting keywords have low impressions |\n| MT_IRRELEVANT_KEYWORD_IMPRESSIONS | Manual targeting campaign has irrelevant keyword impressions |\n| MT_KEYWORD_FALLBACK | Manual targeting keyword fallback reason |\n",
        "type": "string",
        "enum": [
          "AT_NOT_ALL_MATCH_TYPE_ENABLED",
          "AT_BID_FALLBACK",
          "MT_NOT_ENOUGH_TOP_IMPRESSIONS",
          "MT_BID_FALLBACK",
          "MT_KEYWORDS_HAVE_LOW_IMPRESSIONS",
          "MT_IRRELEVANT_KEYWORD_IMPRESSIONS",
          "MT_KEYWORD_FALLBACK"
        ]
      },
      "AsinContext": {
        "description": "Underlying asin context behind generating the recommendation.",
        "type": "object",
        "properties": {
          "trailing4WeeksClickthroughRate": {
            "description": "Past 4 weeks clickthrough rate of target product type.",
            "type": "number"
          },
          "seasonStartDate": {
            "format": "date",
            "description": "Date in which the products in the advertiser's category have historically started to see an increase in traffic.",
            "type": "string"
          },
          "trailing4WeeksConversionRate": {
            "description": "Past 4 weeks conversion rate of target product type.",
            "type": "number"
          },
          "seasonEndDate": {
            "format": "date",
            "description": "Date in which the products in the advertiser's category historically traffic-increase has cooled off.",
            "type": "string"
          }
        }
      },
      "ApplyRecommendationFailure": {
        "type": "object",
        "properties": {
          "index": {
            "description": "Index of the recommendation in the array from the request body.",
            "type": "number"
          },
          "recommendationId": {
            "description": "Recommendation identifier.",
            "type": "string"
          },
          "error": {
            "$ref": "#/components/schemas/APIError"
          }
        },
        "required": [
          "index",
          "recommendationId",
          "error"
        ]
      },
      "RejectRecommendationsResponse": {
        "type": "object",
        "properties": {
          "failures": {
            "minItems": 0,
            "maxItems": 500,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RejectRecommendationFailure"
            }
          },
          "successes": {
            "minItems": 0,
            "maxItems": 500,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RejectRecommendationSuccess"
            }
          }
        },
        "required": [
          "successes",
          "failures"
        ]
      },
      "PublishRecommendationsRequest": {
        "type": "object",
        "properties": {
          "recommendations": {
            "minItems": 1,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PublishRecommendationRequest"
            }
          },
          "publishGroupId": {
            "description": "Identifier to group recommendations which were published together.",
            "type": "string"
          }
        },
        "required": [
          "recommendations"
        ]
      },
      "ListRecommendationsResponse": {
        "type": "object",
        "properties": {
          "totalResults": {
            "description": "Total number of results.",
            "type": "integer"
          },
          "nextToken": {
            "description": "Token to retrieve the next page of results.",
            "type": "string"
          },
          "recommendations": {
            "minItems": 0,
            "maxItems": 500,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Recommendation"
            }
          }
        },
        "required": [
          "recommendations",
          "totalResults"
        ]
      },
      "RejectRecommendationError": {
        "description": "Error response object providing information on reject error.",
        "type": "object",
        "properties": {
          "code": {
            "description": "`NOT_FOUND` - Requested recommendation cannot be found. \n `RECOMMENDATION_CANNOT_BE_REJECTED` - Recommendation status must be one of [PUBLISHED, APPLY_FAILED] before being rejected. \n `INTERNAL_SERVER_ERROR` - Internal Server Error occurred when Rejecting Recommendation.",
            "type": "string",
            "enum": [
              "NOT_FOUND",
              "RECOMMENDATION_CANNOT_BE_REJECTED",
              "INTERNAL_SERVER_ERROR"
            ]
          },
          "message": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "RecommendationContext": {
        "description": "Context of the recommendation.",
        "type": "object",
        "properties": {
          "asinContext": {
            "$ref": "#/components/schemas/AsinContext"
          },
          "diagnosticContext": {
            "$ref": "#/components/schemas/DiagnosticContext"
          }
        }
      },
      "UpdateRuleBasedBidding": {
        "description": "Can only be updated for recommendations with recommendationType NEW_CAMPAIGN_BIDDING_RULE or CAMPAIGN_BIDDING_RULE.",
        "type": "object",
        "properties": {
          "recommendedRuleRoas": {
            "type": "number"
          }
        },
        "required": [
          "recommendedRuleRoas"
        ]
      },
      "CampaignIdFilter": {
        "description": "Filter recommendations by the list of campaign identifiers.",
        "type": "object",
        "properties": {
          "include": {
            "minItems": 1,
            "maxItems": 10,
            "uniqueItems": true,
            "type": "array",
            "items": {
              "description": "Campaign identifier.",
              "type": "string"
            }
          }
        },
        "required": [
          "include"
        ]
      },
      "DisplayFilterField": {
        "description": "Field to filter by.",
        "type": "string",
        "enum": [
          "AD_PRODUCT"
        ]
      },
      "RejectRecommendationSuccess": {
        "type": "object",
        "properties": {
          "success": {
            "$ref": "#/components/schemas/APISuccess"
          },
          "index": {
            "description": "Index of the recommendation in the array from the request body.",
            "type": "number"
          },
          "recommendationId": {
            "description": "Recommendation identifier.",
            "type": "string"
          }
        },
        "required": [
          "index",
          "recommendationId",
          "success"
        ]
      },
      "ListRecommendationsFilter": {
        "type": "object",
        "properties": {
          "include": {
            "default": true,
            "description": "Flag to specify if the filter should be included or excluded.",
            "type": "boolean"
          },
          "field": {
            "$ref": "#/components/schemas/FilterField"
          },
          "values": {
            "minItems": 1,
            "maxItems": 500,
            "type": "array",
            "items": {
              "description": "| Field | Data type |\n|---|---|\n| RECOMMENDATION_ID | string |\n| AD_PRODUCT | One of [ SP, SB, SD, ST ] |\n| RECOMMENDATION_TYPE | One of [ NEW_CAMPAIGN, NEW_VIDEO_CAMPAIGN, NEW_AD_GROUP, CAMPAIGN_BIDDING_STRATEGY, CAMPAIGN_BUDGET, CAMPAIGN_END_DATE, CAMPAIGN_TOP_PLACEMENT, CAMPAIGN_PRODUCT_PLACEMENT, CAMPAIGN_STATE, NEW_CAMPAIGN_BIDDING_RULE, CAMPAIGN_BIDDING_RULE, NEW_CAMPAIGN_BUDGET_RULE, CAMPAIGN_BUDGET_RULE, AD_GROUP_STATE, AD_GROUP_DEFAULT_BID, AD_GROUP_BID_OPTIMIZATION, NEW_KEYWORD, KEYWORD_BID, KEYWORD_STATE, NEW_NEGATIVE_KEYWORD, NEGATIVE_KEYWORD_STATE, NEW_PRODUCT_AD, PRODUCT_AD_STATE, NEW_PAT, PAT_STATE, PAT_BID, NEW_NEGATIVE_PAT, NEGATIVE_PAT_STATE, NEW_AUDIENCE_TARGETING, AUDIENCE_TARGETING_STATE, AUDIENCE_TARGETING_BID, NEW_NEGATIVE_AUDIENCE_TARGETING, NEGATIVE_AUDIENCE_TARGETING_STATE ] |\n| STATUS | One of [ PUBLISHED, APPLY_IN_PROGRESS, APPLY_SUCCESS, APPLY_FAILED, REJECTED ] |\n| GROUPING_TYPE | One of [ CAMPAIGN_INCREASE_CLICKS, OPTIMIZE_ATTRIBUTED_ORDERS, OPTIMIZE_CLICKS, OPTIMIZE_COST_PER_CLICK, OPTIMIZE_COST_PER_NEW_TO_BRAND_ORDERS, OPTIMIZE_NEW_TO_BRAND_ORDERS, OPTIMIZE_ROAS, OPTIMIZE_BRANDED_SEARCHES, OPTIMIZE_COST_PER_BRANDED_SEARCH, OPTIMIZE_DETAIL_PAGE_VIEWS, OPTIMIZE_COST_PER_DETAIL_PAGE_VIEW, UNDERPERFORMING_CAMPAIGN_INCREASE_CLICKS, INCREASE_BUDGET_CONTEXTUAL, INCREASE_BID_CONTEXTUAL, DECREASE_BID_CONTEXTUAL, ADD_TARGETS_CONTEXTUAL, IN_SEASON_ASIN, INCREASE_CLICKTHROUGH_RATE, INCREASE_CONVERSION_RATE, NEW_ASIN, NEW_CAMPAIGN_ATTRIBUTED_ORDERS, NEW_CAMPAIGN_NEW_TO_BRAND_ORDERS, NEW_CAMPAIGN_CLICKS, NEW_CAMPAIGN_GROW_BRAND_IMPRESSION_SHARE, NEW_CAMPAIGN_GROW_BIS_IMAGE_GENERAL, NEW_CAMPAIGN_GROW_BIS_IMAGE_SPECIFIC, NEW_CAMPAIGN_PRE_COMPUTED_RECOMMENDATION_BUNDLE ] |\n| CAMPAIGN_ID | string |\n| NOTIFICATION_TYPE_ID | string |",
              "type": "string"
            }
          },
          "operator": {
            "$ref": "#/components/schemas/FilterOperator"
          }
        },
        "required": [
          "field",
          "values",
          "operator"
        ]
      },
      "Locale": {
        "description": "Eligible language codes.",
        "type": "string",
        "enum": [
          "ar_AE",
          "cs_CZ",
          "de_DE",
          "en_AE",
          "en_AU",
          "en_CA",
          "en_GB",
          "en_IN",
          "en_SG",
          "en_US",
          "es_CO",
          "es_ES",
          "es_MX",
          "es_US",
          "fr_CA",
          "fr_FR",
          "he_IL",
          "hi_IN",
          "it_IT",
          "ja_JP",
          "ko_KR",
          "nl_NL",
          "pl_PL",
          "pt_BR",
          "sv_SE",
          "ta_IN",
          "th_TH",
          "tr_TR",
          "vi_VN",
          "zh_CN",
          "zh_TW"
        ]
      },
      "UpdateBudgetRuleDuration": {
        "type": "object",
        "properties": {
          "dateRangeTypeDuration": {
            "$ref": "#/components/schemas/UpdateBudgetRuleDurationDateRange"
          }
        }
      },
      "UpdateAdGroup": {
        "description": "An ad group.",
        "type": "object",
        "properties": {
          "bidOptimization": {
            "$ref": "#/components/schemas/BidOptimization"
          },
          "state": {
            "$ref": "#/components/schemas/AdGroupState"
          },
          "bid": {
            "format": "double",
            "description": "Ad group default bid.",
            "type": "number"
          },
          "targets": {
            "minItems": 1,
            "maxItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateTarget"
            }
          },
          "productAds": {
            "minItems": 1,
            "maxItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateProductAd"
            }
          },
          "adGroupId": {
            "description": "Ad group identifier.",
            "type": "string"
          }
        }
      },
      "Recurrence": {
        "description": "Recurrence of the budget rule.",
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/RecurrenceType"
          },
          "daysOfWeek": {
            "minItems": 0,
            "maxItems": 7,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecurrenceDay"
            }
          }
        }
      },
      "BudgetRuleData": {
        "description": "Budget rule data of the campaign.",
        "type": "object",
        "properties": {
          "ruleState": {
            "description": "State of the rule.",
            "type": "string"
          },
          "duration": {
            "$ref": "#/components/schemas/RuleDuration"
          },
          "recurrence": {
            "$ref": "#/components/schemas/Recurrence"
          },
          "ruleType": {
            "$ref": "#/components/schemas/RuleType"
          },
          "budgetIncreaseBy": {
            "$ref": "#/components/schemas/BudgetIncreaseBy"
          },
          "ruleName": {
            "description": "Name of the rule.",
            "type": "string"
          },
          "ruleId": {
            "description": "Id of the rule.",
            "type": "string"
          },
          "ruleStatus": {
            "description": "Status of the rule.",
            "type": "string"
          },
          "performanceMeasureCondition": {
            "$ref": "#/components/schemas/PerformanceMeasureCondition"
          }
        }
      },
      "BiddingStrategy": {
        "description": "Campaign bidding strategy.",
        "type": "string",
        "enum": [
          "LEGACY_FOR_SALES",
          "AUTO_FOR_SALES",
          "MANUAL",
          "RULE_BASED"
        ]
      },
      "APISuccess": {
        "description": "Response object providing information on API success.",
        "type": "object",
        "properties": {
          "code": {
            "description": "HTTP status code of the response.",
            "type": "string"
          },
          "message": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "EstimatedImpactOpportunityLostToCompetitors": {
        "description": "Estimated impact of the recommendation on opportunity lost to competitors.",
        "type": "object",
        "properties": {
          "incrementalUpperBound": {
            "description": "Upper bound of the estimated change in customers who purchased from another category brand when the create grow brand impression share campaign recommendation is adopted.",
            "type": "number"
          },
          "incrementalLowerBound": {
            "description": "Lower bound of the estimated change in customers who purchased from another category brand when the create grow brand impression share campaign recommendation is adopted.",
            "type": "number"
          }
        },
        "required": [
          "incrementalUpperBound",
          "incrementalLowerBound"
        ]
      },
      "Explanation": {
        "description": "Detailed explanation of the recommendation.",
        "type": "object",
        "properties": {
          "missedOpportunities": {
            "$ref": "#/components/schemas/MissedOpportunities"
          }
        }
      },
      "CreateRecommendationRequest": {
        "type": "object",
        "properties": {
          "adProduct": {
            "$ref": "#/components/schemas/AdProduct"
          },
          "seasonal": {
            "description": "Indicates if recommendation is time-bound.",
            "type": "boolean"
          },
          "campaignId": {
            "description": "Campaign identifier.",
            "type": "string"
          },
          "keywordSortingDimension": {
            "$ref": "#/components/schemas/KeywordSortingDimension"
          },
          "campaignBuildId": {
            "description": "Identifier of the campaign build to which this recommendation is associated.",
            "type": "string"
          },
          "explanation": {
            "$ref": "#/components/schemas/Explanation"
          },
          "keywordSortingRank": {
            "description": "Sorting rank for new keyword recommendations.",
            "type": "integer"
          },
          "tacticalRecommendationContext": {
            "description": "Tactical Recommendation Context.",
            "type": "string"
          },
          "consolidatedRecommendation": {
            "$ref": "#/components/schemas/ConsolidatedRecommendation"
          },
          "expiryDate": {
            "format": "date-time",
            "description": "Date recommendation expires.",
            "type": "string"
          },
          "currentCampaignSettings": {
            "$ref": "#/components/schemas/CampaignSettings"
          },
          "asinGroupTemplateId": {
            "description": "Identifier of the asin group template to which this recommendation is associated.",
            "type": "string"
          },
          "recommendedCampaignSettings": {
            "$ref": "#/components/schemas/CampaignSettings"
          },
          "campaignTemplateId": {
            "description": "Identifier of the campaign template to which this recommendation is associated.",
            "type": "string"
          },
          "groupingType": {
            "$ref": "#/components/schemas/GroupingType"
          },
          "recommendationType": {
            "$ref": "#/components/schemas/RecommendationType"
          },
          "status": {
            "$ref": "#/components/schemas/CreateRecommendationRequestStatus"
          }
        },
        "required": [
          "adProduct",
          "recommendationType",
          "status"
        ]
      },
      "DeleteRecommendationsResponse": {
        "type": "object",
        "properties": {
          "failures": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeleteRecommendationsFailure"
            }
          },
          "successes": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeleteRecommendationsSuccess"
            }
          }
        },
        "required": [
          "successes",
          "failures"
        ]
      },
      "BudgetRuleEventTypeDuration": {
        "type": "object",
        "properties": {
          "eventId": {
            "description": "Identifier of the event.",
            "type": "string"
          },
          "endDate": {
            "format": "date",
            "description": "End date of the event in YYYY-MM-DD format.",
            "type": "string"
          },
          "startDate": {
            "format": "date",
            "description": "Start date of the event in YYYY-MM-DD format. Note that this field is present only for announced events.",
            "type": "string"
          }
        },
        "required": [
          "eventId"
        ]
      },
      "DateRangeTypeRuleDuration": {
        "description": "Object representing date range type rule duration.",
        "type": "object",
        "properties": {
          "endDate": {
            "format": "date",
            "description": "The end date of the budget rule in YYYY-MM-DD format. The end date is inclusive. Required to be equal or greater than startDate.",
            "type": "string"
          },
          "startDate": {
            "format": "date",
            "description": "The start date of the budget rule in YYYY-MM-DD format. The start date is inclusive. Required to be greater than or equal to current date.",
            "type": "string"
          }
        },
        "required": [
          "startDate"
        ]
      },
      "RejectRecommendationsRequest": {
        "type": "object",
        "properties": {
          "recommendationIds": {
            "minItems": 1,
            "maxItems": 500,
            "description": "Recommendation identifier.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "recommendationIds"
        ]
      },
      "CampaignEstimatedImpact": {
        "description": "Estimated impact at the campaign level.",
        "type": "object",
        "properties": {
          "opportunityLostPurchaseJourney": {
            "$ref": "#/components/schemas/EstimatedImpactOpportunityLostPurchaseJourney"
          },
          "cost": {
            "$ref": "#/components/schemas/EstimatedImpactCost"
          },
          "timePeriodInDays": {
            "description": "Time period of the estimated impact in days.",
            "type": "integer"
          },
          "topOfSearchImpressionShare": {
            "$ref": "#/components/schemas/EstimatedImpactTopOfSearchImpressionShare"
          },
          "impressions": {
            "$ref": "#/components/schemas/EstimatedImpactImpressions"
          },
          "incrementalSalesIncrementalCostRatio": {
            "$ref": "#/components/schemas/EstimatedImpactIncrementalSalesIncrementalCostRatio"
          },
          "sales": {
            "$ref": "#/components/schemas/EstimatedImpactSales"
          },
          "opportunityLostToCompetitorsPercentage": {
            "$ref": "#/components/schemas/EstimatedImpactOpportunityLostToCompetitorsPercentage"
          },
          "clicks": {
            "$ref": "#/components/schemas/EstimatedImpactClicks"
          },
          "opportunityLostToCompetitors": {
            "$ref": "#/components/schemas/EstimatedImpactOpportunityLostToCompetitors"
          },
          "opportunityLostToCompetitorsSales": {
            "$ref": "#/components/schemas/EstimatedImpactOpportunityLostToCompetitorsSales"
          },
          "roas": {
            "$ref": "#/components/schemas/EstimatedImpactRoas"
          },
          "cohortTopOfSearchImpressionShare": {
            "$ref": "#/components/schemas/EstimatedImpactCohortTopOfSearchImpressionShare"
          }
        },
        "required": [
          "timePeriodInDays"
        ]
      },
      "RejectRecommendationFailure": {
        "type": "object",
        "properties": {
          "index": {
            "description": "Index of the recommendation in the array from the request body.",
            "type": "number"
          },
          "recommendationId": {
            "description": "Recommendation identifier.",
            "type": "string"
          },
          "error": {
            "$ref": "#/components/schemas/RejectRecommendationError"
          }
        },
        "required": [
          "index",
          "recommendationId",
          "error"
        ]
      },
      "ProductAd": {
        "description": "A campaign product ad.",
        "type": "object",
        "properties": {
          "adId": {
            "description": "Identifier of the product ad to which this recommendation is associated.",
            "type": "string"
          },
          "asin": {
            "description": "ASIN associated with the product. Defined for vendor accounts only.",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/ProductAdState"
          },
          "sku": {
            "description": "SKU associated with the product. Defined for seller accounts only.",
            "type": "string"
          }
        }
      },
      "ListTacticalRecommendationsResponse": {
        "type": "object",
        "properties": {
          "totalResults": {
            "description": "Total number of results.",
            "type": "integer"
          },
          "nextToken": {
            "description": "Token to retrieve the next page of results.",
            "type": "string"
          },
          "recommendations": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TacticalRecommendation"
            }
          }
        },
        "required": [
          "recommendations",
          "totalResults"
        ]
      },
      "EstimatedImpactSales": {
        "description": "Estimated impact of the recommendation on sales.",
        "type": "object",
        "properties": {
          "forecastedRecommendedLowerBound": {
            "description": "Lower bound of the forecasted sales for the campaign, if the recommendation is adopted, based on data from similar advertisers during the specified time period.",
            "type": "number"
          },
          "incrementalUpperBound": {
            "description": "Upper bound of the estimated change in sales seen for similar advertisers within the time period indicated when the recommendation is adopted.",
            "type": "number"
          },
          "incrementalLowerBound": {
            "description": "Lower bound of the estimated change in sales seen for similar advertisers within the time period indicated when the recommendation is adopted.",
            "type": "number"
          },
          "forecastedCurrentUpperBound": {
            "description": "Upper bound of the forecasted sales for the campaign, based on the current campaign settings and data from similar advertisers during the specified time period.",
            "type": "number"
          },
          "forecastedCurrentLowerBound": {
            "description": "Lower bound of the forecasted sales for the campaign, based on the current campaign settings and data from similar advertisers during the specified time period.",
            "type": "number"
          },
          "forecastedRecommendedUpperBound": {
            "description": "Upper bound of the forecasted sales for the campaign, if the recommendation is adopted, based on data from similar advertisers during the specified time period.",
            "type": "number"
          }
        }
      },
      "PublishMetadata": {
        "description": "Metadata for publishing the recommendation.",
        "type": "object",
        "properties": {
          "publishedBy": {
            "$ref": "#/components/schemas/PublishedBy"
          },
          "publishedToAmazonAdConsole": {
            "description": "Indicates if recommendation was published to Amazon Ad Console.",
            "type": "boolean"
          }
        },
        "required": [
          "publishedBy",
          "publishedToAmazonAdConsole"
        ]
      },
      "Benchmark": {
        "description": "The value of a campaign performance metric relative to peer campaigns, where peer campaigns are identified using an unsupervised learning model that groups campaigns into mutually exclusive clusters of similar campaigns. Input features of this model include advertiser features such as product catalog, advertiser tenure, and campaign features related to ASIN being advertised within the campaign",
        "type": "object",
        "properties": {
          "period": {
            "description": "The time period in days over which the metric value was determined.",
            "type": "number"
          },
          "benchmarkValue": {
            "description": "The benchmark for the campaign for a given metric. This value is based on the performance of similar campaigns for the given metric over the specific time period.",
            "type": "number"
          },
          "percentDifference": {
            "description": "The percent difference relative to the benchmark value.",
            "type": "number"
          }
        }
      },
      "APIError": {
        "description": "Error response object providing information on API error.",
        "type": "object",
        "properties": {
          "code": {
            "description": "HTTP status code of the response.",
            "type": "string"
          },
          "message": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "AdProductFilter": {
        "description": "Filter recommendations by the list of ad products.",
        "type": "object",
        "properties": {
          "include": {
            "minItems": 1,
            "maxItems": 4,
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdProduct"
            }
          }
        },
        "required": [
          "include"
        ]
      },
      "BudgetRecommendation": {
        "description": "Budget recommendation of the campaign to which this recommendation is associated.",
        "type": "object",
        "properties": {
          "sevenDaysMissedOpportunities": {
            "$ref": "#/components/schemas/SevenDaysMissedOpportunities"
          }
        },
        "required": [
          "sevenDaysMissedOpportunities"
        ]
      },
      "DisplayAttributes": {
        "description": "Optional placement object for approved services.",
        "type": "object",
        "properties": {
          "actionLinkUrl": {
            "type": "string"
          },
          "headline": {
            "type": "string"
          },
          "actionLink": {
            "type": "string"
          }
        },
        "required": [
          "headline",
          "actionLink"
        ]
      },
      "ListTacticalRecommendationsRequest": {
        "type": "object",
        "properties": {
          "recommendationTypeFilter": {
            "$ref": "#/components/schemas/RecommendationTypeFilter"
          },
          "groupingTypeFilter": {
            "$ref": "#/components/schemas/GroupingTypeFilter"
          },
          "statusFilter": {
            "$ref": "#/components/schemas/StatusFilter"
          },
          "campaignIdFilter": {
            "$ref": "#/components/schemas/CampaignIdFilter"
          },
          "recommendationIdFilter": {
            "$ref": "#/components/schemas/RecommendationIdFilter"
          },
          "maxResults": {
            "default": 1000,
            "maximum": 1000,
            "type": "integer",
            "minimum": 1
          },
          "nextToken": {
            "description": "Token to retrieve the next page of results.",
            "type": "string"
          },
          "isManual": {
            "default": false,
            "description": "Flag to specify if the recommendations returned should be manually created recommendations or automatically created recommendations.",
            "type": "boolean"
          },
          "adProductFilter": {
            "$ref": "#/components/schemas/AdProductFilter"
          },
          "publishedDateFilter": {
            "$ref": "#/components/schemas/PublishedDateFilter"
          }
        }
      },
      "EstimatedImpactCost": {
        "description": "Estimated impact of the recommendation on cost.",
        "type": "object",
        "properties": {
          "forecastedRecommendedLowerBound": {
            "description": "Lower bound of the forecasted cost for the campaign, if the recommendation is adopted, based on data from similar advertisers during the specified time period.",
            "type": "number"
          },
          "incrementalUpperBound": {
            "description": "Upper bound of the estimated change in cost seen for similar advertisers within the time period indicated when the recommendation is adopted.",
            "type": "number"
          },
          "incrementalLowerBound": {
            "description": "Lower bound of the estimated change in cost seen for similar advertisers within the time period indicated when the recommendation is adopted.",
            "type": "number"
          },
          "forecastedCurrentUpperBound": {
            "description": "Upper bound of the forecasted cost for the campaign, based on the current campaign settings and data from similar advertisers during the specified time period.",
            "type": "number"
          },
          "forecastedCurrentLowerBound": {
            "description": "Lower bound of the forecasted cost for the campaign, based on the current campaign settings and data from similar advertisers during the specified time period.",
            "type": "number"
          },
          "forecastedRecommendedUpperBound": {
            "description": "Upper bound of the forecasted cost for the campaign, if the recommendation is adopted, based on data from similar advertisers during the specified time period.",
            "type": "number"
          }
        }
      },
      "ProductAdState": {
        "description": "State of the product ad.",
        "type": "string",
        "enum": [
          "ENABLED",
          "PAUSED",
          "ARCHIVED"
        ]
      },
      "Range": {
        "description": "A range of values including an upper and lower bound.",
        "type": "object",
        "properties": {
          "upperBound": {
            "description": "The upper bound of the range.",
            "type": "number"
          },
          "lowerBound": {
            "description": "The lower bound of the range.",
            "type": "number"
          }
        },
        "required": [
          "upperBound",
          "lowerBound"
        ]
      },
      "UpdateCampaignPlacement": {
        "description": "Placement details of the campaign.",
        "type": "object",
        "properties": {
          "value": {
            "description": "Percentage value of the placement.",
            "maximum": 900,
            "type": "integer",
            "minimum": 0
          }
        },
        "required": [
          "value"
        ]
      },
      "EstimatedImpactClicks": {
        "description": "Estimated impact of the recommendation on clicks.",
        "type": "object",
        "properties": {
          "forecastedRecommendedLowerBound": {
            "description": "Lower bound of the forecasted number of clicks for the campaign, if the recommendation is adopted, based on data from similar advertisers during the specified time period.",
            "type": "number"
          },
          "incrementalUpperBound": {
            "description": "Upper bound of the estimated change in clicks seen for similar advertisers within the time period indicated when the recommendation is adopted.",
            "type": "number"
          },
          "incrementalLowerBound": {
            "description": "Lower bound of the estimated change in clicks seen for similar advertisers within the time period indicated when the recommendation is adopted.",
            "type": "number"
          },
          "forecastedCurrentUpperBound": {
            "description": "Upper bound of the forecasted number of clicks for the campaign, based on the current campaign settings and data from similar advertisers during the specified time period.",
            "type": "number"
          },
          "forecastedCurrentLowerBound": {
            "description": "Lower bound of the forecasted number of clicks for the campaign, based on the current campaign settings and data from similar advertisers during the specified time period.",
            "type": "number"
          },
          "forecastedRecommendedUpperBound": {
            "description": "Upper bound of the forecasted number of clicks for the campaign, if the recommendation is adopted, based on data from similar advertisers during the specified time period.",
            "type": "number"
          }
        }
      },
      "BudgetIncreaseBy": {
        "description": "Object representing the value to increase the budget by.",
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/BudgetChangeType"
          },
          "value": {
            "format": "double",
            "description": "The budget value.",
            "type": "number"
          }
        },
        "required": [
          "type",
          "value"
        ]
      },
      "BudgetRule": {
        "description": "Budget rule of the campaign to which this recommendation is associated.",
        "type": "object",
        "properties": {
          "ruleDetails": {
            "$ref": "#/components/schemas/BudgetRuleDetails"
          },
          "ruleId": {
            "description": "Identifier of the budget rule.",
            "type": "string"
          }
        },
        "required": [
          "ruleDetails"
        ]
      },
      "PerformanceMetric": {
        "description": "The advertising performance metric.",
        "type": "string",
        "enum": [
          "ACOS",
          "CTR",
          "CVR",
          "ROAS",
          "IS",
          "NTB"
        ]
      },
      "RuleBasedBiddingV2": {
        "description": "Rule based bidding for the campaign to which this recommendation is associated.",
        "type": "object",
        "properties": {
          "campaignOptimizationId": {
            "description": "Identifier of the campaign optimization.",
            "type": "string"
          },
          "ruleRoas": {
            "format": "double",
            "description": "Threshold of the RoAS performance metric.",
            "type": "number"
          }
        },
        "required": [
          "ruleRoas"
        ]
      },
      "UpdateTarget": {
        "description": "Object representing a target. Can be a product, keyword or audience.",
        "type": "object",
        "properties": {
          "targetId": {
            "description": "Target identifier.",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/TargetState"
          },
          "bid": {
            "format": "double",
            "description": "The bid value of the target.",
            "type": "number"
          }
        }
      },
      "UpdateBudgetRule": {
        "description": "Can only be updated for recommendations with recommendationType NEW_CAMPAIGN_BUDGET_RULE or CAMPAIGN_BUDGET_RULE.",
        "type": "object",
        "properties": {
          "ruleDetails": {
            "$ref": "#/components/schemas/UpdateBudgetRuleDetails"
          }
        },
        "required": [
          "ruleDetails"
        ]
      },
      "RecommendationStatus": {
        "description": "Status of the recommendation.",
        "type": "string",
        "enum": [
          "PUBLISHED",
          "APPLY_IN_PROGRESS",
          "APPLY_SUCCESS",
          "APPLY_FAILED",
          "REJECTED"
        ]
      },
      "FilterField": {
        "description": "Field to filter by.",
        "type": "string",
        "enum": [
          "RECOMMENDATION_ID",
          "AD_PRODUCT",
          "RECOMMENDATION_TYPE",
          "STATUS",
          "GROUPING_TYPE",
          "CAMPAIGN_ID"
        ]
      },
      "RankType": {
        "description": "The outcome that the advertiser wants to maximize for, which serves as the basis for ranking.<table><tr><th>Rank Type<\/th><th>Rank based on<\/th><\/tr><tr><td>OPEN_LIKELIHOOD<\/td><td>Which campaign actions are most relevant for the advertiser, based on active campaigns<\/td><\/tr><tr><td>ADOPT_LIKELIHOOD<\/td><td>Which campaign actions are most likely to be adopted by the advertiser, based on past engagement<\/td><\/tr><tr><td>CLICKS<\/td><td>Which campaign actions will help in maximizing clicks<\/td><\/tr><tr><td>CONVERSIONS<\/td><td>Which campaign actions will help in maximizing conversions<\/td><\/tr><tr><td>IMPRESSIONS<\/td><td>Which campaign actions will help in maximizing impressions<\/td><\/tr><\/table>",
        "type": "string",
        "enum": [
          "CLICKS",
          "CONVERSIONS",
          "IMPRESSIONS",
          "OPEN_LIKELIHOOD",
          "ADOPT_LIKELIHOOD"
        ]
      },
      "EstimatedImpactOpportunityLostToCompetitorsSales": {
        "description": "Estimated impact of the recommendation on opportunity of sales lost to competitors.",
        "type": "object",
        "properties": {
          "incrementalUpperBound": {
            "description": "Upper bound of the estimated change in competitor revenue generated from customers purchasing from competing brand when the create grow brand impression share campaign recommendation is adopted.",
            "type": "number"
          },
          "incrementalLowerBound": {
            "description": "Lower bound of the estimated change in competitor revenue generated from customers purchasing from competing brand when the create grow brand impression share campaign recommendation is adopted.",
            "type": "number"
          }
        },
        "required": [
          "incrementalUpperBound",
          "incrementalLowerBound"
        ]
      },
      "EstimatedImpactCohortTopOfSearchImpressionShare": {
        "description": "Estimated impact of the recommendation on brand cohort top of search impression share.",
        "type": "object",
        "properties": {
          "incrementalUpperBound": {
            "description": "Upper bound of the estimated change in cohort top of search impression share when the create grow brand impression share campaign recommendation is adopted.",
            "type": "number"
          },
          "incrementalLowerBound": {
            "description": "Upper bound of the estimated change in cohort top of search impression share when the create grow brand impression share campaign recommendation is adopted.",
            "type": "number"
          }
        },
        "required": [
          "incrementalUpperBound",
          "incrementalLowerBound"
        ]
      },
      "UpdateRecommendationsResponse": {
        "type": "object",
        "properties": {
          "failures": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateRecommendationsFailure"
            }
          },
          "successes": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateRecommendationsSuccess"
            }
          }
        },
        "required": [
          "successes",
          "failures"
        ]
      },
      "EstimatedImpactOpportunityLostToCompetitorsPercentage": {
        "description": "Estimated impact of the recommendation on percentage of opportunity lost to competitors.",
        "type": "object",
        "properties": {
          "incrementalUpperBound": {
            "description": "Upper bound of the estimated change in percentage of customers who purchased from another category brand when the create grow brand impression share campaign recommendation is adopted.",
            "type": "number"
          },
          "incrementalLowerBound": {
            "description": "Lower bound of the estimated change in percentage of customers who purchased from another category brand when the create grow brand impression share campaign recommendation is adopted.",
            "type": "number"
          }
        },
        "required": [
          "incrementalUpperBound",
          "incrementalLowerBound"
        ]
      },
      "ComparisonOperator": {
        "description": "The comparison operator.",
        "type": "string",
        "enum": [
          "GREATER_THAN",
          "LESS_THAN",
          "EQUAL_TO",
          "LESS_THAN_OR_EQUAL_TO",
          "GREATER_THAN_OR_EQUAL_TO"
        ]
      },
      "CampaignState": {
        "description": "State of the campaign.",
        "type": "string",
        "enum": [
          "ENABLED",
          "PAUSED",
          "ARCHIVED"
        ]
      },
      "UpdateBudgetRuleDetails": {
        "type": "object",
        "properties": {
          "duration": {
            "$ref": "#/components/schemas/UpdateBudgetRuleDuration"
          },
          "budgetIncreaseBy": {
            "$ref": "#/components/schemas/BudgetRuleIncreaseBy"
          },
          "ruleName": {
            "minLength": 1,
            "description": "Name of the budget rule. Required to be unique within a campaign.",
            "type": "string",
            "maxLength": 355
          },
          "performanceMeasureCondition": {
            "$ref": "#/components/schemas/BudgetRulePerformanceMeasureCondition"
          }
        }
      },
      "AdGroup": {
        "description": "An Ad Group.",
        "type": "object",
        "properties": {
          "bidOptimization": {
            "$ref": "#/components/schemas/BidOptimization"
          },
          "state": {
            "$ref": "#/components/schemas/AdGroupState"
          },
          "bid": {
            "format": "double",
            "description": "The Ad Group bid.",
            "type": "number"
          },
          "targets": {
            "minItems": 1,
            "maxItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Target"
            }
          },
          "productAds": {
            "minItems": 1,
            "maxItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductAd"
            }
          },
          "adGroupId": {
            "description": "AdGroup identifier.",
            "type": "string"
          }
        }
      },
      "BudgetRuleIncreaseBy": {
        "type": "object",
        "properties": {
          "value": {
            "description": "Budget of the rule.",
            "type": "number"
          }
        },
        "required": [
          "value"
        ]
      },
      "RecurrenceDay": {
        "description": "The day of the week.",
        "type": "string",
        "enum": [
          "MONDAY",
          "TUESDAY",
          "WEDNESDAY",
          "THURSDAY",
          "FRIDAY",
          "SATURDAY",
          "SUNDAY"
        ]
      },
      "UpdateRecommendationStatus": {
        "description": "Status to update the recommendation status to.",
        "type": "string",
        "enum": [
          "PENDING"
        ]
      },
      "UpdateRecommendationRequestV2": {
        "type": "object",
        "properties": {
          "recommendedCampaignSettings": {
            "$ref": "#/components/schemas/UpdateCampaignSettings"
          },
          "recommendationId": {
            "description": "Recommendation identifier.",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/UpdateRecommendationStatus"
          }
        },
        "required": [
          "recommendationId"
        ]
      },
      "TargetState": {
        "description": "State of the target.",
        "type": "string",
        "enum": [
          "ENABLED",
          "PAUSED",
          "ARCHIVED"
        ]
      },
      "EstimatedImpactIncrementalSalesIncrementalCostRatio": {
        "description": "Estimated impact of the recommendation on incremental sales and incremental cost ratio.",
        "type": "object",
        "properties": {
          "incrementalUpperBound": {
            "description": "Upper bound of the estimated change in incremental sales to incremental cost ratio seen for similar advertisers within the time period indicated when the recommendation is adopted.",
            "type": "number"
          },
          "incrementalLowerBound": {
            "description": "Lower bound of the estimated change in incremental sales to incremental cost ratio seen for similar advertisers within the time period indicated when the recommendation is adopted.",
            "type": "number"
          }
        },
        "required": [
          "incrementalUpperBound",
          "incrementalLowerBound"
        ]
      },
      "UpdateCampaignSettings": {
        "description": "Settings of the campaign.",
        "type": "object",
        "properties": {
          "adGroups": {
            "minItems": 1,
            "maxItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateAdGroup"
            }
          },
          "endDate": {
            "format": "date",
            "description": "End date of the campaign.",
            "type": "string"
          },
          "biddingStrategy": {
            "$ref": "#/components/schemas/BiddingStrategy"
          },
          "ruleBasedBidding": {
            "$ref": "#/components/schemas/UpdateRuleBasedBiddingV2"
          },
          "campaignPlacement": {
            "$ref": "#/components/schemas/UpdateCampaignPlacement"
          },
          "state": {
            "$ref": "#/components/schemas/CampaignState"
          },
          "budget": {
            "$ref": "#/components/schemas/Budget"
          }
        }
      },
      "BudgetRulePerformanceMeasureCondition": {
        "type": "object",
        "properties": {
          "threshold": {
            "description": "Threshold of the performance metric.",
            "type": "number"
          }
        },
        "required": [
          "threshold"
        ]
      },
      "ListDuplicateRecommendationsResponse": {
        "type": "object",
        "properties": {
          "duplicateRecommendations": {
            "additionalProperties": {
              "minItems": 0,
              "maxItems": 1000,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TacticalRecommendation"
              }
            },
            "maxProperties": 1000,
            "type": "object",
            "minProperties": 0
          },
          "totalDuplicates": {
            "description": "Total number of duplicate incoming recommendations found.",
            "maximum": 1000,
            "type": "integer",
            "minimum": 0
          }
        },
        "required": [
          "duplicateRecommendations"
        ]
      },
      "TacticalRecommendation": {
        "description": "A recommendation used to modify properties of a campaign.",
        "type": "object",
        "properties": {
          "adProduct": {
            "$ref": "#/components/schemas/AdProduct"
          },
          "seasonal": {
            "description": "Indicates if recommendation is time-bound.",
            "type": "boolean"
          },
          "campaignId": {
            "description": "Campaign identifier.",
            "type": "string"
          },
          "applyFailureReason": {
            "description": "A human-readable description of why the recommendation failed to apply.",
            "type": "string"
          },
          "keywordSortingDimension": {
            "$ref": "#/components/schemas/KeywordSortingDimension"
          },
          "campaignBuildId": {
            "description": "Identifier of the campaign build to which this recommendation is associated.",
            "type": "string"
          },
          "recommendationId": {
            "description": "Recommendation identifier.",
            "type": "string"
          },
          "publishMetadata": {
            "$ref": "#/components/schemas/PublishMetadata"
          },
          "explanation": {
            "$ref": "#/components/schemas/Explanation"
          },
          "keywordSortingRank": {
            "description": "Sorting rank for new keyword recommendations.",
            "type": "integer"
          },
          "tacticalRecommendationContext": {
            "description": "Tactical Recommendation Context. Internal use only.",
            "type": "string"
          },
          "consolidatedRecommendation": {
            "$ref": "#/components/schemas/ConsolidatedRecommendation"
          },
          "expiryDate": {
            "format": "date-time",
            "description": "Date recommendation expires.",
            "type": "string"
          },
          "currentCampaignSettings": {
            "$ref": "#/components/schemas/CampaignSettings"
          },
          "asinGroupTemplateId": {
            "description": "Identifier of the asin group template to which this recommendation is associated.",
            "type": "string"
          },
          "recommendedCampaignSettings": {
            "$ref": "#/components/schemas/CampaignSettings"
          },
          "campaignTemplateId": {
            "description": "Identifier of the campaign template to which this recommendation is associated.",
            "type": "string"
          },
          "groupingType": {
            "$ref": "#/components/schemas/GroupingType"
          },
          "publishedDate": {
            "format": "date-time",
            "description": "Date recommendation was published.",
            "type": "string"
          },
          "recommendationType": {
            "$ref": "#/components/schemas/RecommendationType"
          },
          "status": {
            "$ref": "#/components/schemas/TacticalRecommendationStatus"
          }
        },
        "required": [
          "recommendationId",
          "adProduct",
          "recommendationType",
          "status"
        ]
      },
      "TacticalRecommendationStatus": {
        "description": "Status of the recommendation.",
        "type": "string",
        "enum": [
          "PUBLISHED",
          "APPLY_IN_PROGRESS",
          "APPLY_SUCCESS",
          "APPLY_FAILED",
          "REJECTED",
          "PENDING",
          "DRAFT",
          "EXPIRED"
        ]
      },
      "BudgetRuleDateRangeTypeDuration": {
        "type": "object",
        "properties": {
          "endDate": {
            "format": "date",
            "description": "End date of the budget rule in YYYY-MM-DD format. The end date is inclusive.",
            "type": "string"
          },
          "startDate": {
            "format": "date",
            "description": "Start date of the budget rule in YYYY-MM-DD format. The start date is inclusive.",
            "type": "string"
          }
        },
        "required": [
          "startDate"
        ]
      },
      "GetRecommendationTypeRanksResponse": {
        "type": "object",
        "properties": {
          "ranks": {
            "minItems": 1,
            "maxItems": 500,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecommendationTypeRank"
            }
          }
        },
        "required": [
          "ranks"
        ]
      },
      "RecommendationTypeFilter": {
        "description": "Filter recommendations by the list of recommendation types.",
        "type": "object",
        "properties": {
          "include": {
            "minItems": 1,
            "maxItems": 33,
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecommendationType"
            }
          }
        },
        "required": [
          "include"
        ]
      },
      "DeleteRecommendationsRequest": {
        "type": "object",
        "properties": {
          "recommendationIds": {
            "minItems": 1,
            "maxItems": 1000,
            "description": "Recommendation identifier.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "recommendationIds"
        ]
      },
      "CampaignSettings": {
        "description": "Settings of the campaign.",
        "type": "object",
        "properties": {
          "adGroups": {
            "minItems": 1,
            "maxItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdGroup"
            }
          },
          "endDate": {
            "format": "date",
            "description": "End date of the campaign.",
            "type": "string"
          },
          "biddingStrategy": {
            "$ref": "#/components/schemas/BiddingStrategy"
          },
          "ruleBasedBidding": {
            "$ref": "#/components/schemas/RuleBasedBiddingV2"
          },
          "campaignPlacement": {
            "$ref": "#/components/schemas/CampaignPlacement"
          },
          "state": {
            "$ref": "#/components/schemas/CampaignState"
          },
          "budget": {
            "$ref": "#/components/schemas/Budget"
          }
        }
      },
      "CreateRecommendationsFailure": {
        "type": "object",
        "properties": {
          "index": {
            "description": "Index of the recommendation in the array from the request body.",
            "type": "number"
          },
          "error": {
            "$ref": "#/components/schemas/APIError"
          }
        },
        "required": [
          "index",
          "error"
        ]
      },
      "ListDuplicateRecommendationsRequest": {
        "type": "object",
        "properties": {
          "recommendationIds": {
            "minItems": 1,
            "maxItems": 1000,
            "description": "List of recommendation ids to check for duplicates.",
            "type": "array",
            "items": {
              "description": "Recommendation identifier.",
              "type": "string"
            }
          }
        },
        "required": [
          "recommendationIds"
        ]
      },
      "CreateRecommendationsSuccess": {
        "type": "object",
        "properties": {
          "success": {
            "$ref": "#/components/schemas/APISuccess"
          },
          "index": {
            "description": "Index of the recommendation in the array from the request body.",
            "type": "number"
          },
          "recommendation": {
            "$ref": "#/components/schemas/TacticalRecommendation"
          },
          "recommendationId": {
            "description": "Recommendation identifier.",
            "type": "string"
          }
        },
        "required": [
          "index",
          "recommendationId",
          "recommendation",
          "success"
        ]
      },
      "Summary": {
        "description": "An explanation of the campaign performance vis-a-vis relevant benchmarks, and why the recommendation was generated.",
        "type": "object",
        "properties": {
          "code": {
            "description": "Summary Codes. \n | Code | Message |\n|---|---|\n| DECREASE_BID_CONTEXTUAL_SUMMARY | You have Sponsored Products campaigns with high impressions but low clickthrough rate, compared to similar campaigns. Applying these keyword bid recommendations can optimize your ROAS. |\n| INCREASE_BID_CONTEXTUAL_SUMMARY | You have Sponsored Products campaigns with high clickthrough rate, compared to similar campaigns. Applying these keyword bid recommendations can increase sales. |\n| INCREASE_BUDGET_CONTEXTUAL_SUMMARY | You have budget recommendations for Sponsored Products campaigns with high ROAS and high budget use, compared to similar campaigns. Applying these recommendations can optimize sales and keep your campaigns in budget. |\n| ADD_TARGETS_CONTEXTUAL_SUMMARY | You have Sponsored Products campaigns with low clickthrough rate and low conversion rate, compared to similar campaigns. Applying these keyword recommendations can increase sales. |",
            "type": "string",
            "enum": [
              "DECREASE_BID_CONTEXTUAL_SUMMARY",
              "INCREASE_BID_CONTEXTUAL_SUMMARY",
              "INCREASE_BUDGET_CONTEXTUAL_SUMMARY",
              "ADD_TARGETS_CONTEXTUAL_SUMMARY"
            ]
          },
          "message": {
            "description": "A localized description of the summary.",
            "type": "string"
          }
        }
      },
      "ListDisplayMappingsResponse": {
        "type": "object",
        "properties": {
          "displayMappings": {
            "minItems": 0,
            "maxItems": 40,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DisplayMapping"
            }
          }
        },
        "required": [
          "displayMappings"
        ]
      },
      "StatusFilter": {
        "description": "Filter recommendations by the list of recommendation statuses.",
        "type": "object",
        "properties": {
          "include": {
            "minItems": 1,
            "maxItems": 8,
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TacticalRecommendationStatus"
            }
          }
        },
        "required": [
          "include"
        ]
      },
      "BudgetChangeType": {
        "description": "The value by which to update the budget of the budget rule.",
        "type": "string",
        "enum": [
          "PERCENT"
        ]
      },
      "AdGroupState": {
        "description": "State of the Ad Group.",
        "type": "string",
        "enum": [
          "ENABLED",
          "PAUSED",
          "ARCHIVED"
        ]
      }
    },
    "requestBodies": {},
    "responses": {},
    "callbacks": {},
    "links": {},
    "securitySchemes": {},
    "parameters": {}
  },
  "openapi": "3.0.1"
}
