{
  "info": {
    "description": "",
    "title": "Stores",
    "version": "3.0"
  },
  "paths": {
    "/stores/{brandEntityId}/asinMetrics": {
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.GetAsinEngagementForStoreRequest.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/GetAsinEngagementForStoreRequest"
              }
            }
          },
          "required": true
        },
        "operationId": "getAsinEngagementForStore",
        "description": "Store asin metrics provides information about your store asin performance, including rendered impressions, viewed impressions, clicks and sales. You can access Stores insights through this API.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/vnd.GetAsinEngagementForStoreResponse.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAsinEngagementForStoreResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoresAnalyticsAPIErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - Failed due to invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoresAnalyticsAPIErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Request failed because user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoresAnalyticsAPIErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoresAnalyticsAPIErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user does not have access to a specified resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoresAnalyticsAPIErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoresAnalyticsAPIErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoresAnalyticsAPIErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "entityId"
            },
            "in": "path",
            "name": "brandEntityId",
            "description": "The identifier of the requested store. It can be fetched through calling existing API \"/v2/stores\" listed here https://advertising.amazon.com/API/docs/en-us/reference/2/stores",
            "required": true
          }
        ],
        "tags": [
          "Stores Analytics"
        ]
      }
    },
    "/stores/{brandEntityId}/insights": {
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.GetInsightsForStoreRequest.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/GetInsightsForStoreRequest"
              },
              "examples": {
                "RequestForStoreQualityMetrics": {
                  "value": {
                    "endDate": "2020-01-02",
                    "metrics": [
                      "SCORE_LEVEL",
                      "RECOMMENDATIONS",
                      "CONTRIBUTORS",
                      "DWELL",
                      "PEER_DWELL",
                      "COMPLETED_RECOMMENDATIONS",
                      "ACTIONS_TAKEN_BY_PEERS"
                    ],
                    "dimension": "DATE",
                    "startDate": "2020-01-01"
                  }
                },
                "RequestForStoreQualityMetricsWithLanguage": {
                  "value": {
                    "endDate": "2020-01-02",
                    "language": "fr-FR",
                    "metrics": [
                      "SCORE_LEVEL",
                      "RECOMMENDATIONS",
                      "CONTRIBUTORS",
                      "DWELL",
                      "PEER_DWELL",
                      "COMPLETED_RECOMMENDATIONS",
                      "ACTIONS_TAKEN_BY_PEERS"
                    ],
                    "dimension": "DATE",
                    "startDate": "2020-01-01"
                  }
                },
                "RequestForInsightsMetrics": {
                  "value": {
                    "filter": {
                      "pageIds": [
                        "page1_id"
                      ],
                      "sources": [
                        "ADS"
                      ]
                    },
                    "paginationToken": "string",
                    "maxResult": 1000,
                    "endDate": "2020-01-02",
                    "metrics": [
                      "VIEWS",
                      "ORDERS",
                      "UNITS",
                      "SALES",
                      "VISITS",
                      "VISITORS"
                    ],
                    "dimension": "DATE",
                    "startDate": "2020-01-01"
                  }
                }
              }
            }
          },
          "required": true
        },
        "description": "Stores insights provides information about your store's performance, including traffic and sales. You can access Stores insights through this API.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "getInsightsForStoreAPI",
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/vnd.GetInsightsForStoreResponse.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInsightsForStoreResponse"
                },
                "examples": {
                  "200_OK_Insights_Metrics": {
                    "value": {
                      "paginationToken": "someRandomToken",
                      "metricsDetails": [
                        {
                          "date": "20180901",
                          "visitors": "123",
                          "orders": "123",
                          "units": "123",
                          "sales": "123",
                          "views": "123"
                        },
                        {
                          "date": "20180902",
                          "visitors": "123",
                          "orders": "123",
                          "units": "123",
                          "sales": "123",
                          "views": "123"
                        }
                      ],
                      "dimension": "DATE"
                    }
                  },
                  "200_OK_Insights_Metrics_SQS": {
                    "value": {
                      "metricsDetails": [
                        {
                          "SCORE_LEVEL": "Medium",
                          "date": "20231002",
                          "COMPLETED_RECOMMENDATIONS": [
                            {
                              "recommendedAction": "Add a Best selling products on Store home page.",
                              "observedAverageDwellTimeIncrease": "21.00%",
                              "ctaText": "Edit best selling products",
                              "exampleText": "See best selling products or recommended products tile example.",
                              "exampleLink": "https://www.amazon.com/stores/page/pageId",
                              "category": "Grow sales",
                              "ctaLink": "https://<builderUniqueURLForTheLoggedInStore>"
                            },
                            {
                              "recommendedAction": "Add a Best selling products on Store sub page.",
                              "observedAverageDwellTimeIncrease": "21.00%",
                              "ctaText": "Add best selling products",
                              "exampleText": "See best selling products or recommended products tile example.",
                              "exampleLink": "https://www.amazon.com/stores/page/pageId",
                              "category": "Grow sales",
                              "ctaLink": "https://<builderUniqueURLForTheLoggedInStore>"
                            }
                          ],
                          "DWELL": "113.22",
                          "ACTIONS_TAKEN_BY_PEERS": "3",
                          "RECOMMENDATIONS": [
                            {
                              "recommendedAction": "Add a Best selling products on Store home page.",
                              "observedAverageDwellTimeIncrease": "21.00%",
                              "ctaText": "Edit best selling products",
                              "exampleText": "See best selling products or recommended products tile example.",
                              "exampleLink": "https://www.amazon.com/stores/page/pageId",
                              "category": "Grow sales",
                              "ctaLink": "https://<builderUniqueURLForTheLoggedInStore>"
                            },
                            {
                              "recommendedAction": "Add a Best selling products on Store sub page.",
                              "observedAverageDwellTimeIncrease": "21.00%",
                              "ctaText": "Add best selling products",
                              "exampleText": "See best selling products or recommended products tile example.",
                              "exampleLink": "https://www.amazon.com/stores/page/pageId",
                              "category": "Grow sales",
                              "ctaLink": "https://<builderUniqueURLForTheLoggedInStore>"
                            }
                          ],
                          "CONTRIBUTORS": [
                            "Top Contributor#1"
                          ],
                          "PEER_DWELL": "3856.83"
                        },
                        {
                          "SCORE_LEVEL": "Medium",
                          "date": "20231001",
                          "COMPLETED_RECOMMENDATIONS": [
                            {
                              "recommendedAction": "Add a Best selling products on Store home page.",
                              "observedAverageDwellTimeIncrease": "21.00%",
                              "ctaText": "Edit best selling products",
                              "exampleText": "See best selling products or recommended products tile example.",
                              "exampleLink": "https://www.amazon.com/stores/page/pageId",
                              "category": "Grow sales",
                              "ctaLink": "https://<builderUniqueURLForTheLoggedInStore>"
                            },
                            {
                              "recommendedAction": "Add a Best selling products on Store sub page.",
                              "observedAverageDwellTimeIncrease": "21.00%",
                              "ctaText": "Add best selling products",
                              "exampleText": "See best selling products or recommended products tile example.",
                              "exampleLink": "https://www.amazon.com/stores/page/pageId",
                              "category": "Grow sales",
                              "ctaLink": "https://<builderUniqueURLForTheLoggedInStore>"
                            }
                          ],
                          "DWELL": "113.27",
                          "ACTIONS_TAKEN_BY_PEERS": "3",
                          "RECOMMENDATIONS": [
                            {
                              "recommendedAction": "Add a Best selling products on Store home page.",
                              "observedAverageDwellTimeIncrease": "21.00%",
                              "ctaText": "Edit best selling products",
                              "exampleText": "See best selling products or recommended products tile example.",
                              "exampleLink": "https://www.amazon.com/stores/page/pageId",
                              "category": "Grow sales",
                              "ctaLink": "https://<builderUniqueURLForTheLoggedInStore>"
                            },
                            {
                              "recommendedAction": "Add a Best selling products on Store sub page.",
                              "observedAverageDwellTimeIncrease": "21.00%",
                              "ctaText": "Add best selling products",
                              "exampleText": "See best selling products or recommended products tile example.",
                              "exampleLink": "https://www.amazon.com/stores/page/pageId",
                              "category": "Grow sales",
                              "ctaLink": "https://<builderUniqueURLForTheLoggedInStore>"
                            }
                          ],
                          "CONTRIBUTORS": [
                            "Top Contributor#1"
                          ],
                          "PEER_DWELL": "3856.83"
                        }
                      ],
                      "dimension": "DATE"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoresAnalyticsAPIErrorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - Failed due to invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoresAnalyticsAPIErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Request failed because user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoresAnalyticsAPIErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoresAnalyticsAPIErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user does not have access to a specified resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoresAnalyticsAPIErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoresAnalyticsAPIErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StoresAnalyticsAPIErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "entityId"
            },
            "in": "path",
            "name": "brandEntityId",
            "description": "The identifier of the requested store. It can be fetched through calling existing API \"/v2/stores\" listed here https://advertising.amazon.com/API/docs/en-us/reference/2/stores",
            "required": true
          }
        ],
        "tags": [
          "Stores Analytics"
        ]
      }
    }
  },
  "components": {
    "headers": {},
    "examples": {},
    "schemas": {
      "AsinEngagementMetric": {
        "description": "Store Metric Types: Metrics aggregated at the store level. To be used with *dimension* omitted, otherwise a 422 response is returned.\n * `TOTAL_VIEWS` - Total number of times customers viewed ASINs on the store\u2019s pages. A view can happen once per store page visit. \n * `TOTAL_CLICKS` - Total count of times a customer clicked an ASIN related widget on the store\u2019s pages.\n\n Asin Metric Types: Metrics aggregated at the ASIN level. To be used with a supported dimension type (see *dimension*), otherwise a 422 response is returned.\n  * `RENDERS` - Number of times the asin rendered on a store page, this does not guarentee the customer saw the asin.\n * `VIEWS` - Number of times the a customer viewed an ASIN. Can happen once per page visit.\n  * `ORDERS` - Estimated total orders placed by Store visitors on the day of the ASIN view. \n Orders can have one or more total units.\n * `UNITS` - Estimated units purchased by Store visitors during attributed orders for the ASIN.\n * `ADD_TO_CARTS` - Total number of times an asin was added to cart by a customer on a store page. \n  * `IN_STOCK_VIEWS` - Total views of an asin on a store page while the asin was in stock. For asins with variations, the customer must have selected a variation which as in stock to be counted.\n  * `AVERAGE_IN_STOCK_PRICE` - Average price in local currency the asin was viewed at by customers while it was in stock. \n  *  `IN_STOCK_RATE` - Rate at which customers viewed an asin while it was in stock. \n  *  `AVERAGE_SALE_PRICE` - Average price in local currency for which the asin sold for during the order. \n  *  `CONVERSION_RATE` - Rate at which customers ordered a unit of the item over how many times customers clicked the item. \n  *  `CLICKS` - Count of how many times a customer clicked an asin related widget on the store page. \n  *  `CLICK_RATE` - Rate at which the asin was clicker per view. This ratio can be above one if the widget is interacted with on a widget with engaging features. (Product Showcase, Variation Selection in Product Grid, or Interactive Image)",
        "type": "string",
        "enum": [
          "RENDERS",
          "VIEWS",
          "IN_STOCK_VIEWS",
          "AVERAGE_IN_STOCK_PRICE",
          "IN_STOCK_RATE",
          "CLICKS",
          "CLICK_RATE",
          "ADD_TO_CARTS",
          "ORDERS",
          "UNITS",
          "AVERAGE_SALE_PRICE",
          "CONVERSION_RATE",
          "TOTAL_VIEWS",
          "TOTAL_CLICKS"
        ]
      },
      "InsightFilter": {
        "description": "The filter to restrict the return data. Users can specifiy the pages/source/tags they feel interested in for the insights. The relationship between each field is 'AND'. E.g. The user can speficy {pageIds=[page1_id], sources=[source1]} to retrieve the related insights for page1 and source1. The user can specify {pageIds=[page1_id], tags=[tag1_name]} to retrieve related insights for page1 and tag1. <br><br> However, specifying both \"sources\" and \"tags\" is currently not supported. Users cannot retrieve insights for given sources and tags as all the tags belong to a specific source named \"tagged\".",
        "type": "object",
        "properties": {
          "pageIds": {
            "minItems": 0,
            "maxItems": 200,
            "description": "List of pages to be fetched for insight metrics. Users can first make request to the API with the same parameters but without the filter to retrieve all the available page ids.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sources": {
            "minItems": 0,
            "maxItems": 200,
            "description": "List of sources to be fetched for insight metrics.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrafficSource"
            }
          },
          "tags": {
            "minItems": 0,
            "maxItems": 200,
            "description": "List of tags to be fetched for insight metrics. Users can first make request to the API with the same parameters but without the filter to retrieve all the available tag names.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "example": {
          "pageIds": [
            "page1_id"
          ],
          "sources": [
            "ADS"
          ]
        }
      },
      "GetAsinEngagementForStoreResponse": {
        "type": "object",
        "properties": {
          "metricsDetails": {
            "minItems": 0,
            "maxItems": 1500,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AsinEngagementDetail"
            }
          },
          "dimension": {
            "$ref": "#/components/schemas/AsinEngagementDimension"
          }
        },
        "example": [
          {
            "averageInStockPrice": "10.88",
            "renders": "487",
            "averageSalePrice": "10.93",
            "inStockRate": "0.0871",
            "clickRate": "0.888",
            "clicks": "22",
            "asin": "B07MP1Q3W8",
            "orders": "10",
            "units": "12",
            "views": "319",
            "inStockViews": "20",
            "addToCarts": "1"
          },
          {
            "averageInStockPrice": "102.88",
            "renders": "438",
            "averageSalePrice": "100.14",
            "inStockRate": "1",
            "clickRate": "0.057",
            "clicks": "2",
            "asin": "B08QDPS4M7",
            "orders": "2",
            "units": "2",
            "views": "31",
            "inStockViews": "31",
            "addToCarts": "1"
          }
        ]
      },
      "InsightMetricsDetail": {
        "description": "A key-value pair map which contains the dimension and metric information. The key is either dimension name or metric name, while the value is the corresponding dimension value or metric value. Addition of boolean,Array and Object is solely for the Store Quality metrics.",
        "additionalProperties": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            },
            {
              "type": "number"
            },
            {
              "type": "boolean"
            },
            {
              "description": "List of CONTRIBUTORS to the store quality in requested language. English is default language.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "description": "List of RECOMMENDATIONS to increase the store quality in requested language. English is default language.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StoreQualityRecommendation"
              }
            },
            {
              "description": "List of COMPLETED_RECOMMENDATIONS which resulted in increase of the store quality. It can be provided in requested language. English is default language.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StoreQualityCompletedRecommendation"
              }
            }
          ]
        },
        "type": "object",
        "example": {
          "date": "2020-01-01",
          "COMPLETED_RECOMMENDATIONS": [
            {
              "recommendedAction": "Add a Best selling products on Store home page.",
              "observedAverageDwellTimeIncrease": "21.00%",
              "ctaText": "Edit best selling products",
              "exampleText": "See best selling products or recommended products tile example.",
              "exampleLink": "https://www.amazon.com/stores/page/pageId",
              "category": "Grow sales",
              "ctaLink": "https://<builderUniqueURLForTheLoggedInStore>"
            },
            {
              "recommendedAction": "Add a Best selling products on Store sub page.",
              "observedAverageDwellTimeIncrease": "21.00%",
              "ctaText": "Add best selling products",
              "exampleText": "See best selling products or recommended products tile example.",
              "exampleLink": "https://www.amazon.com/stores/page/pageId",
              "category": "Grow sales",
              "ctaLink": "https://<builderUniqueURLForTheLoggedInStore>"
            }
          ],
          "ACTIONS_TAKEN_BY_PEERS": "3",
          "units": "10",
          "PEER_DWELL": "3856.83",
          "sales": "500.5",
          "visits": "500",
          "visitors": "200",
          "DWELL": "3000.34",
          "RECOMMENDATIONS": [
            {
              "recommendedAction": "Add a Best selling products on Store home page.",
              "observedAverageDwellTimeIncrease": "21.00%",
              "ctaText": "Edit best selling products",
              "exampleText": "See best selling products or recommended products tile example.",
              "exampleLink": "https://www.amazon.com/stores/page/pageId",
              "category": "Grow sales",
              "ctaLink": "https://<builderUniqueURLForTheLoggedInStore>"
            },
            {
              "recommendedAction": "Add a Best selling products on Store sub page.",
              "observedAverageDwellTimeIncrease": "21.00%",
              "ctaText": "Add best selling products",
              "exampleText": "See best selling products or recommended products tile example.",
              "exampleLink": "https://www.amazon.com/stores/page/pageId",
              "category": "Grow sales",
              "ctaLink": "https://<builderUniqueURLForTheLoggedInStore>"
            }
          ],
          "orders": "10",
          "CONTRIBUTORS": [
            "Top Contributor#1"
          ],
          "views": "1000"
        }
      },
      "InsightMetric": {
        "description": "Insight Metric Type:\n  * `VIEWS` - Number of page views. Data is available from August 30, 2017. <br> \"VIEW\" metric can be aggregated by all InsightDimensions.\n  * `ORDERS` - Estimated total orders placed by Store visitors within 14 days of\n    their visit. Orders contain one or more units sold. Data is\n    available from April 15, 2018. <br> \"ORDERS\" metric can be aggregated by all the InsightDimensions.\n  * `UNITS` - Estimated units purchased by Store visitors within 14 days of their\n    last visit. Data is available from December 25, 2017. <br> \"UNITS\" metric can be aggregated by all the InsightDimensions.\n  * `SALES` - Estimated total sales generated by Store visitors within 14 days of\n    their last visit. Data is available from December 25, 2017. <br> \"SALES\" metric can be aggregated by all the InsightDimensions.\n  * `VISITS` - Total visits to a page within a single day.\n    Each visitor can visit more than one page, and they can visit your\n    Store from more than one traffic source. Data is available from May\n    30, 2018. <br> \"VISITS\" metric can be aggregated by all the InsightDimensions.\n  * `VISITORS` - Total visitors to your Store within the selected date range,\n    calculated based on daily unique users or devices. One visitor can\n    visit more than one page, and they can visit your Store from more\n    than one traffic source. The total visitors by page or source may\n    sum up to a value larger than the total visitors by day to the Store\n    or to the page. Data is available from August 30, 2017. <br> \"VISITORS\" metric currently can only be aggregated by InsightDimension \"Date\". Users won't be able to get this metric when specifying other InsightDimensions. This is because number of visitors are measured at store level. This also means this metric won't be impacted by the InsightFilter.\n * `SCORE_LEVEL` This metric is for Store Quality rating calculated on various factors defining the quality of a store. It can be `HIGH`, `MEDIUM` or `LOW`. This metric currently can only be aggregated by InsightDimension \"DATE\".  \n * `RECOMMENDATIONS` This metric is an Array of Object containing 8 fields. \n \t1. `recommendedAction` is a description of recommendation (for example `Add a video`).\n\t2. `recommendedActionId` is an Id of each element in the array. \n\t3. `category` This field is a category in which Advertisers may see improvements. For ex (Grow sales). \n\t3. `exampleText` is the text to show on the hyperlink to the example of the recommendations. \n\t5. `exampleLink` is the link to the example store containing the recommendattion. \n\t6. `ctaText` is the text to show on the hyperlink to the CTA (Call to Action) link where Advertisers can log-in to Store builder and add the mentioned recommendations. For Ex (Add best-selling products). \n\t7. `ctaLink` is th CTA (Call to Action) link where Advertisers can log-in to Store builder and add the mentioned recommendations. \n\t8. `observedAverageDwellTimeIncrease`, is the improvement it might bring in the overall store quality.\n * `CONTRIBUTORS` This metric is the array of recommendations applied by the Store Owner which resulted in the improvement of overall store quality. This metric currently can only be aggregated by InsightDimension \"DATE\".\n * `DWELL` This metric is the time a customer spends on the store, on an average. This metric is specifically for the store quality and mesasures the time spent by a shoping customer on the store This is calculated differently from \"DWELL_TIME\". This metric currently can only be aggregated by InsightDimension \"DATE\". \n * `PEER_DWELL` This metric is the time a customer spends on other similar (peer) stores on an average. This metric currently can only be aggregated by InsightDimension \"DATE\".\n * `COMPLETED_RECOMMENDATIONS` This metric is an Array of Object containing 6 fields. \n \t1. `recommendedAction` is a description of recommendation (for example `Add a video`).\n\t2. `recommendedActionId` is an Id of each element in the array. \n\t3. `category` This field is a category in which Advertisers may see improvements. For ex (Grow sales). \n\t3. `exampleText` is the text to show on the hyperlink to the example of the recommendations. \n\t5. `exampleLink` is the link to the example store containing the recommendattion. \n\t6. `observedAverageDwellTimeIncrease`, is the improvement it might bring in the overall store quality.\n * `DWELL_TIME` This metric represents the average time a customer spends on the store, providing insights into user engagement by calculating the average duration of visits. <br> \"DWELL_TIME\" metric can be aggregated by all the InsightDimensions or at the store level. For aggregation at store level, *dimension* must be ommited from the request.\n * `BOUNCE_RATE` This metric provides insights into visitor engagement by measuring the ratio of total bounce visits(customer who landed on the store and left quickly without engaging) to total landing visits. It provides insights into user interaction, available at both page and store levels. <br> \"BOUNCE_RATE\" metric can be aggregated by all the InsightDimensions or at the store level. For aggregation at store level, *dimension* must be ommited from the request.\n * `NEW_TO_STORE` This metric reports the total count of unique visitors who are new to the store, providing valuable insights into the number of first-time shoppers. <br> \"NEW_TO_STORE\" metric currently can only be aggregated by InsightDimension \"DATE\" or at the store level. For aggregation at store level, *dimension* must be ommited from the request.\n * `ACTIONS_TAKEN_BY_PEERS` This metric informs about the number of recommendations customer's peer stores have taken on an average. This is helpful in relating it with the `PEER_DWELL` time.\n * `VIDEO_STARTED` This is calculated by dividing the visit with video started by Total Page Visits.\n * `VIDEO_10S_PLAYED` The number of visits where the shopper watched the complete video or 10 seconds, whichever is shorter.\n * `VIDEO_25P_PLAYED` The number of visits where the video was viewed to 25%.\n * `VIDEO_50P_PLAYED` The number of visits where the video was viewed to 50%.\n * `VIDEO_75P_PLAYED` The number of visits where the video was viewed to 75%.\n * `VIDEO_COMPLETED` The number of visits where the video was viewed to 100%.",
        "type": "string",
        "enum": [
          "VIEWS",
          "ORDERS",
          "UNITS",
          "SALES",
          "VISITS",
          "VISITORS",
          "SCORE_LEVEL",
          "RECOMMENDATIONS",
          "CONTRIBUTORS",
          "DWELL",
          "PEER_DWELL",
          "DWELL_TIME",
          "BOUNCE_RATE",
          "NEW_TO_STORE",
          "COMPLETED_RECOMMENDATIONS",
          "ACTIONS_TAKEN_BY_PEERS",
          "VIDEO_STARTED",
          "VIDEO_10S_PLAYED",
          "VIDEO_25P_PLAYED",
          "VIDEO_50P_PLAYED",
          "VIDEO_75P_PLAYED",
          "VIDEO_COMPLETED"
        ]
      },
      "SortOrder": {
        "description": "Describes whether a sort should be ascending (ASC) or descending (DESC).",
        "type": "string",
        "enum": [
          "ASC",
          "DESC"
        ],
        "example": "ASC"
      },
      "AsinEngagementDetail": {
        "description": "A key-value pair map which contains the dimension and metric information. The key is either dimension name or metric name, while the value is the corresponding dimension value or metric value.",
        "additionalProperties": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "integer"
            },
            {
              "type": "number"
            }
          ]
        },
        "type": "object",
        "example": {
          "averageInStockPrice": "102.88",
          "renders": "438",
          "averageSalePrice": "100.14",
          "inStockRate": "1",
          "clickRate": "0.057",
          "clicks": "2",
          "asin": "B08QDPS4M7",
          "orders": "2",
          "units": "2",
          "views": "31",
          "inStockViews": "31",
          "addToCarts": "1"
        }
      },
      "StoresAnalyticsAPIErrorResponse": {
        "description": "The error response object for analytics API.",
        "type": "object",
        "properties": {
          "code": {
            "description": "The HTTP status code of the response.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        },
        "example": {
          "code": "500",
          "description": "Internal Server Error - Something went wrong on the server. Retry later and report an error if unresolved."
        }
      },
      "GetInsightsForStoreRequest": {
        "type": "object",
        "required": [
          "startDate",
          "endDate",
          "dimension",
          "metrics"
        ],
        "properties": {
          "filter": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InsightFilter"
              }
            ]
          },
          "paginationToken": {
            "description": "The token that last request returned. It will be used to fetch next page of response.",
            "type": "string"
          },
          "maxResult": {
            "description": "The max number of result that will be returned in one response. The max allowed value will be 1500. If the parameter is not presented, it will be default to 1500.",
            "maximum": 1500,
            "type": "integer",
            "minimum": 1,
            "example": "1000"
          },
          "endDate": {
            "format": "date",
            "description": "The end date (inclusive) in YYYY-MM-DD format for the time period from when to fetch the insights.",
            "type": "string",
            "example": "2020-01-02"
          },
          "language": {
            "description": "This parameter is only available for Insights Metrics request for Store Quality(SQS). The language parameter is to request RECOMMENDATIONS and CONTRIBUTORS metrics in the requested language. Currently, we support 35 languages. This parameter is optional and default value is 'en' English. Following are the values expected in `language` parameter.\n <table>\n   <tr>\n    <th>S no.<\/th>\n    <th>Language Code<\/th>\n    <th>Language description<\/th>\n   <\/tr>\n   <tr>\n     <th>1<\/th>\n     <th>French (Canada)<\/th>\n     <th>fr-CA<\/th>\n   <\/tr>\n   <tr>\n     <th>2<\/th>\n     <th>French (France)<\/th>\n     <th>fr-FR<\/th>\n   <\/tr>\n   <tr>\n     <th>3<\/th>\n     <th>German<\/th>\n     <th>de-DE<\/th>\n   <\/tr>\n   <tr>\n     <th>4<\/th>\n     <th>Czech<\/th>\n     <th>cs-CZ<\/th>\n   <\/tr>\n   <tr>\n    <th>5<\/th>\n    <th>Polish<\/th>\n    <th>pl-PL<\/th>\n  <\/tr>\n  <tr>\n    <th>6<\/th>\n    <th>Turkish<\/th>\n    <th>tr-TR<\/th>\n  <\/tr>\n  <tr>\n    <th>7<\/th>\n    <th>Dutch<\/th>\n    <th>nl-NL<\/th>\n  <\/tr>\n  <tr>\n    <th>8<\/th>\n    <th>Italian<\/th>\n    <th>it-IT<\/th>\n  <\/tr><tr>\n     <th>9<\/th>\n     <th>Spanish (Spain)<\/th>\n     <th>es-ES<\/th>\n   <\/tr>\n   <tr>\n     <th>10<\/th>\n     <th>Spanish (Mexico)<\/th>\n     <th>es-MX<\/th>\n   <\/tr>\n <tr>\n     <th>11<\/th>\n     <th>Spanish (Columbia)<\/th>\n     <th>es-CO<\/th>\n   <\/tr>\n  <tr>\n     <th>12<\/th>\n     <th>Portugese (Brazil)<\/th>\n     <th>pt-BR<\/th>\n   <\/tr>\n   <tr>\n     <th>13<\/th>\n     <th>Hindi (India)<\/th>\n     <th>hi-IN<\/th>\n   <\/tr><tr>\n     <th>14<\/th>\n     <th>Tamil (India)<\/th>\n     <th>ta-IN<\/th>\n   <\/tr>\n   <tr>\n     <th>15<\/th>\n     <th>Telugu (India)<\/th>\n     <th>te-IN<\/th>\n   <\/tr>\n   <tr>\n     <th>16<\/th>\n     <th>Kanada (India)<\/th>\n     <th>kn-IN<\/th>\n   <\/tr>\n   <tr>\n     <th>17<\/th>\n     <th>Malyalam (India)<\/th>\n     <th>ml-IN<\/th>\n   <\/tr><tr>\n     <th>18<\/th>\n     <th>Bangla (India)<\/th>\n     <th>bn-IN<\/th>\n   <\/tr>\n   <tr>\n     <th>19<\/th>\n     <th>Marathi (India)<\/th>\n     <th>mr-IN<\/th>\n   <\/tr>\n   <tr>\n     <th>20<\/th>\n     <th>Japanese<\/th>\n     <th>ja-JP<\/th>\n   <\/tr>\n   <tr>\n     <th>21<\/th>\n     <th>Simplified Chinese<\/th>\n     <th>zh-CN<\/th>\n   <tr>\n<th>\n22<\/th>\n<th>\nChinese - TAIWAN<\/th>\n<th>\nzh-TW<\/th>\n<\/tr>\n<tr>\n<th>\n23<\/th>\n<th>\nVietnamese<\/th>\n<th>\nvi-VN<\/th>\n<\/tr>\n<tr>\n<th>\n24<\/th>\n<th>\nArabic (U.A.E.)<\/th>\n<th>\nar-AE<\/th>\n<\/tr>\n<tr>\n<th>\n25<\/th>\n<th>\nSwedish (Sweden)<\/th>\n<th>\nsv-SE<\/th>\n<\/tr>\n<tr>\n<th>\n26<\/th>\n<th>\nThai (Thailand)<\/th>\n<th>\nth-TH<\/th>\n<\/tr>\n<tr>\n<th>\n27<\/th>\n<th>\nKorean<\/th>\n<th>\nko-KR<\/th>\n<\/tr>\n<\/tr><tr>\n     <th>28<\/th>\n     <th>English<\/th>\n     <th>en<\/th>\n   <\/tr>\n<tr>\n     <th>29<\/th>\n     <th>English (US)<\/th>\n     <th>en-US<\/th>\n   <\/tr>\n<tr>\n     <th>30<\/th>\n     <th>English (Canada)<\/th>\n     <th>en-CA<\/th>\n   <\/tr>\n<tr>\n     <th>31<\/th>\n     <th>English (India)<\/th>\n     <th>en-IN<\/th>\n   <\/tr>\n<tr>\n     <th>32<\/th>\n     <th>English (UK)<\/th>\n     <th>en-GB<\/th>\n   <\/tr>\n<tr>\n     <th>33<\/th>\n     <th>English (UAE)<\/th>\n     <th>en-AE<\/th>\n   <\/tr>\n<tr>\n     <th>34<\/th>\n     <th>English(Australia)<\/th>\n     <th>en-AU<\/th>\n   <\/tr>\n<tr>\n     <th>35<\/th>\n     <th>English (Singapore)<\/th>\n     <th>en-SG<\/th>\n   <\/tr>\n <\/table>\n <br><br>",
            "type": "string",
            "example": "es-MX"
          },
          "metrics": {
            "minItems": 1,
            "maxItems": 20,
            "description": "List of the insight metrics to be fetched. Only one metric should be specified.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InsightMetric"
            },
            "example": [
              "VIEWS",
              "ORDERS",
              "UNITS",
              "SALES",
              "VISITS",
              "VISITORS"
            ]
          },
          "dimension": {
            "$ref": "#/components/schemas/InsightDimension"
          },
          "startDate": {
            "format": "date",
            "description": "The start date (inclusive) in YYYY-MM-DD format for the time period from when to fetch the insights. The earliest date will be 2018-09-01, if the input is earlier, it will be default to 2018-09-01",
            "type": "string",
            "example": "2020-01-01"
          }
        }
      },
      "StoreQualityRecommendation": {
        "description": "The Object containing recommendations to improve store quality.",
        "type": "object",
        "properties": {
          "recommendedAction": {
            "description": "description of the recommendation.",
            "type": "string"
          },
          "observedAverageDwellTimeIncrease": {
            "description": "The percentage by which store quality could improve by this recommendation.",
            "type": "string"
          },
          "ctaText": {
            "description": "Text describing the Call to Action(CTA).",
            "type": "string"
          },
          "exampleText": {
            "description": "The text to describe the example to showcase the recommended action.",
            "type": "string"
          },
          "exampleLink": {
            "description": "Link to the example store with a sample to showcase a recommended action.",
            "type": "string"
          },
          "category": {
            "description": "The category in which the store owners could see improvment by this recommendation.",
            "type": "string"
          },
          "ctaLink": {
            "description": "Call to Action(CTA) link to take customer to the page where the changes can be made.",
            "type": "string"
          }
        },
        "example": {
          "recommendedAction": "Add a Best selling products on Store home page.",
          "observedAverageDwellTimeIncrease": "21.00%",
          "ctaText": "Add best-selling products",
          "exampleText": "See best selling products or recommended products tile example.",
          "exampleLink": "https://www.amazon.com/stores/page/pageId",
          "category": "Grow sales",
          "ctaLink": "https://<builderUniqueURLForTheLoggedInStore>"
        }
      },
      "GetInsightsForStoreResponse": {
        "type": "object",
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/InsightFilter"
          },
          "paginationToken": {
            "description": "The token can be directly used to fetch next page of the result. The token can only been used when the token is been created less than 24 hours and the request input is same as last request",
            "type": "string"
          },
          "metricsDetails": {
            "minItems": 0,
            "maxItems": 1500,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InsightMetricsDetail"
            }
          },
          "dimension": {
            "$ref": "#/components/schemas/InsightDimension"
          }
        },
        "example": {
          "paginationToken": "someRandomToken",
          "metricsDetails": [
            {
              "date": "20180901",
              "visitors": "123",
              "orders": "123",
              "units": "123",
              "sales": "123",
              "views": "123"
            },
            {
              "date": "20180902",
              "visitors": "123",
              "orders": "123",
              "units": "123",
              "sales": "123",
              "views": "123"
            }
          ],
          "dimension": "DATE"
        }
      },
      "InsightDimension": {
        "description": "User can use dimensions to aggregate the insight metrics. Supported dimension types:\n  * `DATE` - For aggregation by date.\n  * `PAGE` - For aggregation by page.\n  * `SOURCE` - For aggregation by source.\n  * `TAG` - For aggregation by tag.\n  * `STORE` - For aggregation by store. This dimension is only supported for \"DWELL_TIME\", \"BOUNCE_RATE\", \"NEW_TO_STORE\" \n \n Please check *metrics* for more detailsdetails.\n  \n<br><br> Not all InsightMetrics can be aggregated using above dimensions. Below is the supported metrics for each dimension,\n<table>\n  <tr>\n    <th>InsightDimension<\/th>\n    <th>Supported InsightMetrics<\/th>\n  <\/tr>\n  <tr>\n    <th>DATE<\/th>\n    <th>Either \"VIEWS, ORDERS, UNITS, SALES, VISITS, DWELL_TIME, BOUNCE_RATE, NEW_TO_STORE\" or \"SCORE_LEVEL, RECOMMENDATIONS, CONTRIBUTORS, DWELL, PEER_DWELL, COMPLETED_RECOMMENDATIONS, ACTIONS_TAKEN_BY_PEERS\" (Store Quality metrics)<\/th>\n  <\/tr>\n  <tr>\n    <th>PAGE<\/th>\n    <th>VIEWS, ORDERS, UNITS, SALES, VISITS,  DWELL_TIME, BOUNCE_RATE <\/th>\n  <\/tr>\n  <tr>\n    <th>SOURCE<\/th>\n    <th>VIEWS, ORDERS, UNITS, SALES, VISITS,  DWELL_TIME, BOUNCE_RATE <\/th>\n  <\/tr>\n  <tr>\n    <th>TAG<\/th>\n    <th>VIEWS, ORDERS, UNITS, SALES, VISITS,  DWELL_TIME, BOUNCE_RATE <\/th>\n  <\/tr>\n<tr>\n    <th> STORE <\/th>\n    <th> DWELL_TIME, BOUNCE_RATE, NEW_TO_STORE<\/th>\n  <\/tr>\n<\/table>\n<br><br>",
        "type": "string",
        "enum": [
          "DATE",
          "PAGE",
          "SOURCE",
          "TAG",
          "STORE"
        ]
      },
      "StoreQualityCompletedRecommendation": {
        "description": "The Object containing recommendations to improve store quality.",
        "type": "object",
        "properties": {
          "recommendedAction": {
            "description": "description of the recommendation.",
            "type": "string"
          },
          "observedAverageDwellTimeIncrease": {
            "description": "The percentage by which store quality could improve by this recommendation.",
            "type": "string"
          },
          "exampleText": {
            "description": "The text to describe the example to showcase the recommended action.",
            "type": "string"
          },
          "exampleLink": {
            "description": "Link to the example store with a sample to showcase a recommended action.",
            "type": "string"
          },
          "category": {
            "description": "The category in which the store owners could see improvment by this recommendation.",
            "type": "string"
          }
        },
        "example": {
          "recommendedAction": "Add a Best selling products on Store home page.",
          "observedAverageDwellTimeIncrease": "21.00%",
          "exampleText": "See best selling products or recommended products tile example.",
          "exampleLink": "https://www.amazon.com/stores/page/pageId",
          "category": "Grow sales"
        }
      },
      "TrafficSource": {
        "description": "Traffic Source Type:\n  * `ADS` - Traffic from Sponsored Brands ads on Amazon.\n  * `ORGANIC` - Traffic originating from your brand link on Amazon product detail pages.\n  * `OTHER` - All other traffic sources not categorized.\n",
        "type": "string",
        "enum": [
          "ADS",
          "ORGANIC",
          "OTHER"
        ]
      },
      "GetAsinEngagementForStoreRequest": {
        "type": "object",
        "required": [
          "startDate",
          "endDate",
          "metrics"
        ],
        "properties": {
          "endDate": {
            "format": "date",
            "description": "The end date (inclusive) in YYYY-MM-DD format for the time period from when to fetch the insights.",
            "type": "string",
            "example": "2020-01-02"
          },
          "orderBy": {
            "$ref": "#/components/schemas/SortOrder"
          },
          "sortBy": {
            "description": "Nullable metric to sort on. If a value is provided, it must also appear in the metrics list. If no value is provided, the result is not guaranteed to be sorted. This field is only valid when the dimension is ASIN.",
            "example": "UNITS"
          },
          "metrics": {
            "minItems": 0,
            "maxItems": 12,
            "description": "List of the engagement metrics to be fetched. At least one metric should be specified.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AsinEngagementMetric"
            },
            "example": [
              "RENDERS",
              "VIEWS",
              "IN_STOCK_VIEWS",
              "AVERAGE_IN_STOCK_PRICE",
              "IN_STOCK_RATE",
              "CLICKS",
              "CLICK_RATE",
              "ADD_TO_CARTS",
              "ORDERS",
              "UNITS",
              "AVERAGE_SALE_PRICE",
              "CONVERSION_RATE"
            ]
          },
          "dimension": {
            "$ref": "#/components/schemas/AsinEngagementDimension"
          },
          "startDate": {
            "format": "date",
            "description": "The start date (inclusive) in YYYY-MM-DD format for the time period from when to fetch the insights.",
            "type": "string",
            "example": "2020-01-01"
          }
        }
      },
      "AsinEngagementDimension": {
        "description": "User can use dimensions to aggregate the engagement metrics. Supported dimension types:\n  * `ASIN` - Amazon Standard Identification Number.\n\n  When *dimension* is omitted, user can retrieve select metrics aggregated at the store level. See *metrics* for details.",
        "type": "string",
        "enum": [
          "ASIN"
        ]
      }
    },
    "requestBodies": {},
    "responses": {},
    "callbacks": {},
    "links": {},
    "securitySchemes": {},
    "parameters": {}
  },
  "openapi": "3.0.1"
}
