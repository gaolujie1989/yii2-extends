<?php

namespace lujie\amazon\sp\api;

use Yii;
use Iterator;

/**
* This class is autogenerated by the OpenAPI gii generator
* @description The Selling Partner API for Notifications lets you subscribe to notifications that are relevant to a selling partner's business. Using this API you can create a destination to receive notifications, subscribe to notifications, delete notification subscriptions, and more.

For more information, refer to the [Notifications Use Case Guide](https://developer-docs.amazon.com/sp-api/docs/notifications-api-v1-use-case-guide).
*/
class Notifications extends \lujie\amazon\sp\BaseAmazonSPClient
{

                
    /**
     * @description Returns information about subscription of the specified notification type and payload version. `payloadVersion` is an optional parameter. When `payloadVersion` is not provided, it will return latest payload version subscription's information. You can use this API to get subscription information when you do not have a subscription identifier.

**Usage Plan:**

| Rate (requests per second) | Burst |
| ---- | ---- |
| 1 | 5 |

The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may observe higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @tag notifications
     * @param array $query
     *      - *payloadVersion* - string - optional
     *          - The version of the payload object to be used in the notification.
     * @return array
     *      - *payload* - 
     *          - The payload for the `getSubscription` operation.
     *      - *errors* - 
     *          - One or more unexpected errors occurred during the `getSubscription` operation.
     */
    public function getSubscription(array $query = []): array
    {
        return $this->api(array_merge(["/notifications/v1/subscriptions/{notificationType}"], $query));
    }
                
    /**
     * @description Creates a subscription for the specified notification type to be delivered to the specified destination. Before you can subscribe, you must first create the destination by calling the `createDestination` operation. In cases where the specified notification type supports multiple payload versions, you can utilize this API to subscribe to a different payload version if you already have an existing subscription for a different payload version.

**Usage Plan:**

| Rate (requests per second) | Burst |
| ---- | ---- |
| 1 | 5 |

The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may observe higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @tag notifications
     * @param array $data 
     * @return array
     *      - *payload* - 
     *          - The payload for the `createSubscription` operation.
     *      - *errors* - 
     *          - One or more unexpected errors occurred during the `createSubscription` operation.
     */
    public function createSubscription(array $data): array
    {
        return $this->api("/notifications/v1/subscriptions/{notificationType}", 'POST', $data);
    }
                    
    /**
     * @description Returns information about a subscription for the specified notification type. The `getSubscriptionById` operation is grantless. For more information, refer to [Grantless operations](https://developer-docs.amazon.com/sp-api/docs/grantless-operations).

**Usage Plan:**

| Rate (requests per second) | Burst |
| ---- | ---- |
| 1 | 5 |

The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may observe higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @tag notifications
     * @param string $subscriptionId The identifier for the subscription that you want to get.
     * @return array
     *      - *payload* - 
     *          - The payload for the `getSubscriptionById` operation.
     *      - *errors* - 
     *          - An unexpected condition occurred during the `getSubscriptionById` operation.
     */
    public function getSubscriptionById(string $subscriptionId): array
    {
        return $this->api("/notifications/v1/subscriptions/{notificationType}/{$subscriptionId}");
    }
                
    /**
     * @description Deletes the subscription indicated by the subscription identifier and notification type that you specify. The subscription identifier can be for any subscription associated with your application. After you successfully call this operation, notifications will stop being sent for the associated subscription. The `deleteSubscriptionById` operation is grantless. For more information, refer to [Grantless operations](https://developer-docs.amazon.com/sp-api/docs/grantless-operations).

**Usage Plan:**

| Rate (requests per second) | Burst |
| ---- | ---- |
| 1 | 5 |

The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may observe higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @tag notifications
     * @param string $subscriptionId The identifier for the subscription that you want to delete.
     * @return array
     *      - *errors* - 
     *          - An unexpected condition occurred during the `deleteSubscriptionById` operation.
     */
    public function deleteSubscriptionById(string $subscriptionId): array
    {
        return $this->api("/notifications/v1/subscriptions/{notificationType}/{$subscriptionId}", 'DELETE');
    }
                    
    /**
     * @description Returns information about all destinations. The `getDestinations` operation is grantless. For more information, refer to [Grantless operations](https://developer-docs.amazon.com/sp-api/docs/grantless-operations).

**Usage Plan:**

| Rate (requests per second) | Burst |
| ---- | ---- |
| 1 | 5 |

The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may observe higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @tag notifications
     * @return array
     *      - *payload* - 
     *          - The payload for the `getDestinations` operation.
     *      - *errors* - 
     *          - One or more unexpected errors occurred during the `getDestinations` operation.
     */
    public function getDestinations(): array
    {
        return $this->api("/notifications/v1/destinations");
    }
                
    /**
     * @description Creates a destination resource to receive notifications. The `createDestination` operation is grantless. For more information, refer to [Grantless operations](https://developer-docs.amazon.com/sp-api/docs/grantless-operations).

**Usage Plan:**

| Rate (requests per second) | Burst |
| ---- | ---- |
| 1 | 5 |

The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may observe higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @tag notifications
     * @param array $data 
     * @return array
     *      - *payload* - 
     *          - The payload for the `createDestination` operation.
     *      - *errors* - 
     *          - One or more unexpected errors occurred during the `createDestination` operation.
     */
    public function createDestination(array $data): array
    {
        return $this->api("/notifications/v1/destinations", 'POST', $data);
    }
                    
    /**
     * @description Returns information about the destination that you specify. The `getDestination` operation is grantless. For more information, refer to [Grantless operations](https://developer-docs.amazon.com/sp-api/docs/grantless-operations).

**Usage Plan:**

| Rate (requests per second) | Burst |
| ---- | ---- |
| 1 | 5 |

The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may observe higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @tag notifications
     * @param string $destinationId The identifier generated when you created the destination.
     * @return array
     *      - *payload* - 
     *          - The payload for the `getDestination` operation.
     *      - *errors* - 
     *          - One or more unexpected errors occurred during the `getDestination` operation.
     */
    public function getDestination(string $destinationId): array
    {
        return $this->api("/notifications/v1/destinations/{$destinationId}");
    }
                
    /**
     * @description Deletes the destination that you specify. The `deleteDestination` operation is grantless. For more information, refer to [Grantless operations](https://developer-docs.amazon.com/sp-api/docs/grantless-operations).

**Usage Plan:**

| Rate (requests per second) | Burst |
| ---- | ---- |
| 1 | 5 |

The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may observe higher rate and burst values than those shown here. For more information, refer to [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @tag notifications
     * @param string $destinationId The identifier for the destination that you want to delete.
     * @return array
     *      - *errors* - 
     *          - One or more unexpected errors occurred during the `deleteDestination` operation.
     */
    public function deleteDestination(string $destinationId): array
    {
        return $this->api("/notifications/v1/destinations/{$destinationId}", 'DELETE');
    }
    
}
