{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "plentymarkets REST-API",
        "x-logo": {
            "url": "https://www.plentymarkets.eu/layout/plenty_responsive/img/plentymarkets-logo-claim.svg",
            "backgroundColor": "#FFFFFF"
        },
        "description": "The plentymarkets REST API expands the functionality of the plentymarkets CMS and allows access to resources, i.e. data records, via unique URI paths",
        "contact": {
            "name": "plentymarkets",
            "url": "https://forum.plentymarkets.com/c/rest-api"
        }
    },
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "host": "example.com",
    "basePath": "/",
    "tags": [
        {
            "name": "Account",
            "description": "Routes for Account",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/account"
            }
        },
        {
            "name": "Accounting",
            "description": "Routes for Accounting",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/accounting"
            }
        },
        {
            "name": "AddressDesign",
            "description": "Routes for AddressDesign",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/address_design"
            }
        },
        {
            "name": "AuditLog",
            "description": "Routes for AuditLog",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/audit_log"
            }
        },
        {
            "name": "Authentication",
            "description": "Routes for Authentication",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/authentication"
            }
        },
        {
            "name": "Authorization",
            "description": "Routes for Authorization",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/authorization"
            }
        },
        {
            "name": "BI",
            "description": "Routes for BI",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/b_i"
            }
        },
        {
            "name": "Basket",
            "description": "Routes for Basket",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/basket"
            }
        },
        {
            "name": "Batch",
            "description": "Routes for Batch",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/batch"
            }
        },
        {
            "name": "Blog",
            "description": "Routes for Blog",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/blog"
            }
        },
        {
            "name": "Board",
            "description": "Routes for Board",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/board"
            }
        },
        {
            "name": "Boards",
            "description": "Routes for Boards",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/boards"
            }
        },
        {
            "name": "Catalog",
            "description": "Routes for Catalog",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/catalog"
            }
        },
        {
            "name": "Category",
            "description": "Routes for Category",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/category"
            }
        },
        {
            "name": "Cloud",
            "description": "Routes for Cloud",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/cloud"
            }
        },
        {
            "name": "Comment",
            "description": "Routes for Comment",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/comment"
            }
        },
        {
            "name": "Configuration",
            "description": "Routes for Configuration",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/configuration"
            }
        },
        {
            "name": "CustomerContract",
            "description": "Routes for CustomerContract",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/customer_contract"
            }
        },
        {
            "name": "Document",
            "description": "Routes for Document",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/document"
            }
        },
        {
            "name": "ElasticSync",
            "description": "Routes for ElasticSync",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/elastic_sync"
            }
        },
        {
            "name": "Export",
            "description": "Routes for Export",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/export"
            }
        },
        {
            "name": "ExportSettings",
            "description": "Routes for ExportSettings",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/export_settings"
            }
        },
        {
            "name": "Feedback",
            "description": "Routes for Feedback",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/feedback"
            }
        },
        {
            "name": "Fulfillment",
            "description": "Routes for Fulfillment",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/fulfillment"
            }
        },
        {
            "name": "Item",
            "description": "Routes for Item",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/item"
            }
        },
        {
            "name": "LegalInformation",
            "description": "Routes for LegalInformation",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/legal_information"
            }
        },
        {
            "name": "Listing",
            "description": "Routes for Listing",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/listing"
            }
        },
        {
            "name": "Log",
            "description": "Routes for Log",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/log"
            }
        },
        {
            "name": "Market",
            "description": "Routes for Market",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/market"
            }
        },
        {
            "name": "Messenger",
            "description": "Routes for Messenger",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/messenger"
            }
        },
        {
            "name": "Newsletter",
            "description": "Routes for Newsletter",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/newsletter"
            }
        },
        {
            "name": "Order",
            "description": "Routes for Order",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/order"
            }
        },
        {
            "name": "OrderSummary",
            "description": "Routes for OrderSummary",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/order_summary"
            }
        },
        {
            "name": "Payment",
            "description": "Routes for Payment",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/payment"
            }
        },
        {
            "name": "Pim",
            "description": "Routes for Pim",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/pim"
            }
        },
        {
            "name": "PluginMultilingualism",
            "description": "Routes for PluginMultilingualism",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/plugin_multilingualism"
            }
        },
        {
            "name": "PluginSet",
            "description": "Routes for PluginSet",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/plugin_set"
            }
        },
        {
            "name": "Plugins",
            "description": "Routes for Plugins",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/plugins"
            }
        },
        {
            "name": "Property",
            "description": "Routes for Property",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/property"
            }
        },
        {
            "name": "Returns",
            "description": "Routes for Returns",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/returns"
            }
        },
        {
            "name": "ShopBuilder",
            "description": "Routes for ShopBuilder",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/shop_builder"
            }
        },
        {
            "name": "Stock",
            "description": "Routes for Stock",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/stock"
            }
        },
        {
            "name": "StockManagement",
            "description": "Routes for StockManagement",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/stock_management"
            }
        },
        {
            "name": "Sync",
            "description": "Routes for Sync",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/sync"
            }
        },
        {
            "name": "Tag",
            "description": "Routes for Tag",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/tag"
            }
        },
        {
            "name": "Ticket",
            "description": "Routes for Ticket",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/ticket"
            }
        },
        {
            "name": "TicketMessage",
            "description": "Routes for TicketMessage",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/ticket_message"
            }
        },
        {
            "name": "Todo",
            "description": "Routes for Todo",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/todo"
            }
        },
        {
            "name": "User",
            "description": "Routes for User",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/user"
            }
        },
        {
            "name": "Warehouse",
            "description": "Routes for Warehouse",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/warehouse"
            }
        },
        {
            "name": "Webstore",
            "description": "Routes for Webstore",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/webstore"
            }
        },
        {
            "name": "Wizard",
            "description": "Routes for Wizard",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/wizard"
            }
        },
        {
            "name": "plentyMarketplace",
            "description": "Routes for plentyMarketplace"
        }
    ],
    "paths": {
        "/rest/advance_orders": {
            "post": {
                "summary": "Create an advance order",
                "description": "Creates an advance order.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 1,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            }
        },
        "/rest/advance_orders/items/{orderItemId}/assign_variation": {
            "post": {
                "summary": "Change an order item of type \"unassigned variation\" to \"variation\".",
                "description": "Change an order item of type \"unassigned variation\" to \"variation\". The ID of the order item and variation ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 6,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderItemId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/advance_orders/items/{orderItemId}/unassign_variation": {
            "post": {
                "summary": "Change an order item of type \"variation\" to \"unassigned variation\".",
                "description": "Change an order item of type \"variation\" to \"unassigned variation\". The ID of the order item must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 6,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderItemId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/advance_orders/preview": {
            "post": {
                "summary": "Get an advance order create preview.",
                "description": "Returns an advance order preview for the given order data without creating an advance order.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            }
        },
        "/rest/advance_orders/{orderId}": {
            "delete": {
                "summary": "Delete an advance order",
                "description": "Deletes an advance order. The order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SimpleRestResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            },
            "put": {
                "summary": "Update an advance order",
                "description": "Updates an advance order. The order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 7,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/advance_orders/{orderId}/preview": {
            "put": {
                "summary": "Get an advance order update preview",
                "description": "Returns an advance order preview for the given order data without updating an advance order. The order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/credit_notes": {
            "post": {
                "summary": "Create a credit note",
                "description": "Creates a credit note.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 8,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            }
        },
        "/rest/credit_notes/items/{orderItemId}/assign_variation": {
            "post": {
                "summary": "Change an order item of type \"unassigned variation\" to \"variation\".",
                "description": "Change an order item of type \"unassigned variation\" to \"variation\". The ID of the order item and variation ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 7,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderItemId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/credit_notes/items/{orderItemId}/unassign_variation": {
            "post": {
                "summary": "Change an order item of type \"variation\" to \"unassigned variation\".",
                "description": "Change an order item of type \"variation\" to \"unassigned variation\". The ID of the order item must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 2,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderItemId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/credit_notes/preview": {
            "post": {
                "summary": "Get a credit note create preview.",
                "description": "Returns a credit note preview for the given order data without creating a credit note.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            }
        },
        "/rest/credit_notes/{orderId}": {
            "delete": {
                "summary": "Delete a credit note",
                "description": "Deletes a credit note. The order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SimpleRestResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            },
            "put": {
                "summary": "Update a credit note",
                "description": "Updates a credit note. The order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 8,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/credit_notes/{orderId}/preview": {
            "put": {
                "summary": "Get a credit note update preview",
                "description": "Returns a credit note preview for the given order data without updating a credit note. The order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/delivery_orders": {
            "post": {
                "summary": "Create a delivery order",
                "description": "Creates a new delivery order.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 5,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            }
        },
        "/rest/delivery_orders/items/{orderItemId}/assign_variation": {
            "post": {
                "summary": "Change an order item of type \"unassigned variation\" to \"variation\".",
                "description": "Change an order item of type \"unassigned variation\" to \"variation\". The ID of the order item and variation ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 1,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderItemId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/delivery_orders/items/{orderItemId}/unassign_variation": {
            "post": {
                "summary": "Change an order item of type \"variation\" to \"unassigned variation\".",
                "description": "Change an order item of type \"variation\" to \"unassigned variation\". The ID of the order item must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 5,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderItemId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/delivery_orders/preview": {
            "post": {
                "summary": "Get a delivery order create preview.",
                "description": "Returns a delivery order preview for the given order data without creating a delivery order.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            }
        },
        "/rest/delivery_orders/{orderId}": {
            "delete": {
                "summary": "Delete a delivery order",
                "description": "Deletes a delivery order. The order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SimpleRestResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            },
            "put": {
                "summary": "Update a delivery order",
                "description": "Updates a delivery order. The order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 2,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/delivery_orders/{orderId}/book": {
            "post": {
                "summary": "Book out order items",
                "description": "Books out the order items of an order. The ID of the order must be specified and a booking date can be specified. The current date and time will be used if no date is specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SimpleRestResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "/rest/delivery_orders/{orderId}/book",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": ""
                                },
                                "bookingDate": {
                                    "type": "string",
                                    "description": ""
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/delivery_orders/{orderId}/cancel_booking": {
            "post": {
                "summary": "Revert outgoing stock",
                "description": "Cancellation the booking of an order. The ID of the order must be specified. With the array 'quantities' the items to cancel can be defined. If 'quantities' is not given, the whole order will be cancelled and the booking date will be deleted. If 'quantities' is defined, the booking date won't be reset.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SimpleRestResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "/rest/delivery_orders/{orderId}/cancel_booking",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "changeStatus": {
                                    "type": "boolean",
                                    "description": ""
                                },
                                "quantities": {
                                    "type": "array",
                                    "items": []
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/delivery_orders/{orderId}/cancel_booking/validate": {
            "post": {
                "summary": "Validate cancellation of the booking of an order",
                "description": "Validates cancellation of the booking of an order. The ID of the order must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/delivery_orders/{orderId}/preview": {
            "put": {
                "summary": "Get a delivery order update preview",
                "description": "Returns a delivery order preview for the given order data without updating a delivery order. The order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/multi_credit_notes/{orderId}": {
            "put": {
                "summary": "Update a multi credit note",
                "description": "Updates a multi credit note. The order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 3,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/multi_orders/{orderId}": {
            "put": {
                "summary": "Update a multi order",
                "description": "Updates a multi order. The order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 5,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/offers": {
            "post": {
                "summary": "Create an offer",
                "description": "Creates an offer.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 9,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            }
        },
        "/rest/offers/items/{orderItemId}/assign_variation": {
            "post": {
                "summary": "Change an order item of type \"unassigned variation\" to \"variation\".",
                "description": "Change an order item of type \"unassigned variation\" to \"variation\". The ID of the order item and variation ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 2,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderItemId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/offers/items/{orderItemId}/unassign_variation": {
            "post": {
                "summary": "Change an order item of type \"variation\" to \"unassigned variation\".",
                "description": "Change an order item of type \"variation\" to \"unassigned variation\". The ID of the order item must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 6,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderItemId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/offers/preview": {
            "post": {
                "summary": "Get an offer create preview.",
                "description": "Returns an offer preview for the given order data without creating an offer.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            }
        },
        "/rest/offers/{orderId}": {
            "delete": {
                "summary": "Delete an offer",
                "description": "Deletes an offer. The order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SimpleRestResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            },
            "put": {
                "summary": "Update an offer",
                "description": "Updates an offer. The order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 9,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/offers/{orderId}/preview": {
            "put": {
                "summary": "Get an offer update preview",
                "description": "Returns an offer preview for the given order data without updating an offer. The order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders": {
            "get": {
                "summary": "Search order",
                "description": "<b>DEPRECATED: Use the following route: GET /rest/orders/search</b>\nSearches for orders. The results can be restricted by using filter options.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "page": {
                                    "type": "integer",
                                    "description": "Current page of the response"
                                },
                                "totalsCount": {
                                    "type": "integer",
                                    "description": "The total number of entries in the response"
                                },
                                "isLastPage": {
                                    "type": "boolean",
                                    "description": "Flag that indicates if the page shown is the last page of the response"
                                },
                                "lastPageNumber": {
                                    "type": "integer",
                                    "description": "The last page number"
                                },
                                "firstOnPage": {
                                    "type": "integer",
                                    "description": "The index of the first item of the current page result"
                                },
                                "lastOnPage": {
                                    "type": "integer",
                                    "description": "The index of the last item of the current page result"
                                },
                                "itemsPerPage": {
                                    "type": "integer",
                                    "description": "The requested amount of items per result page"
                                },
                                "entries": {
                                    "type": "array",
                                    "description": "List of Order",
                                    "items": {
                                        "$ref": "#/definitions/Order"
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "page": 1,
                                "totalsCount": 2,
                                "isLastPage": true,
                                "entries": [
                                    {
                                        "statusName": "",
                                        "plentyId": 794,
                                        "typeId": 9,
                                        "lockStatus": "unlocked",
                                        "locationId": null,
                                        "createdAt": null,
                                        "updatedAt": null,
                                        "statusId": null,
                                        "ownerId": null,
                                        "relations": [],
                                        "properties": [
                                            {
                                                "orderId": null,
                                                "typeId": 4,
                                                "value": "unpaid"
                                            }
                                        ],
                                        "dates": [
                                            {
                                                "orderId": null,
                                                "typeId": 2,
                                                "date": null
                                            },
                                            {
                                                "orderId": null,
                                                "typeId": 4,
                                                "date": null
                                            }
                                        ]
                                    },
                                    {
                                        "statusName": "",
                                        "plentyId": 794,
                                        "typeId": 5,
                                        "lockStatus": "unlocked",
                                        "locationId": null,
                                        "createdAt": null,
                                        "updatedAt": null,
                                        "statusId": null,
                                        "ownerId": null,
                                        "relations": [],
                                        "properties": [
                                            {
                                                "orderId": null,
                                                "typeId": 4,
                                                "value": "unpaid"
                                            }
                                        ],
                                        "dates": [
                                            {
                                                "orderId": null,
                                                "typeId": 2,
                                                "date": null
                                            },
                                            {
                                                "orderId": null,
                                                "typeId": 4,
                                                "date": null
                                            }
                                        ]
                                    }
                                ],
                                "lastPageNumber": 1,
                                "firstOnPage": 1,
                                "lastOnPage": 2,
                                "itemsPerPage": 25
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderType",
                        "type": "string",
                        "required": false,
                        "description": "Filter that restricts the search result to orders of specific order types. The ID of the order types must be specified. Several order type IDs can be entered separated by commas. @see order model typeId",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "contactId",
                        "type": "integer",
                        "required": false,
                        "description": "Filter that restricts the search result to orders of a contact. The ID of the contact must be specified.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "contactData",
                        "type": "string",
                        "required": false,
                        "description": "Filter that restricts the search result to orders with a specific contact data.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "referrerId",
                        "type": "number",
                        "required": false,
                        "description": "Filter that restricts the search result to orders of a specific order referrer. The ID of the order referrer must be specified.",
                        "format": "double",
                        "in": "query"
                    },
                    {
                        "name": "shippingProfileId",
                        "type": "integer",
                        "required": false,
                        "description": "Filter that restricts the search result to orders with a specific shipping profile. The ID of shipping profile must be specified.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "shippingServiceProviderId",
                        "type": "integer",
                        "required": false,
                        "description": "Filter that restricts the search result to orders with a specific shipping service provider (like DHL, UPS, etc.). The ID of shipping service provider must be specified.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "ownerUserId",
                        "type": "integer",
                        "required": false,
                        "description": "Filter that restricts the search result to orders with a specific owner. The user ID of the owner must be specified.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "warehouseId",
                        "type": "integer",
                        "required": false,
                        "description": "Filter that restricts the search result to orders with a specific main warehouse. The ID of the warehouse must be specified.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "isEbayPlus",
                        "type": "boolean",
                        "required": false,
                        "description": "Filter that restricts the search result to orders with the referrer eBay PLUS.",
                        "format": "boolean",
                        "in": "query"
                    },
                    {
                        "name": "includedVariation",
                        "type": "integer",
                        "required": false,
                        "description": "Filter that restricts the search result to orders including a specific variation. The ID of the variation must be specified.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "includedItem",
                        "type": "integer",
                        "required": false,
                        "description": "Filter that restricts the search result to orders including a specific item. The ID of the item must be specified.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "orderIds",
                        "type": "array",
                        "required": false,
                        "description": "Filter that restricts the search result to orders with a specific ID. To list several orders, the order IDs must be enetered separated by commas.",
                        "format": "",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "countryId",
                        "type": "integer",
                        "required": false,
                        "description": "Filter that restricts the search result to orders with a specific delivery or invoice country. The ID of the country must be specified.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "orderItemName",
                        "type": "string",
                        "required": false,
                        "description": "Filter that restricts the search result to orders including a specific item name. The name of the item must be specified.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "variationNumber",
                        "type": "integer",
                        "required": false,
                        "description": "Filter that restricts the search result to orders including a specific variation number. The number of the variation must be specified.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "packageNumber",
                        "type": "string",
                        "required": false,
                        "description": "Filter that restricts the search result to orders including a specific package number. The number of the package must be specified.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "sender.contact",
                        "type": "integer",
                        "required": false,
                        "description": "Filter that restricts the search result to orders including a specific sender of the type contact. For example, the supplier is a sender of the type contact for reorders. The ID of the sender must be specified.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "sender.warehouse",
                        "type": "integer",
                        "required": false,
                        "description": "Filter that restricts the search result to orders including a specific sender of the type warehouse. For example, the sending warehouse is a sender of the type warehouse for redistributions. The ID of the sender must be specified.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "receiver.contact",
                        "type": "integer",
                        "required": false,
                        "description": "Filter that restricts the search result to orders including a specific receiver of the type contact. For example, a receiver of the type contact is the recipient of a main order. The ID of the receiver must be specified.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "receiver.warehouse",
                        "type": "integer",
                        "required": false,
                        "description": "Filter that restricts the search result to orders with a specific receiver of the type warehouse. TFor example, the receiving receiving warehouse is a receiver of the type warehouse for redistributions. The ID of the receiver must be specified.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "externalOrderId",
                        "type": "string",
                        "required": false,
                        "description": "Filter that restricts the search result to orders including a specific external order ID. The external order ID must be specified.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "clientId",
                        "type": "integer",
                        "required": false,
                        "description": "Filter that restricts the search result to orders belonging to a specific client. The ID of the client must be specified.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "paymentStatus",
                        "type": "string",
                        "required": false,
                        "description": "Filter that restricts the search result to orders with a specific payment status. Valid values are unpaid, partlyPaid, fullyPaid, overpaid. One of these values must be specified.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "updatedAtFrom",
                        "type": "string",
                        "required": false,
                        "description": "Filter that restricts the search result to orders that were last updated on a specified date. This filter can be used alone or can be combined with the UpdatedAtTo filter. The date has to be entered in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "updatedAtTo",
                        "type": "string",
                        "required": false,
                        "description": "Filter that restricts the search result to orders that were last updated within a specified period of time. This filter can be used alone or can be combined with the UpdatedAtFrom filter. The date has to be entered in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "createdAtFrom",
                        "type": "string",
                        "required": false,
                        "description": "Filter that restricts the search result to orders that were created from a specified date up to the present date. This filter can be used alone or can be combined with the CreatedAtTo filter. The date has to be entered in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "createdAtTo",
                        "type": "string",
                        "required": false,
                        "description": "Filter that restricts the search result to orders that were created within a certain period of time. This filter can be used alone or can be combined with the CreatedAtFrom filter. The date has to be entered in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "paidAtFrom",
                        "type": "string",
                        "required": false,
                        "description": "Filter that restricts the search result to orders that received a payment on the specified date. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "paidAtTo",
                        "type": "string",
                        "required": false,
                        "description": "Filter that restricts the search result to orders that received a payment within a certain period of time. This filter can be used alone or can be combined with the paidAtFrom filter. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "outgoingItemsBookedAtFrom",
                        "type": "string",
                        "required": false,
                        "description": "Filter that restricts the search result to orders where the outgoing items were booked on the specified date. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "outgoingItemsBookedAtTo",
                        "type": "string",
                        "required": false,
                        "description": "Filter that restricts the search result to orders where the outgoing items were booked within a specified period of time. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "statusFrom",
                        "type": "number",
                        "required": false,
                        "description": "Filter that restricts the search result to orders in a specific order status. The value of the order status must be specified.",
                        "format": "double",
                        "in": "query"
                    },
                    {
                        "name": "statusTo",
                        "type": "number",
                        "required": false,
                        "description": "Filter that restricts the search result to orders within a range of order statuses. This filter can be used alone or can be combined with the statusFrom filter. The value of the order status must be specified.",
                        "format": "double",
                        "in": "query"
                    },
                    {
                        "name": "hasDocument",
                        "type": "string",
                        "required": false,
                        "description": "Filter that restricts the search result to orders which hold the given document type. Valid values are <i>multi_invoice</i>, <i>multi_credit_note</i>, <i>success_confirmation</i>, <i>return_note</i>, <i>pickup_delivery</i>, <i>repair_bill</i>, <i>dunning_letter</i>, <i>offer</i>, <i>order_confirmation</i>, <i>credit_note</i>, <i>correction_document</i>, <i>delivery_note</i>, <i>invoice</i>, <i>invoice_external</i>, <i>receipt</i>",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "hasDocumentNumber",
                        "type": "string",
                        "required": false,
                        "description": "Filter that restricts the search result to orders which hold documents with given number.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "parentOrderId",
                        "type": "integer",
                        "required": false,
                        "description": "Filter that restricts the search result to orders which have the given order ID as parent.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "addOrderItems",
                        "type": "boolean",
                        "required": false,
                        "description": "Add the order items to the results. Default = true.",
                        "format": "boolean",
                        "in": "query"
                    },
                    {
                        "name": "externalItemId",
                        "type": "string",
                        "required": false,
                        "description": "Filter that restricts the search result to orders that have order items with the given external item ID.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "page",
                        "type": "integer",
                        "required": false,
                        "description": "The page to get. The default page that will be returned is page 1.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "itemsPerPage",
                        "type": "integer",
                        "required": false,
                        "description": "The number of orders to be displayed per page. The default number of orders per page is 50.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "with",
                        "type": "array",
                        "required": false,
                        "description": "Load additional relations for an order. Currently possible are:\n    <ul>\n    <li>'addresses' = The address objects that are associated with the order.</li>\n    <li>'relations' = The order relation reference instances that are associated with the order. These instances contain information such as the the reference type, the ID of the reference and the relation itself.</li>\n    <li>'comments' = The order comments.</li>\n    <li>'location' = The accounting location of the order.</li>\n    <li>'payments' = The payments that are associated with the order.</li>\n    <li>'documents' = The documents that are associated with the order.</li>\n    <li>'contactSender' = The associated contact for the contact-sender relation.</li>\n    <li>'contactReceiver' = The associated contact for the contact-receiver relation.</li>\n    <li>'warehouseSender' = The associated warehouse for the warehouse-sender relation.</li>\n    <li>'warehouseReceiver' = The associated warehouse for the warehouse-receiver relation.</li>\n    <li>'orderItems.variation' = The variation that is associated with the order item.</li>\n    <li>'orderItems.variation.propertiesV2' = The properties belonging to the variation.</li>\n    <li>'orderItems.giftCardCodes' = The gift card codes that are associated with the order item.</li>\n    <li>'orderItems.transactions' = The transactions that are associated with the order item.</li>\n    <li>'orderItems.serialNumbers' = The serial numbers that are associated with the order item.</li>\n    <li>'orderItems.variationBarcodes' = The barcodes that are associated with variation of the order item.</li>\n    <li>'orderItems.comments' = The comments that are associated with the order item.</li>\n    <li>'originOrderReferences' = The references to other orders, e.g. returns or credit notes, associated with this order.</li>\n    <li>'shippingPackages' = The shipping packages that are associated with the order.</li>\n    <li>'shippingPackages.items' = The orderPackageItems associated with the package.</li>\n    <li>'shippingInformation' = The shipping information for the order.</li>\n    <li>'paymentTerms' = The payment terms that are associated with the order.</li>\n    <li><b>deprecated</b> 'orderItems.warehouseLocations' = The warehouse locations that are associated with the order item.</li>\n    </ul>\n    Example: <code>?with[]=addresses&with[]=orderItems.variation</code>",
                        "format": "",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "type": "string",
                        "required": false,
                        "description": "Sort the result. Possible values are\n     <ul>\n        <li>'id': Sort by order ID (default)</li>\n        <li>'statusId': Sort by order status ID</li>\n        <li>'createdAt': Sort by order creation date</li>\n        <li>'orderDocument': Sort by order document number</li>\n     </ul>\n     ",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "sortOrder",
                        "type": "string",
                        "required": false,
                        "description": "Sorting behaviour. Possible values are\n     <ul>\n        <li>'asc': Sort by ascending order (default)</li>\n        <li>'desc': Sort by descending order</li>\n     </ul>\n     ",
                        "format": "string",
                        "in": "query"
                    }
                ]
            },
            "post": {
                "summary": "Create an order",
                "description": "Creates an order. The parameters included in the example below must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 8,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "coupon",
                        "type": "array",
                        "required": false,
                        "description": "One or multiple coupon code to be redeemed with order creation",
                        "format": "",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "body",
                        "name": "/rest/orders",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "typeId": {
                                    "type": "integer",
                                    "description": "The ID of the order type\n                                                          It is possible to define individual order types. However,\n                                                          the following types are available by default:\n\n* 1 = Sales order\n* 2 = Delivery\n* 3 = Returns\n* 4 = Credit note\n* 5 = Warranty\n* 6 = Repair\n* 7 = Offer\n* 8 = Advance order\n* 9 = Multi-order\n* 10 = Multi credit note\n* 11 = Multi delivery\n* 12 = Reorder\n* 13 = Partial delivery\n* 14 = Subscription\n* 15 = Redistribution"
                                },
                                "plentyId": {
                                    "type": "integer",
                                    "description": "The plenty ID of the client that the order belongs to"
                                },
                                "statusId": {
                                    "type": "number",
                                    "description": "The ID of the order status optional"
                                },
                                "ownerId": {
                                    "type": "integer",
                                    "description": "The user ID of the order's owner optional"
                                },
                                "lockStatus": {
                                    "type": "string",
                                    "description": "The lock status of the order. The following statuses are available:\n\n* unlocked\n* permanentlyLocked\n* reversibleLocked allowed values are unlocked, permanentlyLocked, reversibleLocked"
                                },
                                "orderItems": {
                                    "type": "array",
                                    "items": []
                                },
                                "properties": {
                                    "type": "array",
                                    "items": []
                                },
                                "addressRelations": {
                                    "type": "array",
                                    "items": []
                                },
                                "relations": {
                                    "type": "array",
                                    "items": []
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/orders/batch": {
            "get": {
                "summary": "Get orders",
                "description": "Gets orders. The IDs of the orders must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Collection"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderIds",
                        "type": "array",
                        "required": true,
                        "description": "The IDs of the orders.",
                        "format": "",
                        "in": "query",
                        "items": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "with",
                        "type": "array",
                        "required": false,
                        "description": "Load additional relations for an order. The following relations are available:\n     * <ul>\n    <li>'addresses' = The address objects linked to the order.</li>\n    <li>'relations' = The order relation reference instances that are associated with the order. These instances contain information such as the reference type. The available reference types are parent and reorder. The ID of the reference and the relation itself are also available.</li>\n    <li>'comments' = The order comments.</li>\n    <li>'location' = The accounting location linked to the order.</li>\n    <li>'payments' = The payments linked to the order.</li>\n    <li>'documents' = The documents linked to the order.</li>\n    <li>'contactSender' = The contact belonging the contact-sender relation.</li>\n    <li>'contactReceiver' = The contact belonging to the contact-receiver relation.</li>\n    <li>'warehouseSender' = The warehouse belonging to the warehouse-sender relation.</li>\n    <li>'warehouseReceiver' = The warehouse belonging to the warehouse-receiver relation.</li>\n    <li>'orderItems.variation' = The variation data belonging to the order item.</li>\n    <li>'orderItems.variation.propertiesV2' = The properties belonging to the variation.</li>\n    <li>'orderItems.giftCardCodes' = The gift card codes belonging to the order item.</li>\n    <li>'orderItems.transactions' = The transactions belonging to the order item.</li>\n    <li>'orderItems.serialNumbers' = The serial numbers belonging to the order item.</li>\n    <li>'orderItems.variationBarcodes' = The barcodes belonging to the order item.</li>\n    <li>'orderItems.comments' = The comments belonging to the order item.</li>\n    <li>'shippingPackages' = The shipping packages that are associated with the order.</li>\n    <li>'paymentTerms' = The payment terms that are associated with the order.</li>\n    <li><b>deprecated</b> 'orderItems.warehouseLocations' = The warehouse locations linked to the order item.</li>\n    </ul>\n    Example: <code>?with[]=addresses&with[]=orderItems.variation</code>",
                        "format": "",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "addOrderItems",
                        "type": "boolean",
                        "required": false,
                        "description": "Add the order items to the result. Default = true.",
                        "format": "boolean",
                        "in": "query"
                    }
                ]
            }
        },
        "/rest/orders/contacts/{contactId}": {
            "get": {
                "summary": "List orders of a contact",
                "description": "Lists all orders of a contact. The ID of the contact must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "page": {
                                    "type": "integer",
                                    "description": "Current page of the response"
                                },
                                "totalsCount": {
                                    "type": "integer",
                                    "description": "The total number of entries in the response"
                                },
                                "isLastPage": {
                                    "type": "boolean",
                                    "description": "Flag that indicates if the page shown is the last page of the response"
                                },
                                "lastPageNumber": {
                                    "type": "integer",
                                    "description": "The last page number"
                                },
                                "firstOnPage": {
                                    "type": "integer",
                                    "description": "The index of the first item of the current page result"
                                },
                                "lastOnPage": {
                                    "type": "integer",
                                    "description": "The index of the last item of the current page result"
                                },
                                "itemsPerPage": {
                                    "type": "integer",
                                    "description": "The requested amount of items per result page"
                                },
                                "entries": {
                                    "type": "array",
                                    "description": "List of Order",
                                    "items": {
                                        "$ref": "#/definitions/Order"
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "page": 1,
                                "totalsCount": 2,
                                "isLastPage": true,
                                "entries": [
                                    {
                                        "statusName": "",
                                        "plentyId": 794,
                                        "typeId": 7,
                                        "lockStatus": "unlocked",
                                        "locationId": null,
                                        "createdAt": null,
                                        "updatedAt": null,
                                        "statusId": null,
                                        "ownerId": null,
                                        "relations": [],
                                        "properties": [
                                            {
                                                "orderId": null,
                                                "typeId": 4,
                                                "value": "unpaid"
                                            }
                                        ],
                                        "dates": [
                                            {
                                                "orderId": null,
                                                "typeId": 2,
                                                "date": null
                                            },
                                            {
                                                "orderId": null,
                                                "typeId": 4,
                                                "date": null
                                            }
                                        ]
                                    },
                                    {
                                        "statusName": "",
                                        "plentyId": 794,
                                        "typeId": 5,
                                        "lockStatus": "unlocked",
                                        "locationId": null,
                                        "createdAt": null,
                                        "updatedAt": null,
                                        "statusId": null,
                                        "ownerId": null,
                                        "relations": [],
                                        "properties": [
                                            {
                                                "orderId": null,
                                                "typeId": 4,
                                                "value": "unpaid"
                                            }
                                        ],
                                        "dates": [
                                            {
                                                "orderId": null,
                                                "typeId": 2,
                                                "date": null
                                            },
                                            {
                                                "orderId": null,
                                                "typeId": 4,
                                                "date": null
                                            }
                                        ]
                                    }
                                ],
                                "lastPageNumber": 1,
                                "firstOnPage": 1,
                                "lastOnPage": 2,
                                "itemsPerPage": 25
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "contactId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the contact.",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "page",
                        "type": "integer",
                        "required": true,
                        "description": "The page to get. The default page that will be returned is page 1.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "itemsPerPage",
                        "type": "integer",
                        "required": true,
                        "description": "The number of orders to be displayed per page. The default number of orders per page is 50.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "with",
                        "type": "array",
                        "required": false,
                        "description": "Load additional relations for an order. The following relations are available:\n     * <ul>\n       <li>'addresses' = The address objects linked to the order.</li>\n       <li>'relations' = The order relation reference instances that are associated with the order. These instances contain information such as the reference type. The available reference types are parent and reorder. The ID of the reference and the relation itself are also available.</li>\n       <li>'comments' = The order comments.</li>\n       <li>'location' = The accounting location linked to the order.</li>\n       <li>'payments' = The payments linked to the order.</li>\n       <li>'documents' = The documents linked to the order.</li>\n       <li>'contactSender' = The contact belonging the contact-sender relation.</li>\n       <li>'contactReceiver' = The contact belonging to the contact-receiver relation.</li>\n       <li>'warehouseSender' = The warehouse belonging to the warehouse-sender relation.</li>\n       <li>'warehouseReceiver' = The warehouse belonging to the warehouse-receiver relation.</li>\n       <li>'orderItems.variation' = The variation data belonging to the order item.</li>\n       <li>'orderItems.variation.propertiesV2' = The properties belonging to the variation.</li>\n       <li>'orderItems.giftCardCodes' = The gift card codes belonging to the order item.</li>\n       <li>'orderItems.transactions' = The transactions belonging to the order item.</li>\n       <li>'orderItems.serialNumbers' = The serial numbers belonging to the order item.</li>\n       <li>'orderItems.variationBarcodes' = The barcodes belonging to the order item.</li>\n       <li>'orderItems.comments' = The comments belonging to the order item.</li>\n       <li>'shippingPackages' = The shipping packages that are associated with the order.</li>\n       <li>'paymentTerms' = The payment terms that are associated with the order.</li>\n       <li><b>deprecated</b> 'orderItems.warehouseLocations' = The warehouse locations linked to the order item.</li>\n     </ul>\n    Example: <code>?with[]=addresses&with[]=orderItems.variation</code>",
                        "format": "",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/rest/orders/contacts/{contactId}/multi_order": {
            "post": {
                "summary": "Create a multi-order",
                "description": "Creates a multi-order for a contact. The ID of the contact must be specified. Options chosen in the System » Orders » Order types » Multi-order menu are relevant for this call.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 3,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "contactId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/coupons/campaigns/codes/{code}": {
            "delete": {
                "summary": "Delete a coupon",
                "description": "Deletes a coupon by the coupon code.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SimpleRestResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "withoutUsed",
                        "type": "integer",
                        "required": false,
                        "description": "Do not delete used coupons",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "code",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            },
            "get": {
                "summary": "Get coupon code information",
                "description": "Gets coupon code information. The code must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CouponCampaignCode"
                        },
                        "examples": {
                            "application/json": {
                                "code": "t8n4c4z1",
                                "campaignId": 4,
                                "disabled": 0,
                                "consumed": 0,
                                "usedCount": 496,
                                "usedAmount": 553.31,
                                "generatedAt": "1978-09-25T11:46:46+01:00",
                                "lastUsedAt": "1982-01-10T19:20:43+01:00",
                                "consumedAt": "1988-06-05T15:45:36+02:00"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "code",
                        "type": "string",
                        "required": true,
                        "description": "The coupon code",
                        "format": "string",
                        "in": "path"
                    },
                    {
                        "name": "with",
                        "type": "string",
                        "required": false,
                        "description": "Load additional relations for a coupon code. Currently possible are:\n     * <ul>\n     *   <li>'campaign' = The coupon campaign to which this code belongs to.</li>\n     * </ul>\n     * Example: <code>?with=campaign</code>",
                        "format": "string",
                        "in": "query"
                    }
                ]
            }
        },
        "/rest/orders/coupons/campaigns/codes/{code}/disabled/{isDisabled}": {
            "put": {
                "summary": "Disable or enable coupon",
                "description": "Sets the coupon disable field.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SimpleRestResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "code",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "isDisabled",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/coupons/campaigns/{campaignId}/codes": {
            "post": {
                "summary": "Create a coupon code",
                "description": "Creates a coupon code. The ID of the campaign must be specified. A code can optionally be specified. A random code will be generated if the code is not specified. A coupon value can also be optionally specified. The value of the campaign will be used if no individual value is specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CouponCampaignCode"
                        },
                        "examples": {
                            "application/json": {
                                "code": "a6b3h3u0",
                                "campaignId": 4,
                                "disabled": 0,
                                "consumed": 1,
                                "usedCount": 762,
                                "usedAmount": 2.49,
                                "generatedAt": "2012-04-24T10:56:27+02:00",
                                "lastUsedAt": "2018-05-25T01:03:41+02:00",
                                "consumedAt": "2014-03-19T04:26:53+01:00"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "campaignId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "/rest/orders/coupons/campaigns/{campaignId}/codes",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "campaignId": {
                                    "type": "integer",
                                    "description": "The ID of the campaign that the code belongs to"
                                },
                                "code": {
                                    "type": "string",
                                    "description": "The coupon code matching to /^[a-zA-Z0-9_-]{6,32}$/"
                                },
                                "value": {
                                    "type": "number",
                                    "description": "The value of the coupon if it differs from the campaign value. The value is null if the campaign value is used."
                                },
                                "usedCount": {
                                    "type": "integer",
                                    "description": "How many times a code has been redeemed"
                                },
                                "usedAmount": {
                                    "type": "number",
                                    "description": "The amount that is already redeemed. The total amount that can be redeemed is defined in the campaign as coupon value, because the value applies to all codes of a campaign."
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/orders/coupons/codes": {
            "post": {
                "summary": "Validate multiple coupons",
                "description": "Validates if multiple coupon codes can be used for the specified items, contact ID, etc. At least one code must be specified. Only one coupon code for special offers (promotional code) can be specified. Promotional codes are validated first. Gift card codes are validated and redeemed after the promotional code to ensure that any discounts are calculated correctly.\nIf any coupon code is invalid, a CouponCodeValidation object with an exception parameter will be added to the list. If the coupon code is valid, a CouponCodeValidation object will be added to the list.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CouponCodeValidation"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "validationType": "plenty",
                                    "items": [
                                        {
                                            "amount": 418.36,
                                            "noCoupon": 0,
                                            "quantity": 4,
                                            "singlePrice": 104.59,
                                            "itemId": 708,
                                            "vatField": 0
                                        }
                                    ],
                                    "contactId": 98,
                                    "couponCode": "8N32TS",
                                    "currency": "EUR",
                                    "referrer": 58.13,
                                    "salesDiscount": -12,
                                    "salesDiscountNet": -10.084033613445378,
                                    "itemDiscount": -12,
                                    "itemDiscountNet": -10.084033613445378,
                                    "shippingDiscount": 0,
                                    "shippingDiscountNet": 0,
                                    "usedVatFields": [
                                        -12
                                    ],
                                    "restCouponAmount": 0,
                                    "checkedItems": {
                                        "708": 418.36
                                    },
                                    "validateParams": {
                                        "callFromScheduler": false,
                                        "webstoreId": 0,
                                        "shipToCountry": 1,
                                        "taxIdNumber": 19,
                                        "contactClass": 1,
                                        "contactType": 1
                                    }
                                },
                                {
                                    "validationType": "plenty",
                                    "items": [
                                        {
                                            "amount": 511.21000000000004,
                                            "noCoupon": 0,
                                            "quantity": 7,
                                            "singlePrice": 73.03,
                                            "itemId": 561,
                                            "vatField": 0
                                        }
                                    ],
                                    "contactId": 18,
                                    "couponCode": "PS6AF0",
                                    "currency": "EUR",
                                    "referrer": 69.52,
                                    "salesDiscount": -15,
                                    "salesDiscountNet": -12.605042016806724,
                                    "itemDiscount": -15,
                                    "itemDiscountNet": -12.605042016806724,
                                    "shippingDiscount": 0,
                                    "shippingDiscountNet": 0,
                                    "usedVatFields": [
                                        -15
                                    ],
                                    "restCouponAmount": 0,
                                    "checkedItems": {
                                        "561": 511.21000000000004
                                    },
                                    "validateParams": {
                                        "callFromScheduler": false,
                                        "webstoreId": 0,
                                        "shipToCountry": 1,
                                        "taxIdNumber": 19,
                                        "contactClass": 9,
                                        "contactType": 1
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "coupons",
                        "type": "array",
                        "required": true,
                        "description": "The coupons to validate.",
                        "format": "",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "callFromScheduler",
                        "type": "boolean",
                        "required": false,
                        "description": "Flag that indicates whether the validation is requested by a subscription order or not. TRUE = The validation is requested by a subscription order. FALSE = The validation is not requested by a subscription order.",
                        "format": "boolean",
                        "in": "query"
                    },
                    {
                        "name": "plentyId",
                        "type": "integer",
                        "required": true,
                        "description": "The plenty id.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "shipToCountry",
                        "type": "integer",
                        "required": true,
                        "description": "The country of delivery.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "taxIdNumber",
                        "type": "string",
                        "required": false,
                        "description": "The tax id number.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "contactClass",
                        "type": "integer",
                        "required": false,
                        "description": "The contact class.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "contactType",
                        "type": "integer",
                        "required": false,
                        "description": "The contact type.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "in": "body",
                        "name": "/rest/orders/coupons/codes",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "validationType": {
                                    "type": "string",
                                    "description": "The type of the campaign. Currently the only type available is plentymarkets. optional allowed values are plenty"
                                },
                                "items": {
                                    "type": "array",
                                    "items": []
                                },
                                "contactId": {
                                    "type": "integer",
                                    "description": "The ID of the contact that wants to redeem the coupon"
                                },
                                "currency": {
                                    "type": "string",
                                    "description": "The currency of the purchase optional"
                                },
                                "referrer": {
                                    "type": "number",
                                    "description": "The order referrer optional"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/orders/coupons/codes/contacts/{contactId}": {
            "get": {
                "summary": "List redeemed coupon codes of a contact",
                "description": "Lists the redeemed coupon codes of contact. The ID of the contact must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "page": {
                                    "type": "integer",
                                    "description": "Current page of the response"
                                },
                                "totalsCount": {
                                    "type": "integer",
                                    "description": "The total number of entries in the response"
                                },
                                "isLastPage": {
                                    "type": "boolean",
                                    "description": "Flag that indicates if the page shown is the last page of the response"
                                },
                                "lastPageNumber": {
                                    "type": "integer",
                                    "description": "The last page number"
                                },
                                "firstOnPage": {
                                    "type": "integer",
                                    "description": "The index of the first item of the current page result"
                                },
                                "lastOnPage": {
                                    "type": "integer",
                                    "description": "The index of the last item of the current page result"
                                },
                                "itemsPerPage": {
                                    "type": "integer",
                                    "description": "The requested amount of items per result page"
                                },
                                "entries": {
                                    "type": "array",
                                    "description": "List of CouponCodeContact",
                                    "items": {
                                        "$ref": "#/definitions/CouponCodeContact"
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "page": 1,
                                "totalsCount": 2,
                                "isLastPage": true,
                                "entries": [
                                    {
                                        "code": "neque",
                                        "contactId": 3,
                                        "openAmount": 285445.34,
                                        "redeemCount": 87753957,
                                        "updatedAt": "2023-07-26T16:39:36+02:00",
                                        "campaignId": 27,
                                        "externalTransactionId": 95017
                                    },
                                    {
                                        "code": "excepturi",
                                        "contactId": 8,
                                        "openAmount": 27690.33,
                                        "redeemCount": 748724,
                                        "updatedAt": "2023-07-26T16:39:36+02:00",
                                        "campaignId": 5864126,
                                        "externalTransactionId": 7317
                                    }
                                ],
                                "lastPageNumber": 1,
                                "firstOnPage": 1,
                                "lastOnPage": 2,
                                "itemsPerPage": 25
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "contactId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the contact",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "page",
                        "type": "integer",
                        "required": false,
                        "description": "The page to get. The default page that will be returned is page 1.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "itemsPerPage",
                        "type": "integer",
                        "required": false,
                        "description": "The number of coupons to be displayed per page. The default number of coupons per page is 50.",
                        "format": "integer",
                        "in": "query"
                    }
                ]
            }
        },
        "/rest/orders/coupons/codes/{coupon}": {
            "post": {
                "summary": "Validate a coupon",
                "description": "Validates if a coupon code can be used for the specified items, contact ID, etc. The code must be specified. If the coupon code is invalid, a ValidationException will be thrown. If the coupon code is valid, a CouponCodeValidation object will be returned.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CouponCodeValidation"
                        },
                        "examples": {
                            "application/json": {
                                "validationType": "plenty",
                                "items": [
                                    {
                                        "amount": 336.1,
                                        "noCoupon": 0,
                                        "quantity": 2,
                                        "singlePrice": 168.05,
                                        "itemId": 687,
                                        "vatField": 0
                                    }
                                ],
                                "contactId": 70,
                                "couponCode": "E9WCHS",
                                "currency": "EUR",
                                "referrer": 4.24,
                                "salesDiscount": -12,
                                "salesDiscountNet": -10.084033613445378,
                                "itemDiscount": -12,
                                "itemDiscountNet": -10.084033613445378,
                                "shippingDiscount": 0,
                                "shippingDiscountNet": 0,
                                "usedVatFields": [
                                    -12
                                ],
                                "restCouponAmount": 0,
                                "checkedItems": {
                                    "687": 336.1
                                },
                                "validateParams": {
                                    "callFromScheduler": false,
                                    "webstoreId": 0,
                                    "shipToCountry": 1,
                                    "taxIdNumber": 19,
                                    "contactClass": 6,
                                    "contactType": 1
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "coupon",
                        "type": "string",
                        "required": true,
                        "description": "The coupon to validate.",
                        "format": "string",
                        "in": "path"
                    },
                    {
                        "name": "callFromScheduler",
                        "type": "boolean",
                        "required": false,
                        "description": "Flag that indicates whether the validation is requested by a subscription order or not. TRUE = The validation is requested by a subscription order. FALSE = The validation is not requested by a subscription order.",
                        "format": "boolean",
                        "in": "query"
                    },
                    {
                        "name": "plentyId",
                        "type": "integer",
                        "required": true,
                        "description": "The plenty id.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "shipToCountry",
                        "type": "integer",
                        "required": true,
                        "description": "The country of delivery.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "taxIdNumber",
                        "type": "string",
                        "required": false,
                        "description": "The tax id number.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "contactClass",
                        "type": "integer",
                        "required": false,
                        "description": "The contact class.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "contactType",
                        "type": "integer",
                        "required": false,
                        "description": "The contact type.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "in": "body",
                        "name": "/rest/orders/coupons/codes/{coupon}",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "validationType": {
                                    "type": "string",
                                    "description": "The type of the campaign. Currently the only type available is plentymarkets. optional allowed values are plenty"
                                },
                                "items": {
                                    "type": "array",
                                    "items": []
                                },
                                "contactId": {
                                    "type": "integer",
                                    "description": "The ID of the contact that wants to redeem the coupon"
                                },
                                "currency": {
                                    "type": "string",
                                    "description": "The currency of the purchase optional"
                                },
                                "referrer": {
                                    "type": "number",
                                    "description": "The order referrer optional"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/orders/currencies": {
            "get": {
                "summary": "List currencies",
                "description": "List currencies supported in the system.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Currency"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "currency": "EUR",
                                    "htmlCode": "&euro;",
                                    "unicodeSign": "€",
                                    "isActive": true,
                                    "isErasable": false,
                                    "exchangeRate": 1
                                },
                                {
                                    "currency": "EUR",
                                    "htmlCode": "&euro;",
                                    "unicodeSign": "€",
                                    "isActive": true,
                                    "isErasable": false,
                                    "exchangeRate": 1
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "columns",
                        "type": "array",
                        "required": false,
                        "description": "The attributes to be loaded",
                        "format": "",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "with",
                        "type": "array",
                        "required": false,
                        "description": "The relations to be loaded. Valid relations are 'names' or 'countries'.",
                        "format": "",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/rest/orders/currencies/countries/{countryId}": {
            "get": {
                "summary": "Get a currency for a country",
                "description": "Get a currency for a country. The ID of the country must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Currency"
                        },
                        "examples": {
                            "application/json": {
                                "currency": "EUR",
                                "htmlCode": "&euro;",
                                "unicodeSign": "€",
                                "isActive": true,
                                "isErasable": false,
                                "exchangeRate": 1
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "columns",
                        "type": "array",
                        "required": false,
                        "description": "The attributes to be loaded",
                        "format": "",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "with",
                        "type": "array",
                        "required": false,
                        "description": "The relations to be loaded. Valid relations are 'names' or 'countries').",
                        "format": "",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "countryId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/currencies/exchange_rates/from/{currencyIso}": {
            "get": {
                "summary": "Get the exchange rates from a currency",
                "description": "Gets the exchange rates from a currency. The ISO 4271 code of the currency must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "currencyIso",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/currencies/exchange_rates/to/{currencyIso}": {
            "get": {
                "summary": "Get the exchange rates to a currency",
                "description": "Gets the exchange rates to a currency. The ISO 4271 code of the currency must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "currencyIso",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/currencies/{currencyIso}": {
            "get": {
                "summary": "Get a currency",
                "description": "Get a currency. The ISO 4217 code of the currency must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Currency"
                        },
                        "examples": {
                            "application/json": {
                                "currency": "EUR",
                                "htmlCode": "&euro;",
                                "unicodeSign": "€",
                                "isActive": true,
                                "isErasable": false,
                                "exchangeRate": 1
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "currencyIso",
                        "type": "string",
                        "required": true,
                        "description": "The ISO 4217 code of the currency",
                        "format": "string",
                        "in": "path"
                    },
                    {
                        "name": "columns",
                        "type": "array",
                        "required": false,
                        "description": "The attributes to be loaded",
                        "format": "",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "with",
                        "type": "array",
                        "required": false,
                        "description": "The relations to be loaded. Valid relations are 'names' or 'countries'",
                        "format": "",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/rest/orders/currencies/{currencyIso}/countries": {
            "get": {
                "summary": "List countries for a currency",
                "description": "List countries for a currency. The ISO 4271 code of the currency must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Country"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "name": "Puerto Rico",
                                    "shippingDestinationId": 187,
                                    "active": 1,
                                    "storehouseId": 46,
                                    "isoCode2": "GS",
                                    "isoCode3": "SK",
                                    "lang": "ki",
                                    "isCountryStateMandatory": false,
                                    "vatCodes": []
                                },
                                {
                                    "name": "Sri Lanka",
                                    "shippingDestinationId": 112,
                                    "active": 0,
                                    "storehouseId": 30,
                                    "isoCode2": "NF",
                                    "isoCode3": "TC",
                                    "lang": "tn",
                                    "isCountryStateMandatory": false,
                                    "vatCodes": []
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "currencyIso",
                        "type": "string",
                        "required": true,
                        "description": "The ISO 4217 code of the currency",
                        "format": "string",
                        "in": "path"
                    },
                    {
                        "name": "columns",
                        "type": "array",
                        "required": false,
                        "description": "The attributes to be loaded",
                        "format": "",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/rest/orders/currencies/{currencyIso}/exchangeRate": {
            "get": {
                "summary": "Get the exchange rate for a currency",
                "description": "Gets the exchange rate for a currency. The ISO 4271 code of the currency must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CurrencyExchangeRate"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "currencyIso",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/dates/types": {
            "get": {
                "summary": "List order date types",
                "description": "Lists all available order date types.\n<br><ul>\n<li>1 = Deleted on</li>\n<li>2 = Created on</li>\n<li>3 = Paid date</li>\n<li>4 = Last update</li>\n<li>5 = Completed on</li>\n<li>6 = Return date</li>\n<li>7 = Payment due date</li>\n<li>8 = Estimated shipping date</li>\n<li>9 = Start date</li>\n<li>10 = End date</li>\n<li>11 = Possible delivery date</li>\n<li>12 = Market transfer date</li>\n<li>13 = Subscription cancelled on</li>\n<li>14 = Subscription last run</li>\n<li>15 = Subscription next run</li>\n</ul>",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrderDateType"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            }
        },
        "/rest/orders/dates/types/{typeId}": {
            "get": {
                "summary": "Find an order date type",
                "description": "Finds an order date type. The ID of the type must be specified. The following IDs are available:\n<br><ul>\n<li>1 = Deleted on</li>\n<li>2 = Created on</li>\n<li>3 = Paid date</li>\n<li>4 = Last update</li>\n<li>5 = Completed on</li>\n<li>6 = Return date</li>\n<li>7 = Payment due date</li>\n<li>8 = Estimated shipping date</li>\n<li>9 = Start date</li>\n<li>10 = End date</li>\n<li>11 = Possible delivery date</li>\n<li>12 = Market transfer date</li>\n<li>13 = Subscription cancelled on</li>\n<li>14 = Subscription last run</li>\n<li>15 = Subscription next run</li>\n</ul>",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderDateType"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "typeId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/dates/types/{typeId}/names": {
            "get": {
                "summary": "List names of an order date type",
                "description": "Lists names in all languages available of an order date type. The ID of the date type must be specified. The following IDs are available:\n<br><ul>\n<li>1 = Deleted on</li>\n<li>2 = Created on</li>\n<li>3 = Paid date</li>\n<li>4 = Last update</li>\n<li>5 = Completed on</li>\n<li>6 = Return date</li>\n<li>7 = Payment due date</li>\n<li>8 = Estimated shipping date</li>\n<li>9 = Start date</li>\n<li>10 = End date</li>\n<li>11 = Possible delivery date</li>\n<li>12 = Market transfer date</li>\n<li>13 = Subscription cancelled on</li>\n<li>14 = Subscription last run</li>\n<li>15 = Subscription next run</li>\n</ul>",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrderDateTypeName"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "typeId": 32,
                                    "lang": "iu",
                                    "name": "impedit"
                                },
                                {
                                    "typeId": 6,
                                    "lang": "ar",
                                    "name": "modi"
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "typeId",
                        "type": "integer",
                        "required": true,
                        "description": "The Id of the OrderDateType to be found",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/dates/types/{typeId}/names/{lang}": {
            "get": {
                "summary": "Get a name of an order date type",
                "description": "Gets a name of an order date type. The ID of the date type must be specified. The language of the order date type name must be specified by setting the ISO code of the language. The following IDs are available:\n\n<br><ul>\n<li>1 = Deleted on</li>\n<li>2 = Created on</li>\n<li>3 = Paid date</li>\n<li>4 = Last update</li>\n<li>5 = Completed on</li>\n<li>6 = Return date</li>\n<li>7 = Payment due date</li>\n<li>8 = Estimated shipping date</li>\n<li>9 = Start date</li>\n<li>10 = End date</li>\n<li>11 = Possible delivery date</li>\n<li>12 = Market transfer date</li>\n<li>13 = Subscription cancelled on</li>\n<li>14 = Subscription last run</li>\n<li>15 = Subscription next run</li>\n</ul>",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderDateTypeName"
                        },
                        "examples": {
                            "application/json": {
                                "typeId": 984947,
                                "lang": "ch",
                                "name": "corporis"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "typeId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order date type that should be found",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "lang",
                        "type": "string",
                        "required": true,
                        "description": "The language of the order date type name",
                        "format": "string",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/documents/accounting_summary": {
            "get": {
                "summary": "List document accounting summaries",
                "description": "Lists document accounting summaries. A document accounting summary is saved along with each reversal document (for invoice and credit note). It contains accounting information about the order for this point in time. The summary is saved because an order can be updated after a reversal document is generated. The information about the order before the update is needed for accounting purposes.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "page": {
                                    "type": "integer",
                                    "description": "Current page of the response"
                                },
                                "totalsCount": {
                                    "type": "integer",
                                    "description": "The total number of entries in the response"
                                },
                                "isLastPage": {
                                    "type": "boolean",
                                    "description": "Flag that indicates if the page shown is the last page of the response"
                                },
                                "lastPageNumber": {
                                    "type": "integer",
                                    "description": "The last page number"
                                },
                                "firstOnPage": {
                                    "type": "integer",
                                    "description": "The index of the first item of the current page result"
                                },
                                "lastOnPage": {
                                    "type": "integer",
                                    "description": "The index of the last item of the current page result"
                                },
                                "itemsPerPage": {
                                    "type": "integer",
                                    "description": "The requested amount of items per result page"
                                },
                                "entries": {
                                    "type": "array",
                                    "description": "List of StorageObject",
                                    "items": {
                                        "$ref": "#/definitions/StorageObject"
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "orderId": 13487,
                                "methodOfPaymentId": 8,
                                "parentDocument": {
                                    "type": "invoice",
                                    "number": "RE17002140"
                                },
                                "document": {
                                    "type": "reversal_document",
                                    "number": "ST170000142",
                                    "date": "2017-07-24 00:00:00"
                                },
                                "contact": {
                                    "contactId": 29242,
                                    "bookAccount": "",
                                    "billingAddressId": 39927,
                                    "company": "",
                                    "firstName": "Max",
                                    "lastName": "Mustermann",
                                    "billingCountryISO": "DE",
                                    "deliveryCountryISO": "DE",
                                    "VATNumber": "",
                                    "deliveryAddressId": 29710,
                                    "hasEntryCertificat": false
                                },
                                "amounts": {
                                    "paidAmount": 0,
                                    "invoiceTotal": 299,
                                    "totalNet": 251.26,
                                    "totalVat": 47.74,
                                    "vat": [
                                        {
                                            "countryVatId": 1,
                                            "vatField": 0,
                                            "vatAmount": 47.74,
                                            "netAmount": 251.26,
                                            "grossAmount": 299
                                        }
                                    ]
                                },
                                "items": [
                                    {
                                        "orderItemId": 18698,
                                        "itemId": 42271,
                                        "variationId": 79079,
                                        "quantity": 1,
                                        "typeId": 1,
                                        "priceGross": 299,
                                        "priceNet": 251.26,
                                        "countryVatId": 1,
                                        "vatField": 0,
                                        "vatAmount": 47.74
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": false,
                        "description": "The ID of the order.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "documentType",
                        "type": "string",
                        "required": false,
                        "description": "The document type. The types that can be returned are the following: reversal_document (reversal document for an invoice) and reversal_refund (reversal document for an invoice).",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "createdAtFrom",
                        "type": "string",
                        "required": false,
                        "description": "Get entries with createdAt date after this date.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "createdAtTo",
                        "type": "string",
                        "required": false,
                        "description": "Get entries with createdAt date before this date.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "page",
                        "type": "integer",
                        "required": false,
                        "description": "The page to get. The default page that will be returned is page 1.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "itemsPerPage",
                        "type": "integer",
                        "required": false,
                        "description": "The number of summaries that should be displayed per page. The default number of orders per page is 10.",
                        "format": "integer",
                        "in": "query"
                    }
                ]
            }
        },
        "/rest/orders/items/dates": {
            "post": {
                "summary": "Create a date for an order item",
                "description": "<b>DEPRECATED: Use the following route: PUT /rest/orders/{orderId}</b>\nCreates a date for an order item. The ID of the order item and the order item date must be specified. Also, an array containing the order item ID, the type ID of the order item date must be set. The following order item date type IDs are available:\n\n<br><ul>\n<li>1 = Deleted on</li>\n<li>2 = Created on</li>\n<li>3 = Paid date</li>\n<li>4 = Last update</li>\n<li>5 = Completed on</li>\n<li>6 = Return date</li>\n<li>7 = Payment due date</li>\n<li>8 = Estimated shipping date</li>\n<li>9 = Start date</li>\n<li>10 = End date</li>\n<li>11 = Possible delivery date</li>\n<li>12 = Market transfer date</li>\n</ul>",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderItemDate"
                        },
                        "examples": {
                            "application/json": {
                                "orderItemId": 54262,
                                "typeId": 9,
                                "date": "1976-03-20T09:00:12+01:00",
                                "createdAt": "2023-04-07T12:18:38+02:00",
                                "updatedAt": "2023-03-18T22:06:28+01:00"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "/rest/orders/items/dates",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "orderItemId": {
                                    "type": "integer",
                                    "description": "The ID of the order item that the date belongs to optional  with typeId"
                                },
                                "typeId": {
                                    "type": "integer",
                                    "description": "The ID of the date type. The following types are available:\n\n* Start date = 9\n* End date = 10\n* Estimated delivery date = 11 optional  with orderItemId"
                                },
                                "date": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/orders/items/dates/{id}": {
            "delete": {
                "summary": "Delete a date of an order item",
                "description": "<b>DEPRECATED: Use the following route: PUT /rest/orders/{orderId}</b>\nDeletes the date of an order item. The ID of the date must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order item date",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            },
            "get": {
                "summary": "Get date of an order item",
                "description": "<b>DEPRECATED: Use the following route: GET /rest/orders/{orderId}</b>\nGets a date of an order item. The ID of the date must be specified. The following IDs are available:\n<br><ul>\n<li>1 = Deleted on</li>\n<li>2 = Created on</li>\n<li>3 = Paid date</li>\n<li>4 = Last update</li>\n<li>5 = Completed on</li>\n<li>6 = Return date</li>\n<li>7 = Payment due date</li>\n<li>8 = Estimated shipping date</li>\n<li>9 = Start date</li>\n<li>10 = End date</li>\n<li>11 = Possible delivery date</li>\n<li>12 = Market transfer date</li>\n</ul>",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderItemDate"
                        },
                        "examples": {
                            "application/json": {
                                "orderItemId": 56895,
                                "typeId": 9,
                                "date": "2011-11-28T05:29:46+01:00",
                                "createdAt": "2023-01-02T09:09:34+01:00",
                                "updatedAt": "2023-03-26T07:22:25+02:00"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order item date",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            },
            "put": {
                "summary": "Update a date of an order item",
                "description": "<b>DEPRECATED: Use the following route: PUT /rest/orders/{orderId}</b>\nUpdates a date of an order item. The ID of the date must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderItemDate"
                        },
                        "examples": {
                            "application/json": {
                                "orderItemId": 25329,
                                "typeId": 9,
                                "date": "1993-03-04T00:29:47+01:00",
                                "createdAt": "2023-06-07T06:18:37+02:00",
                                "updatedAt": "2023-01-07T21:08:34+01:00"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order item date",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "/rest/orders/items/dates/{id}",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "orderItemId": {
                                    "type": "integer",
                                    "description": "The ID of the order item that the date belongs to optional"
                                },
                                "typeId": {
                                    "type": "integer",
                                    "description": "The ID of the date type. The following types are available:\n\n* Start date = 9\n* End date = 10\n* Estimated delivery date = 11 optional"
                                },
                                "date": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/orders/items/outgoing_stocks": {
            "delete": {
                "summary": "Revert outgoing stock for order items",
                "description": "<b>DEPRECATED: Use the following route: POST /rest/{orderType}/{orderId}/cancel_booking</b>\nReverts the booking of the given order items of an order. The order items have to be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "/rest/orders/items/outgoing_stocks",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "description": "The Id of the order item to be booked back in."
                                },
                                "warehouseId": {
                                    "type": "integer",
                                    "description": "The Id of the warehouse, where the quantity should be booked back in. optional"
                                },
                                "quantity": {
                                    "type": "number",
                                    "description": "The quantity for this order item to be booked back in. optional"
                                },
                                "batch": {
                                    "type": "string",
                                    "description": "[optional] The batch for this order item, to be booked back in. optional"
                                },
                                "bestBeforeDate": {
                                    "type": "string",
                                    "description": "[optional] The best before date for this order item, to be booked back in. optional"
                                },
                                "reasonId": {
                                    "type": "integer",
                                    "description": "[optional] The Id of the reason, why the quantity for this order item should be booked back in.\nPossible values are one of the following: optional"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/orders/items/properties": {
            "post": {
                "summary": "Create order item property",
                "description": "<b>DEPRECATED: Use the following route: PUT /rest/orders/{orderId}</b>\nCreates an order item property. The request data must contain the order item ID, the order item property type ID and the value depending on the property type. The following property types are available by default:\n\n<br><ul>\n<li>1 = WAREHOUSE</li>\n<li>2 = SHIPPING_PROFILE</li>\n<li>3 = PAYMENT_METHOD</li>\n<li>11 = WEIGHT</li>\n<li>12 = WIDTH</li>\n<li>13 = LENGTH</li>\n<li>14 = HEIGHT</li>\n<li>16 = EXTERNAL_TOKEN_ID</li>\n<li>17 = EXTERNAL_ITEM_ID</li>\n<li>18 = COUPON_CODE</li>\n<li>19 = COUPON_TYPE</li>\n<li>20 = ORIGINAL_WAREHOUSE</li>\n<li>21 = ORIGINAL_QUANTITY</li>\n<li>22 = CATEGORY_ID</li>\n<li>23 = MARKET_FEE</li>\n<li>24 = STOCK_REVERSING</li>\n<li>25 = DISPUTE_STATUS</li>\n<li>26 = NO_CHANGE_BY_CONTACT</li>\n<li>29 = SIZE</li>\n<li>30 = LOCATION_RESERVED</li>\n<li>31 = EXTERNAL_SHIPMENT_ITEM_ID</li>\n<li>32 = PARTIAL_SHIPPING_COSTS</li>\n<li>33 = MAIN_DOCUMENT_NUMBER</li>\n<li>34 = SALES_TAX_ID_NUMBER</li>\n<li>35 = RETURNS_REASON</li>\n<li>36 = RETURNS_ITEM_STATUS</li>\n<li>37 = FULFILLMENT_CENTER_ID</li>\n<li>38 = FULFILLMENT_CENTER_COUNTRY_ISO</li>\n<li>39 = REORDER_ITEM_ID</li>\n<li>40 = LISTING_TYPE</li>\n<li>46 = SOLD_COUPON_CODE</li>\n<li>48 = ORDER_ITEM_STATE</li>\n</ul>",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderItemProperty"
                        },
                        "examples": {
                            "application/json": {
                                "orderItemId": 60186,
                                "typeId": 7,
                                "value": "recusandae",
                                "createdAt": "2023-02-25T07:12:03+01:00",
                                "updatedAt": "2023-06-22T03:21:20+02:00"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "/rest/orders/items/properties",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "orderItemId": {
                                    "type": "integer",
                                    "description": "The ID of the order item that the property belongs to. optional  with typeId"
                                },
                                "typeId": {
                                    "type": "integer",
                                    "description": "The ID of the property type.\n\n* WAREHOUSE\t\t              =\t1\n* SHIPPING_PROFILE\t              =\t2\n* PAYMENT_METHOD\t              =\t3\n* WEIGHT\t\t\t              =\t11\n* WIDTH\t\t\t              =\t12\n* LENGTH\t\t                  =\t13\n* HEIGHT\t      \t\t          = 14\n* EXTERNAL_TOKEN_ID              =\t16\n* EXTERNAL_ITEM_ID               =\t17\n* COUPON_CODE\t      \t          =\t18\n* COUPON_TYPE\t\t              =\t19\n* ORIGINAL_WAREHOUSE\t          =\t20\n* ORIGINAL_QUANTITY              =\t21\n* CATEGORY_ID                    = 22\n* MARKET_FEE\t\t              =\t23\n* STOCK_REVERSING\t              =\t24\n* DISPUTE_STATUS      \t          =\t25\n* NO_CHANGE_BY_CONTACT           = 26\n* SIZE \t\t\t              =\t29\n* LOCATION_RESERVED\t          =\t30\n* EXTERNAL_SHIPMENT_ITEM_ID      =\t31\n* PARTIAL_SHIPPING_COSTS         =\t32\n* MAIN_DOCUMENT_NUMBER           =\t33\n* SALES_TAX_ID_NUMBER            =\t34\n* RETURNS_REASON                 =\t35\n* RETURNS_ITEM_STATUS            =\t36\n* FULFILLMENT_CENTER_ID          = 37\n* FULFILLMENT_CENTER_COUNTRY_ISO = 38\n* REORDER_ITEM_ID                = 39\n* LISTING_TYPE                   = 40\n* SOLD_COUPON_CODE               = 46\n* ORDER_ITEM_STATE               = 48\n* SAP_ORDER_NUMBER               = 50\n* DISCOUNT                       = 52\n* REORDER_ITEM_PACKAGE_UNIT      = 53\n* REORDER_ITEM_MINIMUM_PURCHASE  = 54\n* REORDER_ITEM_DELIVERY_TIME_IN_DAYS = 55\n* REORDER_ITEM_DISCOUNTABLE      = 56\n* RETURNS_REMAINING_PERCENTAGE   = 57\n* ORDER_PROPERTY_ID              = 81\n* ORDER_PROPERTY_VALUE           = 82\n* ORDER_PROPERTY_GROUP_ID        = 83\n* WEEE_PICK_UP = 92 optional  with orderItemId"
                                },
                                "value": {
                                    "type": "string",
                                    "description": "The value of the property. The value depends on type."
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/orders/items/properties/{id}": {
            "delete": {
                "summary": "Delete order item property",
                "description": "<b>DEPRECATED: Use the following route: PUT /rest/orders/{orderId}</b>\nDeletes an order item property. The ID of the order item property must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order item property.",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            },
            "get": {
                "summary": "Get order item property",
                "description": "Gets an order item property. The ID of the order item property must be specified.\n<b>DEPRECATED: Use the following route: GET /rest/orders/{orderId}</b>",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderItemProperty"
                        },
                        "examples": {
                            "application/json": {
                                "orderItemId": 18542,
                                "typeId": 11,
                                "value": "dolores",
                                "createdAt": "2023-04-28T23:44:16+02:00",
                                "updatedAt": "2023-06-22T19:46:12+02:00"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order item property.",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            },
            "put": {
                "summary": "Update order item property",
                "description": "<b>DEPRECATED: Use the following route: PUT /rest/orders/{orderId}</b>\nUpdates an order item property. The ID of the order item property must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderItemProperty"
                        },
                        "examples": {
                            "application/json": {
                                "orderItemId": 29730,
                                "typeId": 6,
                                "value": "itaque",
                                "createdAt": "2023-03-20T20:53:15+01:00",
                                "updatedAt": "2023-06-24T12:19:06+02:00"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order item property instance to be updated.",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "/rest/orders/items/properties/{id}",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "orderItemId": {
                                    "type": "integer",
                                    "description": "The ID of the order item that the property belongs to. optional"
                                },
                                "typeId": {
                                    "type": "integer",
                                    "description": "The ID of the property type.\n\n* WAREHOUSE\t\t              =\t1\n* SHIPPING_PROFILE\t              =\t2\n* PAYMENT_METHOD\t              =\t3\n* WEIGHT\t\t\t              =\t11\n* WIDTH\t\t\t              =\t12\n* LENGTH\t\t                  =\t13\n* HEIGHT\t      \t\t          = 14\n* EXTERNAL_TOKEN_ID              =\t16\n* EXTERNAL_ITEM_ID               =\t17\n* COUPON_CODE\t      \t          =\t18\n* COUPON_TYPE\t\t              =\t19\n* ORIGINAL_WAREHOUSE\t          =\t20\n* ORIGINAL_QUANTITY              =\t21\n* CATEGORY_ID                    = 22\n* MARKET_FEE\t\t              =\t23\n* STOCK_REVERSING\t              =\t24\n* DISPUTE_STATUS      \t          =\t25\n* NO_CHANGE_BY_CONTACT           = 26\n* SIZE \t\t\t              =\t29\n* LOCATION_RESERVED\t          =\t30\n* EXTERNAL_SHIPMENT_ITEM_ID      =\t31\n* PARTIAL_SHIPPING_COSTS         =\t32\n* MAIN_DOCUMENT_NUMBER           =\t33\n* SALES_TAX_ID_NUMBER            =\t34\n* RETURNS_REASON                 =\t35\n* RETURNS_ITEM_STATUS            =\t36\n* FULFILLMENT_CENTER_ID          = 37\n* FULFILLMENT_CENTER_COUNTRY_ISO = 38\n* REORDER_ITEM_ID                = 39\n* LISTING_TYPE                   = 40\n* SOLD_COUPON_CODE               = 46\n* ORDER_ITEM_STATE               = 48\n* SAP_ORDER_NUMBER               = 50\n* DISCOUNT                       = 52\n* REORDER_ITEM_PACKAGE_UNIT      = 53\n* REORDER_ITEM_MINIMUM_PURCHASE  = 54\n* REORDER_ITEM_DELIVERY_TIME_IN_DAYS = 55\n* REORDER_ITEM_DISCOUNTABLE      = 56\n* RETURNS_REMAINING_PERCENTAGE   = 57\n* ORDER_PROPERTY_ID              = 81\n* ORDER_PROPERTY_VALUE           = 82\n* ORDER_PROPERTY_GROUP_ID        = 83\n* WEEE_PICK_UP = 92 optional"
                                },
                                "value": {
                                    "type": "string",
                                    "description": "The value of the property. The value depends on type."
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/orders/items/transactions": {
            "get": {
                "summary": "Search order item transactions",
                "description": "Searches for order item transactions by filter parameters.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "page": {
                                    "type": "integer",
                                    "description": "Current page of the response"
                                },
                                "totalsCount": {
                                    "type": "integer",
                                    "description": "The total number of entries in the response"
                                },
                                "isLastPage": {
                                    "type": "boolean",
                                    "description": "Flag that indicates if the page shown is the last page of the response"
                                },
                                "lastPageNumber": {
                                    "type": "integer",
                                    "description": "The last page number"
                                },
                                "firstOnPage": {
                                    "type": "integer",
                                    "description": "The index of the first item of the current page result"
                                },
                                "lastOnPage": {
                                    "type": "integer",
                                    "description": "The index of the last item of the current page result"
                                },
                                "itemsPerPage": {
                                    "type": "integer",
                                    "description": "The requested amount of items per result page"
                                },
                                "entries": {
                                    "type": "array",
                                    "description": "List of OrderItemTransaction",
                                    "items": {
                                        "$ref": "#/definitions/OrderItemTransaction"
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "page": 1,
                                "totalsCount": 2,
                                "isLastPage": true,
                                "entries": [
                                    {
                                        "orderItemId": 440,
                                        "quantity": 44.35,
                                        "userId": 57,
                                        "identification": "rem",
                                        "direction": "in",
                                        "status": "cancelled",
                                        "warehouseLocationId": 95,
                                        "batch": "alias",
                                        "bestBeforeDate": "2008-02-11",
                                        "createdAt": "2023-07-04T03:57:26+02:00",
                                        "updatedAt": "2023-07-13T20:18:25+02:00"
                                    },
                                    {
                                        "orderItemId": 337,
                                        "quantity": 52.3,
                                        "userId": 60,
                                        "identification": "autem",
                                        "direction": "in",
                                        "status": "cancelled",
                                        "warehouseLocationId": 416,
                                        "batch": "autem",
                                        "bestBeforeDate": "2012-06-06",
                                        "createdAt": "2023-06-28T16:57:32+02:00",
                                        "updatedAt": "2023-07-08T00:59:22+02:00"
                                    }
                                ],
                                "lastPageNumber": 1,
                                "firstOnPage": 1,
                                "lastOnPage": 2,
                                "itemsPerPage": 25
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "type": "integer",
                        "required": false,
                        "description": "The page to get. The default page that will be returned is page 1.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "itemsPerPage",
                        "type": "integer",
                        "required": false,
                        "description": "The number of orders to be displayed per page. The default number of orders per page is 50.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "columns",
                        "type": "array",
                        "required": false,
                        "description": "Specifies the properties of the order item transactions to be loaded.",
                        "format": "",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "with",
                        "type": "array",
                        "required": false,
                        "description": "Loads additional relations of the order item transactions. The available relations are 'orderItem' and 'warehouseLocation'.",
                        "format": "",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "type": "string",
                        "required": false,
                        "description": "Sort search result according to createdAt, updatedAt, orderItemId, receiptId or quantity. The default value is orderItemId.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "sortOrder",
                        "type": "string",
                        "required": false,
                        "description": "Sort direction desc or asc. The default value is asc.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "orderItemId",
                        "type": "integer",
                        "required": false,
                        "description": "The ID of the order item",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": false,
                        "description": "The ID of the order",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "direction",
                        "type": "string",
                        "required": false,
                        "description": "The direction of the order item transactions",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "status",
                        "type": "string",
                        "required": false,
                        "description": "The status of the order item transactions ('in' for incoming or 'out' for outgoing)",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "isBooked",
                        "type": "boolean",
                        "required": false,
                        "description": "Returns all booked order item transactions.",
                        "format": "boolean",
                        "in": "query"
                    }
                ]
            }
        },
        "/rest/orders/items/transactions/booking": {
            "post": {
                "summary": "Book order item transactions",
                "description": "Books order item transactions. Transactions are order item movements. These are incoming and outgoing items. The IDs of the order item transactions must be specified. To get the transactions first, use the <a href=\"#/Order/get_rest_orders_items_transactions\">Search transactions</a> call.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderBooking"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "transactionIds",
                        "type": "array",
                        "required": true,
                        "description": "The IDs of the order item transactions.",
                        "format": "",
                        "in": "query",
                        "items": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "deliveryNoteNumber",
                        "type": "string",
                        "required": false,
                        "description": "If desired, set a delivery note number. The delivery note number has to match the type of order item transaction. For incoming items, set an external delivery note number. For outgoing items, set an external or an internal delivery note number.",
                        "format": "string",
                        "in": "query"
                    }
                ]
            }
        },
        "/rest/orders/items/transactions/{transactionId}": {
            "delete": {
                "summary": "Delete order item transaction",
                "description": "Deletes an order item transaction. Transactions are order item movements. These are incoming and outgoing items. The ID of the transaction must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DeleteResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "transactionId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            },
            "put": {
                "summary": "Update order item transaction",
                "description": "Updates an order item transaction. Transactions are order item movements. These are incoming and outgoing items.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderItemTransaction"
                        },
                        "examples": {
                            "application/json": {
                                "orderItemId": 182,
                                "quantity": 40.5,
                                "userId": 12,
                                "identification": "voluptas",
                                "direction": "out",
                                "status": "cancelled",
                                "warehouseLocationId": 976,
                                "batch": "est",
                                "bestBeforeDate": "2004-01-15",
                                "createdAt": "2023-07-02T13:20:25+02:00",
                                "updatedAt": "2023-07-10T04:18:02+02:00"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "transactionId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "/rest/orders/items/transactions/{transactionId}",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "warehouseLocationId": {
                                    "type": "integer",
                                    "description": "The ID of the warehouse location"
                                },
                                "batch": {
                                    "type": "string",
                                    "description": "The batch"
                                },
                                "bestBeforeDate": {
                                    "type": "string",
                                    "description": "The best before date"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/orders/items/{orderItemId}/booking": {
            "post": {
                "summary": "Book an order item in",
                "description": "Books an order item in. The ID of the order item must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderBooking"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderItemId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order item.",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "deliveryNoteNumber",
                        "type": "string",
                        "required": false,
                        "description": "If desired, set the delivery note number provided by the supplier.",
                        "format": "string",
                        "in": "query"
                    }
                ]
            }
        },
        "/rest/orders/items/{orderItemId}/dates": {
            "get": {
                "summary": "List all dates of an order item",
                "description": "<b>DEPRECATED: Use the following route: GET /rest/orders/{orderId}</b>\nLists all dates of an order item. The ID of the order item must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrderItemDate"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "orderItemId": 23225,
                                    "typeId": 9,
                                    "date": "1987-03-15T05:32:07+01:00",
                                    "createdAt": "2023-07-20T12:39:23+02:00",
                                    "updatedAt": "2023-05-18T17:23:43+02:00"
                                },
                                {
                                    "orderItemId": 29643,
                                    "typeId": 9,
                                    "date": "1994-09-09T17:51:17+02:00",
                                    "createdAt": "2023-05-13T06:29:04+02:00",
                                    "updatedAt": "2023-05-05T00:40:28+02:00"
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderItemId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order item",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/items/{orderItemId}/dates/{typeId}": {
            "delete": {
                "summary": "Delete a date of an order item by order item and date type",
                "description": "<b>DEPRECATED: Use the following route: PUT /rest/orders/{orderId}</b>\nDeletes a date of an order item. The ID of the order item and the ID of the date type must be specified. The following order item date type IDs are available:\n\n<br><ul>\n<li>1 = Deleted on</li>\n<li>2 = Created on</li>\n<li>3 = Paid date</li>\n<li>4 = Last update</li>\n<li>5 = Completed on</li>\n<li>6 = Return date</li>\n<li>7 = Payment due date</li>\n<li>8 = Estimated shipping date</li>\n<li>9 = Start date</li>\n<li>10 = End date</li>\n<li>11 = Possible delivery date</li>\n<li>12 = Market transfer date</li>\n</ul>",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderItemId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order item",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "typeId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order date",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            },
            "get": {
                "summary": "Get a date of an order item by order item and date type",
                "description": "<b>DEPRECATED: Use the following route: GET /rest/orders/{orderId}</b>\nGets a date of an order item. The ID of the order item and the ID of the date type must be specified.\n<br><ul>\n<li>1 = Deleted on</li>\n<li>2 = Created on</li>\n<li>3 = Paid date</li>\n<li>4 = Last update</li>\n<li>5 = Completed on</li>\n<li>6 = Return date</li>\n<li>7 = Payment due date</li>\n<li>8 = Estimated shipping date</li>\n<li>9 = Start date</li>\n<li>10 = End date</li>\n<li>11 = Possible delivery date</li>\n<li>12 = Market transfer date</li>\n</ul>",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderItemDate"
                        },
                        "examples": {
                            "application/json": {
                                "orderItemId": 33072,
                                "typeId": 9,
                                "date": "1998-05-04T22:05:14+02:00",
                                "createdAt": "2023-01-25T05:42:47+01:00",
                                "updatedAt": "2023-07-03T08:12:43+02:00"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderItemId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order item",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "typeId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order date type",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            },
            "post": {
                "summary": "Create a date for an order item by order item and date type",
                "description": "<b>DEPRECATED: Use the following route: PUT /rest/orders/{orderId}</b>\nCreates a date for an order item. The ID of the order item and the ID of the date type must be specified. The following order item date type IDs are available:\n\n<br><ul>\n<li>1 = Deleted on</li>\n<li>2 = Created on</li>\n<li>3 = Paid date</li>\n<li>4 = Last update</li>\n<li>5 = Completed on</li>\n<li>6 = Return date</li>\n<li>7 = Payment due date</li>\n<li>8 = Estimated shipping date</li>\n<li>9 = Start date</li>\n<li>10 = End date</li>\n<li>11 = Possible delivery date</li>\n<li>12 = Market transfer date</li>\n</ul>",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderItemDate"
                        },
                        "examples": {
                            "application/json": {
                                "orderItemId": 42277,
                                "typeId": 9,
                                "date": "1984-09-21T00:45:51+02:00",
                                "createdAt": "2023-03-02T23:29:20+01:00",
                                "updatedAt": "2023-05-27T11:13:59+02:00"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderItemId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order item",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "typeId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order date type",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "/rest/orders/items/{orderItemId}/dates/{typeId}",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "orderItemId": {
                                    "type": "integer",
                                    "description": "The ID of the order item that the date belongs to optional  with typeId"
                                },
                                "typeId": {
                                    "type": "integer",
                                    "description": "The ID of the date type. The following types are available:\n\n* Start date = 9\n* End date = 10\n* Estimated delivery date = 11 optional  with orderItemId"
                                },
                                "date": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ]
            },
            "put": {
                "summary": "Update a date of an order item by order item and date type",
                "description": "<b>DEPRECATED: Use the following route: PUT /rest/orders/{orderId}</b>\nUpdates the date of an order item. The ID of the order item and the ID of the date type must be specified. The following order item date type IDs are available:\n\n<br><ul>\n<li>1 = Deleted on</li>\n<li>2 = Created on</li>\n<li>3 = Paid date</li>\n<li>4 = Last update</li>\n<li>5 = Completed on</li>\n<li>6 = Return date</li>\n<li>7 = Payment due date</li>\n<li>8 = Estimated shipping date</li>\n<li>9 = Start date</li>\n<li>10 = End date</li>\n<li>11 = Possible delivery date</li>\n<li>12 = Market transfer date</li>\n</ul>",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderItemDate"
                        },
                        "examples": {
                            "application/json": {
                                "orderItemId": 43197,
                                "typeId": 10,
                                "date": "2003-01-09T06:46:35+01:00",
                                "createdAt": "2023-06-23T15:35:46+02:00",
                                "updatedAt": "2023-07-11T07:50:25+02:00"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderItemId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order item",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "typeId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order date type",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "/rest/orders/items/{orderItemId}/dates/{typeId}",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "orderItemId": {
                                    "type": "integer",
                                    "description": "The ID of the order item that the date belongs to optional"
                                },
                                "typeId": {
                                    "type": "integer",
                                    "description": "The ID of the date type. The following types are available:\n\n* Start date = 9\n* End date = 10\n* Estimated delivery date = 11 optional"
                                },
                                "date": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/orders/items/{orderItemId}/properties": {
            "get": {
                "summary": "Get all order item properties",
                "description": "<b>DEPRECATED: Use the following route: GET /rest/orders/{orderId}</b>\nGets all order item properties for one order item. The order item ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrderItemProperty"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "orderItemId": 55215,
                                    "typeId": 1,
                                    "value": "minima",
                                    "createdAt": "2023-05-07T03:20:39+02:00",
                                    "updatedAt": "2023-02-25T13:52:54+01:00"
                                },
                                {
                                    "orderItemId": 27225,
                                    "typeId": 17,
                                    "value": "quis",
                                    "createdAt": "2023-02-16T03:14:46+01:00",
                                    "updatedAt": "2023-01-30T14:59:37+01:00"
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderItemId",
                        "type": "integer",
                        "required": true,
                        "description": "The order item ID.",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/items/{orderItemId}/properties/{typeId}": {
            "delete": {
                "summary": "Delete order item property",
                "description": "<b>DEPRECATED: Use the following route: PUT /rest/orders/{orderId}</b>\nDeletes an order item property. The order item ID and the order item property type ID must be specified. The following property types are available by default:\n\n<br><ul>\n<li>1 = WAREHOUSE</li>\n<li>2 = SHIPPING_PROFILE</li>\n<li>3 = PAYMENT_METHOD</li>\n<li>11 = WEIGHT</li>\n<li>12 = WIDTH</li>\n<li>13 = LENGTH</li>\n<li>14 = HEIGHT</li>\n<li>16 = EXTERNAL_TOKEN_ID</li>\n<li>17 = EXTERNAL_ITEM_ID</li>\n<li>18 = COUPON_CODE</li>\n<li>19 = COUPON_TYPE</li>\n<li>20 = ORIGINAL_WAREHOUSE</li>\n<li>21 = ORIGINAL_QUANTITY</li>\n<li>22 = CATEGORY_ID</li>\n<li>23 = MARKET_FEE</li>\n<li>24 = STOCK_REVERSING</li>\n<li>25 = DISPUTE_STATUS</li>\n<li>26 = NO_CHANGE_BY_CONTACT</li>\n<li>29 = SIZE</li>\n<li>30 = LOCATION_RESERVED</li>\n<li>31 = EXTERNAL_SHIPMENT_ITEM_ID</li>\n<li>32 = PARTIAL_SHIPPING_COSTS</li>\n<li>33 = MAIN_DOCUMENT_NUMBER</li>\n<li>34 = SALES_TAX_ID_NUMBER</li>\n<li>35 = RETURNS_REASON</li>\n<li>36 = RETURNS_ITEM_STATUS</li>\n<li>37 = FULFILLMENT_CENTER_ID</li>\n<li>38 = FULFILLMENT_CENTER_COUNTRY_ISO</li>\n<li>39 = REORDER_ITEM_ID</li>\n<li>40 = LISTING_TYPE</li>\n<li>46 = SOLD_COUPON_CODE</li>\n<li>48 = ORDER_ITEM_STATE</li>\n</ul>",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderItemId",
                        "type": "integer",
                        "required": true,
                        "description": "The order item ID.",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "typeId",
                        "type": "integer",
                        "required": true,
                        "description": "The order item property type ID.",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            },
            "get": {
                "summary": "Get order item property",
                "description": "<b>DEPRECATED: Use the following route: GET /rest/orders/{orderId}</b>\nGets an order item property. The order item ID and the order item property type ID must be specified. The following property types are available by default:\n\n<br><ul>\n<li>1 = WAREHOUSE</li>\n<li>2 = SHIPPING_PROFILE</li>\n<li>3 = PAYMENT_METHOD</li>\n<li>11 = WEIGHT</li>\n<li>12 = WIDTH</li>\n<li>13 = LENGTH</li>\n<li>14 = HEIGHT</li>\n<li>16 = EXTERNAL_TOKEN_ID</li>\n<li>17 = EXTERNAL_ITEM_ID</li>\n<li>18 = COUPON_CODE</li>\n<li>19 = COUPON_TYPE</li>\n<li>20 = ORIGINAL_WAREHOUSE</li>\n<li>21 = ORIGINAL_QUANTITY</li>\n<li>22 = CATEGORY_ID</li>\n<li>23 = MARKET_FEE</li>\n<li>24 = STOCK_REVERSING</li>\n<li>25 = DISPUTE_STATUS</li>\n<li>26 = NO_CHANGE_BY_CONTACT</li>\n<li>29 = SIZE</li>\n<li>30 = LOCATION_RESERVED</li>\n<li>31 = EXTERNAL_SHIPMENT_ITEM_ID</li>\n<li>32 = PARTIAL_SHIPPING_COSTS</li>\n<li>33 = MAIN_DOCUMENT_NUMBER</li>\n<li>34 = SALES_TAX_ID_NUMBER</li>\n<li>35 = RETURNS_REASON</li>\n<li>36 = RETURNS_ITEM_STATUS</li>\n<li>37 = FULFILLMENT_CENTER_ID</li>\n<li>38 = FULFILLMENT_CENTER_COUNTRY_ISO</li>\n<li>39 = REORDER_ITEM_ID</li>\n<li>40 = LISTING_TYPE</li>\n<li>46 = SOLD_COUPON_CODE</li>\n<li>48 = ORDER_ITEM_STATE</li>\n</ul>",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderItemProperty"
                        },
                        "examples": {
                            "application/json": {
                                "orderItemId": 24877,
                                "typeId": 14,
                                "value": "sit",
                                "createdAt": "2023-05-31T22:07:14+02:00",
                                "updatedAt": "2023-07-05T06:21:30+02:00"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderItemId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order item.",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "typeId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order item property type.",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            },
            "post": {
                "summary": "Create order item property",
                "description": "<b>DEPRECATED: Use the following route: PUT /rest/orders/{orderId}</b>\nCreates an order item property. The order item ID and the order item property type ID must be specified. The following properties are available by default:\n\n<br><ul>\n<li>1 = WAREHOUSE</li>\n<li>2 = SHIPPING_PROFILE</li>\n<li>3 = PAYMENT_METHOD</li>\n<li>11 = WEIGHT</li>\n<li>12 = WIDTH</li>\n<li>13 = LENGTH</li>\n<li>14 = HEIGHT</li>\n<li>16 = EXTERNAL_TOKEN_ID</li>\n<li>17 = EXTERNAL_ITEM_ID</li>\n<li>18 = COUPON_CODE</li>\n<li>19 = COUPON_TYPE</li>\n<li>20 = ORIGINAL_WAREHOUSE</li>\n<li>21 = ORIGINAL_QUANTITY</li>\n<li>22 = CATEGORY_ID</li>\n<li>23 = MARKET_FEE</li>\n<li>24 = STOCK_REVERSING</li>\n<li>25 = DISPUTE_STATUS</li>\n<li>26 = NO_CHANGE_BY_CONTACT</li>\n<li>29 = SIZE</li>\n<li>30 = LOCATION_RESERVED</li>\n<li>31 = EXTERNAL_SHIPMENT_ITEM_ID</li>\n<li>32 = PARTIAL_SHIPPING_COSTS</li>\n<li>33 = MAIN_DOCUMENT_NUMBER</li>\n<li>34 = SALES_TAX_ID_NUMBER</li>\n<li>35 = RETURNS_REASON</li>\n<li>36 = RETURNS_ITEM_STATUS</li>\n<li>37 = FULFILLMENT_CENTER_ID</li>\n<li>38 = FULFILLMENT_CENTER_COUNTRY_ISO</li>\n<li>39 = REORDER_ITEM_ID</li>\n<li>40 = LISTING_TYPE</li>\n<li>46 = SOLD_COUPON_CODE</li>\n<li>48 = ORDER_ITEM_STATE</li>\n</ul>",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderItemProperty"
                        },
                        "examples": {
                            "application/json": {
                                "orderItemId": 62767,
                                "typeId": 7,
                                "value": "ipsam",
                                "createdAt": "2023-05-14T23:41:49+02:00",
                                "updatedAt": "2023-01-24T19:35:05+01:00"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderItemId",
                        "type": "integer",
                        "required": true,
                        "description": "The order item ID.",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "typeId",
                        "type": "integer",
                        "required": true,
                        "description": "The order item property type ID.",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "/rest/orders/items/{orderItemId}/properties/{typeId}",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "orderItemId": {
                                    "type": "integer",
                                    "description": "The ID of the order item that the property belongs to. optional  with typeId"
                                },
                                "typeId": {
                                    "type": "integer",
                                    "description": "The ID of the property type.\n\n* WAREHOUSE\t\t              =\t1\n* SHIPPING_PROFILE\t              =\t2\n* PAYMENT_METHOD\t              =\t3\n* WEIGHT\t\t\t              =\t11\n* WIDTH\t\t\t              =\t12\n* LENGTH\t\t                  =\t13\n* HEIGHT\t      \t\t          = 14\n* EXTERNAL_TOKEN_ID              =\t16\n* EXTERNAL_ITEM_ID               =\t17\n* COUPON_CODE\t      \t          =\t18\n* COUPON_TYPE\t\t              =\t19\n* ORIGINAL_WAREHOUSE\t          =\t20\n* ORIGINAL_QUANTITY              =\t21\n* CATEGORY_ID                    = 22\n* MARKET_FEE\t\t              =\t23\n* STOCK_REVERSING\t              =\t24\n* DISPUTE_STATUS      \t          =\t25\n* NO_CHANGE_BY_CONTACT           = 26\n* SIZE \t\t\t              =\t29\n* LOCATION_RESERVED\t          =\t30\n* EXTERNAL_SHIPMENT_ITEM_ID      =\t31\n* PARTIAL_SHIPPING_COSTS         =\t32\n* MAIN_DOCUMENT_NUMBER           =\t33\n* SALES_TAX_ID_NUMBER            =\t34\n* RETURNS_REASON                 =\t35\n* RETURNS_ITEM_STATUS            =\t36\n* FULFILLMENT_CENTER_ID          = 37\n* FULFILLMENT_CENTER_COUNTRY_ISO = 38\n* REORDER_ITEM_ID                = 39\n* LISTING_TYPE                   = 40\n* SOLD_COUPON_CODE               = 46\n* ORDER_ITEM_STATE               = 48\n* SAP_ORDER_NUMBER               = 50\n* DISCOUNT                       = 52\n* REORDER_ITEM_PACKAGE_UNIT      = 53\n* REORDER_ITEM_MINIMUM_PURCHASE  = 54\n* REORDER_ITEM_DELIVERY_TIME_IN_DAYS = 55\n* REORDER_ITEM_DISCOUNTABLE      = 56\n* RETURNS_REMAINING_PERCENTAGE   = 57\n* ORDER_PROPERTY_ID              = 81\n* ORDER_PROPERTY_VALUE           = 82\n* ORDER_PROPERTY_GROUP_ID        = 83\n* WEEE_PICK_UP = 92 optional  with orderItemId"
                                },
                                "value": {
                                    "type": "string",
                                    "description": "The value of the property. The value depends on type."
                                }
                            }
                        }
                    }
                ]
            },
            "put": {
                "summary": "Update order item property",
                "description": "<b>DEPRECATED: Use the following route: PUT /rest/orders/{orderId}</b>\nUpdates an order item property. The order item ID and the order item property type ID must be specified. The following property types are available by default:\n\n<br><ul>\n<li>1 = WAREHOUSE</li>\n<li>2 = SHIPPING_PROFILE</li>\n<li>3 = PAYMENT_METHOD</li>\n<li>11 = WEIGHT</li>\n<li>12 = WIDTH</li>\n<li>13 = LENGTH</li>\n<li>14 = HEIGHT</li>\n<li>16 = EXTERNAL_TOKEN_ID</li>\n<li>17 = EXTERNAL_ITEM_ID</li>\n<li>18 = COUPON_CODE</li>\n<li>19 = COUPON_TYPE</li>\n<li>20 = ORIGINAL_WAREHOUSE</li>\n<li>21 = ORIGINAL_QUANTITY</li>\n<li>22 = CATEGORY_ID</li>\n<li>23 = MARKET_FEE</li>\n<li>24 = STOCK_REVERSING</li>\n<li>25 = DISPUTE_STATUS</li>\n<li>26 = NO_CHANGE_BY_CONTACT</li>\n<li>29 = SIZE</li>\n<li>30 = LOCATION_RESERVED</li>\n<li>31 = EXTERNAL_SHIPMENT_ITEM_ID</li>\n<li>32 = PARTIAL_SHIPPING_COSTS</li>\n<li>33 = MAIN_DOCUMENT_NUMBER</li>\n<li>34 = SALES_TAX_ID_NUMBER</li>\n<li>35 = RETURNS_REASON</li>\n<li>36 = RETURNS_ITEM_STATUS</li>\n<li>37 = FULFILLMENT_CENTER_ID</li>\n<li>38 = FULFILLMENT_CENTER_COUNTRY_ISO</li>\n<li>39 = REORDER_ITEM_ID</li>\n<li>40 = LISTING_TYPE</li>\n<li>46 = SOLD_COUPON_CODE</li>\n<li>48 = ORDER_ITEM_STATE</li>\n</ul>",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderItemProperty"
                        },
                        "examples": {
                            "application/json": {
                                "orderItemId": 38507,
                                "typeId": 5,
                                "value": "dicta",
                                "createdAt": "2023-03-03T02:44:26+01:00",
                                "updatedAt": "2023-03-29T19:30:53+02:00"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderItemId",
                        "type": "integer",
                        "required": true,
                        "description": "The order item ID.",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "typeId",
                        "type": "integer",
                        "required": true,
                        "description": "The order item property type ID.",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "/rest/orders/items/{orderItemId}/properties/{typeId}",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "orderItemId": {
                                    "type": "integer",
                                    "description": "The ID of the order item that the property belongs to. optional"
                                },
                                "typeId": {
                                    "type": "integer",
                                    "description": "The ID of the property type.\n\n* WAREHOUSE\t\t              =\t1\n* SHIPPING_PROFILE\t              =\t2\n* PAYMENT_METHOD\t              =\t3\n* WEIGHT\t\t\t              =\t11\n* WIDTH\t\t\t              =\t12\n* LENGTH\t\t                  =\t13\n* HEIGHT\t      \t\t          = 14\n* EXTERNAL_TOKEN_ID              =\t16\n* EXTERNAL_ITEM_ID               =\t17\n* COUPON_CODE\t      \t          =\t18\n* COUPON_TYPE\t\t              =\t19\n* ORIGINAL_WAREHOUSE\t          =\t20\n* ORIGINAL_QUANTITY              =\t21\n* CATEGORY_ID                    = 22\n* MARKET_FEE\t\t              =\t23\n* STOCK_REVERSING\t              =\t24\n* DISPUTE_STATUS      \t          =\t25\n* NO_CHANGE_BY_CONTACT           = 26\n* SIZE \t\t\t              =\t29\n* LOCATION_RESERVED\t          =\t30\n* EXTERNAL_SHIPMENT_ITEM_ID      =\t31\n* PARTIAL_SHIPPING_COSTS         =\t32\n* MAIN_DOCUMENT_NUMBER           =\t33\n* SALES_TAX_ID_NUMBER            =\t34\n* RETURNS_REASON                 =\t35\n* RETURNS_ITEM_STATUS            =\t36\n* FULFILLMENT_CENTER_ID          = 37\n* FULFILLMENT_CENTER_COUNTRY_ISO = 38\n* REORDER_ITEM_ID                = 39\n* LISTING_TYPE                   = 40\n* SOLD_COUPON_CODE               = 46\n* ORDER_ITEM_STATE               = 48\n* SAP_ORDER_NUMBER               = 50\n* DISCOUNT                       = 52\n* REORDER_ITEM_PACKAGE_UNIT      = 53\n* REORDER_ITEM_MINIMUM_PURCHASE  = 54\n* REORDER_ITEM_DELIVERY_TIME_IN_DAYS = 55\n* REORDER_ITEM_DISCOUNTABLE      = 56\n* RETURNS_REMAINING_PERCENTAGE   = 57\n* ORDER_PROPERTY_ID              = 81\n* ORDER_PROPERTY_VALUE           = 82\n* ORDER_PROPERTY_GROUP_ID        = 83\n* WEEE_PICK_UP = 92 optional"
                                },
                                "value": {
                                    "type": "string",
                                    "description": "The value of the property. The value depends on type."
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/orders/items/{orderItemId}/transactions": {
            "get": {
                "summary": "List order item transactions",
                "description": "Lists transactions for an order item. Transactions are order item movements. These are incoming and outgoing items. The ID of the order item must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrderItemTransaction"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "orderItemId": 918,
                                    "quantity": 35.22,
                                    "userId": 49,
                                    "identification": "ipsam",
                                    "direction": "out",
                                    "status": "regular",
                                    "warehouseLocationId": 713,
                                    "batch": "alias",
                                    "bestBeforeDate": "1983-11-22",
                                    "createdAt": "2023-07-12T00:02:57+02:00",
                                    "updatedAt": "2023-06-30T16:35:13+02:00"
                                },
                                {
                                    "orderItemId": 214,
                                    "quantity": 96.51,
                                    "userId": 18,
                                    "identification": "voluptatum",
                                    "direction": "out",
                                    "status": "regular",
                                    "warehouseLocationId": 897,
                                    "batch": "facere",
                                    "bestBeforeDate": "2019-11-28",
                                    "createdAt": "2023-07-16T11:32:32+02:00",
                                    "updatedAt": "2023-07-09T03:01:36+02:00"
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderItemId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order item",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "columns",
                        "type": "array",
                        "required": false,
                        "description": "The properties to be loaded",
                        "format": "",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "with",
                        "type": "array",
                        "required": false,
                        "description": "Load additional relations for a transaction. Currently possible are 'orderItem' and 'warehouseLocation'.",
                        "format": "",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    }
                ]
            },
            "post": {
                "summary": "Create order item transaction",
                "description": "Creates an order item transaction. Transactions are order item movements. These are incoming and outgoing items. The ID of the order item must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderItemTransaction"
                        },
                        "examples": {
                            "application/json": {
                                "orderItemId": 198,
                                "quantity": 6.09,
                                "userId": 12,
                                "identification": "est",
                                "direction": "out",
                                "status": "cancelled",
                                "warehouseLocationId": 5,
                                "batch": "sit",
                                "bestBeforeDate": "2013-08-24",
                                "createdAt": "2023-07-10T10:33:49+02:00",
                                "updatedAt": "2023-07-01T06:16:58+02:00"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderItemId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "/rest/orders/items/{orderItemId}/transactions",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "orderItemId": {
                                    "type": "integer",
                                    "description": "The ID of the order item"
                                },
                                "quantity": {
                                    "type": "number",
                                    "description": "The quantity"
                                },
                                "userId": {
                                    "type": "integer",
                                    "description": "The ID of the user"
                                },
                                "identification": {
                                    "type": "string",
                                    "description": "External identification. Can be an arbitrary string."
                                },
                                "direction": {
                                    "type": "string",
                                    "description": "The direction. Possible values are 'in' and 'out'.  allowed values are in, out"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status. Possible values are 'regular' and 'cancelled'.  allowed values are regular, cancelled"
                                },
                                "receiptId": {
                                    "type": "integer",
                                    "description": "The receipt ID"
                                },
                                "warehouseLocationId": {
                                    "type": "integer",
                                    "description": "The ID of the warehouse location"
                                },
                                "batch": {
                                    "type": "string",
                                    "description": "The batch"
                                },
                                "bestBeforeDate": {
                                    "type": "string",
                                    "description": "The best before date"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/orders/properties/types": {
            "get": {
                "summary": "List order property types",
                "description": "Lists property types and their names in all languages. Optionally, one or more languages can be specified to get a limited response. The following property types are available by default:\n<br><ul>\n<li>1 = WAREHOUSE</li>\n<li>2 = SHIPPING_PROFILE</li>\n<li>3 = PAYMENT_METHOD</li>\n<li>4 = PAYMENT_STATUS</li>\n<li>5 = EXTERNAL_SHIPPING_PROFILE</li>\n<li>6 = DOCUMENT_LANGUAGE</li>\n<li>7 = EXTERNAL_ORDER_ID</li>\n<li>8 = CUSTOMER_SIGN</li>\n<li>9 = DUNNING_LEVEL</li>\n<li>10 = SELLER_ACCOUNT</li>\n<li>11 = WEIGHT</li>\n<li>12 = WIDTH</li>\n<li>13 = LENGTH</li>\n<li>14 = HEIGHT</li>\n<li>15 = FLAG</li>\n<li>16 = EXTERNAL_TOKEN_ID</li>\n<li>17 = EXTERNAL_ITEM_ID</li>\n<li>18 = COUPON_CODE</li>\n<li>19 = COUPON_TYPE</li>\n<li>33 = MAIN_DOCUMENT_NUMBER</li>\n<li>34 = SALES_TAX_ID_NUMBER</li>\n<li>45 = PAYMENT_TRANSACTION_ID</li>\n<li>47 = EXTERNAL_TAX_SERVICE</li>\n<li>60 = MERCHANT_ID</li>\n<li>61 = REPORT_ID</li>\n<li>63 = PREFERRED_STORAGE_LOCATION_ID</li>\n<li>64 = AMAZON_SHIPPING_LABEL</li>\n<li>994 = EBAY_PLUS</li>\n<li>995 = FULFILLMENT_SERVICE</li>\n</ul>",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrderPropertyType"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "id": 1187,
                                    "isErasable": true,
                                    "position": 69,
                                    "cast": "numeric"
                                },
                                {
                                    "id": 1523,
                                    "isErasable": true,
                                    "position": 41,
                                    "cast": "enum(val1,val2,val3)"
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "lang",
                        "type": "array",
                        "required": false,
                        "description": "If no parameter is set here, all languages are loaded by default. Optionally, enter an arry containing the ISO codes of the desired languages.",
                        "format": "",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    }
                ]
            },
            "post": {
                "summary": "Create order property type",
                "description": "Creates an order property type. After creating the order property type, it can be linked to an existing order using the property type ID.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderPropertyType"
                        },
                        "examples": {
                            "application/json": {
                                "id": 1165,
                                "isErasable": true,
                                "position": 67,
                                "cast": null
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "/rest/orders/properties/types",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "position": {
                                    "type": "integer",
                                    "description": "The position for sorting"
                                },
                                "cast": {
                                    "type": "string",
                                    "description": "The data type of the values of this property type. Valid types are:\n\n* string\n* int\n* numeric\n* bool\n* enum(val1,val2,val3,...) optional"
                                },
                                "names": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/OrderPropertyTypeName"
                                    }
                                },
                                "lang": {
                                    "type": "string",
                                    "description": "The language of the type name"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "The name of property type"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/orders/properties/types/{typeId}": {
            "delete": {
                "summary": "Delete property type",
                "description": "Deletes a property type and all names for it from the database. The ID of the property type must be specified. Property type IDs lower than 1,000 cannot be deleted because they are system defaults.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "typeId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the property type",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            },
            "get": {
                "summary": "Get property type",
                "description": "Gets a property type and its names in all languages. Optionally, one or more languages can be specified to get a limited response. The following property types are available by default:\n\n<br><ul>\n<li>1 = WAREHOUSE</li>\n<li>2 = SHIPPING_PROFILE</li>\n<li>3 = PAYMENT_METHOD</li>\n<li>4 = PAYMENT_STATUS</li>\n<li>5 = EXTERNAL_SHIPPING_PROFILE</li>\n<li>6 = DOCUMENT_LANGUAGE</li>\n<li>7 = EXTERNAL_ORDER_ID</li>\n<li>8 = CUSTOMER_SIGN</li>\n<li>9 = DUNNING_LEVEL</li>\n<li>10 = SELLER_ACCOUNT</li>\n<li>11 = WEIGHT</li>\n<li>12 = WIDTH</li>\n<li>13 = LENGTH</li>\n<li>14 = HEIGHT</li>\n<li>15 = FLAG</li>\n<li>16 = EXTERNAL_TOKEN_ID</li>\n<li>17 = EXTERNAL_ITEM_ID</li>\n<li>18 = COUPON_CODE</li>\n<li>19 = COUPON_TYPE</li>\n<li>33 = MAIN_DOCUMENT_NUMBER</li>\n<li>34 = SALES_TAX_ID_NUMBER</li>\n<li>45 = PAYMENT_TRANSACTION_ID</li>\n<li>47 = EXTERNAL_TAX_SERVICE</li>\n<li>60 = MERCHANT_ID</li>\n<li>61 = REPORT_ID</li>\n<li>63 = PREFERRED_STORAGE_LOCATION_ID</li>\n<li>64 = AMAZON_SHIPPING_LABEL</li>\n<li>994 = EBAY_PLUS</li>\n<li>995 = FULFILLMENT_SERVICE</li>\n</ul>",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderPropertyType"
                        },
                        "examples": {
                            "application/json": {
                                "id": 1246,
                                "isErasable": false,
                                "position": 38,
                                "cast": null
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "typeId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the type.",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "lang",
                        "type": "array",
                        "required": false,
                        "description": "If no parameter is set here, all languages for the property are loaded by default. Optionally, enter an arry containing the ISO codes of the desired languages.",
                        "format": "",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    }
                ]
            },
            "put": {
                "summary": "Update property type",
                "description": "Updates a property type and its names. The ID of the property type must be specified. If names that do not yet exist for a language are provided, they will be created. Property type IDs lower than 1,000 cannot be updated because they are system defaults.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderPropertyType"
                        },
                        "examples": {
                            "application/json": {
                                "id": 1019,
                                "isErasable": true,
                                "position": 37,
                                "cast": "enum(val1,val2,val3)"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "typeId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "/rest/orders/properties/types/{typeId}",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "position": {
                                    "type": "integer",
                                    "description": "The position for sorting"
                                },
                                "names": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/OrderPropertyTypeName"
                                    }
                                },
                                "lang": {
                                    "type": "string",
                                    "description": "The language of the type name"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "The name of property type"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/orders/properties/{id}": {
            "delete": {
                "summary": "Delete property of an order by property ID",
                "description": "<b>DEPRECATED: Use the following route: PUT /rest/orders/{orderId}</b>\nDeletes a property of an order. The ID of the property must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DeleteResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the property to be deleted.",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            },
            "put": {
                "summary": "Update property of an order by property ID",
                "description": "<b>DEPRECATED: Use the following route: PUT /rest/orders/{orderId}</b>\nUpdates the value of a property. The ID of the property must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderProperty"
                        },
                        "examples": {
                            "application/json": {
                                "orderId": 103,
                                "typeId": 9,
                                "value": "dolore",
                                "createdAt": "2023-05-27T23:47:05+02:00",
                                "updatedAt": "2023-02-14T23:23:17+01:00"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "/rest/orders/properties/{id}",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "description": "The ID of the order property"
                                },
                                "typeId": {
                                    "type": "integer",
                                    "description": "The ID of the property type. The following types are available:\n\n* WAREHOUSE\t\t=\t1\n* SHIPPING_PROFILE\t=\t2\n* PAYMENT_METHOD\t\t\t=\t3\n* PAYMENT_STATUS\t\t\t=\t4\n* EXTERNAL_SHIPPING_PROFILE\t\t\t=\t5\n* DOCUMENT_LANGUAGE\t\t\t=\t6\n* EXTERNAL_ORDER_ID\t\t\t=\t7\n* CUSTOMER_SIGN\t\t\t=\t8\n* DUNNING_LEVEL\t\t\t=\t9\n* SELLER_ACCOUNT\t\t\t=\t10\n* WEIGHT\t\t\t=\t11\n* WIDTH\t\t\t=\t12\n* LENGTH          =\t13\n* HEIGHT\t\t=\t14\n* FLAG\t\t\t=\t15\n* EXTERNAL_TOKEN_ID\t\t\t=\t16\n* EXTERNAL_ITEM_ID\t\t\t=\t17\n* COUPON_CODE\t\t\t=\t18\n* COUPON_TYPE         =   19\n* SALES_TAX_ID_NUMBER =   34\n* MAIN_DOCUMENT_NUMBER = 33\n* PAYMENT_TRANSACTION_ID = 45\n* EXTERNAL_TAX_SERVICE = 47\n* MERCHANT_ID = 60\n* REPORT_ID = 61\n* PREFERRED_STORAGE_LOCATION_ID = 63\n* AMAZON_SHIPPING_LABEL = 64\n* MARKET_TAX_ID = 88\n* MARKET_EORI = 89\n* IS_REVERSE_CHARGED = 90\n* DISALLOW_INTERNAL_TAX_RELEVANT_DOCUMENTS = 91\n* EBAY_PLUS = 994\n* FULFILLMENT_SERVICE = 995"
                                },
                                "value": {
                                    "type": "string",
                                    "description": "The value of the property. The value depends on the type."
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/orders/referrers": {
            "get": {
                "summary": "List referrers",
                "description": "Lists referrers with the desired columns/attributes.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrderReferrer"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "id": 47.42,
                                    "isEditable": true,
                                    "backendName": "Herkunft 47.42",
                                    "name": "HK 47.42",
                                    "orderOwnerId": 7,
                                    "isFilterable": true,
                                    "origin": "some.plugin.name"
                                },
                                {
                                    "id": 14.64,
                                    "isEditable": true,
                                    "backendName": "Herkunft 14.64",
                                    "name": "HK 14.64",
                                    "orderOwnerId": 11,
                                    "isFilterable": false,
                                    "origin": "some.plugin.name"
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "columns",
                        "type": "array",
                        "required": false,
                        "description": "The desired columns/attributes of the order referrer to be loaded.",
                        "format": "",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/rest/orders/referrers/next_free_main": {
            "get": {
                "summary": "Get next free main referrer ID",
                "description": "Gets the next free main referrer ID. If no more free main referrers are available, an exception is thrown.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SimpleRestResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            }
        },
        "/rest/orders/referrers/search": {
            "get": {
                "summary": "Search for referrers",
                "description": "Search for referrers by filter parameters.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "page": {
                                    "type": "integer",
                                    "description": "Current page of the response"
                                },
                                "totalsCount": {
                                    "type": "integer",
                                    "description": "The total number of entries in the response"
                                },
                                "isLastPage": {
                                    "type": "boolean",
                                    "description": "Flag that indicates if the page shown is the last page of the response"
                                },
                                "lastPageNumber": {
                                    "type": "integer",
                                    "description": "The last page number"
                                },
                                "firstOnPage": {
                                    "type": "integer",
                                    "description": "The index of the first item of the current page result"
                                },
                                "lastOnPage": {
                                    "type": "integer",
                                    "description": "The index of the last item of the current page result"
                                },
                                "itemsPerPage": {
                                    "type": "integer",
                                    "description": "The requested amount of items per result page"
                                },
                                "entries": {
                                    "type": "array",
                                    "description": "List of OrderReferrer",
                                    "items": {
                                        "$ref": "#/definitions/OrderReferrer"
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "page": 1,
                                "totalsCount": 2,
                                "isLastPage": true,
                                "entries": [
                                    {
                                        "id": 37.87,
                                        "isEditable": false,
                                        "backendName": "Herkunft 37.87",
                                        "name": "HK 37.87",
                                        "orderOwnerId": 11,
                                        "isFilterable": false,
                                        "origin": "some.plugin.name"
                                    },
                                    {
                                        "id": 63.52,
                                        "isEditable": false,
                                        "backendName": "Herkunft 63.52",
                                        "name": "HK 63.52",
                                        "orderOwnerId": 14,
                                        "isFilterable": false,
                                        "origin": "plenty"
                                    }
                                ],
                                "lastPageNumber": 1,
                                "firstOnPage": 1,
                                "lastOnPage": 2,
                                "itemsPerPage": 25
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "type": "integer",
                        "required": false,
                        "description": "The page to get. The default page that will be returned is page 1.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "itemsPerPage",
                        "type": "integer",
                        "required": false,
                        "description": "The number of orders to be displayed per page. The default number of referrers per page is 20.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "sortBy",
                        "type": "string",
                        "required": false,
                        "description": "Sort search result according to specified field. The default value is id.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "sortOrder",
                        "type": "string",
                        "required": false,
                        "description": "Sort direction desc or asc. The default value is asc.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "id",
                        "type": "integer",
                        "required": false,
                        "description": "The ID of the referrer.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "name",
                        "type": "integer",
                        "required": false,
                        "description": "The name of the referrer.",
                        "format": "integer",
                        "in": "query"
                    }
                ]
            }
        },
        "/rest/orders/referrers/{parentReferrerId?}": {
            "post": {
                "summary": "Create an order referrer",
                "description": "Create an order referrer. The ID can be specified, a parent ID can be specified to create a sub referrer or if no ID is specified, a referrer ID will be assigned automatically.\nIf an ID is specified, the ID may not be used already. If the ID is used already, the referrer will only be created.\nIf the ID is automatically assigned, the first ID that has not been used before will be set.\nIf the ID is not specified, but a parent referrer ID is given, then the new referrer ID will be a sub referrer of the given parent.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderReferrer"
                        },
                        "examples": {
                            "application/json": {
                                "id": 66.57,
                                "isEditable": true,
                                "backendName": "Herkunft 66.57",
                                "name": "HK 66.57",
                                "orderOwnerId": 10,
                                "isFilterable": true,
                                "origin": "plenty"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "data",
                        "type": "array",
                        "required": true,
                        "description": "The attributes of the order referrer to be created.",
                        "format": "",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "parentReferrerId?",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/referrers/{referrerId}": {
            "delete": {
                "summary": "Delete referrer",
                "description": "Delete a referrer. The ID of the referrer must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SimpleRestResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "referrerId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the referrer.",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            },
            "get": {
                "summary": "Get a referrer",
                "description": "Gets a referrer. The ID of the referrer must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderReferrer"
                        },
                        "examples": {
                            "application/json": {
                                "id": 24.21,
                                "isEditable": true,
                                "backendName": "Herkunft 24.21",
                                "name": "HK 24.21",
                                "orderOwnerId": 3,
                                "isFilterable": false,
                                "origin": "plenty"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "referrerId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the referrer.",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            },
            "put": {
                "summary": "Update referrer",
                "description": "Update a referrer. The ID of the referrer must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderReferrer"
                        },
                        "examples": {
                            "application/json": {
                                "id": 55.82,
                                "isEditable": false,
                                "backendName": "Herkunft 55.82",
                                "name": "HK 55.82",
                                "orderOwnerId": 13,
                                "isFilterable": false,
                                "origin": "plenty"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "referrerId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the referrer.",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/search": {
            "get": {
                "summary": "Search orders",
                "description": "Searches for orders. The results can be restricted by using filters. For more information on the order search, refer to the <a href='https://developers.plentymarkets.com/en-gb/developers/main/rest-api-guides/order-search.html' target='_blank'>REST API guide</a>.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "page": {
                                    "type": "integer",
                                    "description": "Current page of the response"
                                },
                                "totalsCount": {
                                    "type": "integer",
                                    "description": "The total number of entries in the response"
                                },
                                "isLastPage": {
                                    "type": "boolean",
                                    "description": "Flag that indicates if the page shown is the last page of the response"
                                },
                                "lastPageNumber": {
                                    "type": "integer",
                                    "description": "The last page number"
                                },
                                "firstOnPage": {
                                    "type": "integer",
                                    "description": "The index of the first item of the current page result"
                                },
                                "lastOnPage": {
                                    "type": "integer",
                                    "description": "The index of the last item of the current page result"
                                },
                                "itemsPerPage": {
                                    "type": "integer",
                                    "description": "The requested amount of items per result page"
                                },
                                "entries": {
                                    "type": "array",
                                    "description": "List of Order",
                                    "items": {
                                        "$ref": "#/definitions/Order"
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "page": 1,
                                "totalsCount": 2,
                                "isLastPage": true,
                                "entries": [
                                    {
                                        "statusName": "",
                                        "plentyId": 794,
                                        "typeId": 7,
                                        "lockStatus": "unlocked",
                                        "locationId": null,
                                        "createdAt": null,
                                        "updatedAt": null,
                                        "statusId": null,
                                        "ownerId": null,
                                        "relations": [],
                                        "properties": [
                                            {
                                                "orderId": null,
                                                "typeId": 4,
                                                "value": "unpaid"
                                            }
                                        ],
                                        "dates": [
                                            {
                                                "orderId": null,
                                                "typeId": 2,
                                                "date": null
                                            },
                                            {
                                                "orderId": null,
                                                "typeId": 4,
                                                "date": null
                                            }
                                        ]
                                    },
                                    {
                                        "statusName": "",
                                        "plentyId": 794,
                                        "typeId": 6,
                                        "lockStatus": "unlocked",
                                        "locationId": null,
                                        "createdAt": null,
                                        "updatedAt": null,
                                        "statusId": null,
                                        "ownerId": null,
                                        "relations": [],
                                        "properties": [
                                            {
                                                "orderId": null,
                                                "typeId": 4,
                                                "value": "unpaid"
                                            }
                                        ],
                                        "dates": [
                                            {
                                                "orderId": null,
                                                "typeId": 2,
                                                "date": null
                                            },
                                            {
                                                "orderId": null,
                                                "typeId": 4,
                                                "date": null
                                            }
                                        ]
                                    }
                                ],
                                "lastPageNumber": 1,
                                "firstOnPage": 1,
                                "lastOnPage": 2,
                                "itemsPerPage": 25
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific ID.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "plentyId",
                        "type": "integer",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific plenty ID.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "orderTypeId",
                        "type": "string",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific order type ID.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "statusId",
                        "type": "number",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific status ID.",
                        "format": "",
                        "in": "query"
                    },
                    {
                        "name": "referrerId",
                        "type": "number",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific referrer ID.",
                        "format": "",
                        "in": "query"
                    },
                    {
                        "name": "ownerId",
                        "type": "integer",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific owner ID.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "locationId",
                        "type": "integer",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific location ID.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "updatedAt",
                        "type": "string",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific update date.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "createdAt",
                        "type": "string",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific creation date.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "lockStatus",
                        "type": "string",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific lock status.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "orderAddressData",
                        "type": "string",
                        "required": false,
                        "description": "This filter restricts the search results to orders with specific address data.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "contactData",
                        "type": "string",
                        "required": false,
                        "description": "This filter restricts the search results to orders with specific contact data.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "orderItemTypeId",
                        "type": "integer",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific order item type ID.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "itemId",
                        "type": "integer",
                        "required": false,
                        "description": "This filter restricts the search results to orders including a specific item.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "itemVariationId",
                        "type": "integer",
                        "required": false,
                        "description": "This filter restricts the search results to orders including a specific item variation.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "variationNumber",
                        "type": "string",
                        "required": false,
                        "description": "This filter restricts the search results to orders including a specific variation number.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "orderItemName",
                        "type": "string",
                        "required": false,
                        "description": "This filter restricts the search results to orders including a specific order item name.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "documentNumber",
                        "type": "string",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific document number.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "hasValidInvoice",
                        "type": "boolean",
                        "required": false,
                        "description": "This filter restricts the search results to orders for which a valid invoice exists.",
                        "format": "boolean",
                        "in": "query"
                    },
                    {
                        "name": "packageNumber",
                        "type": "string",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific package number.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "contactClassId",
                        "type": "integer",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific contact class ID.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "itemManufacturerId",
                        "type": "integer",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific item manufacturer ID.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "orderItemWarehouseId",
                        "type": "integer",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific order item warehouse ID.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "invoiceTotalSystemCurrency",
                        "type": "number",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific invoice total (in system currency).",
                        "format": "",
                        "in": "query"
                    },
                    {
                        "name": "isDeliveryAddressPackingStation",
                        "type": "boolean",
                        "required": false,
                        "description": "This filter restricts the search results to orders for which the delivery address is a packing station.",
                        "format": "boolean",
                        "in": "query"
                    },
                    {
                        "name": "serialNumber",
                        "type": "string",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific serial number.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "isGuestContact",
                        "type": "boolean",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a guest contact.",
                        "format": "boolean",
                        "in": "query"
                    },
                    {
                        "name": "variationSupplierId",
                        "type": "integer",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific variation supplier ID.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "orderItemReferrerId",
                        "type": "integer",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific order item referrer ID.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "tag",
                        "type": "integer",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific tag.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "excludeMainOrders",
                        "type": "boolean",
                        "required": false,
                        "description": "This filter restricts the search results to orders for which no delivery orders exist.",
                        "format": "boolean",
                        "in": "query"
                    },
                    {
                        "name": "orderProperty_{typeId}",
                        "type": "string",
                        "required": false,
                        "description": "This filter restricts the search results to orders with an order property with a specific value. The order property type ID has to be replaced in the filter name.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "orderDate_{typeId}",
                        "type": "string",
                        "required": false,
                        "description": "This filter restricts the search results to orders with an order date with a specific value. The order date type ID has to be replaced in the filter name.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "orderReference_{referenceType}",
                        "type": "integer",
                        "required": false,
                        "description": "This filter restricts the search results to orders with an order reference with a specific value. The order reference type has to be replaced in the filter name.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "orderItemReference_{referenceType}",
                        "type": "integer",
                        "required": false,
                        "description": "This filter restricts the search results to orders with an order item reference with a specific value. The order item reference type has to be replaced in the filter name.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "relationReference_{referenceType}_{relationType}",
                        "type": "integer",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a relation reference with a specific value. The reference type and relation type has to be replaced in the filter name.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "soldCouponCode",
                        "type": "string",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific sold coupon code.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "redeemedCouponCode",
                        "type": "string",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific redeemed coupon code.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "orderBillingAddressCountryId",
                        "type": "integer",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific invoice address country ID.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "orderDeliveryAddressCountryId",
                        "type": "integer",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific delivery address country ID.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "documentNumber_{documentType}",
                        "type": "string",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a document number with a specific value. The document type has to be replaced in the filter name.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "orderItemProperty_{typeId}",
                        "type": "string",
                        "required": false,
                        "description": "This filter restricts the search results to orders with an order item property with a specific value. The order property type ID has to be replaced in the filter name.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "addressRelation_{typeId}",
                        "type": "integer",
                        "required": false,
                        "description": "This filter restricts the search results to orders with an address relation with a specific value. The address relation type ID has to be replaced in the filter name.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "shippingServiceProviderId",
                        "type": "integer",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific shipping service provider ID.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "shippingServiceProviderType",
                        "type": "string",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific shipping service provider type.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "shippingStatus",
                        "type": "string",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific shipping status.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "shippingShipmentDate",
                        "type": "string",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific shipment date.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "sortBy",
                        "type": "string",
                        "required": false,
                        "description": "This field is used for sorting. Default is 'orderId'. Possible values are 'orderId', 'statusId', 'orderDeliveryAddressPostCode', 'invoiceNumber', 'orderDate_{2,3,5,8}', 'orderProperty_33'",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "sortOrder",
                        "type": "string",
                        "required": false,
                        "description": "The order to sort by. Possible values are 'asc' and 'desc'.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "page",
                        "type": "integer",
                        "required": false,
                        "description": "The page to get. The returned default page is page 1.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "itemsPerPage",
                        "type": "integer",
                        "required": false,
                        "description": "The number of orders to be displayed per page. The default number of orders displayed per page is 50.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "with",
                        "type": "array",
                        "required": false,
                        "description": "Load additional relations for an order.",
                        "format": "",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lazyLoaded",
                        "type": "boolean",
                        "required": false,
                        "description": "If true, no default relations are loaded. Default = true.",
                        "format": "boolean",
                        "in": "query"
                    }
                ]
            },
            "post": {
                "summary": "Search orders",
                "description": "Searches for orders. The results can be restricted by using filters. For more information on the order search, refer to the <a href='https://developers.plentymarkets.com/en-gb/developers/main/rest-api-guides/order-search.html' target='_blank'>REST API guide</a>.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "page": {
                                    "type": "integer",
                                    "description": "Current page of the response"
                                },
                                "totalsCount": {
                                    "type": "integer",
                                    "description": "The total number of entries in the response"
                                },
                                "isLastPage": {
                                    "type": "boolean",
                                    "description": "Flag that indicates if the page shown is the last page of the response"
                                },
                                "lastPageNumber": {
                                    "type": "integer",
                                    "description": "The last page number"
                                },
                                "firstOnPage": {
                                    "type": "integer",
                                    "description": "The index of the first item of the current page result"
                                },
                                "lastOnPage": {
                                    "type": "integer",
                                    "description": "The index of the last item of the current page result"
                                },
                                "itemsPerPage": {
                                    "type": "integer",
                                    "description": "The requested amount of items per result page"
                                },
                                "entries": {
                                    "type": "array",
                                    "description": "List of Order",
                                    "items": {
                                        "$ref": "#/definitions/Order"
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "page": 1,
                                "totalsCount": 2,
                                "isLastPage": true,
                                "entries": [
                                    {
                                        "statusName": "",
                                        "plentyId": 794,
                                        "typeId": 6,
                                        "lockStatus": "unlocked",
                                        "locationId": null,
                                        "createdAt": null,
                                        "updatedAt": null,
                                        "statusId": null,
                                        "ownerId": null,
                                        "relations": [],
                                        "properties": [
                                            {
                                                "orderId": null,
                                                "typeId": 4,
                                                "value": "unpaid"
                                            }
                                        ],
                                        "dates": [
                                            {
                                                "orderId": null,
                                                "typeId": 2,
                                                "date": null
                                            },
                                            {
                                                "orderId": null,
                                                "typeId": 4,
                                                "date": null
                                            }
                                        ]
                                    },
                                    {
                                        "statusName": "",
                                        "plentyId": 794,
                                        "typeId": 8,
                                        "lockStatus": "unlocked",
                                        "locationId": null,
                                        "createdAt": null,
                                        "updatedAt": null,
                                        "statusId": null,
                                        "ownerId": null,
                                        "relations": [],
                                        "properties": [
                                            {
                                                "orderId": null,
                                                "typeId": 4,
                                                "value": "unpaid"
                                            }
                                        ],
                                        "dates": [
                                            {
                                                "orderId": null,
                                                "typeId": 2,
                                                "date": null
                                            },
                                            {
                                                "orderId": null,
                                                "typeId": 4,
                                                "date": null
                                            }
                                        ]
                                    }
                                ],
                                "lastPageNumber": 1,
                                "firstOnPage": 1,
                                "lastOnPage": 2,
                                "itemsPerPage": 25
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific ID.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "plentyId",
                        "type": "integer",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific plenty ID.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "orderTypeId",
                        "type": "string",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific order type ID.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "statusId",
                        "type": "number",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific status ID.",
                        "format": "",
                        "in": "query"
                    },
                    {
                        "name": "referrerId",
                        "type": "number",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific referrer ID.",
                        "format": "",
                        "in": "query"
                    },
                    {
                        "name": "ownerId",
                        "type": "integer",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific owner ID.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "locationId",
                        "type": "integer",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific location ID.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "updatedAt",
                        "type": "string",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific update date.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "createdAt",
                        "type": "string",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific creation date.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "lockStatus",
                        "type": "string",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific lock status.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "orderAddressData",
                        "type": "string",
                        "required": false,
                        "description": "This filter restricts the search results to orders with specific address data.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "contactData",
                        "type": "string",
                        "required": false,
                        "description": "This filter restricts the search results to orders with specific contact data.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "orderItemTypeId",
                        "type": "integer",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific order item type ID.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "itemId",
                        "type": "integer",
                        "required": false,
                        "description": "This filter restricts the search results to orders including a specific item.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "itemVariationId",
                        "type": "integer",
                        "required": false,
                        "description": "This filter restricts the search results to orders including a specific item variation.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "variationNumber",
                        "type": "string",
                        "required": false,
                        "description": "This filter restricts the search results to orders including a specific variation number.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "orderItemName",
                        "type": "string",
                        "required": false,
                        "description": "This filter restricts the search results to orders including a specific order item name.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "documentNumber",
                        "type": "string",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific document number.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "hasValidInvoice",
                        "type": "boolean",
                        "required": false,
                        "description": "This filter restricts the search results to orders for which a valid invoice exists.",
                        "format": "boolean",
                        "in": "query"
                    },
                    {
                        "name": "packageNumber",
                        "type": "string",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific package number.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "contactClassId",
                        "type": "integer",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific contact class ID.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "itemManufacturerId",
                        "type": "integer",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific item manufacturer ID.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "orderItemWarehouseId",
                        "type": "integer",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific order item warehouse ID.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "invoiceTotalSystemCurrency",
                        "type": "number",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific invoice total (in system currency).",
                        "format": "",
                        "in": "query"
                    },
                    {
                        "name": "isDeliveryAddressPackingStation",
                        "type": "boolean",
                        "required": false,
                        "description": "This filter restricts the search results to orders for which the delivery address is a packing station.",
                        "format": "boolean",
                        "in": "query"
                    },
                    {
                        "name": "serialNumber",
                        "type": "string",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific serial number.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "isGuestContact",
                        "type": "boolean",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a guest contact.",
                        "format": "boolean",
                        "in": "query"
                    },
                    {
                        "name": "variationSupplierId",
                        "type": "integer",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific variation supplier ID.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "orderItemReferrerId",
                        "type": "integer",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific order item referrer ID.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "tag",
                        "type": "integer",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific tag.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "excludeMainOrders",
                        "type": "boolean",
                        "required": false,
                        "description": "This filter restricts the search results to orders for which no delivery orders exist.",
                        "format": "boolean",
                        "in": "query"
                    },
                    {
                        "name": "orderProperty_{typeId}",
                        "type": "string",
                        "required": false,
                        "description": "This filter restricts the search results to orders with an order property with a specific value. The order property type ID has to be replaced in the filter name.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "orderDate_{typeId}",
                        "type": "string",
                        "required": false,
                        "description": "This filter restricts the search results to orders with an order date with a specific value. The order date type ID has to be replaced in the filter name.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "orderReference_{referenceType}",
                        "type": "integer",
                        "required": false,
                        "description": "This filter restricts the search results to orders with an order reference with a specific value. The order reference type has to be replaced in the filter name.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "orderItemReference_{referenceType}",
                        "type": "integer",
                        "required": false,
                        "description": "This filter restricts the search results to orders with an order item reference with a specific value. The order item reference type has to be replaced in the filter name.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "relationReference_{referenceType}_{relationType}",
                        "type": "integer",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a relation reference with a specific value. The reference type and relation type has to be replaced in the filter name.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "soldCouponCode",
                        "type": "string",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific sold coupon code.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "redeemedCouponCode",
                        "type": "string",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific redeemed coupon code.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "orderBillingAddressCountryId",
                        "type": "integer",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific invoice address country ID.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "orderDeliveryAddressCountryId",
                        "type": "integer",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific delivery address country ID.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "documentNumber_{documentType}",
                        "type": "string",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a document number with a specific value. The document type has to be replaced in the filter name.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "orderItemProperty_{typeId}",
                        "type": "string",
                        "required": false,
                        "description": "This filter restricts the search results to orders with an order item property with a specific value. The order property type ID has to be replaced in the filter name.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "addressRelation_{typeId}",
                        "type": "integer",
                        "required": false,
                        "description": "This filter restricts the search results to orders with an address relation with a specific value. The address relation type ID has to be replaced in the filter name.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "shippingServiceProviderId",
                        "type": "integer",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific shipping service provider ID.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "shippingServiceProviderType",
                        "type": "string",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific shipping service provider type.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "shippingStatus",
                        "type": "string",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific shipping status.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "shippingShipmentDate",
                        "type": "string",
                        "required": false,
                        "description": "This filter restricts the search results to orders with a specific shipment date.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "sortBy",
                        "type": "string",
                        "required": false,
                        "description": "This field is used for sorting. Default is 'orderId'. Possible values are 'orderId', 'statusId', 'orderDeliveryAddressPostCode', 'invoiceNumber', 'orderDate_{2,3,5,8}', 'orderProperty_33'",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "sortOrder",
                        "type": "string",
                        "required": false,
                        "description": "The order to sort by. Possible values are 'asc' and 'desc'.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "page",
                        "type": "integer",
                        "required": false,
                        "description": "The page to get. The returned default page is page 1.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "itemsPerPage",
                        "type": "integer",
                        "required": false,
                        "description": "The number of orders to be displayed per page. The default number of orders displayed per page is 50.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "with",
                        "type": "array",
                        "required": false,
                        "description": "Load additional relations for an order.",
                        "format": "",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lazyLoaded",
                        "type": "boolean",
                        "required": false,
                        "description": "If true, no default relations are loaded. Default = true.",
                        "format": "boolean",
                        "in": "query"
                    }
                ]
            }
        },
        "/rest/orders/shipping/active_shipping_service_providers": {
            "get": {
                "summary": "Get the list of active shipping service providers for registration",
                "description": "Get all the active shipping service providers for registration",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "includePlugins",
                        "type": "boolean",
                        "required": false,
                        "description": "The flag that indicates if the plugin providers should be also returned in the list",
                        "format": "boolean",
                        "in": "query"
                    }
                ]
            }
        },
        "/rest/orders/shipping/countries": {
            "get": {
                "summary": "List shipping countries",
                "description": "Lists all shipping countries.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Collection"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "active",
                        "type": "integer",
                        "required": false,
                        "description": "Returns only the active shipping countries.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "with",
                        "type": "array",
                        "required": false,
                        "description": "The relations to be loaded. Possible values are 'states' and 'names'.",
                        "format": "",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "onlyEUCountries",
                        "type": "integer",
                        "required": false,
                        "description": "Returns only the EU shipping countries.",
                        "format": "integer",
                        "in": "query"
                    }
                ]
            }
        },
        "/rest/orders/shipping/list_shipping_information": {
            "get": {
                "summary": "Return paginated list containing orders with shipping information",
                "description": "Return a paginated list containing all the orders with their shipping information",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "page": {
                                    "type": "integer",
                                    "description": "Current page of the response"
                                },
                                "totalsCount": {
                                    "type": "integer",
                                    "description": "The total number of entries in the response"
                                },
                                "isLastPage": {
                                    "type": "boolean",
                                    "description": "Flag that indicates if the page shown is the last page of the response"
                                },
                                "lastPageNumber": {
                                    "type": "integer",
                                    "description": "The last page number"
                                },
                                "firstOnPage": {
                                    "type": "integer",
                                    "description": "The index of the first item of the current page result"
                                },
                                "lastOnPage": {
                                    "type": "integer",
                                    "description": "The index of the last item of the current page result"
                                },
                                "itemsPerPage": {
                                    "type": "integer",
                                    "description": "The requested amount of items per result page"
                                },
                                "entries": {
                                    "items": []
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            }
        },
        "/rest/orders/shipping/package_types": {
            "get": {
                "summary": "List shipping package types",
                "description": "Lists all shipping packages types.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ShippingPackageType"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            }
        },
        "/rest/orders/shipping/package_types/{shippingPackageTypeId}": {
            "get": {
                "summary": "Get a shipping package type",
                "description": "Gets a shipping package type. The ID of the shipping package type must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ShippingPackageType"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "shippingPackageTypeId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the shipping package type",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/shipping/packages/items/{id}": {
            "delete": {
                "summary": "Delete package, variation or quantity for an order",
                "description": "Deletes the package, variation or quantity in a package. The ID of the order package item variation is mandatory.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DeleteResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order package item variation",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            },
            "put": {
                "summary": "Update package, variation or quantity for an order",
                "description": "Updates the package, variation or quantity in a package. The ID of the order package item variation is mandatory.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SimpleRestResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order package item variation",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/shipping/packages/items/{packageId}/{itemId}/{variationId}": {
            "delete": {
                "summary": "Delete items of an order package",
                "description": "Deletes the items of an order package. The ID of the package, of the item and of the variation are mandatory.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DeleteResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "packageId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the package",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "itemId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the item",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "variationId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the variation",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            },
            "put": {
                "summary": "Update items of an order package",
                "description": "Updates the items of an order package. The ID of the package, of the item and of the variation are mandatory.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SimpleRestResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "packageId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the package",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "itemId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the item",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "variationId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the variation",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/shipping/packages/{orderShippingPackageId}": {
            "put": {
                "summary": "Update an order shipping package by the packageId",
                "description": "Updates an order shipping package. The ID of the order shipping package must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderShippingPackage"
                        },
                        "examples": {
                            "application/json": {
                                "orderId": 114,
                                "packageId": 6,
                                "weight": 943,
                                "packageNumber": "d7Hzs6Z1",
                                "labelPath": "/path/to/label.pdf",
                                "packageType": 34,
                                "volume": 507.61
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderShippingPackageId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order shipping package",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "/rest/orders/shipping/packages/{orderShippingPackageId}",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "packageId": {
                                    "type": "integer",
                                    "description": "The ID of the package optional"
                                },
                                "weight": {
                                    "type": "integer",
                                    "description": "The weight of the package in grams optional"
                                },
                                "packageNumber": {
                                    "type": "string",
                                    "description": "The package number optional"
                                },
                                "packageType": {
                                    "type": "integer",
                                    "description": "The type of the package. The following types are valid:\n\n 0: unpacked\n 1: Bale\n 2: Dispenser\n 3: Coil\n 4: Roll pallet\n 5: Colli\n 6: Container\n 7: Bucket\n 8: Cask\n 9: Bottles\n 10: European flat pallet\n 11: Structural frame\n 12: Gas cylinder\n 13: Pallet cage\n 14: Hobbock\n 15: Half pallet\n 16: Pallet of food items\n 17: Wooden coaster\n 18: IBC container\n 19: Pitcher\n 20: Wicker bottle\n 21: Case\n 22: Canister\n 23: Customer pallet\n 24: Cardboard box\n 25: Composite packaging\n 26: Package\n 27: Ring\n 28: Role\n 29: Sack\n 30: units\n 31: Tank\n 32: Drum\n 34: Crate\n 35: Quarter pallet\n 36: Other pallets\n 37: Bin\n 38: One-way pallet\n 39: Foil bag\n optional"
                                },
                                "volume": {
                                    "type": "number",
                                    "description": "The volume of the package optional"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/orders/shipping/packages/{packageId}/items": {
            "get": {
                "summary": "List items of an order package",
                "description": "Lists items of an order package. The ID of the package must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderShippingPackageItems"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "packageId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order package",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            },
            "post": {
                "summary": "Create package, variation or quantity for an order",
                "description": "Creates the package, variation or quantity in a package. The ID of the order package item variation is mandatory.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "packageId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order package",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/shipping/packages/{packageId}/packed_items": {
            "get": {
                "summary": "Get packed items in a package",
                "description": "Get all the packed items from a given package",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderShippingPackageItems"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "packageId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the package",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/shipping/pallets": {
            "get": {
                "summary": "List order shipping pallets",
                "description": "Lists order shipping pallets. The ID of the order must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrderShippingPallet"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "string",
                        "required": true,
                        "description": "The ID of the order",
                        "format": "string",
                        "in": "query"
                    }
                ]
            },
            "post": {
                "summary": "Create order shipping pallets",
                "description": "Creates order shipping pallets.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderShippingPallet"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "/rest/orders/shipping/pallets",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "individualWeight": {
                                    "type": "number",
                                    "description": "The weight of the order shipping pallet"
                                },
                                "width": {
                                    "type": "number",
                                    "description": "The width of the order shipping pallet"
                                },
                                "height": {
                                    "type": "number",
                                    "description": "The height of the order shipping pallet"
                                },
                                "length": {
                                    "type": "number",
                                    "description": "The length of the order shipping pallet"
                                },
                                "isStackable": {
                                    "type": "boolean",
                                    "description": "Flag to tell if the pallet is stackable or not. If true, another pallet can be placed over the current one"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/orders/shipping/pallets/{palletId}": {
            "delete": {
                "summary": "Delete all pallets of an order",
                "description": "Deletes all pallets of an order. The ID of the pallet must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderShippingPallet"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "palletId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the pallet",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "/rest/orders/shipping/pallets/{palletId}",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "description": "The ID of the order shipping pallet"
                                }
                            }
                        }
                    }
                ]
            },
            "get": {
                "summary": "List all pallets of an order",
                "description": "Lists all pallets of an order. The ID of the pallet must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderShippingPallet"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "palletId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the pallet",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            },
            "put": {
                "summary": "Update all pallets of an order",
                "description": "Updates all pallets of an order. The ID of the pallet must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderShippingPallet"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "palletId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the pallet",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "/rest/orders/shipping/pallets/{palletId}",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "individualWeight": {
                                    "type": "number",
                                    "description": "The weight of the order shipping pallet"
                                },
                                "width": {
                                    "type": "number",
                                    "description": "The width of the order shipping pallet"
                                },
                                "height": {
                                    "type": "number",
                                    "description": "The height of the order shipping pallet"
                                },
                                "length": {
                                    "type": "number",
                                    "description": "The length of the order shipping pallet"
                                },
                                "isStackable": {
                                    "type": "boolean",
                                    "description": "Flag to tell if the pallet is stackable or not. If true, another pallet can be placed over the current one"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/orders/shipping/pallets/{palletId}/packages": {
            "get": {
                "summary": "Get all the packages for the given pallet ID",
                "description": "Return all the packages linked for the given pallet. The ID of the pallet must be specified",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrderShippingPackage"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "orderId": 734,
                                    "packageId": 8,
                                    "weight": 330,
                                    "packageNumber": "bXPy9kBwwus",
                                    "labelPath": "/path/to/label.pdf",
                                    "packageType": 7,
                                    "volume": 217.85
                                },
                                {
                                    "orderId": 445,
                                    "packageId": 7,
                                    "weight": 453,
                                    "packageNumber": "IxdRhgl2K",
                                    "labelPath": "/path/to/label.pdf",
                                    "packageType": 3,
                                    "volume": 284.5
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "palletId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the pallet.",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "with",
                        "type": "array",
                        "required": false,
                        "description": "Possible value is 'items'.",
                        "format": "",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "type": "integer",
                        "required": false,
                        "description": "The page of results to search for.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "itemsPerPage",
                        "type": "integer",
                        "required": false,
                        "description": "The number of packages to list per page.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "sortBy",
                        "type": "string",
                        "required": false,
                        "description": "The column to be sorted by",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "sortOrder",
                        "type": "string",
                        "required": false,
                        "description": "The sort direction",
                        "format": "string",
                        "in": "query"
                    }
                ]
            }
        },
        "/rest/orders/shipping/parcel_service_regions/{parcelServiceRegionId}": {
            "get": {
                "summary": "Get an  order parcel service region",
                "description": "Gets an parcel service region. The ID of the parcel service region must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ParcelServiceRegion"
                        },
                        "examples": {
                            "application/json": {
                                "shippingRegionId": 101,
                                "parcelServicePresetId": 17
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "parcelServiceRegionId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the parcel service region",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "columns",
                        "type": "array",
                        "required": false,
                        "description": "The properties to be loaded",
                        "format": "",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/rest/orders/shipping/parcels/preview/{language?}": {
            "get": {
                "summary": "Get preview list",
                "description": "Get a preview list for parcel services.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "language",
                        "type": "string",
                        "required": true,
                        "description": "Language for parcel preset name",
                        "format": "string",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/shipping/presets": {
            "get": {
                "summary": "List shipping profiles",
                "description": "Lists all shipping profiles.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ParcelServicePreset"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "parcelServiceId": 102,
                                    "backendName": "#",
                                    "flag": 4,
                                    "priority": 5,
                                    "category": 7,
                                    "useArticlePorto": 0,
                                    "isInsured": 1,
                                    "isExpress": 0,
                                    "isPostident": 1,
                                    "isDefaultEnabled": 0,
                                    "islandFee": 65.67,
                                    "shippingGroup": "MP295",
                                    "dispatchIdentifier": "",
                                    "auctionType": "1",
                                    "updatedAt": "2015-12-17T07:39:25+01:00",
                                    "supportedMultishop": [
                                        "-1"
                                    ],
                                    "supportedReferrer": [
                                        "2",
                                        "2.08"
                                    ],
                                    "subreferrerSupport": [
                                        "-1"
                                    ],
                                    "excludedPaymentMethods": [],
                                    "excludedCustomerGroups": [],
                                    "supportedLoyaltyPrograms": []
                                },
                                {
                                    "parcelServiceId": 104,
                                    "backendName": "y",
                                    "flag": 60,
                                    "priority": 5,
                                    "category": 6,
                                    "useArticlePorto": 1,
                                    "isInsured": 0,
                                    "isExpress": 0,
                                    "isPostident": 1,
                                    "isDefaultEnabled": 1,
                                    "islandFee": 88.96,
                                    "shippingGroup": "MP295",
                                    "dispatchIdentifier": "",
                                    "auctionType": "1",
                                    "updatedAt": "2015-12-17T07:39:25+01:00",
                                    "supportedMultishop": [
                                        "-1"
                                    ],
                                    "supportedReferrer": [
                                        "2",
                                        "2.08"
                                    ],
                                    "subreferrerSupport": [
                                        "-1"
                                    ],
                                    "excludedPaymentMethods": [],
                                    "excludedCustomerGroups": [],
                                    "supportedLoyaltyPrograms": []
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "columns",
                        "type": "array",
                        "required": false,
                        "description": "The attributes to be loaded in the shipping profile",
                        "format": "",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "parcelServiceName",
                        "type": "string",
                        "required": false,
                        "description": "Filter that restricts the search result to parcel service presets with a specified service name (e.g. 'DHL' for DHL)",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "shippingServiceProvider",
                        "type": "string",
                        "required": false,
                        "description": "Filter that restricts the search result to a shipping service provider",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "with",
                        "type": "string",
                        "required": false,
                        "description": "The name of an relation to the preset. The following parameter is available: parcelServiceRegion, parcelServiceRegionConstraint, parcelServicePresetNames and parcelServiceNames.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "updatedAtBefore",
                        "type": "string",
                        "required": false,
                        "description": "Filter that restricts the search result to presets that were updated before a specific date. Possible formats: yyyy-mm-dd or yyyy-mm-dd hh:mm:ss",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "updatedAtAfter",
                        "type": "string",
                        "required": false,
                        "description": "Filter that restricts the search result to presets that were updated after a specific date. Possible formats: yyyy-mm-dd or yyyy-mm-dd hh:mm:ss",
                        "format": "string",
                        "in": "query"
                    }
                ]
            }
        },
        "/rest/orders/shipping/presets/preview/{language?}": {
            "get": {
                "summary": "Get preview list",
                "description": "Get a preview list for parcel service presets.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "language",
                        "type": "string",
                        "required": true,
                        "description": "Language for parcel preset name",
                        "format": "string",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/shipping/presets/{presetId}": {
            "get": {
                "summary": "Get a shipping profile",
                "description": "Gets a shipping profile. The ID of the shipping profile must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ParcelServicePreset"
                        },
                        "examples": {
                            "application/json": {
                                "parcelServiceId": 103,
                                "backendName": "%",
                                "flag": 97,
                                "priority": 2,
                                "category": 3,
                                "useArticlePorto": 0,
                                "isInsured": 0,
                                "isExpress": 0,
                                "isPostident": 1,
                                "isDefaultEnabled": 1,
                                "islandFee": 14.67,
                                "shippingGroup": "MP295",
                                "dispatchIdentifier": "",
                                "auctionType": "1",
                                "updatedAt": "2015-12-17T07:39:25+01:00",
                                "supportedMultishop": [
                                    "-1"
                                ],
                                "supportedReferrer": [
                                    "2",
                                    "2.08"
                                ],
                                "subreferrerSupport": [
                                    "-1"
                                ],
                                "excludedPaymentMethods": [],
                                "excludedCustomerGroups": [],
                                "supportedLoyaltyPrograms": []
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "presetId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the shipping profile",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "columns",
                        "type": "array",
                        "required": false,
                        "description": "The attributes to be loaded in the shipping profile",
                        "format": "",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/rest/orders/shipping/presets/{presetId}/parcel_service_regions": {
            "get": {
                "summary": "List parcel service regions by parcel service preset ID",
                "description": "Lists parcel service regions. The ID of the parcel service preset must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ParcelServiceRegion"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "shippingRegionId": 101,
                                    "parcelServicePresetId": 6
                                },
                                {
                                    "shippingRegionId": 101,
                                    "parcelServicePresetId": 6
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "columns",
                        "type": "array",
                        "required": false,
                        "description": "The properties to be loaded",
                        "format": "",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "presetId",
                        "type": "integer",
                        "required": true,
                        "description": " The ID of the preset",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/shipping/returns/returns_service_providers": {
            "get": {
                "summary": "List returns service providers",
                "description": "Lists all returns service providers.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "page": {
                                    "type": "integer",
                                    "description": "Current page of the response"
                                },
                                "totalsCount": {
                                    "type": "integer",
                                    "description": "The total number of entries in the response"
                                },
                                "isLastPage": {
                                    "type": "boolean",
                                    "description": "Flag that indicates if the page shown is the last page of the response"
                                },
                                "lastPageNumber": {
                                    "type": "integer",
                                    "description": "The last page number"
                                },
                                "firstOnPage": {
                                    "type": "integer",
                                    "description": "The index of the first item of the current page result"
                                },
                                "lastOnPage": {
                                    "type": "integer",
                                    "description": "The index of the last item of the current page result"
                                },
                                "itemsPerPage": {
                                    "type": "integer",
                                    "description": "The requested amount of items per result page"
                                },
                                "entries": {
                                    "type": "array",
                                    "description": "List of ReturnsServiceProvider",
                                    "items": {
                                        "$ref": "#/definitions/ReturnsServiceProvider"
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "page": 1,
                                "totalsCount": 2,
                                "isLastPage": true,
                                "entries": [
                                    {
                                        "name": "voluptatem",
                                        "pluginId": 1434323,
                                        "createdAt": "1997-11-25T18:51:16+01:00",
                                        "updatedAt": "2014-04-18T20:25:49+02:00"
                                    },
                                    {
                                        "name": "voluptate",
                                        "pluginId": 7288363,
                                        "createdAt": "1981-11-05T03:54:06+01:00",
                                        "updatedAt": "2014-01-04T19:01:27+01:00"
                                    }
                                ],
                                "lastPageNumber": 1,
                                "firstOnPage": 1,
                                "lastOnPage": 2,
                                "itemsPerPage": 25
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "isPlugin",
                        "type": "integer",
                        "required": false,
                        "description": "Possible values are 1 (true) and 0 (false).",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "pluginId",
                        "type": "integer",
                        "required": false,
                        "description": "The ID of the plugin",
                        "format": "integer",
                        "in": "query"
                    }
                ]
            }
        },
        "/rest/orders/shipping/returns/returns_service_providers/plugins": {
            "get": {
                "summary": "List returns service provider plugins",
                "description": "Lists all returns service provider plugins.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            }
        },
        "/rest/orders/shipping/returns/returns_service_providers/{providerId}": {
            "get": {
                "summary": "Get returns service provider by the ID",
                "description": "Gets a specific returns service provider. The ID of the returns service provider must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ReturnsServiceProvider"
                        },
                        "examples": {
                            "application/json": {
                                "name": "sunt",
                                "pluginId": 8323838,
                                "createdAt": "1998-09-11T21:57:34+02:00",
                                "updatedAt": "2002-08-31T22:30:35+02:00"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "providerId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the returns service provider",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/shipping/shipping_information": {
            "get": {
                "summary": "List orders with shipping information",
                "description": "Lists all the orders with their shipping information.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            },
            "post": {
                "summary": "Create shipping information",
                "description": "Creates the shipping information.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ShippingInformation"
                        },
                        "examples": {
                            "application/json": {
                                "orderId": 2,
                                "shippingServiceProvider": "DpdCloudService",
                                "transactionId": 8,
                                "shippingStatus": "prepared",
                                "shippingCosts": 9,
                                "additionalData": "Sequi aut reiciendis non sed eveniet minus. Consectetur sit at ut et nemo et. Aut fugit quam mollitia eveniet iste consequatur nesciunt totam.",
                                "registrationAt": "2007-01-04T03:33:12+01:00",
                                "shipmentAt": "2015-04-14T22:06:27+02:00"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            }
        },
        "/rest/orders/shipping/shipping_service_providers": {
            "get": {
                "summary": "List shipping service providers",
                "description": "Lists all shipping service providers.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "page": {
                                    "type": "integer",
                                    "description": "Current page of the response"
                                },
                                "totalsCount": {
                                    "type": "integer",
                                    "description": "The total number of entries in the response"
                                },
                                "isLastPage": {
                                    "type": "boolean",
                                    "description": "Flag that indicates if the page shown is the last page of the response"
                                },
                                "lastPageNumber": {
                                    "type": "integer",
                                    "description": "The last page number"
                                },
                                "firstOnPage": {
                                    "type": "integer",
                                    "description": "The index of the first item of the current page result"
                                },
                                "lastOnPage": {
                                    "type": "integer",
                                    "description": "The index of the last item of the current page result"
                                },
                                "itemsPerPage": {
                                    "type": "integer",
                                    "description": "The requested amount of items per result page"
                                },
                                "entries": {
                                    "type": "array",
                                    "description": "List of ShippingServiceProvider",
                                    "items": {
                                        "$ref": "#/definitions/ShippingServiceProvider"
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "page": 1,
                                "totalsCount": 2,
                                "isLastPage": true,
                                "entries": [
                                    {
                                        "name": "quinten.emmerich",
                                        "pluginId": 8608410,
                                        "createdAt": "1977-09-20T17:41:45+01:00",
                                        "updatedAt": "2021-02-06T08:21:30+01:00"
                                    },
                                    {
                                        "name": "xlangosh",
                                        "pluginId": 3112549,
                                        "createdAt": "2003-11-03T09:20:32+01:00",
                                        "updatedAt": "2004-04-22T08:27:00+02:00"
                                    }
                                ],
                                "lastPageNumber": 1,
                                "firstOnPage": 1,
                                "lastOnPage": 2,
                                "itemsPerPage": 25
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "updatedAtBefore",
                        "type": "string",
                        "required": false,
                        "description": "Filter that restricts the search result to shipping providers that were updated before a specific date. Possible formats: yyyy-mm-dd or yyyy-mm-dd hh:mm:ss",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "updatedAtAfter",
                        "type": "string",
                        "required": false,
                        "description": "Filter that restricts the search result to shipping providers that were updated after a specific date. Possible formats: yyyy-mm-dd or yyyy-mm-dd hh:mm:ss",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "with",
                        "type": "string",
                        "required": false,
                        "description": "The name of an relation to the shipping provider. The following parameter is available: ownShippingServiceProviders.",
                        "format": "string",
                        "in": "query"
                    }
                ]
            },
            "post": {
                "summary": "Save a shipping service provider",
                "description": "Saves a shipping service provider. The name of the shipping service provider must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ShippingServiceProvider"
                        },
                        "examples": {
                            "application/json": {
                                "name": "christina.price",
                                "pluginId": 2557967,
                                "createdAt": "2000-07-16T00:02:56+02:00",
                                "updatedAt": "2006-12-26T20:54:53+01:00"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            }
        },
        "/rest/orders/shipping/shipping_service_providers/plugins": {
            "get": {
                "summary": "List shipping service provider plugins",
                "description": "Lists all shipping service provider plugins.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            }
        },
        "/rest/orders/shipping/shipping_service_providers/{shipping_service_provider_id}": {
            "get": {
                "summary": "Get a shipping service provider",
                "description": "Gets a shipping service provider. The ID of the shipping service provider must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ShippingServiceProvider"
                        },
                        "examples": {
                            "application/json": {
                                "name": "dasia24",
                                "pluginId": 5308412,
                                "createdAt": "2014-06-14T05:05:30+02:00",
                                "updatedAt": "2015-02-20T13:59:31+01:00"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "shippingServiceProviderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the shipping service provider",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "shipping_service_provider_id",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/status-history": {
            "get": {
                "summary": "List status histories of orders",
                "description": "Lists the status histories of all orders. The result can be limited to an order specified by an ID, a status with a particular ID, a period of time or a user specified by the user ID.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "page": {
                                    "type": "integer",
                                    "description": "Current page of the response"
                                },
                                "totalsCount": {
                                    "type": "integer",
                                    "description": "The total number of entries in the response"
                                },
                                "isLastPage": {
                                    "type": "boolean",
                                    "description": "Flag that indicates if the page shown is the last page of the response"
                                },
                                "lastPageNumber": {
                                    "type": "integer",
                                    "description": "The last page number"
                                },
                                "firstOnPage": {
                                    "type": "integer",
                                    "description": "The index of the first item of the current page result"
                                },
                                "lastOnPage": {
                                    "type": "integer",
                                    "description": "The index of the last item of the current page result"
                                },
                                "itemsPerPage": {
                                    "type": "integer",
                                    "description": "The requested amount of items per result page"
                                },
                                "entries": {
                                    "type": "array",
                                    "description": "List of StatusHistoryEntry",
                                    "items": {
                                        "$ref": "#/definitions/StatusHistoryEntry"
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "page": 1,
                                "totalsCount": 2,
                                "isLastPage": true,
                                "entries": [
                                    {
                                        "orderId": 902,
                                        "statusId": 8,
                                        "createdAt": "2023-07-05T11:57:33+02:00",
                                        "userId": 6,
                                        "procedureText": "Voluptates aspernatur non exercitationem enim beatae."
                                    },
                                    {
                                        "orderId": 590,
                                        "statusId": 4,
                                        "createdAt": "2023-07-17T22:53:55+02:00",
                                        "userId": 5,
                                        "procedureText": "Ex iste enim fuga ut."
                                    }
                                ],
                                "lastPageNumber": 1,
                                "firstOnPage": 1,
                                "lastOnPage": 2,
                                "itemsPerPage": 25
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": false,
                        "description": "The ID of the order",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "statusId",
                        "type": "number",
                        "required": false,
                        "description": "The ID of the status",
                        "format": "",
                        "in": "query"
                    },
                    {
                        "name": "createdAtFrom",
                        "type": "string",
                        "required": false,
                        "description": "Set a start date to get status history entries beginning with this date",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "createdAtTo",
                        "type": "string",
                        "required": false,
                        "description": "Set an end date to get status history entries up to this date",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "userId",
                        "type": "string",
                        "required": false,
                        "description": "The ID of the user",
                        "format": "string",
                        "in": "query"
                    }
                ]
            }
        },
        "/rest/orders/statuses": {
            "get": {
                "summary": "Searches for order statuses",
                "description": "Searches for a list of order statuses. The search results are specified by providing filter parameters in the form of order status IDs.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "page": {
                                    "type": "integer",
                                    "description": "Current page of the response"
                                },
                                "totalsCount": {
                                    "type": "integer",
                                    "description": "The total number of entries in the response"
                                },
                                "isLastPage": {
                                    "type": "boolean",
                                    "description": "Flag that indicates if the page shown is the last page of the response"
                                },
                                "lastPageNumber": {
                                    "type": "integer",
                                    "description": "The last page number"
                                },
                                "firstOnPage": {
                                    "type": "integer",
                                    "description": "The index of the first item of the current page result"
                                },
                                "lastOnPage": {
                                    "type": "integer",
                                    "description": "The index of the last item of the current page result"
                                },
                                "itemsPerPage": {
                                    "type": "integer",
                                    "description": "The requested amount of items per result page"
                                },
                                "entries": {
                                    "type": "array",
                                    "description": "List of OrderStatus",
                                    "items": {
                                        "$ref": "#/definitions/OrderStatus"
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "page": 1,
                                "totalsCount": 2,
                                "isLastPage": true,
                                "entries": [
                                    {
                                        "statusId": 10.9491,
                                        "color": "#526f7a",
                                        "isFrontendVisible": false,
                                        "isReorderVisible": true,
                                        "isRedistributionVisible": true,
                                        "createdAt": "2023-07-01T07:05:27+02:00",
                                        "updatedAt": "2023-07-08T22:51:39+02:00"
                                    },
                                    {
                                        "statusId": 2.1547,
                                        "color": "#e26bda",
                                        "isFrontendVisible": true,
                                        "isReorderVisible": true,
                                        "isRedistributionVisible": false,
                                        "createdAt": "2023-07-01T10:06:58+02:00",
                                        "updatedAt": "2023-07-10T20:50:07+02:00"
                                    }
                                ],
                                "lastPageNumber": 1,
                                "firstOnPage": 1,
                                "lastOnPage": 2,
                                "itemsPerPage": 25
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "statusIdFrom",
                        "type": "number",
                        "required": false,
                        "description": "Define an ID as a start value for the filter. Filter that restricts the search for order statuses to IDs from a defined value.",
                        "format": "",
                        "in": "query"
                    },
                    {
                        "name": "statusIdTo",
                        "type": "number",
                        "required": false,
                        "description": "Define an ID as an end value for the filter.",
                        "format": "",
                        "in": "query"
                    },
                    {
                        "name": "language",
                        "type": "string",
                        "required": false,
                        "description": "Filter that restricts the search for order statuses to a defined language.",
                        "format": "string",
                        "in": "query"
                    }
                ]
            },
            "post": {
                "summary": "Creates an order status.",
                "description": "Creates an order status. The ID of the order status must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderStatus"
                        },
                        "examples": {
                            "application/json": {
                                "statusId": 1.0467,
                                "color": "#66befc",
                                "isFrontendVisible": true,
                                "isReorderVisible": false,
                                "isRedistributionVisible": false,
                                "createdAt": "2023-07-04T04:31:21+02:00",
                                "updatedAt": "2023-07-05T08:06:00+02:00"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "/rest/orders/statuses",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "statusId": {
                                    "type": "number",
                                    "description": "The ID of the status."
                                },
                                "names": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Collection"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/orders/statuses/all": {
            "get": {
                "summary": "Get all order statuses",
                "description": "Gets all order statuses.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Collection"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            }
        },
        "/rest/orders/statuses/group_functions": {
            "post": {
                "summary": "Change order status properties",
                "description": "Change properties of an order status. Properties are colour of the order status, visibility in the online store and availability for orders of the type reorder or redistribution.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "newStatusValues",
                        "type": "array",
                        "required": true,
                        "description": "Set an array of new order status properties consisting of one key and one value for each property. The status colour must be set as a hexadecimal code. All other properties must be specified either by value 0 (inactive) or 1 (active).",
                        "format": "",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "selectedStatusList",
                        "type": "array",
                        "required": true,
                        "description": "Set a list with the IDs of the order statuses that should be changed.",
                        "format": "",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/rest/orders/statuses/{statusId}": {
            "delete": {
                "summary": "Delete an order status",
                "description": "Deletes an order status. The ID of the order status must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "statusId",
                        "type": "number",
                        "required": true,
                        "description": "The ID of the status, which shall be deleted.",
                        "format": "",
                        "in": "path"
                    }
                ]
            },
            "get": {
                "summary": "Get an order status",
                "description": "Gets an order status. The status has to be specified by providing a status ID.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderStatus"
                        },
                        "examples": {
                            "application/json": {
                                "statusId": 10.4881,
                                "color": "#3dda99",
                                "isFrontendVisible": false,
                                "isReorderVisible": true,
                                "isRedistributionVisible": false,
                                "createdAt": "2023-07-11T22:14:50+02:00",
                                "updatedAt": "2023-07-19T02:30:30+02:00"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "statusId",
                        "type": "number",
                        "required": true,
                        "description": "The ID of the order status.",
                        "format": "",
                        "in": "path"
                    }
                ]
            },
            "put": {
                "summary": "Update an order status",
                "description": "Updates an order status. The ID of the order status must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderStatus"
                        },
                        "examples": {
                            "application/json": {
                                "statusId": 3.7462,
                                "color": "#665c7c",
                                "isFrontendVisible": true,
                                "isReorderVisible": false,
                                "isRedistributionVisible": true,
                                "createdAt": "2023-07-08T16:20:05+02:00",
                                "updatedAt": "2023-07-05T20:05:22+02:00"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "statusId",
                        "type": "number",
                        "required": true,
                        "description": "The ID of the order status that should be updated.",
                        "format": "",
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "/rest/orders/statuses/{statusId}",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "names": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Collection"
                                    }
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/orders/{orderId}": {
            "delete": {
                "summary": "Delete an order",
                "description": "Deletes an order. The ID of the order must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order to be deleted.",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            },
            "get": {
                "summary": "Get an order",
                "description": "Gets an order. The ID of the order must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 3,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order.",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "with",
                        "type": "array",
                        "required": false,
                        "description": "Load additional relations for an order. The following relations are available:\n     * <ul>\n       <li>'addresses' = The address objects linked to the order.</li>\n       <li>'relations' = The order relation reference instances that are associated with the order. These instances contain information such as the reference type. The available reference types are parent and reorder. The ID of the reference and the relation itself are also available.</li>\n       <li>'comments' = The order comments.</li>\n       <li>'location' = The accounting location linked to the order.</li>\n       <li>'payments' = The payments linked to the order.</li>\n       <li>'documents' = The documents linked to the order.</li>\n       <li>'contactSender' = The contact belonging the contact-sender relation.</li>\n       <li>'contactReceiver' = The contact belonging to the contact-receiver relation.</li>\n       <li>'warehouseSender' = The warehouse belonging to the warehouse-sender relation.</li>\n       <li>'warehouseReceiver' = The warehouse belonging to the warehouse-receiver relation.</li>\n       <li>'orderItems.variation' = The variation data belonging to the order item.</li>\n       <li>'orderItems.variation.propertiesV2' = The properties belonging to the variation.</li>\n       <li>'orderItems.giftCardCodes' = The gift card codes belonging to the order item.</li>\n       <li>'orderItems.transactions' = The transactions belonging to the order item.</li>\n       <li>'orderItems.serialNumbers' = The serial numbers belonging to the order item.</li>\n       <li>'orderItems.variationBarcodes' = The barcodes belonging to the order item.</li>\n       <li>'orderItems.comments' = The comments belonging to the order item.</li>\n       <li>'shippingPallets' = The shipping pallets that are associated with the order.</li>\n       <li>'shippingPackages' = The shipping packages that are associated with the order.</li>\n       <li>'paymentTerms' = The payment terms that are associated with the order.</li>\n       <li><b>deprecated</b> 'orderItems.warehouseLocations' = The warehouse locations linked to the order item.</li>\n     </ul>\n     Example: <code>?with[]=addresses&with[]=orderItems.variation</code>",
                        "format": "",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "addOrderItems",
                        "type": "boolean",
                        "required": false,
                        "description": "Add the order items to the result. Default = true.",
                        "format": "boolean",
                        "in": "query"
                    }
                ]
            },
            "put": {
                "summary": "Update an order",
                "description": "Updates an order. The ID of the order must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 5,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "/rest/orders/{orderId}",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "plentyId": {
                                    "type": "integer",
                                    "description": "The plenty ID of the client that the order belongs to optional"
                                },
                                "statusId": {
                                    "type": "number",
                                    "description": "The ID of the order status optional"
                                },
                                "ownerId": {
                                    "type": "integer",
                                    "description": "The user ID of the order's owner optional"
                                },
                                "orderItems": {
                                    "type": "array",
                                    "items": []
                                },
                                "properties": {
                                    "type": "array",
                                    "items": []
                                },
                                "addressRelations": {
                                    "type": "array",
                                    "items": []
                                },
                                "relations": {
                                    "type": "array",
                                    "items": []
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/advance_orders": {
            "post": {
                "summary": "Create an advance order from a parent order",
                "description": "Creates an advance order from a parent order. The parent order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 7,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "/rest/orders/{orderId}/advance_orders",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "quantities": {
                                    "type": "array",
                                    "items": []
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/advance_orders/convert": {
            "put": {
                "summary": "Convert a sales order into an advance order",
                "description": "Converts a sales order into an advance order. The order ID of the sales order must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 5,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/booking": {
            "post": {
                "summary": "Book an order in",
                "description": "Books an order in, e.g. an order of the type reorder. The ID of the order must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderBooking"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order.",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "deliveryNoteNumber",
                        "type": "string",
                        "required": false,
                        "description": "If desired, set the delivery note number provided by the supplier.",
                        "format": "string",
                        "in": "query"
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/cancel": {
            "put": {
                "summary": "Cancel an order",
                "description": "Cancels an order. The ID of the order must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order to be canceled.",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "/rest/orders/{orderId}/cancel",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "statusId": {
                                    "type": "number",
                                    "description": "The ID of the order status optional"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "The message that is displayed in the status history optional"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/contactWish": {
            "get": {
                "summary": "Get a contact wish",
                "description": "Gets the contact wish for an order. The ID of the order must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ContactWish"
                        },
                        "examples": {
                            "application/json": {
                                "text": "Veniam accusamus voluptatibus iste distinctio modi ipsa aut laboriosam facere magnam eum reiciendis."
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/coupons/{coupon}": {
            "post": {
                "summary": "Redeem a coupon code",
                "description": "Redeems a coupon code and applies it to an order. The ID of the order must be specified. If the coupon was successfully redeemed, the coupon data will be returned. If the coupon can not be redeemed, a validation exception will be thrown.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/CouponCodeValidation"
                        },
                        "examples": {
                            "application/json": {
                                "validationType": "plenty",
                                "items": [
                                    {
                                        "amount": 1306.53,
                                        "noCoupon": 0,
                                        "quantity": 9,
                                        "singlePrice": 145.17,
                                        "itemId": 953,
                                        "vatField": 0
                                    }
                                ],
                                "contactId": 82,
                                "couponCode": "FKXV8B",
                                "currency": "EUR",
                                "referrer": 35.97,
                                "salesDiscount": -14,
                                "salesDiscountNet": -11.764705882352942,
                                "itemDiscount": -14,
                                "itemDiscountNet": -11.764705882352942,
                                "shippingDiscount": 0,
                                "shippingDiscountNet": 0,
                                "usedVatFields": [
                                    -14
                                ],
                                "restCouponAmount": 0,
                                "checkedItems": {
                                    "953": 1306.53
                                },
                                "validateParams": {
                                    "callFromScheduler": false,
                                    "webstoreId": 0,
                                    "shipToCountry": 1,
                                    "taxIdNumber": 19,
                                    "contactClass": 5,
                                    "contactType": 1
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order to redeem the coupon",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "coupon",
                        "type": "string",
                        "required": true,
                        "description": "The coupon code to be redeemed",
                        "format": "string",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/coupons/{coupon}/validate": {
            "post": {
                "summary": "Validate coupon for order",
                "description": "Validates a coupon for an order.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "coupon",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/credit_notes": {
            "post": {
                "summary": "Create a credit note from a parent order",
                "description": "Creates a credit note from a parent order. The parent order ID and the quantities to use must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 2,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "/rest/orders/{orderId}/credit_notes",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "statusId": {
                                    "type": "number",
                                    "description": "optional"
                                },
                                "ownerId": {
                                    "type": "integer",
                                    "description": "optional"
                                },
                                "includeCouponsIntoOrderItemPrice": {
                                    "type": "boolean",
                                    "description": "optional"
                                },
                                "quantities": {
                                    "type": "array",
                                    "items": []
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/credit_notes/validate": {
            "post": {
                "summary": "Validate order items for create a credit note from a parent order",
                "description": "Validate order items for create a credit note from a parent order. The parent order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/currency": {
            "put": {
                "summary": "Update the order currency",
                "description": "Updates the order currency. The currency and the exchange rate must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 1,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/dates": {
            "get": {
                "summary": "List all dates of an order",
                "description": "Lists all dates of an order. The ID of the order must be specified.\n<b>DEPRECATED: Use the following route: GET /rest/orders/{orderId}</b>",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrderDate"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "typeId": 1,
                                    "date": "1981-01-24T15:26:42+01:00"
                                },
                                {
                                    "typeId": 4,
                                    "date": "1997-01-08T19:07:31+01:00"
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/dates/{typeId}": {
            "get": {
                "summary": "Get a date",
                "description": "<b>DEPRECATED: Use the following route: GET /rest/orders/{orderId}</b>\nGets a date. The ID of the order and the ID of the date type must be specified. The following IDs are available:\n\n<br><ul>\n<li>1 = Deleted on</li>\n<li>2 = Created on</li>\n<li>3 = Paid date</li>\n<li>4 = Last update</li>\n<li>5 = Completed on</li>\n<li>6 = Return date</li>\n<li>7 = Payment due date</li>\n<li>8 = Estimated shipping date</li>\n<li>9 = Start date</li>\n<li>10 = End date</li>\n<li>11 = Possible delivery date</li>\n<li>12 = Market transfer date</li>\n<li>13 = Subscription cancelled on</li>\n<li>14 = Subscription last run</li>\n<li>15 = Subscription next run</li>\n</ul>",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderDate"
                        },
                        "examples": {
                            "application/json": {
                                "typeId": 6,
                                "date": "1985-06-24T03:27:31+02:00"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "typeId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order date type that should be found",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/delivery_orders": {
            "post": {
                "summary": "Create a delivery order from a parent order",
                "description": "Creates a delivery order from a parent order. The parent order ID and the quantities to use must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 3,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "/rest/orders/{orderId}/delivery_orders",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "quantities": {
                                    "type": "array",
                                    "items": []
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/delivery_orders/automatic": {
            "post": {
                "summary": "Create delivery orders automatically for all order items",
                "description": "Create delivery orders automatically for all order items. The order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Collection"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order.",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/delivery_orders/validate": {
            "post": {
                "summary": "Validate order items for create a delivery order from a parent order",
                "description": "Validate order items for create a delivery order from a parent order. The parent order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/family": {
            "get": {
                "summary": "Get information about the order family",
                "description": "Gets information about the order family. All related orders can be shown as tree when the parameter 'with' is given with the value 'tree'.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderFamily"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/items": {
            "get": {
                "summary": "Search order items",
                "description": "Searches order items. The ID of the order must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "page": {
                                    "type": "integer",
                                    "description": "Current page of the response"
                                },
                                "totalsCount": {
                                    "type": "integer",
                                    "description": "The total number of entries in the response"
                                },
                                "isLastPage": {
                                    "type": "boolean",
                                    "description": "Flag that indicates if the page shown is the last page of the response"
                                },
                                "lastPageNumber": {
                                    "type": "integer",
                                    "description": "The last page number"
                                },
                                "firstOnPage": {
                                    "type": "integer",
                                    "description": "The index of the first item of the current page result"
                                },
                                "lastOnPage": {
                                    "type": "integer",
                                    "description": "The index of the last item of the current page result"
                                },
                                "itemsPerPage": {
                                    "type": "integer",
                                    "description": "The requested amount of items per result page"
                                },
                                "entries": {
                                    "type": "array",
                                    "description": "List of OrderItem",
                                    "items": {
                                        "$ref": "#/definitions/OrderItem"
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "page": 1,
                                "totalsCount": 2,
                                "isLastPage": true,
                                "entries": [
                                    {
                                        "orderId": 2,
                                        "typeId": 9,
                                        "referrerId": 4.22,
                                        "itemVariationId": 1024,
                                        "quantity": 5,
                                        "countryVatId": 2,
                                        "vatField": 1,
                                        "vatRate": 17,
                                        "orderItemName": "Veritatis et explicabo rerum",
                                        "attributeValues": "et iusto",
                                        "shippingProfileId": 8,
                                        "createdAt": "1998-05-02T17:32:44+02:00",
                                        "updatedAt": "2017-02-01T10:16:08+01:00"
                                    },
                                    {
                                        "orderId": 4,
                                        "typeId": 9,
                                        "referrerId": 104.09,
                                        "itemVariationId": 1167,
                                        "quantity": 1,
                                        "countryVatId": 2,
                                        "vatField": 2,
                                        "vatRate": 0,
                                        "orderItemName": "Non excepturi minima temporibus",
                                        "attributeValues": "consequatur distinctio",
                                        "shippingProfileId": 8,
                                        "createdAt": "2000-02-28T20:07:28+01:00",
                                        "updatedAt": "2020-10-14T13:09:07+02:00"
                                    }
                                ],
                                "lastPageNumber": 1,
                                "firstOnPage": 1,
                                "lastOnPage": 2,
                                "itemsPerPage": 25
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "type": "integer",
                        "required": false,
                        "description": "The page to get. The default page that will be returned is page 1.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "itemsPerPage",
                        "type": "integer",
                        "required": false,
                        "description": "The number of order items to be displayed per page. The default number of order items per page is 50. The maximum number is 250.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "sortBy",
                        "type": "string",
                        "required": false,
                        "description": "Sort search result according to itemVariationId, orderItemName, createdAt, updatedAt or id. The default value is orderItemId.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "sortOrder",
                        "type": "string",
                        "required": false,
                        "description": "Sort direction desc or asc. The default value is asc.",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "with",
                        "type": "array",
                        "required": false,
                        "description": "Load additional relations for an order item. Currently possible are:\n    <ul>\n    <li>'variation' = The variation that is associated with the order item.</li>\n    <li>'giftCardCodes' = The gift card codes that are associated with the order item.</li>\n    <li>'transactions' = The transactions that are associated with the order item.</li>\n    <li>'serialNumbers' = The serial numbers that are associated with the order item.</li>\n    <li>'variationBarcodes' = The barcodes that are associated with variation of the order item.</li>\n    </ul>",
                        "format": "",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/items/reorders/generate": {
            "post": {
                "summary": "Create / update reorder(s) for order items",
                "description": "Creates or updates reorders for given order items.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/items/serialNumbers": {
            "get": {
                "summary": "List serial numbers of an order",
                "description": "Lists all serial numbers of an order. The ID of the order must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrderSerialNumber"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "orderId": 248,
                                    "orderItemId": 413,
                                    "serialNumberId": 394,
                                    "serialNumber": null,
                                    "itemSerialNumber": null
                                },
                                {
                                    "orderId": 378,
                                    "orderItemId": 987,
                                    "serialNumberId": 364,
                                    "serialNumber": null,
                                    "itemSerialNumber": null
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/items/warehouse_locations/attach": {
            "post": {
                "summary": "Attach warehouse locations.",
                "description": "Attach warehouse locations. The order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SimpleRestResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/items/warehouse_locations/detach": {
            "post": {
                "summary": "Detach warehouse locations.",
                "description": "Detach warehouse locations. The order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SimpleRestResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/items/{orderItemId}": {
            "delete": {
                "summary": "Delete an order item",
                "description": "Deletes an order item. The ID of the order and the ID of the order item must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order that the item belongs to.",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "orderItemId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order item to be deleted.",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/items/{orderItemId}/serialNumbers": {
            "get": {
                "summary": "List serial numbers of an order item",
                "description": "Lists all serial numbers of an order item. The ID of the order and the ID of the order item must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrderSerialNumber"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "orderId": 362,
                                    "orderItemId": 156,
                                    "serialNumberId": 672,
                                    "serialNumber": null,
                                    "itemSerialNumber": null
                                },
                                {
                                    "orderId": 802,
                                    "orderItemId": 180,
                                    "serialNumberId": 939,
                                    "serialNumber": null,
                                    "itemSerialNumber": null
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "orderItemId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order item",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            },
            "post": {
                "summary": "Create item serial number and bind it to order item",
                "description": "Creates item serial number and bind it to order item. The ID of the order and the ID of the order item must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderSerialNumber"
                        },
                        "examples": {
                            "application/json": {
                                "orderId": 756,
                                "orderItemId": 612,
                                "serialNumberId": 902,
                                "serialNumber": null,
                                "itemSerialNumber": null
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "orderItemId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/my_account_url": {
            "get": {
                "summary": "Get My Account url of the order",
                "description": "Gets the My Account url of the order",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/offers": {
            "post": {
                "summary": "Create an offer from a parent order",
                "description": "Creates an offer from a parent order. The parent order ID and the quantities to use must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 5,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "/rest/orders/{orderId}/offers",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "quantities": {
                                    "type": "array",
                                    "items": []
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/outgoing_stocks": {
            "delete": {
                "summary": "Revert outgoing stock",
                "description": "<b>DEPRECATED: Use the following route: POST /rest/{orderType}/{orderId}/cancel_booking</b>\nCancellation the booking of an order. The ID of the order must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            },
            "post": {
                "summary": "Book out order items",
                "description": "<b>DEPRECATED: Use the following route: POST /rest/{orderType}/{orderId}/book</b>\nBooks out the order items of an order. The ID of the order must be specified and a booking date can be specified. The current date and time will be used if no date is specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "date",
                        "type": "string",
                        "required": false,
                        "description": "The date that is saved as booking date for the outgoing stock.",
                        "format": "string",
                        "in": "query"
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/packagenumbers": {
            "get": {
                "summary": "List package numbers of an order",
                "description": "Lists the package numbers of an order. The ID of the order must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/string"
                            }
                        },
                        "examples": {
                            "application/json": [
                                "J92356732176",
                                "003478943219912"
                            ]
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/properties": {
            "post": {
                "summary": "Create property for an order",
                "description": "<b>DEPRECATED: Use the following route: PUT /rest/orders/{orderId}</b>\nCreates a property and links it to an order. The ID of the order must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderProperty"
                        },
                        "examples": {
                            "application/json": {
                                "orderId": 103,
                                "typeId": 17,
                                "value": "consequuntur",
                                "createdAt": "2023-03-30T13:00:28+02:00",
                                "updatedAt": "2023-01-01T12:13:06+01:00"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "/rest/orders/{orderId}/properties",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "orderId": {
                                    "type": "integer",
                                    "description": "The ID of the order that the property belongs to"
                                },
                                "typeId": {
                                    "type": "integer",
                                    "description": "The ID of the property type. The following types are available:\n\n* WAREHOUSE\t\t=\t1\n* SHIPPING_PROFILE\t=\t2\n* PAYMENT_METHOD\t\t\t=\t3\n* PAYMENT_STATUS\t\t\t=\t4\n* EXTERNAL_SHIPPING_PROFILE\t\t\t=\t5\n* DOCUMENT_LANGUAGE\t\t\t=\t6\n* EXTERNAL_ORDER_ID\t\t\t=\t7\n* CUSTOMER_SIGN\t\t\t=\t8\n* DUNNING_LEVEL\t\t\t=\t9\n* SELLER_ACCOUNT\t\t\t=\t10\n* WEIGHT\t\t\t=\t11\n* WIDTH\t\t\t=\t12\n* LENGTH          =\t13\n* HEIGHT\t\t=\t14\n* FLAG\t\t\t=\t15\n* EXTERNAL_TOKEN_ID\t\t\t=\t16\n* EXTERNAL_ITEM_ID\t\t\t=\t17\n* COUPON_CODE\t\t\t=\t18\n* COUPON_TYPE         =   19\n* SALES_TAX_ID_NUMBER =   34\n* MAIN_DOCUMENT_NUMBER = 33\n* PAYMENT_TRANSACTION_ID = 45\n* EXTERNAL_TAX_SERVICE = 47\n* MERCHANT_ID = 60\n* REPORT_ID = 61\n* PREFERRED_STORAGE_LOCATION_ID = 63\n* AMAZON_SHIPPING_LABEL = 64\n* MARKET_TAX_ID = 88\n* MARKET_EORI = 89\n* IS_REVERSE_CHARGED = 90\n* DISALLOW_INTERNAL_TAX_RELEVANT_DOCUMENTS = 91\n* EBAY_PLUS = 994\n* FULFILLMENT_SERVICE = 995"
                                },
                                "value": {
                                    "type": "string",
                                    "description": "The value of the property. The value depends on the type."
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/properties/{typeId?}": {
            "get": {
                "summary": "List properties of an order",
                "description": "<b>DEPRECATED: Use the following route: GET /rest/orders/{orderId}</b>\nLists properties of an order. The ID of the order must be specified. Optionally, the ID of the property type can be specified. The following property types are available by default:\n\n<br><ul>\n<li>1 = WAREHOUSE</li>\n<li>2 = SHIPPING_PROFILE</li>\n<li>3 = PAYMENT_METHOD</li>\n<li>4 = PAYMENT_STATUS</li>\n<li>5 = EXTERNAL_SHIPPING_PROFILE</li>\n<li>6 = DOCUMENT_LANGUAGE</li>\n<li>7 = EXTERNAL_ORDER_ID</li>\n<li>8 = CUSTOMER_SIGN</li>\n<li>9 = DUNNING_LEVEL</li>\n<li>10 = SELLER_ACCOUNT</li>\n<li>11 = WEIGHT</li>\n<li>12 = WIDTH</li>\n<li>13 = LENGTH</li>\n<li>14 = HEIGHT</li>\n<li>15 = FLAG</li>\n<li>16 = EXTERNAL_TOKEN_ID</li>\n<li>17 = EXTERNAL_ITEM_ID</li>\n<li>18 = COUPON_CODE</li>\n<li>19 = COUPON_TYPE</li>\n<li>33 = MAIN_DOCUMENT_NUMBER</li>\n<li>34 = SALES_TAX_ID_NUMBER</li>\n<li>45 = PAYMENT_TRANSACTION_ID</li>\n<li>47 = EXTERNAL_TAX_SERVICE</li>\n<li>60 = MERCHANT_ID</li>\n<li>61 = REPORT_ID</li>\n<li>63 = PREFERRED_STORAGE_LOCATION_ID</li>\n<li>64 = AMAZON_SHIPPING_LABEL</li>\n<li>994 = EBAY_PLUS</li>\n<li>995 = FULFILLMENT_SERVICE</li>\n</ul>",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrderProperty"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "orderId": 103,
                                    "typeId": 10,
                                    "value": "ab",
                                    "createdAt": "2023-04-30T18:10:33+02:00",
                                    "updatedAt": "2023-03-12T02:12:22+01:00"
                                },
                                {
                                    "orderId": 103,
                                    "typeId": 12,
                                    "value": "sint",
                                    "createdAt": "2023-06-15T01:13:54+02:00",
                                    "updatedAt": "2023-01-18T12:55:30+01:00"
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "typeId",
                        "type": "integer",
                        "required": true,
                        "description": "The property type ID",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/properties/{typeId}": {
            "delete": {
                "summary": "Delete property of an order by order ID and property type ID",
                "description": "<b>DEPRECATED: Use the following route: PUT /rest/orders/{orderId}</b>\nDeletes a property of an order. The ID of the order and the ID of the order property type must be specified. The following property types are available by default:\n\n<br><ul>\n<li>1 = WAREHOUSE</li>\n<li>2 = SHIPPING_PROFILE</li>\n<li>3 = PAYMENT_METHOD</li>\n<li>4 = PAYMENT_STATUS</li>\n<li>5 = EXTERNAL_SHIPPING_PROFILE</li>\n<li>6 = DOCUMENT_LANGUAGE</li>\n<li>7 = EXTERNAL_ORDER_ID</li>\n<li>8 = CUSTOMER_SIGN</li>\n<li>9 = DUNNING_LEVEL</li>\n<li>10 = SELLER_ACCOUNT</li>\n<li>11 = WEIGHT</li>\n<li>12 = WIDTH</li>\n<li>13 = LENGTH</li>\n<li>14 = HEIGHT</li>\n<li>15 = FLAG</li>\n<li>16 = EXTERNAL_TOKEN_ID</li>\n<li>17 = EXTERNAL_ITEM_ID</li>\n<li>18 = COUPON_CODE</li>\n<li>19 = COUPON_TYPE</li>\n<li>33 = MAIN_DOCUMENT_NUMBER</li>\n<li>34 = SALES_TAX_ID_NUMBER</li>\n<li>45 = PAYMENT_TRANSACTION_ID</li>\n<li>47 = EXTERNAL_TAX_SERVICE</li>\n<li>60 = MERCHANT_ID</li>\n<li>61 = REPORT_ID</li>\n<li>63 = PREFERRED_STORAGE_LOCATION_ID</li>\n<li>64 = AMAZON_SHIPPING_LABEL</li>\n<li>994 = EBAY_PLUS</li>\n<li>995 = FULFILLMENT_SERVICE</li>\n</ul>",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DeleteResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "typeId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "/rest/orders/{orderId}/properties/{typeId}",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "orderId": {
                                    "type": "integer",
                                    "description": "The ID of the order that the property belongs to"
                                },
                                "typeId": {
                                    "type": "integer",
                                    "description": "The ID of the property type. The following types are available:\n\n* WAREHOUSE\t\t=\t1\n* SHIPPING_PROFILE\t=\t2\n* PAYMENT_METHOD\t\t\t=\t3\n* PAYMENT_STATUS\t\t\t=\t4\n* EXTERNAL_SHIPPING_PROFILE\t\t\t=\t5\n* DOCUMENT_LANGUAGE\t\t\t=\t6\n* EXTERNAL_ORDER_ID\t\t\t=\t7\n* CUSTOMER_SIGN\t\t\t=\t8\n* DUNNING_LEVEL\t\t\t=\t9\n* SELLER_ACCOUNT\t\t\t=\t10\n* WEIGHT\t\t\t=\t11\n* WIDTH\t\t\t=\t12\n* LENGTH          =\t13\n* HEIGHT\t\t=\t14\n* FLAG\t\t\t=\t15\n* EXTERNAL_TOKEN_ID\t\t\t=\t16\n* EXTERNAL_ITEM_ID\t\t\t=\t17\n* COUPON_CODE\t\t\t=\t18\n* COUPON_TYPE         =   19\n* SALES_TAX_ID_NUMBER =   34\n* MAIN_DOCUMENT_NUMBER = 33\n* PAYMENT_TRANSACTION_ID = 45\n* EXTERNAL_TAX_SERVICE = 47\n* MERCHANT_ID = 60\n* REPORT_ID = 61\n* PREFERRED_STORAGE_LOCATION_ID = 63\n* AMAZON_SHIPPING_LABEL = 64\n* MARKET_TAX_ID = 88\n* MARKET_EORI = 89\n* IS_REVERSE_CHARGED = 90\n* DISALLOW_INTERNAL_TAX_RELEVANT_DOCUMENTS = 91\n* EBAY_PLUS = 994\n* FULFILLMENT_SERVICE = 995"
                                }
                            }
                        }
                    }
                ]
            },
            "put": {
                "summary": "Update property of an order by order ID and property ID",
                "description": "<b>DEPRECATED: Use the following route: PUT /rest/orders/{orderId}</b>\nUpdates the value of a property already linked to an order. The ID of the order and the ID of the order property type must be specified. The following property types are available by default:\n\n<br><ul>\n<li>1 = WAREHOUSE</li>\n<li>2 = SHIPPING_PROFILE</li>\n<li>3 = PAYMENT_METHOD</li>\n<li>4 = PAYMENT_STATUS</li>\n<li>5 = EXTERNAL_SHIPPING_PROFILE</li>\n<li>6 = DOCUMENT_LANGUAGE</li>\n<li>7 = EXTERNAL_ORDER_ID</li>\n<li>8 = CUSTOMER_SIGN</li>\n<li>9 = DUNNING_LEVEL</li>\n<li>10 = SELLER_ACCOUNT</li>\n<li>11 = WEIGHT</li>\n<li>12 = WIDTH</li>\n<li>13 = LENGTH</li>\n<li>14 = HEIGHT</li>\n<li>15 = FLAG</li>\n<li>16 = EXTERNAL_TOKEN_ID</li>\n<li>17 = EXTERNAL_ITEM_ID</li>\n<li>18 = COUPON_CODE</li>\n<li>19 = COUPON_TYPE</li>\n<li>33 = MAIN_DOCUMENT_NUMBER</li>\n<li>34 = SALES_TAX_ID_NUMBER</li>\n<li>45 = PAYMENT_TRANSACTION_ID</li>\n<li>47 = EXTERNAL_TAX_SERVICE</li>\n<li>60 = MERCHANT_ID</li>\n<li>61 = REPORT_ID</li>\n<li>63 = PREFERRED_STORAGE_LOCATION_ID</li>\n<li>64 = AMAZON_SHIPPING_LABEL</li>\n<li>994 = EBAY_PLUS</li>\n<li>995 = FULFILLMENT_SERVICE</li>\n</ul>",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderProperty"
                        },
                        "examples": {
                            "application/json": {
                                "orderId": 103,
                                "typeId": 15,
                                "value": "quod",
                                "createdAt": "2023-02-08T02:06:55+01:00",
                                "updatedAt": "2023-01-09T12:49:28+01:00"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "typeId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "/rest/orders/{orderId}/properties/{typeId}",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "orderId": {
                                    "type": "integer",
                                    "description": "The ID of the order that the property belongs to"
                                },
                                "typeId": {
                                    "type": "integer",
                                    "description": "The ID of the property type. The following types are available:\n\n* WAREHOUSE\t\t=\t1\n* SHIPPING_PROFILE\t=\t2\n* PAYMENT_METHOD\t\t\t=\t3\n* PAYMENT_STATUS\t\t\t=\t4\n* EXTERNAL_SHIPPING_PROFILE\t\t\t=\t5\n* DOCUMENT_LANGUAGE\t\t\t=\t6\n* EXTERNAL_ORDER_ID\t\t\t=\t7\n* CUSTOMER_SIGN\t\t\t=\t8\n* DUNNING_LEVEL\t\t\t=\t9\n* SELLER_ACCOUNT\t\t\t=\t10\n* WEIGHT\t\t\t=\t11\n* WIDTH\t\t\t=\t12\n* LENGTH          =\t13\n* HEIGHT\t\t=\t14\n* FLAG\t\t\t=\t15\n* EXTERNAL_TOKEN_ID\t\t\t=\t16\n* EXTERNAL_ITEM_ID\t\t\t=\t17\n* COUPON_CODE\t\t\t=\t18\n* COUPON_TYPE         =   19\n* SALES_TAX_ID_NUMBER =   34\n* MAIN_DOCUMENT_NUMBER = 33\n* PAYMENT_TRANSACTION_ID = 45\n* EXTERNAL_TAX_SERVICE = 47\n* MERCHANT_ID = 60\n* REPORT_ID = 61\n* PREFERRED_STORAGE_LOCATION_ID = 63\n* AMAZON_SHIPPING_LABEL = 64\n* MARKET_TAX_ID = 88\n* MARKET_EORI = 89\n* IS_REVERSE_CHARGED = 90\n* DISALLOW_INTERNAL_TAX_RELEVANT_DOCUMENTS = 91\n* EBAY_PLUS = 994\n* FULFILLMENT_SERVICE = 995"
                                },
                                "value": {
                                    "type": "string",
                                    "description": "The value of the property. The value depends on the type."
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/redistributions": {
            "post": {
                "summary": "Create a redistribution from a parent order",
                "description": "Creates a redistribution from a parent order. The parent order ID and the quantities to use must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 3,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/reorders": {
            "post": {
                "summary": "Create a reorder from a parent order",
                "description": "Creates a reorder from a parent order. The parent order ID and the quantities to use must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 2,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/reorders/generate": {
            "post": {
                "summary": "Create reorder(s) for an order",
                "description": "Creates reorders for a given order.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/reorders/generate/validate": {
            "post": {
                "summary": "Validate order items for create a reorder from a sales order, delivery order, repair and warranty",
                "description": "Validate order items for create a reorder from a sales order, delivery order, repair and warranty. The parent order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/repairs": {
            "post": {
                "summary": "Create a repair order from a parent order",
                "description": "Creates a repair order from a parent order. The parent order ID and the quantities to use must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 6,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "/rest/orders/{orderId}/repairs",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "statusId": {
                                    "type": "number",
                                    "description": "optional"
                                },
                                "ownerId": {
                                    "type": "integer",
                                    "description": "optional"
                                },
                                "repairStatusId": {
                                    "type": "integer",
                                    "description": "optional"
                                },
                                "quantities": {
                                    "type": "array",
                                    "items": []
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/repairs/validate": {
            "post": {
                "summary": "Validate order items for create a repair from a parent order",
                "description": "Validate order items for create a repair from a parent order. The parent order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/returns": {
            "post": {
                "summary": "Create a return from a parent order",
                "description": "Creates a return from a parent order. The parent order ID and the quantities to use must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 6,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "/rest/orders/{orderId}/returns",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "includeCouponsIntoOrderItemPrice": {
                                    "type": "boolean",
                                    "description": "optional"
                                },
                                "statusId": {
                                    "type": "number",
                                    "description": "optional"
                                },
                                "ownerId": {
                                    "type": "integer",
                                    "description": "optional"
                                },
                                "returnPackageNumber": {
                                    "type": "string",
                                    "description": "optional"
                                },
                                "warehouseId": {
                                    "type": "integer",
                                    "description": "optional"
                                },
                                "quantities": {
                                    "type": "array",
                                    "items": []
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/returns/validate": {
            "post": {
                "summary": "Validate order items for create a return from a parent order",
                "description": "Validate order items for create a return from a parent order. The parent order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/sales_orders": {
            "post": {
                "summary": "Create a sales order from a parent order",
                "description": "Creates a sales order from a parent order. The parent order ID and the quantities to use must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 2,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "/rest/orders/{orderId}/sales_orders",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "statusId": {
                                    "type": "number",
                                    "description": "optional"
                                },
                                "quantities": {
                                    "type": "array",
                                    "items": []
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/sales_orders/convert": {
            "put": {
                "summary": "Convert an advance order into a sales order",
                "description": "Converts an advance order into a sales order. The order ID of the advance order must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 7,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/shipping/cancel_shipment": {
            "delete": {
                "summary": "Cancel a shipment",
                "description": "Cancel a shipment for an order. The ID of the order must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SimpleRestResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/shipping/packages": {
            "delete": {
                "summary": "Delete all order shipping packages for an order",
                "description": "Deletes all order shipping packages for an order. The ID of the order must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            },
            "get": {
                "summary": "List order shipping packages",
                "description": "Lists order shipping packages. The ID of the order must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrderShippingPackage"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "orderId": 501,
                                    "packageId": 8,
                                    "weight": 269,
                                    "packageNumber": "uxnuyllMvom",
                                    "labelPath": "/path/to/label.pdf",
                                    "packageType": 27,
                                    "volume": 432.63
                                },
                                {
                                    "orderId": 224,
                                    "packageId": 8,
                                    "weight": 256,
                                    "packageNumber": "9yoKvHzjiV",
                                    "labelPath": "/path/to/label.pdf",
                                    "packageType": 10,
                                    "volume": 176.98
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "columns",
                        "type": "array",
                        "required": false,
                        "description": "The properties to be loaded",
                        "format": "",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "with",
                        "type": "string",
                        "required": false,
                        "description": "Possible values are 'labelBase64', 'items'",
                        "format": "string",
                        "in": "query"
                    }
                ]
            },
            "post": {
                "summary": "Create an order shipping package",
                "description": "Creates an order shipping package. The ID of the order must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderShippingPackage"
                        },
                        "examples": {
                            "application/json": {
                                "orderId": 801,
                                "packageId": 8,
                                "weight": 913,
                                "packageNumber": "GxrmhrAf",
                                "labelPath": "/path/to/label.pdf",
                                "packageType": 14,
                                "volume": 305.28
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "/rest/orders/{orderId}/shipping/packages",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "packageId": {
                                    "type": "integer",
                                    "description": "The ID of the package"
                                },
                                "weight": {
                                    "type": "integer",
                                    "description": "The weight of the package in grams optional"
                                },
                                "packageNumber": {
                                    "type": "string",
                                    "description": "The package number optional"
                                },
                                "packageType": {
                                    "type": "integer",
                                    "description": "The type of the package. The following types are valid:\n\n 0: unpacked\n 1: Bale\n 2: Dispenser\n 3: Coil\n 4: Roll pallet\n 5: Colli\n 6: Container\n 7: Bucket\n 8: Cask\n 9: Bottles\n 10: European flat pallet\n 11: Structural frame\n 12: Gas cylinder\n 13: Pallet cage\n 14: Hobbock\n 15: Half pallet\n 16: Pallet of food items\n 17: Wooden coaster\n 18: IBC container\n 19: Pitcher\n 20: Wicker bottle\n 21: Case\n 22: Canister\n 23: Customer pallet\n 24: Cardboard box\n 25: Composite packaging\n 26: Package\n 27: Ring\n 28: Role\n 29: Sack\n 30: units\n 31: Tank\n 32: Drum\n 34: Crate\n 35: Quarter pallet\n 36: Other pallets\n 37: Bin\n 38: One-way pallet\n 39: Foil bag"
                                },
                                "volume": {
                                    "type": "number",
                                    "description": "The volume of the package optional"
                                },
                                "labelPath": {
                                    "type": "string",
                                    "description": "The path to the label optional"
                                },
                                "returnPackageNumber": {
                                    "type": "string",
                                    "description": "The return package number optional"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/shipping/packages/items": {
            "get": {
                "summary": "List items contained in packages of an order",
                "description": "Lists items contained in packages of a specific order. The ID of the order is mandatory.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderShippingPackageItems"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/shipping/packages/packed_items": {
            "get": {
                "summary": "List packed items of a shipping package by the order ID",
                "description": "Lists packed items of a shipping package by a specific order ID. The ID of the order is mandatory.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/shipping/packages/unpacked_items": {
            "get": {
                "summary": "List unpacked items of a shipping package by the order ID",
                "description": "Lists unpacked items of a shipping package by a specific order ID. The ID of the order is mandatory.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/shipping/packages/unpacked_items_paginated": {
            "get": {
                "summary": "List unpacked items from an order",
                "description": "Lists unpacked items from a specific order ID. The ID of the order is mandatory.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderShippingPackageItems"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/shipping/packages/{orderShippingPackageId}": {
            "delete": {
                "summary": "Delete an order shipping package",
                "description": "Deletes an order shipping package. The ID of the order and the ID of the order shipping package must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "orderShippingPackageId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order shipping package",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            },
            "get": {
                "summary": "Get an order shipping package",
                "description": "Gets an order shipping package. The ID of the order and the ID of the order shipping package must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderShippingPackage"
                        },
                        "examples": {
                            "application/json": {
                                "orderId": 359,
                                "packageId": 8,
                                "weight": 891,
                                "packageNumber": "qs3lrL93",
                                "labelPath": "/path/to/label.pdf",
                                "packageType": 12,
                                "volume": 336.79
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "orderShippingPackageId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order shipping package",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "columns",
                        "type": "array",
                        "required": false,
                        "description": "The properties to be loaded",
                        "format": "",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    }
                ]
            },
            "put": {
                "summary": "Update an order shipping package",
                "description": "Updates an order shipping package. The ID of the order and the ID of the order shipping package must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderShippingPackage"
                        },
                        "examples": {
                            "application/json": {
                                "orderId": 801,
                                "packageId": 1,
                                "weight": 938,
                                "packageNumber": "chAgTNQN9qm",
                                "labelPath": "/path/to/label.pdf",
                                "packageType": 23,
                                "volume": 470.75
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "orderShippingPackageId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order shipping package",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "/rest/orders/{orderId}/shipping/packages/{orderShippingPackageId}",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "packageId": {
                                    "type": "integer",
                                    "description": "The ID of the package optional"
                                },
                                "weight": {
                                    "type": "integer",
                                    "description": "The weight of the package in grams optional"
                                },
                                "packageNumber": {
                                    "type": "string",
                                    "description": "The package number optional"
                                },
                                "packageType": {
                                    "type": "integer",
                                    "description": "The type of the package. The following types are valid:\n\n 0: unpacked\n 1: Bale\n 2: Dispenser\n 3: Coil\n 4: Roll pallet\n 5: Colli\n 6: Container\n 7: Bucket\n 8: Cask\n 9: Bottles\n 10: European flat pallet\n 11: Structural frame\n 12: Gas cylinder\n 13: Pallet cage\n 14: Hobbock\n 15: Half pallet\n 16: Pallet of food items\n 17: Wooden coaster\n 18: IBC container\n 19: Pitcher\n 20: Wicker bottle\n 21: Case\n 22: Canister\n 23: Customer pallet\n 24: Cardboard box\n 25: Composite packaging\n 26: Package\n 27: Ring\n 28: Role\n 29: Sack\n 30: units\n 31: Tank\n 32: Drum\n 34: Crate\n 35: Quarter pallet\n 36: Other pallets\n 37: Bin\n 38: One-way pallet\n 39: Foil bag\n optional"
                                },
                                "volume": {
                                    "type": "number",
                                    "description": "The volume of the package optional"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/shipping/packages_paginated": {
            "get": {
                "summary": "Get all the packages for the given order",
                "description": "Return all the packages linked for the given order. The ID of the order must be specified",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrderShippingPackage"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "orderId": 920,
                                    "packageId": 4,
                                    "weight": 485,
                                    "packageNumber": "87aAHC3V",
                                    "labelPath": "/path/to/label.pdf",
                                    "packageType": 18,
                                    "volume": 342.93
                                },
                                {
                                    "orderId": 893,
                                    "packageId": 1,
                                    "weight": 732,
                                    "packageNumber": "aJutZNVbt2eg",
                                    "labelPath": "/path/to/label.pdf",
                                    "packageType": 3,
                                    "volume": 994.45
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order.",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "with",
                        "type": "array",
                        "required": false,
                        "description": "Possible value is 'items'.",
                        "format": "",
                        "in": "query",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "type": "integer",
                        "required": false,
                        "description": "The page of results to search for.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "itemsPerPage",
                        "type": "integer",
                        "required": false,
                        "description": "The number of packages to list per page.",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "sortBy",
                        "type": "string",
                        "required": false,
                        "description": "The column to be sorted by",
                        "format": "string",
                        "in": "query"
                    },
                    {
                        "name": "sortOrder",
                        "type": "string",
                        "required": false,
                        "description": "The sort direction",
                        "format": "string",
                        "in": "query"
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/shipping/pallets/packages/items": {
            "get": {
                "summary": "List items contained in package pallets of an order",
                "description": "Lists items contained in package pallets of an order. The ID of the order is mandatory.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderShippingPackageItems"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/shipping/pallets/{palletId}/packages": {
            "delete": {
                "summary": "Delete all order shipping packages in a pallet",
                "description": "Deletes all order shipping packages in a pallet. The ID of the order and the ID of the pallet must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DeleteResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "palletId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the pallet",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            },
            "get": {
                "summary": "List all packages contained in pallets of an order",
                "description": "Lists all packages contained in pallets of an order. The ID of the order and of the pallet must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrderShippingPackage"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "orderId": 403,
                                    "packageId": 8,
                                    "weight": 972,
                                    "packageNumber": "NzdoHZMzvwUa",
                                    "labelPath": "/path/to/label.pdf",
                                    "packageType": 8,
                                    "volume": 971.97
                                },
                                {
                                    "orderId": 230,
                                    "packageId": 8,
                                    "weight": 438,
                                    "packageNumber": "yVFnCkUbw0B",
                                    "labelPath": "/path/to/label.pdf",
                                    "packageType": 27,
                                    "volume": 303.07
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "palletId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the pallet",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            },
            "put": {
                "summary": "Update all packages in a pallet",
                "description": "Updates all the packages in a pallet. The ID of the order and the ID of the pallet must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SimpleRestResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "palletId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the pallet",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/shipping/register_shipment": {
            "post": {
                "summary": "Register a shipment",
                "description": "Register a shipment for an order. The ID of the order must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SimpleRestResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "shippingProviderCode",
                        "type": "string",
                        "required": false,
                        "description": "The code of the shipping service provider",
                        "format": "string",
                        "in": "query"
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/shipping/reset_shipment": {
            "delete": {
                "summary": "Reset a shipment",
                "description": "Reset a shipment for an order. The ID of the order must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SimpleRestResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/shipping/shipping_information": {
            "delete": {
                "summary": "Delete shipping information",
                "description": "Deletes the shipping information. The ID of the order must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ShippingInformation"
                        },
                        "examples": {
                            "application/json": {
                                "orderId": 5,
                                "shippingServiceProvider": "DpdCloudService",
                                "transactionId": 7,
                                "shippingStatus": "prepared",
                                "shippingCosts": 5,
                                "additionalData": "Ab ratione dolorum delectus libero unde animi vel. Omnis mollitia consequatur earum et veritatis aperiam. Pariatur adipisci error non laborum.",
                                "registrationAt": "2016-10-03T13:15:50+02:00",
                                "shipmentAt": "2012-10-28T02:48:05+01:00"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            },
            "get": {
                "summary": "Get shipping information",
                "description": "Gets the shipping information. The ID of the order must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ShippingInformation"
                        },
                        "examples": {
                            "application/json": {
                                "orderId": 5,
                                "shippingServiceProvider": "DpdCloudService",
                                "transactionId": 7,
                                "shippingStatus": "open",
                                "shippingCosts": 6,
                                "additionalData": "Voluptatem sint iure voluptatem earum quas molestiae. Et consequuntur asperiores id ad. Sed incidunt dolores assumenda incidunt vitae.",
                                "registrationAt": "2021-12-17T16:01:09+01:00",
                                "shipmentAt": "2010-04-01T08:34:54+02:00"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/shipping/shipping_information/additional_data": {
            "put": {
                "summary": "Update additional data of the shipping information",
                "description": "Updates additional data of the shipping information. The ID of the order must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ShippingInformation"
                        },
                        "examples": {
                            "application/json": {
                                "orderId": 2,
                                "shippingServiceProvider": "DpdCloudService",
                                "transactionId": 3,
                                "shippingStatus": "prepared",
                                "shippingCosts": 9,
                                "additionalData": "Aut dolorem praesentium ullam est. Ipsum porro quos quis maiores. Beatae expedita rerum consequatur quaerat harum nesciunt aspernatur recusandae.",
                                "registrationAt": "2014-08-17T13:52:46+02:00",
                                "shipmentAt": "2001-02-23T14:47:14+01:00"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/shipping/shipping_information/export_label": {
            "get": {
                "summary": "Get Export label",
                "description": "Get Export label for an order ID.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/mixed"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/shipping/shipping_information/status": {
            "put": {
                "summary": "Update the shipping status of the shipping information",
                "description": "Updates the shipping status of the shipping information. The ID of the order must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ShippingInformation"
                        },
                        "examples": {
                            "application/json": {
                                "orderId": 4,
                                "shippingServiceProvider": "DpdCloudService",
                                "transactionId": 6,
                                "shippingStatus": "registered",
                                "shippingCosts": 4,
                                "additionalData": "Quo quisquam blanditiis rem mollitia consequuntur ipsa et. In repellendus eveniet id et. Ut aut facilis facilis quae autem voluptas omnis.",
                                "registrationAt": "2015-12-21T15:58:24+01:00",
                                "shipmentAt": "2003-08-11T07:51:22+02:00"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/status-history": {
            "get": {
                "summary": "Get the status history of an order",
                "description": "Gets the status history of an order. The status history is a list that contains information of status changes of the order. The ID of the order must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/StatusHistoryEntry"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "orderId": 473,
                                    "statusId": 4,
                                    "createdAt": "2023-06-27T04:22:26+02:00",
                                    "userId": 2,
                                    "procedureText": "Laudantium non deserunt ipsam."
                                },
                                {
                                    "orderId": 754,
                                    "statusId": 9,
                                    "createdAt": "2023-07-09T03:16:41+02:00",
                                    "userId": 4,
                                    "procedureText": "Dicta nihil perspiciatis."
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/subscriptions": {
            "post": {
                "summary": "Create a subscription from a parent order",
                "description": "Creates a subscription from a parent order. The parent order ID and the quantities to use must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 1,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "/rest/orders/{orderId}/subscriptions",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "statusId": {
                                    "type": "number",
                                    "description": "optional"
                                },
                                "ownerId": {
                                    "type": "integer",
                                    "description": "optional"
                                },
                                "intervalType": {
                                    "type": "string",
                                    "description": "optional allowed values are day, week, month, year"
                                },
                                "intervalValue": {
                                    "type": "integer",
                                    "description": "optional"
                                },
                                "startDate": {
                                    "type": "string",
                                    "description": "optional"
                                },
                                "endDate": {
                                    "type": "string",
                                    "description": "optional"
                                },
                                "quantities": {
                                    "type": "array",
                                    "items": []
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/subscriptions/validate": {
            "post": {
                "summary": "Validate order items for subscription creation from a parent order",
                "description": "Validate order items for subscription creation from a parent order. The parent order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/transactions": {
            "post": {
                "summary": "Create order item transactions for an order",
                "description": "Creates transactions including the full quantity for every order item that does not have an existing transaction. The order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrderItemTransaction"
                            }
                        },
                        "examples": {
                            "application/json": [
                                {
                                    "orderItemId": 291,
                                    "quantity": 64.99,
                                    "userId": 49,
                                    "identification": "quidem",
                                    "direction": "out",
                                    "status": "regular",
                                    "warehouseLocationId": 999,
                                    "batch": "quos",
                                    "bestBeforeDate": "1972-10-26",
                                    "createdAt": "2023-07-08T00:42:12+02:00",
                                    "updatedAt": "2023-06-30T21:06:04+02:00"
                                },
                                {
                                    "orderItemId": 391,
                                    "quantity": 96.47,
                                    "userId": 92,
                                    "identification": "delectus",
                                    "direction": "in",
                                    "status": "cancelled",
                                    "warehouseLocationId": 992,
                                    "batch": "recusandae",
                                    "bestBeforeDate": "2012-10-18",
                                    "createdAt": "2023-07-23T14:36:13+02:00",
                                    "updatedAt": "2023-07-10T21:34:36+02:00"
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "/rest/orders/{orderId}/transactions",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "direction": {
                                    "type": "string",
                                    "description": "The direction. Possible values are 'in' and 'out'.  allowed values are in, out"
                                },
                                "status": {
                                    "type": "string",
                                    "description": "The status. Possible values are 'regular' and 'cancelled'.  allowed values are regular, cancelled"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/warranties": {
            "post": {
                "summary": "Create a warranty from a parent order",
                "description": "Creates a warranty from a parent order. The parent order ID and the quantities to use must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 3,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "/rest/orders/{orderId}/warranties",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "statusId": {
                                    "type": "number",
                                    "description": "optional"
                                },
                                "ownerId": {
                                    "type": "integer",
                                    "description": "optional"
                                },
                                "quantities": {
                                    "type": "array",
                                    "items": []
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/orders/{orderId}/warranties/validate": {
            "post": {
                "summary": "Validate order items for create a warranty from a parent order",
                "description": "Validate order items for create a warranty from a parent order. The parent order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/redistributions": {
            "post": {
                "summary": "Create a redistribution",
                "description": "Create a redistribution",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 2,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "/rest/redistributions",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "typeId": {
                                    "type": "integer",
                                    "description": "The ID of the order type\n                                                          It is possible to define individual order types. However,\n                                                          the following types are available by default:\n\n* 1 = Sales order\n* 2 = Delivery\n* 3 = Returns\n* 4 = Credit note\n* 5 = Warranty\n* 6 = Repair\n* 7 = Offer\n* 8 = Advance order\n* 9 = Multi-order\n* 10 = Multi credit note\n* 11 = Multi delivery\n* 12 = Reorder\n* 13 = Partial delivery\n* 14 = Subscription\n* 15 = Redistribution optional allowed values are 15"
                                },
                                "orderItems": {
                                    "type": "array",
                                    "items": []
                                },
                                "relations": {
                                    "type": "array",
                                    "items": []
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/redistributions/preview": {
            "post": {
                "summary": "Get a redistribution create preview.",
                "description": "Returns a redistribution preview for the given order data without creating a redistribution.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            }
        },
        "/rest/redistributions/{orderId}": {
            "delete": {
                "summary": "Delete a redistribution",
                "description": "Deletes a redistribution. The order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SimpleRestResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            },
            "put": {
                "summary": "Update a redistribution",
                "description": "Updates a redistribution. The ID of the order must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 3,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order.",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "/rest/redistributions/{orderId}",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "typeId": {
                                    "type": "integer",
                                    "description": "The ID of the order type\n                                                          It is possible to define individual order types. However,\n                                                          the following types are available by default:\n\n* 1 = Sales order\n* 2 = Delivery\n* 3 = Returns\n* 4 = Credit note\n* 5 = Warranty\n* 6 = Repair\n* 7 = Offer\n* 8 = Advance order\n* 9 = Multi-order\n* 10 = Multi credit note\n* 11 = Multi delivery\n* 12 = Reorder\n* 13 = Partial delivery\n* 14 = Subscription\n* 15 = Redistribution optional allowed values are 15"
                                },
                                "orderItems": {
                                    "type": "array",
                                    "items": []
                                },
                                "relations": {
                                    "type": "array",
                                    "items": []
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/redistributions/{orderId}/book": {
            "post": {
                "summary": "Book an order in",
                "description": "Books an order in, e.g. an order of the type reorder. The ID of the order must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderBooking"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order.",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "deliveryNoteNumber",
                        "type": "string",
                        "required": false,
                        "description": "If desired, set the delivery note number provided by the supplier.",
                        "format": "string",
                        "in": "query"
                    }
                ]
            }
        },
        "/rest/redistributions/{orderId}/preview": {
            "put": {
                "summary": "Get a redistribution update preview",
                "description": "Returns a redistribution preview for the given order data without updating a redistribution. The order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/reorders": {
            "post": {
                "summary": "Create a reorder",
                "description": "Creates a new reorder.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 7,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "in": "body",
                        "name": "/rest/reorders",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "typeId": {
                                    "type": "integer",
                                    "description": "The ID of the order type\n                                                          It is possible to define individual order types. However,\n                                                          the following types are available by default:\n\n* 1 = Sales order\n* 2 = Delivery\n* 3 = Returns\n* 4 = Credit note\n* 5 = Warranty\n* 6 = Repair\n* 7 = Offer\n* 8 = Advance order\n* 9 = Multi-order\n* 10 = Multi credit note\n* 11 = Multi delivery\n* 12 = Reorder\n* 13 = Partial delivery\n* 14 = Subscription\n* 15 = Redistribution optional allowed values are 12"
                                },
                                "orderItems": {
                                    "type": "array",
                                    "items": []
                                },
                                "relations": {
                                    "type": "array",
                                    "items": []
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/reorders/preview": {
            "post": {
                "summary": "Get a reorder create preview.",
                "description": "Returns a reorder preview for the given order data without creating a reorder.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            }
        },
        "/rest/reorders/{orderId}": {
            "delete": {
                "summary": "Delete a reorder",
                "description": "Deletes a reorder. The order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SimpleRestResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            },
            "put": {
                "summary": "Update a reorder",
                "description": "Updates a reorder. The order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 4,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order.",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "/rest/reorders/{orderId}",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "typeId": {
                                    "type": "integer",
                                    "description": "The ID of the order type\n                                                          It is possible to define individual order types. However,\n                                                          the following types are available by default:\n\n* 1 = Sales order\n* 2 = Delivery\n* 3 = Returns\n* 4 = Credit note\n* 5 = Warranty\n* 6 = Repair\n* 7 = Offer\n* 8 = Advance order\n* 9 = Multi-order\n* 10 = Multi credit note\n* 11 = Multi delivery\n* 12 = Reorder\n* 13 = Partial delivery\n* 14 = Subscription\n* 15 = Redistribution optional allowed values are 12"
                                },
                                "orderItems": {
                                    "type": "array",
                                    "items": []
                                },
                                "relations": {
                                    "type": "array",
                                    "items": []
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/reorders/{orderId}/book": {
            "post": {
                "summary": "Book an order in",
                "description": "Books an order in, e.g. an order of the type reorder. The ID of the order must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OrderBooking"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order.",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "deliveryNoteNumber",
                        "type": "string",
                        "required": false,
                        "description": "If desired, set the delivery note number provided by the supplier.",
                        "format": "string",
                        "in": "query"
                    }
                ]
            }
        },
        "/rest/reorders/{orderId}/currency": {
            "put": {
                "summary": "Update the currency",
                "description": "Update the currency for a reorder",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 7,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order.",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/reorders/{orderId}/delivery_date": {
            "get": {
                "summary": "Get the delivery date",
                "description": "Get the delivery date for a reorder",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SimpleRestResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order.",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/reorders/{orderId}/delivery_dates": {
            "put": {
                "summary": "Calculate and save the delivery dates",
                "description": "Calculates and saves the delivery dates for the reorder and the reorder items. The order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 4,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "The ID of the order.",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/reorders/{orderId}/preview": {
            "put": {
                "summary": "Get a reorder update preview",
                "description": "Returns a reorder preview for the given order data without updating a reorder. The order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/repairs": {
            "post": {
                "summary": "Create a repair",
                "description": "Creates a repair.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 3,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            }
        },
        "/rest/repairs/items/{orderItemId}/assign_variation": {
            "post": {
                "summary": "Change an order item of type \"unassigned variation\" to \"variation\".",
                "description": "Change an order item of type \"unassigned variation\" to \"variation\". The ID of the order item and variation ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 2,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderItemId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/repairs/items/{orderItemId}/unassign_variation": {
            "post": {
                "summary": "Change an order item of type \"variation\" to \"unassigned variation\".",
                "description": "Change an order item of type \"variation\" to \"unassigned variation\". The ID of the order item must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 8,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderItemId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/repairs/preview": {
            "post": {
                "summary": "Get a repair order create preview.",
                "description": "Returns a repair order preview for the given order data without creating a repair order.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            }
        },
        "/rest/repairs/reasons": {
            "get": {
                "summary": "Get all order repair reasons",
                "description": "Gets all order repair reasons.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RepairReason"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            },
            "post": {
                "summary": "Set an order repair reason",
                "description": "Sets an order repair reason.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RepairReason"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            }
        },
        "/rest/repairs/reasons/{repairReasonId}": {
            "delete": {
                "summary": "Delete an order repair reason",
                "description": "Deletes an order repair reason. The repair reason ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SimpleRestResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "repairReasonId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            },
            "get": {
                "summary": "Get an order repair reason",
                "description": "Gets an order repair reason. The repair reason has to be specified by providing a repair reason ID.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RepairReason"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "repairReasonId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/repairs/status": {
            "get": {
                "summary": "Get all order repair status",
                "description": "Gets all order repair status.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RepairStatus"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            },
            "post": {
                "summary": "Set an order repair status",
                "description": "Sets an order repair status.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RepairStatus"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            }
        },
        "/rest/repairs/status/{repairStatusId}": {
            "delete": {
                "summary": "Delete an order repair status",
                "description": "Deletes an order repair status. The repair status ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SimpleRestResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "repairStatusId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            },
            "get": {
                "summary": "Get an order repair status",
                "description": "Gets an order repair status. The repair status has to be specified by providing a repair status ID.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/RepairStatus"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "repairStatusId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/repairs/{orderId}": {
            "delete": {
                "summary": "Delete a repair",
                "description": "Deletes a repair. The order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SimpleRestResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            },
            "put": {
                "summary": "Update a repair",
                "description": "Updates a repair. The order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 5,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/repairs/{orderId}/book": {
            "post": {
                "summary": "Book out order items",
                "description": "Books out the order items of an order. The ID of the order must be specified and a booking date can be specified. The current date and time will be used if no date is specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SimpleRestResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "/rest/repairs/{orderId}/book",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": ""
                                },
                                "bookingDate": {
                                    "type": "string",
                                    "description": ""
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/repairs/{orderId}/cancel_booking": {
            "post": {
                "summary": "Revert outgoing stock",
                "description": "Cancellation the booking of an order. The ID of the order must be specified. With the array 'quantities' the items to cancel can be defined. If 'quantities' is not given, the whole order will be cancelled and the booking date will be deleted. If 'quantities' is defined, the booking date won't be reset.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SimpleRestResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "/rest/repairs/{orderId}/cancel_booking",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "changeStatus": {
                                    "type": "boolean",
                                    "description": ""
                                },
                                "quantities": {
                                    "type": "array",
                                    "items": []
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/repairs/{orderId}/cancel_booking/validate": {
            "post": {
                "summary": "Validate cancellation of the booking of an order",
                "description": "Validates cancellation of the booking of an order. The ID of the order must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/repairs/{orderId}/preview": {
            "put": {
                "summary": "Get a repair order update preview",
                "description": "Returns a repair order preview for the given order data without updating a repair order. The order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/returns": {
            "post": {
                "summary": "Create a return",
                "description": "Creates a return.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 9,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            }
        },
        "/rest/returns/items/{orderItemId}/assign_variation": {
            "post": {
                "summary": "Change an order item of type \"unassigned variation\" to \"variation\".",
                "description": "Change an order item of type \"unassigned variation\" to \"variation\". The ID of the order item and variation ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 1,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderItemId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/returns/items/{orderItemId}/unassign_variation": {
            "post": {
                "summary": "Change an order item of type \"variation\" to \"unassigned variation\".",
                "description": "Change an order item of type \"variation\" to \"unassigned variation\". The ID of the order item must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 8,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderItemId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/returns/preview": {
            "post": {
                "summary": "Get a return create preview.",
                "description": "Returns a return preview for the given order data without creating a return.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            }
        },
        "/rest/returns/reasons": {
            "get": {
                "summary": "Get all order return reasons",
                "description": "Gets all order return reasons.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ReturnReason"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            },
            "post": {
                "summary": "Set an order return reason",
                "description": "Sets an order return reason.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ReturnReason"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            }
        },
        "/rest/returns/reasons/{returnReasonsId}": {
            "delete": {
                "summary": "Delete an order return reason",
                "description": "Deletes an order return reason. The return reason ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SimpleRestResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "returnReasonsId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            },
            "get": {
                "summary": "Get an order return reason",
                "description": "Gets an order return reason. The return reason has to be specified by providing a return reason ID.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ReturnReason"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "returnReasonsId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/returns/status": {
            "get": {
                "summary": "Get all order return status",
                "description": "Gets all order return status.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ReturnStatus"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            },
            "post": {
                "summary": "Set an order return status",
                "description": "Sets an order return status.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ReturnStatus"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            }
        },
        "/rest/returns/status/{returnStatusId}": {
            "delete": {
                "summary": "Delete an order return status",
                "description": "Deletes an order return status. The return status ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SimpleRestResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "returnStatusId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            },
            "get": {
                "summary": "Get an order return status",
                "description": "Gets an order return status. The return status has to be specified by providing a return status ID.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ReturnStatus"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "returnStatusId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/returns/{orderId}": {
            "delete": {
                "summary": "Delete a return",
                "description": "Deletes a return. The order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SimpleRestResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            },
            "put": {
                "summary": "Update a return",
                "description": "Updates a return. The order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 2,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/returns/{orderId}/book": {
            "post": {
                "summary": "Book order items of return",
                "description": "Books order items of return. The parent order ID and the quantities to use must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SimpleRestResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "/rest/returns/{orderId}/book",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "quantities": {
                                    "type": "array",
                                    "items": []
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/returns/{orderId}/book/validate": {
            "post": {
                "summary": "Validate booking of an return",
                "description": "Validates booking of an return. The ID of the order must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/returns/{orderId}/preview": {
            "put": {
                "summary": "Get a return update preview",
                "description": "Returns a return preview for the given order data without updating a return. The order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/sales_orders": {
            "post": {
                "summary": "Create a sales order",
                "description": "Creates a sales order.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 8,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            }
        },
        "/rest/sales_orders/group": {
            "post": {
                "summary": "Group multiple orders in one order.",
                "description": "Groups multiple orders in one order. The IDs of the orders to group must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 4,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            }
        },
        "/rest/sales_orders/incomplete/preview": {
            "post": {
                "summary": "Get a sales order create incomplete preview.",
                "description": "Returns a sales order preview for the given incomplete order data without creating a sales order.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            }
        },
        "/rest/sales_orders/items/{orderItemId}/assign_variation": {
            "post": {
                "summary": "Change an order item of type \"unassigned variation\" to \"variation\".",
                "description": "Change an order item of type \"unassigned variation\" to \"variation\". The ID of the order item and variation ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 8,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderItemId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/sales_orders/items/{orderItemId}/unassign_variation": {
            "post": {
                "summary": "Change an order item of type \"variation\" to \"unassigned variation\".",
                "description": "Change an order item of type \"variation\" to \"unassigned variation\". The ID of the order item must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 9,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderItemId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/sales_orders/preview": {
            "post": {
                "summary": "Get a sales order create preview.",
                "description": "Returns a sales order preview for the given order data without creating a sales order.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            }
        },
        "/rest/sales_orders/{orderId}": {
            "delete": {
                "summary": "Delete a sales order",
                "description": "Deletes a sales order. The order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SimpleRestResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            },
            "put": {
                "summary": "Update a sales order",
                "description": "Updates a sales order. The order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 8,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/sales_orders/{orderId}/book": {
            "post": {
                "summary": "Book out order items",
                "description": "Books out the order items of an order. The ID of the order must be specified and a booking date can be specified. The current date and time will be used if no date is specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SimpleRestResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "/rest/sales_orders/{orderId}/book",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": ""
                                },
                                "bookingDate": {
                                    "type": "string",
                                    "description": ""
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/sales_orders/{orderId}/cancel_booking": {
            "post": {
                "summary": "Revert outgoing stock",
                "description": "Cancellation the booking of an order. The ID of the order must be specified. With the array 'quantities' the items to cancel can be defined. If 'quantities' is not given, the whole order will be cancelled and the booking date will be deleted. If 'quantities' is defined, the booking date won't be reset.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SimpleRestResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "/rest/sales_orders/{orderId}/cancel_booking",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "changeStatus": {
                                    "type": "boolean",
                                    "description": ""
                                },
                                "quantities": {
                                    "type": "array",
                                    "items": []
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/sales_orders/{orderId}/cancel_booking/validate": {
            "post": {
                "summary": "Validate cancellation of the booking of an order",
                "description": "Validates cancellation of the booking of an order. The ID of the order must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/sales_orders/{orderId}/preview": {
            "put": {
                "summary": "Get a sales order update preview.",
                "description": "Returns a sales order preview for the given order data without updating a sales order. The order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/sales_orders/{orderId}/split": {
            "post": {
                "summary": "Split a sales order into at least two sales orders",
                "description": "Splits a sales order into at least two sales orders. The parent order ID and the quantities to use must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Collection"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/shipping_center/reset_shipments": {
            "delete": {
                "summary": "Reset a shipment",
                "description": "Reset the shipments for the given order IDs. At least one ID of an order must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SimpleRestResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderIds",
                        "type": "array",
                        "required": true,
                        "description": "The IDs of the orders that you want to reset the shipments for",
                        "format": "",
                        "in": "query",
                        "items": {
                            "type": "integer"
                        }
                    }
                ]
            }
        },
        "/rest/subscriptions": {
            "post": {
                "summary": "Create a subscription",
                "description": "Creates a subscription",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 1,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            }
        },
        "/rest/subscriptions/preview": {
            "post": {
                "summary": "Get a subscription create preview.",
                "description": "Returns a subscription preview for the given order data without creating a subscription.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            }
        },
        "/rest/subscriptions/{orderId}": {
            "delete": {
                "summary": "Delete a subscription",
                "description": "Deletes a subscription. The order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SimpleRestResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            },
            "put": {
                "summary": "Update a subscription",
                "description": "Updates a subscription. The order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 4,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/subscriptions/{orderId}/currency": {
            "put": {
                "summary": "Update the currency",
                "description": "Update the currency for a subscription",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 7,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/subscriptions/{orderId}/manual_run": {
            "post": {
                "summary": "Create an order for today for a given subscription.",
                "description": "Creates an order for today for a given subscription.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 1,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/subscriptions/{orderId}/preview": {
            "put": {
                "summary": "Get a subscription update preview",
                "description": "Returns a subscription preview for the given order data without updating a subscription. The order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/system/settings/taric_vat_assignment": {
            "get": {
                "summary": "List taric vat assignments",
                "description": "Lists the specified taric vat assignments in the request. This checks the results for the page and items per page\nspecified in the request.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "page": {
                                    "type": "integer",
                                    "description": "Current page of the response"
                                },
                                "totalsCount": {
                                    "type": "integer",
                                    "description": "The total number of entries in the response"
                                },
                                "isLastPage": {
                                    "type": "boolean",
                                    "description": "Flag that indicates if the page shown is the last page of the response"
                                },
                                "lastPageNumber": {
                                    "type": "integer",
                                    "description": "The last page number"
                                },
                                "firstOnPage": {
                                    "type": "integer",
                                    "description": "The index of the first item of the current page result"
                                },
                                "lastOnPage": {
                                    "type": "integer",
                                    "description": "The index of the last item of the current page result"
                                },
                                "itemsPerPage": {
                                    "type": "integer",
                                    "description": "The requested amount of items per result page"
                                },
                                "entries": {
                                    "type": "array",
                                    "description": "List of TaricVatAssignment",
                                    "items": {
                                        "$ref": "#/definitions/TaricVatAssignment"
                                    }
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "page": 1,
                                "totalsCount": 2,
                                "isLastPage": true,
                                "entries": [
                                    {
                                        "taricCode": "4672915384",
                                        "countryId": 10,
                                        "vatField": 0
                                    },
                                    {
                                        "taricCode": "6999218965",
                                        "countryId": 4,
                                        "vatField": 1
                                    }
                                ],
                                "lastPageNumber": 1,
                                "firstOnPage": 1,
                                "lastOnPage": 2,
                                "itemsPerPage": 25
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "type": "integer",
                        "required": false,
                        "description": "The requested page of results",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "itemsPerPage",
                        "type": "integer",
                        "required": false,
                        "description": "The number of results per page",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "countryId",
                        "type": "integer",
                        "required": false,
                        "description": "The country ID of the taric vat assignments",
                        "format": "integer",
                        "in": "query"
                    },
                    {
                        "name": "taricCode",
                        "type": "integer",
                        "required": false,
                        "description": "The taric code of the taric vat assignments",
                        "format": "integer",
                        "in": "query"
                    }
                ]
            }
        },
        "/rest/system/settings/taric_vat_assignment/{taricCode}/{countryId}": {
            "delete": {
                "summary": "Delete taric vat assignment",
                "description": "Deletes a taric code. The taric code and the country ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SimpleRestResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "taricCode",
                        "type": "string",
                        "required": true,
                        "description": "The taric code.",
                        "format": "string",
                        "in": "path"
                    },
                    {
                        "name": "countryId",
                        "type": "integer",
                        "required": true,
                        "description": "The country id.",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "/rest/system/settings/taric_vat_assignment/{taricCode}/{countryId}",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "taricCode": {
                                    "type": "integer",
                                    "description": "The taric code  matching to /^[0-9a-z]{1,14}$/"
                                },
                                "countryId": {
                                    "type": "integer",
                                    "description": "The ID of the country that the taric code configuration belongs to"
                                }
                            }
                        }
                    }
                ]
            },
            "get": {
                "summary": "Get taric vat assignment",
                "description": "Gets a taric vat assignment. The taric code and the country ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TaricVatAssignment"
                        },
                        "examples": {
                            "application/json": {
                                "taricCode": "7388961543",
                                "countryId": 5,
                                "vatField": 5
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "taricCode",
                        "type": "string",
                        "required": true,
                        "description": "The taric code.",
                        "format": "string",
                        "in": "path"
                    },
                    {
                        "name": "countryId",
                        "type": "integer",
                        "required": true,
                        "description": "The country id.",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            },
            "post": {
                "summary": "Create taric vat assignment",
                "description": "Creates a taric vat assignment. The taric code and the country ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TaricVatAssignment"
                        },
                        "examples": {
                            "application/json": {
                                "taricCode": "3278255426",
                                "countryId": 1,
                                "vatField": 3
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "taricCode",
                        "type": "string",
                        "required": true,
                        "description": "The taric code.",
                        "format": "string",
                        "in": "path"
                    },
                    {
                        "name": "countryId",
                        "type": "integer",
                        "required": true,
                        "description": "The country id.",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "/rest/system/settings/taric_vat_assignment/{taricCode}/{countryId}",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "taricCode": {
                                    "type": "integer",
                                    "description": "The taric code  matching to /^[0-9a-z]{1,14}$/"
                                },
                                "countryId": {
                                    "type": "integer",
                                    "description": "The ID of the country that the taric code configuration belongs to"
                                },
                                "vatField": {
                                    "type": "string",
                                    "description": "The ID of the VAT rate of the taric code / country id combination."
                                }
                            }
                        }
                    }
                ]
            },
            "put": {
                "summary": "Update taric vat assignment",
                "description": "Updates a taric vat assignment. The taric code and the country ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TaricVatAssignment"
                        },
                        "examples": {
                            "application/json": {
                                "taricCode": "4006090271",
                                "countryId": 3,
                                "vatField": 1
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "taricCode",
                        "type": "string",
                        "required": true,
                        "description": "The taric code.",
                        "format": "string",
                        "in": "path"
                    },
                    {
                        "name": "countryId",
                        "type": "integer",
                        "required": true,
                        "description": "The country id.",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "/rest/system/settings/taric_vat_assignment/{taricCode}/{countryId}",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "taricCode": {
                                    "type": "integer",
                                    "description": "The taric code  matching to /^[0-9a-z]{1,14}$/"
                                },
                                "countryId": {
                                    "type": "integer",
                                    "description": "The ID of the country that the taric code configuration belongs to"
                                },
                                "vatField": {
                                    "type": "string",
                                    "description": "The ID of the VAT rate of the taric code / country id combination."
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/warranties": {
            "post": {
                "summary": "Create a warranty",
                "description": "Creates a warranty.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 1,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            }
        },
        "/rest/warranties/items/{orderItemId}/assign_variation": {
            "post": {
                "summary": "Change an order item of type \"unassigned variation\" to \"variation\".",
                "description": "Change an order item of type \"unassigned variation\" to \"variation\". The ID of the order item and variation ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 4,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderItemId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/warranties/items/{orderItemId}/unassign_variation": {
            "post": {
                "summary": "Change an order item of type \"variation\" to \"unassigned variation\".",
                "description": "Change an order item of type \"variation\" to \"unassigned variation\". The ID of the order item must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 1,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderItemId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/warranties/preview": {
            "post": {
                "summary": "Get a warranty create preview.",
                "description": "Returns a warranty preview for the given order data without creating a warranty.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            }
        },
        "/rest/warranties/{orderId}": {
            "delete": {
                "summary": "Delete a warranty",
                "description": "Deletes a warranty. The order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SimpleRestResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            },
            "put": {
                "summary": "Update a warranty",
                "description": "Updates a warranty. The order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Order"
                        },
                        "examples": {
                            "application/json": {
                                "statusName": "",
                                "plentyId": 794,
                                "typeId": 1,
                                "lockStatus": "unlocked",
                                "locationId": null,
                                "createdAt": null,
                                "updatedAt": null,
                                "statusId": null,
                                "ownerId": null,
                                "relations": [],
                                "properties": [
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "value": "unpaid"
                                    }
                                ],
                                "dates": [
                                    {
                                        "orderId": null,
                                        "typeId": 2,
                                        "date": null
                                    },
                                    {
                                        "orderId": null,
                                        "typeId": 4,
                                        "date": null
                                    }
                                ]
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/warranties/{orderId}/book": {
            "post": {
                "summary": "Book out order items",
                "description": "Books out the order items of an order. The ID of the order must be specified and a booking date can be specified. The current date and time will be used if no date is specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SimpleRestResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "/rest/warranties/{orderId}/book",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": ""
                                },
                                "bookingDate": {
                                    "type": "string",
                                    "description": ""
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/warranties/{orderId}/cancel_booking": {
            "post": {
                "summary": "Revert outgoing stock",
                "description": "Cancellation the booking of an order. The ID of the order must be specified. With the array 'quantities' the items to cancel can be defined. If 'quantities' is not given, the whole order will be cancelled and the booking date will be deleted. If 'quantities' is defined, the booking date won't be reset.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SimpleRestResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "in": "body",
                        "name": "/rest/warranties/{orderId}/cancel_booking",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "changeStatus": {
                                    "type": "boolean",
                                    "description": ""
                                },
                                "quantities": {
                                    "type": "array",
                                    "items": []
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/rest/warranties/{orderId}/cancel_booking/validate": {
            "post": {
                "summary": "Validate cancellation of the booking of an order",
                "description": "Validates cancellation of the booking of an order. The ID of the order must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/warranties/{orderId}/preview": {
            "put": {
                "summary": "Get a warranty update preview",
                "description": "Returns a warranty preview for the given order data without updating a warranty. The order ID must be specified.",
                "tags": [
                    "Order"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "orderId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        }
    },
    "securityDefinitions": {
        "oAuth2": {
            "type": "oauth2",
            "description": "Authorization for Plentymarkets REST-API Routes",
            "flow": "accessCode",
            "authorizationUrl": "https://example.com/oauth/authorize",
            "tokenUrl": "https://example.com/oauth/token"
        }
    },
    "definitions": {
        "mixed": {
            "type": "object",
            "properties": []
        },
        "TokenData": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "The access token. Required for REST call authentication."
                },
                "tokenType": {
                    "type": "string",
                    "description": "The token type. The token type is Bearer."
                },
                "expiresIn": {
                    "type": "integer",
                    "description": "The expiration time in seconds that the access token is valid for"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "The refresh token. Required for refreshing the access token."
                }
            }
        },
        "AccountingLocation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the accounting location"
                },
                "countryId": {
                    "type": "integer",
                    "description": "The ID of the country of the accounting location"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the accounting location"
                },
                "clientId": {
                    "type": "integer",
                    "description": "The ID of the client that the accounting location belongs to"
                },
                "plentyId": {
                    "type": "integer",
                    "description": "The plenty ID of the client that the accounting location belongs to"
                }
            }
        },
        "PostingAccounts": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": ""
                },
                "locationId": {
                    "type": "integer",
                    "description": ""
                },
                "type": {
                    "type": "string",
                    "description": ""
                },
                "position": {
                    "type": "integer",
                    "description": ""
                },
                "subtype": {
                    "type": "string",
                    "description": ""
                },
                "name": {
                    "type": "string",
                    "description": ""
                },
                "account": {
                    "type": "string",
                    "description": ""
                }
            }
        },
        "RevenueAccountLocationConfiguration": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the revenue account configuration"
                },
                "locationId": {
                    "type": "integer",
                    "description": "The ID of the accounting location that the configuration belongs to"
                },
                "accountEu": {
                    "type": "string",
                    "description": "The account used for revenues that are exempt from VAT and that were sold within the European Union"
                },
                "accountExport": {
                    "type": "string",
                    "description": "The account used for revenues that are exempt from VAT and that were sold to outside the European Union"
                }
            }
        },
        "RevenueAccountCountryConfiguration": {
            "type": "object",
            "properties": {
                "countryId": {
                    "type": "integer",
                    "description": "The ID of the country that the account configuration belongs to"
                },
                "revenueAccountLocationId": {
                    "type": "integer",
                    "description": "The ID configuration of the revenue account that these accounts are for."
                }
            }
        },
        "DebtorAccountConfiguration": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the debtor account configuration"
                },
                "locationId": {
                    "type": "integer",
                    "description": "The ID of the accounting location that the debtor account is associated with."
                },
                "mode": {
                    "type": "string",
                    "description": "The mode describes the criteria based on which pending amounts are assigned to a debtor account. The following modes are available:\n<ul>\n<li>character        = The debtor accounts are selected based on the first character of customer information. The information and the order of the information that will be used are defined with the sequence. There are 3 different sequences available.</li>\n<li>payment          = The debtor accounts are selected based on the payment method.</li>\n<li>country          = The debtor accounts are selected based on the country of delivery.</li>\n<li>country_payment  = The debtor accounts are selected based on two criteria. The first criteria is the country and if the country is same as the country of the accounting location then the payment method is used to select the deptor account.</li>\n</ul>"
                },
                "sequence": {
                    "type": "string",
                    "description": "The sequence defines the order in which customer information will be used for the debtor account assignment if the character made has been chosen. The following sequences are available:\n<ul>\n<li>FNV = stands for the sequence: company, lastname, firstname</li>\n<li>NVF = stands for the sequence: lastname, firstname, company</li>\n<li>NFV = stands for the sequence: lastname, company, firstname</li>\n</ul>"
                },
                "standard": {
                    "type": "string",
                    "description": "The standard debtor account that will be used if no matching debtor account can be found."
                },
                "save": {
                    "type": "boolean",
                    "description": "Flag that indicates if the debtor account shall be saved within the contact data."
                }
            }
        },
        "Collection": {
            "type": "object",
            "properties": []
        },
        "PostingKeyConfiguration": {
            "type": "object",
            "properties": {
                "locationId": {
                    "type": "integer",
                    "description": "The ID of the accounting location that the configuration belongs to"
                }
            }
        },
        "AccountingLocationSettings": {
            "type": "object",
            "properties": {
                "locationId": {
                    "type": "integer",
                    "description": "The ID of the accounting location"
                },
                "isInvoiceEUNet": {
                    "type": "boolean",
                    "description": "Is the invoice net for EU?"
                },
                "isInvoiceExportNet": {
                    "type": "boolean",
                    "description": "Is the invoice net for export?"
                },
                "showShippingVat": {
                    "type": "boolean",
                    "description": "Show the vat for shipping costs on the invoice?"
                },
                "isSmallBusiness": {
                    "type": "boolean",
                    "description": "Is it a small business?"
                },
                "numberOfDecimalPlaces": {
                    "type": "integer",
                    "description": "The number of decimal places for prices"
                },
                "roundTotalsOnly": {
                    "type": "boolean",
                    "description": "Do only round totals?"
                },
                "isReverseCharge": {
                    "type": "boolean",
                    "description": "Is the reverse charge method activated?"
                }
            }
        },
        "Account": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the account"
                },
                "number": {
                    "type": "string",
                    "description": "The number of the account"
                },
                "companyName": {
                    "type": "string",
                    "description": "The company name"
                },
                "taxIdNumber": {
                    "type": "string",
                    "description": "The ID of the tax number"
                },
                "valuta": {
                    "type": "integer",
                    "description": "The valuta date in days specified for the account"
                },
                "discountDays": {
                    "type": "integer",
                    "description": "The early payment discount period in days specified for the account"
                },
                "discountPercent": {
                    "type": "number",
                    "description": "The early payment discount in percent specified for the account"
                },
                "timeForPaymentAllowedDays": {
                    "type": "integer",
                    "description": "The payment due date in days specified for the account"
                },
                "salesRepresentativeContactId": {
                    "type": "integer",
                    "description": "The contact ID of the sales representative"
                },
                "userId": {
                    "type": "integer",
                    "description": "The ID of the account owner"
                },
                "deliveryTime": {
                    "type": "integer",
                    "description": "The delivery time for the supplier"
                },
                "dealerMinOrderValue": {
                    "type": "number",
                    "description": "The minimum order value for the supplier"
                },
                "supplierCurrency": {
                    "type": "string",
                    "description": "The currency used by a supplier"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the account was created as unix timestamp"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the account was last updated as unix timestamp"
                }
            }
        },
        "Address": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the address"
                },
                "gender": {
                    "type": "string",
                    "description": "The gender (\"female\", \"male\" or \"diverse\")"
                },
                "name1": {
                    "type": "string",
                    "description": "The name 1 field (defaults to: company name)"
                },
                "name2": {
                    "type": "string",
                    "description": "The name 2 field (defaults to: first name)"
                },
                "name3": {
                    "type": "string",
                    "description": "The name 3 field (defaults to: last name)"
                },
                "name4": {
                    "type": "string",
                    "description": "The name 4 field (defaults to: c/o)"
                },
                "address1": {
                    "type": "string",
                    "description": "The address 1 field (defaults to: street|'PACKSTATION'|'POSTFILIALE')"
                },
                "address2": {
                    "type": "string",
                    "description": "The address 2 field (defaults to: houseNumber|packstationNo)"
                },
                "address3": {
                    "type": "string",
                    "description": "The address 3 field (defaults to: additional)"
                },
                "address4": {
                    "type": "string",
                    "description": "The address 4 field is currently undefined and can be freely used."
                },
                "postalCode": {
                    "type": "string",
                    "description": "The postcode"
                },
                "town": {
                    "type": "string",
                    "description": "The town"
                },
                "countryId": {
                    "type": "integer",
                    "description": "The ID of the country"
                },
                "stateId": {
                    "type": "integer",
                    "description": "The ID of the state"
                },
                "readOnly": {
                    "type": "boolean",
                    "description": "Flag that indicates if the data record is read only"
                },
                "companyName": {
                    "type": "string",
                    "description": "The company name (alias for name1, <i>read only</i>)"
                },
                "firstName": {
                    "type": "string",
                    "description": "The first name (alias for name2, <i>read only</i>)"
                },
                "lastName": {
                    "type": "string",
                    "description": "The last name (alias for name3, <i>read only</i>)"
                },
                "careOf": {
                    "type": "string",
                    "description": "The c/o (alias for name4, <i>read only</i>)"
                },
                "street": {
                    "type": "string",
                    "description": "The street (alias for address1, <i>read only</i>)"
                },
                "houseNumber": {
                    "type": "string",
                    "description": "The house number (alias for address2, <i>read only</i>)"
                },
                "additional": {
                    "type": "string",
                    "description": "The additional address information (alias for address3, <i>read only</i>)"
                },
                "checkedAt": {
                    "type": "string",
                    "description": "The time the address was checked as unix timestamp"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the address was created as unix timestamp"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the address was last updated as unix timestamp"
                },
                "taxIdNumber": {
                    "type": "string",
                    "description": "The taxIdNumber option (alias for option with typeId 1, <i>read only</i>)"
                },
                "externalId": {
                    "type": "string",
                    "description": "The externalId option (alias for option with typeId 2, <i>read only</i>)"
                },
                "entryCertificate": {
                    "type": "boolean",
                    "description": "The entryCertificate option (alias for option with typeId 3, <i>read only</i>)"
                },
                "phone": {
                    "type": "string",
                    "description": "The phone option (alias for option with typeId 4, <i>read only</i>)"
                },
                "email": {
                    "type": "string",
                    "description": "The email option (alias for option with typeId 5, <i>read only</i>)"
                },
                "postident": {
                    "type": "string",
                    "description": "The PostIdent option (alias for option with typeId 6, <i>read only</i>)"
                },
                "personalNumber": {
                    "type": "string",
                    "description": "The personal number option (alias for option with typeId 7, <i>read only</i>)"
                },
                "fsk": {
                    "type": "string",
                    "description": "The age rating option (alias for option with typeId 8, <i>read only</i>)"
                },
                "birthday": {
                    "type": "string",
                    "description": "The birthday option (alias for option with typeId 9, <i>read only</i>)"
                },
                "title": {
                    "type": "string",
                    "description": "The title option (alias for option with typeId 11, <i>read only</i>)"
                },
                "sessionId": {
                    "type": "string",
                    "description": "The fronetnd session ID that was used when the address was created (alias for option with typeId 10, <i>read only</i>)"
                },
                "contactPerson": {
                    "type": "string",
                    "description": "The contact person option (alias for option with typeId 12, <i>read only</i>)"
                },
                "externalCustomerId": {
                    "type": "string",
                    "description": "The external customer ID option (alias for option with typeId 13, <i>read only</i>)"
                },
                "packstationNo": {
                    "type": "string",
                    "description": "The packstation number (alias for houseNumber and address2, <i>read only</i>)"
                },
                "isPackstation": {
                    "type": "boolean",
                    "description": "Flag that indicates if the address is a packstation"
                },
                "isPostfiliale": {
                    "type": "boolean",
                    "description": "Flag that indicates if the address is a postfiliale (post office)"
                }
            }
        },
        "AddressContactRelation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the address contact relation"
                },
                "contactId": {
                    "type": "integer",
                    "description": "The ID of the contact"
                },
                "typeId": {
                    "type": "integer",
                    "description": "The type ID of the address. Possible values:\n<ul>\n<li>Invoice address = 1</li>\n<li>Delivery address = 2</li>\n</ul>"
                },
                "addressId": {
                    "type": "integer",
                    "description": "The ID of the address"
                },
                "isPrimary": {
                    "type": "boolean",
                    "description": "Flag that indicates if the address is primary"
                }
            }
        },
        "AddressOptionType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the address option type. It is possible to define individual types. The following types are available by default:\n<ul>\n<li>1 = VAT number</li>\n<li>2 = External address ID</li>\n<li>3 = Entry certificate</li>\n<li>4 = Telephone</li>\n<li>5 = Email</li>\n<li>6 = Post number</li>\n<li>7 = Personal id</li>\n<li>8 = BBFC (age rating)</li>\n<li>9 = Birthday</li>\n<li>10 = Session ID</li>\n<li>11 = Title</li>\n<li>12 = Contact person</li>\n<li>13 = External customer ID</li>\n</ul>"
                },
                "position": {
                    "type": "integer",
                    "description": "The position for sorting"
                },
                "nonErasable": {
                    "type": "integer",
                    "description": "Flag that indicates if the type can be deleted"
                }
            }
        },
        "AddressOption": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the address option"
                },
                "addressId": {
                    "type": "integer",
                    "description": "The ID of the address"
                },
                "typeId": {
                    "type": "integer",
                    "description": "The ID of the address option type"
                },
                "value": {
                    "type": "string",
                    "description": "The option value"
                },
                "position": {
                    "type": "integer",
                    "description": "The position for sorting"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the option was created as unix timestamp"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the option was last updated as unix timestamp"
                }
            }
        },
        "AddressPosRelation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the address POS relation"
                },
                "posBaseId": {
                    "type": "string",
                    "description": "The ID of the POS base"
                },
                "addressId": {
                    "type": "string",
                    "description": "The ID of the address"
                },
                "typeId": {
                    "type": "integer",
                    "description": "The ID of the relation type"
                }
            }
        },
        "AddressRelationType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the address relation type. The following types are available by default and cannot be deleted:\n<ul>\n<li>1 = Billing address</li>\n<li>2 = Delivery address</li>\n<li>3 = Sender address</li>\n<li>4 = Return address</li>\n<li>5 = Client address</li>\n<li>6 = Contractor address</li>\n<li>7 = Warehouse address</li>\n<li>8 = POS address</li>\n</ul>"
                },
                "position": {
                    "type": "integer",
                    "description": "The position for sorting"
                },
                "nonErasable": {
                    "type": "integer",
                    "description": "Flag that indicates if the type can be deleted"
                }
            }
        },
        "AddressWarehouseRelation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the address warehouse relation"
                },
                "warehouseId": {
                    "type": "integer",
                    "description": "The ID of the warehouse"
                },
                "typeId": {
                    "type": "integer",
                    "description": "The ID of the type"
                },
                "addressId": {
                    "type": "integer",
                    "description": "The ID of the address"
                }
            }
        },
        "AccountContactRelation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the account contact relation"
                },
                "accountId": {
                    "type": "integer",
                    "description": "The ID of the foreign key account"
                },
                "contactId": {
                    "type": "integer",
                    "description": "The ID of the foreign key contact"
                }
            }
        },
        "Contact": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the contact"
                },
                "externalId": {
                    "type": "string",
                    "description": "The external ID of the contact"
                },
                "number": {
                    "type": "string",
                    "description": "The number of the contact (previous customer number)"
                },
                "typeId": {
                    "type": "integer",
                    "description": "The ID of the contact type"
                },
                "firstName": {
                    "type": "string",
                    "description": "The first name of the contact"
                },
                "lastName": {
                    "type": "string",
                    "description": "The last name of the contact"
                },
                "fullName": {
                    "type": "string",
                    "description": "The full name of the contact. A concatenation of first and last name."
                },
                "email": {
                    "type": "string",
                    "description": "The private email address of the contact"
                },
                "secondaryEmail": {
                    "type": "string",
                    "description": "The secondary private email address of the contact"
                },
                "gender": {
                    "type": "string",
                    "description": "The gender of the contact (\"female\", \"male\" or \"diverse\")"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the contact, e.g. a doctorate"
                },
                "formOfAddress": {
                    "type": "string",
                    "description": "The form of address for the contact"
                },
                "newsletterAllowanceAt": {
                    "type": "string",
                    "description": "The time the contact registered for the newsletter as unix timestamp"
                },
                "classId": {
                    "type": "integer",
                    "description": "The ID of the contact class"
                },
                "blocked": {
                    "type": "integer",
                    "description": "The blocked status of the contact. Contacts can be blocked for a specific client (store). Possible values:\n<ul>\n<li> 0 = not blocked</li>\n<li> 1 = blocked</li>\n</ul>"
                },
                "rating": {
                    "type": "integer",
                    "description": "The rating of the contact. This rating is for internal use only.\n5 red stars are for the worst and 5 yellow stars for the best rating. Possible values:\n<ul>\n<li>-5 = 5 red stars (worst rating)</li>\n<li>-4 = 4 red stars</li>\n<li>-3 = 3 red stars</li>\n<li>-2 = 2 red stars</li>\n<li>-1 = 1 red star</li>\n<li>0 = 5 grey stars, no rating saved for the contact</li>\n<li>1 = 1 yellow star</li>\n<li>2 = 2 yellow stars</li>\n<li>3 = 3 yellow stars</li>\n<li>4 = 4 yellow stars</li>\n<li>5 = 5 yellow stars (best rating)</li>\n</ul>"
                },
                "bookAccount": {
                    "type": "string",
                    "description": "The book account (debtor account) of the contact.\nAn additional, separate number that generally corresponds to the customer number or\nthe debtor number in your financial accounting."
                },
                "lang": {
                    "type": "string",
                    "description": "The language of the contact"
                },
                "referrerId": {
                    "type": "number",
                    "description": "The origin of the contact"
                },
                "plentyId": {
                    "type": "integer",
                    "description": "The client (store) that is assigned to the contact"
                },
                "userId": {
                    "type": "integer",
                    "description": "The owner ID of the contact"
                },
                "birthdayAt": {
                    "type": "string",
                    "description": "The date of birth of the contact"
                },
                "lastLoginAt": {
                    "type": "string",
                    "description": "The date of the last login of the contact"
                },
                "lastLoginAtTimestamp": {
                    "type": "string",
                    "description": "The date of the last login of the contact"
                },
                "lastOrderAt": {
                    "type": "string",
                    "description": "The date of the last order"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date the contact was created"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date the contact was last updated"
                },
                "privatePhone": {
                    "type": "string",
                    "description": "The private phone number of the contact"
                },
                "privateFax": {
                    "type": "string",
                    "description": "The private fax number of the contact"
                },
                "privateMobile": {
                    "type": "string",
                    "description": "The private mobile phone number of the contact"
                },
                "ebayName": {
                    "type": "string",
                    "description": "The eBay account name of the contact"
                },
                "paypalEmail": {
                    "type": "string",
                    "description": "The email address of the PayPal account of the contact"
                },
                "paypalPayerId": {
                    "type": "string",
                    "description": "The PayPal payer id of the contact"
                },
                "klarnaPersonalId": {
                    "type": "string",
                    "description": "The Klarna personal id of the contact"
                },
                "dhlPostIdent": {
                    "type": "string",
                    "description": "The DHL PostIdent of the contact"
                },
                "forumUsername": {
                    "type": "string",
                    "description": "The user name of the contact in the forum"
                },
                "forumGroupId": {
                    "type": "string",
                    "description": "The ID of the forum group that is assigned to the contact"
                },
                "singleAccess": {
                    "type": "string",
                    "description": "The access type of the contact"
                },
                "contactPerson": {
                    "type": "string",
                    "description": "The contact person of the contact"
                },
                "marketplacePartner": {
                    "type": "string",
                    "description": "The marketplace partner status of the contact"
                },
                "valuta": {
                    "type": "integer",
                    "description": "The foreign currency of the contact"
                },
                "discountDays": {
                    "type": "integer",
                    "description": "The early payment discount period in days specified for the account"
                },
                "discountPercent": {
                    "type": "number",
                    "description": "The early payment discount in percent specified for the account"
                },
                "timeForPaymentAllowedDays": {
                    "type": "integer",
                    "description": "The payment due date in days specified for the account"
                },
                "salesRepresentativeContactId": {
                    "type": "integer",
                    "description": "The salesRepresentative ID of the contact"
                },
                "anonymizeAt": {
                    "type": "string",
                    "description": "The date at which the contact will be anonymized."
                },
                "isLead": {
                    "type": "boolean",
                    "description": "Defines if contact is a lead."
                },
                "leadStatusKey": {
                    "type": "string",
                    "description": "The current lead status key"
                },
                "inLeadStatusSince": {
                    "type": "integer",
                    "description": "The number of days since the current lead status has been set"
                },
                "leadStatusUpdateAt": {
                    "type": "string",
                    "description": "DEPRECATED - See leadStatusUpdatedAt"
                }
            }
        },
        "ContactBank": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the bank account"
                },
                "contactId": {
                    "type": "integer",
                    "description": "The ID of the contact the bank account belongs to"
                },
                "orderId": {
                    "type": "integer",
                    "description": "The ID of the order the bank account belongs to"
                },
                "accountOwner": {
                    "type": "string",
                    "description": "The owner of the bank account"
                },
                "bankName": {
                    "type": "string",
                    "description": "The name of the bank"
                },
                "bankAddress": {
                    "type": "string",
                    "description": "The address of the bank"
                },
                "bankPostalCodeTown": {
                    "type": "string",
                    "description": "The postcode and town of the bank"
                },
                "bankCountry": {
                    "type": "string",
                    "description": "The country of the bank"
                },
                "iban": {
                    "type": "string",
                    "description": "The IBAN of the bank account"
                },
                "bic": {
                    "type": "string",
                    "description": "The BIC of the bank account"
                },
                "accountNumber": {
                    "type": "string",
                    "description": "The account number of the bank account"
                },
                "sortCode": {
                    "type": "string",
                    "description": "The sort code of the bank account"
                },
                "lastUpdateBy": {
                    "type": "string",
                    "description": "The source of the last change (possible values: `customer`, `backend`, `import`)"
                },
                "directDebitMandateAvailable": {
                    "type": "integer",
                    "description": "Flag that indicates if a direct debit mandate is available"
                },
                "directDebitMandateAt": {
                    "type": "string",
                    "description": "The time the direct debit mandate was created as unix timestamp"
                },
                "directDebitMethod": {
                    "type": "string",
                    "description": "The direct debit method (possible values: `sepaDirectDebit`, `sepaB2bDirectDebit`)"
                },
                "directDebitType": {
                    "type": "string",
                    "description": "The direct debit type (possible values: `first`, `next`)"
                },
                "paymentMethod": {
                    "type": "string",
                    "description": "The payment method (possible values: `recurrent`, `onOff`)"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the bank account was created as  unix timestamp"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the bank account was last updated as  unix timestamp"
                }
            }
        },
        "string": {
            "type": "object",
            "properties": []
        },
        "ContactEvent": {
            "type": "object",
            "properties": {
                "eventId": {
                    "type": "integer",
                    "description": "The ID of the event"
                },
                "contactId": {
                    "type": "integer",
                    "description": "The ID of the contact this event belongs to"
                },
                "userId": {
                    "type": "integer",
                    "description": "The ID of the user this event belongs to"
                },
                "eventDuration": {
                    "type": "integer",
                    "description": "The duration of the event in seconds"
                },
                "eventType": {
                    "type": "string",
                    "description": "The type of the event. Possible values are call, ticket, email, meeting, webinar, development and design."
                },
                "orderRowId": {
                    "type": "integer",
                    "description": ""
                },
                "eventInfo": {
                    "type": "string",
                    "description": "Informational text about the event"
                },
                "billable": {
                    "type": "boolean",
                    "description": "Billable if set to 1"
                },
                "eventInsertedAt": {
                    "type": "string",
                    "description": "The date the event was created at as unix timestamp"
                },
                "eventBilledAt": {
                    "type": "string",
                    "description": "The date the event was billed at as unix timestamp"
                },
                "eventProvisionPaidAt": {
                    "type": "string",
                    "description": "The date the provision was paid at as unix timestamp"
                },
                "eventCreditValue": {
                    "type": "number",
                    "description": "The credit value of the event"
                }
            }
        },
        "ContactDepartment": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the contact department. It is possible to define individual departments. The following departments are available by default.\n<ul>\n<li>1 = Management</li>\n<li>2 = Purchasing Department</li>\n<li>3 = Sales Department</li>\n<li>4 = Research & Development Team</li>\n<li>5 = Production</li>\n<li>6 = Quality Assurance</li>\n<li>7 = Public Relations</li>\n<li>8 = Marketing Department</li>\n<li>9 = IT Department</li>\n<li>10 = EDP Team</li>\n<li>11 = Logistics</li>\n<li>12 = Warehousing Department</li>\n<li>13 = Export Department</li>\n<li>14 = Import Department</li>\n<li>15 = Customer Service</li>\n<li>16 = Technical Support Team</li>\n<li>17 = Human Resources</li>\n<li>18 = Accounting Department</li>\n<li>19 = Financial Department</li>\n<li>20 = Legal Department</li>\n<li>21 = Secretary's Office</li>\n</ul>"
                },
                "position": {
                    "type": "integer",
                    "description": "The position for sorting"
                }
            }
        },
        "ContactDepartmentName": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the contact department name"
                },
                "departmentId": {
                    "type": "integer",
                    "description": "The ID of the department"
                },
                "lang": {
                    "type": "string",
                    "description": "The language"
                },
                "name": {
                    "type": "string",
                    "description": "The name"
                }
            }
        },
        "SimpleRestResponse": {
            "type": "object",
            "properties": []
        },
        "ContactOptionSubType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the contact option sub-type. It is possible to define individual option sub-types. The following types are available by default and cannot be deleted.\n<ul>\n<li>1 = Work</li>\n<li>2 = Mobile private</li>\n<li>3 = Mobile work</li>\n<li>4 = Private</li>\n<li>5 = PayPal</li>\n<li>6 = Ebay</li>\n<li>7 = Amazon</li>\n<li>8 = Klarna</li>\n<li>9 = DHL</li>\n<li>10 = Forum</li>\n<li>11 = Guest</li>\n<li>12 = Contact person</li>\n<li>13 = Marketplace partner</li>\n<li>15 = User</li>\n</ul>"
                },
                "position": {
                    "type": "integer",
                    "description": "The position for sorting"
                },
                "nonErasable": {
                    "type": "integer",
                    "description": "Flag that indicates if the option sub-type can be deleted"
                }
            }
        },
        "ContactOptionType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the contact option type. It is possible to define individual option types. The following types are available by default and cannot be deleted.\n<ul>\n<li>1 = Telephone</li>\n<li>2 = Email</li>\n<li>3 = Telefax</li>\n<li>4 = Web page</li>\n<li>5 = Marketplace</li>\n<li>6 = Identification number</li>\n<li>7 = Payment</li>\n<li>8 = User name</li>\n<li>9 = Group</li>\n<li>10 = Access</li>\n<li>11 = Additional</li>\n<li>13 = Converted by</li>\n</ul>"
                },
                "position": {
                    "type": "integer",
                    "description": "The position for sorting"
                },
                "nonErasable": {
                    "type": "integer",
                    "description": "Flag that indicates if the option type can be deleted"
                }
            }
        },
        "ContactOption": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the contact option"
                },
                "contactId": {
                    "type": "integer",
                    "description": "The ID of the contact the option belongs to"
                },
                "typeId": {
                    "type": "integer",
                    "description": "The type ID of the contact option.\nIt is possible to define individual contact option types.\nThe following types are available by default and cannot be deleted:\n<ul>\n<li>1 = Telephone</li>\n<li>2 = Email</li>\n<li>3 = Telefax</li>\n<li>4 = Web page</li>\n<li>5 = Marketplace</li>\n<li>6 = Identification number</li>\n<li>7 = Payment</li>\n<li>8 = User name</li>\n<li>9 = Group</li>\n<li>10 = Access</li>\n<li>11 = Additional</li>\n<li>13 = Converted by</li>\n</ul>"
                },
                "subTypeId": {
                    "type": "integer",
                    "description": "The sub-type ID of the contact option.\nIt is possible to define individual contact option sub-types.\nThe following types are available by default and cannot be deleted:\n<ul>\n<li>1 = Work</li>\n<li>2 = Mobile private</li>\n<li>3 = Mobile work</li>\n<li>4 = Private</li>\n<li>5 = PayPal</li>\n<li>6 = Ebay</li>\n<li>7 = Amazon</li>\n<li>8 = Klarna</li>\n<li>9 = DHL</li>\n<li>10 = Forum</li>\n<li>11 = Guest</li>\n<li>12 = Contact person</li>\n<li>13 = Marketplace partner</li>\n<li>15 = User</li>\n</ul>"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the option. Depends on the type/sub-type."
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority for sorting"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the option was created as unix timestamp"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the option was last updated as unix timestamp"
                }
            }
        },
        "ContactPosition": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the contact position. It is possible to define individual contact positions. The following positions are available by default:\n<ul>\n<li>1 = Analyst</li>\n<li>2 = Director of Boards</li>\n<li>3 = CEO</li>\n<li>4 = Buyer</li>\n<li>5 = Purchasing Manager</li>\n<li>6 = CFO</li>\n<li>7 = Director General</li>\n<li>8 = Managing Director</li>\n<li>9 = Codirector</li>\n<li>10 = Commercial Agent</li>\n<li>11 = Assistant</li>\n<li>12 = Service Engineer</li>\n<li>13 = Warehouse Manager</li>\n<li>14 = Warehouse Worker</li>\n<li>15 = Senior Executive</li>\n<li>16 = Assistent</li>\n<li>17 = Purchasing Assistent</li>\n<li>18 = Software Developer</li>\n<li>19 = Sales Representative</li>\n<li>20 = Sales Manager</li>\n<li>21 = Export Sales Manager</li>\n<li>22 = Wholesale Distributing Manager</li>\n<li>23 = Secretary</li>\n<li>24 = Economist</li>\n<li>25 = Management Board</li>\n</ul>"
                },
                "position": {
                    "type": "integer",
                    "description": "The position for sorting"
                }
            }
        },
        "ContactPositionName": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the contact position name"
                },
                "positionId": {
                    "type": "integer",
                    "description": "The ID of the position"
                },
                "lang": {
                    "type": "string",
                    "description": "The language"
                },
                "name": {
                    "type": "string",
                    "description": "The name"
                }
            }
        },
        "ContactType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the contact type. It is possible to define individual contact types. The following types are available by default and cannot be deleted.\n<ul>\n<li>1 = Customer</li>\n<li>2 = Sales lead/Interested party</li>\n<li>3 = Sales representative</li>\n<li>4 = Supplier</li>\n<li>5 = Producer/Manufacturer</li>\n<li>6 = Partner</li>\n</ul>"
                },
                "position": {
                    "type": "integer",
                    "description": "The position for sorting"
                },
                "nonErasable": {
                    "type": "integer",
                    "description": "Flag that indicates if the type can be deleted"
                }
            }
        },
        "StorageObject": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": ""
                },
                "lastModified": {
                    "type": "string",
                    "description": ""
                },
                "metaData": {
                    "type": "array",
                    "items": [],
                    "description": ""
                },
                "eTag": {
                    "type": "string",
                    "description": ""
                },
                "size": {
                    "type": "integer",
                    "description": ""
                },
                "storageClass": {
                    "type": "string",
                    "description": ""
                },
                "body": {
                    "type": "string",
                    "description": ""
                },
                "contentType": {
                    "type": "string",
                    "description": ""
                },
                "contentLength": {
                    "type": "string",
                    "description": ""
                }
            }
        },
        "StorageObjectList": {
            "type": "object",
            "properties": {
                "isTruncated": {
                    "type": "boolean",
                    "description": ""
                },
                "nextContinuationToken": {
                    "type": "string",
                    "description": ""
                },
                "commonPrefixes": {
                    "type": "array",
                    "items": [],
                    "description": ""
                }
            }
        },
        "OrderSummary": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the order summary"
                },
                "addressId": {
                    "type": "integer",
                    "description": "The address ID of the order summary"
                },
                "contactId": {
                    "type": "integer",
                    "description": "The ID of the contact"
                },
                "unpaidOrdersCount": {
                    "type": "integer",
                    "description": "The number of unpaid orders"
                },
                "unpaidOrderTotalAmount": {
                    "type": "number",
                    "description": "The total amount of unpaid orders"
                },
                "orderCount": {
                    "type": "integer",
                    "description": "The number of all orders of the associated model"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the order summary was created as unix timestamp"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the order summary was last updated as unix timestamp"
                }
            }
        },
        "SimpleJsonResponse": {
            "type": "object",
            "properties": []
        },
        "SalesRepresentativeRegion": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the account contact sales representative relation"
                },
                "accountContactRelationId": {
                    "type": "integer",
                    "description": "The ID of the foreign key account contact relation"
                },
                "postalCodeArea": {
                    "type": "string",
                    "description": ""
                },
                "countryId": {
                    "type": "integer",
                    "description": ""
                }
            }
        },
        "AddressLayout": {
            "type": "object",
            "properties": {
                "isDefault": {
                    "type": "boolean",
                    "description": ""
                },
                "uuid": {
                    "type": "string",
                    "description": ""
                },
                "countries": {
                    "type": "array",
                    "items": [],
                    "description": "Class AddressLayout"
                }
            }
        },
        "Order": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the order"
                },
                "typeId": {
                    "type": "integer",
                    "description": "The ID of the order type\n                                                          It is possible to define individual order types. However,\n                                                          the following types are available by default:\n\n* 1 = Sales order\n* 2 = Delivery\n* 3 = Returns\n* 4 = Credit note\n* 5 = Warranty\n* 6 = Repair\n* 7 = Offer\n* 8 = Advance order\n* 9 = Multi-order\n* 10 = Multi credit note\n* 11 = Multi delivery\n* 12 = Reorder\n* 13 = Partial delivery\n* 14 = Subscription\n* 15 = Redistribution"
                },
                "statusId": {
                    "type": "number",
                    "description": "The ID of the order status"
                },
                "statusName": {
                    "type": "string",
                    "description": "The name for the status ID (read only)"
                },
                "ownerId": {
                    "type": "integer",
                    "description": "The user ID of the order's owner"
                },
                "referrerId": {
                    "type": "number",
                    "description": "The referrer ID of the order"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date that the order was created"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date that the order was updated last"
                },
                "plentyId": {
                    "type": "integer",
                    "description": "The plenty ID of the client that the order belongs to"
                },
                "locationId": {
                    "type": "integer",
                    "description": "The ID of the location that the order belongs to"
                },
                "roundTotalsOnly": {
                    "type": "boolean",
                    "description": "True means only the order's total amounts are rounded, false the order item price is rounded too. (read-only)"
                },
                "numberOfDecimals": {
                    "type": "integer",
                    "description": "The number of decimals this order was rounded with. (read-only)"
                },
                "lockStatus": {
                    "type": "string",
                    "description": "The lock status of the order. The following statuses are available:\n\n* unlocked\n* permanentlyLocked\n* reversibleLocked"
                },
                "isLocked": {
                    "type": "boolean",
                    "description": "True, if the order has the lock status \"unlocked\". False otherwise."
                },
                "hasTaxRelevantDocuments": {
                    "type": "boolean",
                    "description": ""
                },
                "hasDeliveryOrders": {
                    "type": "boolean",
                    "description": "Has the order delivery orders?"
                },
                "legacyOrderType": {
                    "type": "string",
                    "description": "The legacy order type as string"
                },
                "contactSenderId": {
                    "type": "integer",
                    "description": ""
                },
                "contactReceiverId": {
                    "type": "integer",
                    "description": ""
                },
                "warehouseSenderId": {
                    "type": "integer",
                    "description": ""
                },
                "warehouseReceiverId": {
                    "type": "integer",
                    "description": ""
                }
            }
        },
        "Archive": {
            "type": "object",
            "properties": {
                "file": {
                    "type": "string",
                    "description": "The file name of the archive"
                },
                "month": {
                    "type": "integer",
                    "description": "The month of the archive"
                },
                "year": {
                    "type": "integer",
                    "description": "The year of the archive"
                },
                "size": {
                    "type": "integer",
                    "description": "The size of the archive"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the file. Possible values are: accessible, restore_in_progress, archived"
                }
            }
        },
        "Response": {
            "type": "object",
            "properties": []
        },
        "EntityGroup": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The group name"
                }
            }
        },
        "SystemConfig": {
            "type": "object",
            "properties": {
                "archiveActive": {
                    "type": "boolean",
                    "description": "Is the Archive activated"
                }
            }
        },
        "JsonResponse": {
            "type": "object",
            "properties": []
        },
        "Availability": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of this availability"
                },
                "icon": {
                    "type": "string",
                    "description": "The icon of this availability"
                },
                "averageDays": {
                    "type": "integer",
                    "description": "The average delivery time in days for this availability"
                }
            }
        },
        "AvailabilityName": {
            "type": "object",
            "properties": {
                "availabilityId": {
                    "type": "integer",
                    "description": "The ID of the availability that the name belongs to"
                },
                "lang": {
                    "type": "string",
                    "description": "The <a href=\"https://developers.plentymarkets.com/rest-doc/introduction#languages\" target=\"_blank\">language code</a> of the availability name"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the item availability in the specified language"
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": ""
                },
                "user": {
                    "type": "string",
                    "description": ""
                },
                "realName": {
                    "type": "string",
                    "description": ""
                },
                "lang": {
                    "type": "string",
                    "description": ""
                },
                "ipLimit": {
                    "type": "string",
                    "description": ""
                },
                "ustatus": {
                    "type": "boolean",
                    "description": ""
                },
                "memberId": {
                    "type": "integer",
                    "description": ""
                },
                "timestamp": {
                    "type": "string",
                    "description": ""
                },
                "email": {
                    "type": "string",
                    "description": ""
                },
                "timezone": {
                    "type": "string",
                    "description": ""
                },
                "googleEmail": {
                    "type": "string",
                    "description": ""
                },
                "skype": {
                    "type": "string",
                    "description": ""
                },
                "ical": {
                    "type": "string",
                    "description": ""
                },
                "psConfig": {
                    "type": "boolean",
                    "description": ""
                },
                "psItem": {
                    "type": "boolean",
                    "description": ""
                },
                "psEbay": {
                    "type": "boolean",
                    "description": ""
                },
                "psStock": {
                    "type": "boolean",
                    "description": ""
                },
                "psCustomer": {
                    "type": "boolean",
                    "description": ""
                },
                "psOrder": {
                    "type": "boolean",
                    "description": ""
                },
                "psStats": {
                    "type": "boolean",
                    "description": ""
                },
                "psData": {
                    "type": "boolean",
                    "description": ""
                },
                "pcConfig": {
                    "type": "boolean",
                    "description": ""
                },
                "pcContent": {
                    "type": "boolean",
                    "description": ""
                },
                "pcNewsletter": {
                    "type": "boolean",
                    "description": ""
                },
                "pcLayout": {
                    "type": "boolean",
                    "description": ""
                },
                "pcDialog": {
                    "type": "boolean",
                    "description": ""
                },
                "pcStats": {
                    "type": "boolean",
                    "description": ""
                },
                "pcData": {
                    "type": "boolean",
                    "description": ""
                },
                "pcBlog": {
                    "type": "boolean",
                    "description": ""
                },
                "signature": {
                    "type": "string",
                    "description": ""
                },
                "color": {
                    "type": "string",
                    "description": ""
                },
                "eks": {
                    "type": "boolean",
                    "description": ""
                },
                "payments": {
                    "type": "boolean",
                    "description": ""
                },
                "acceptAgb": {
                    "type": "integer",
                    "description": ""
                },
                "api": {
                    "type": "boolean",
                    "description": ""
                },
                "image": {
                    "type": "string",
                    "description": ""
                },
                "delOrder": {
                    "type": "boolean",
                    "description": ""
                },
                "delArticle": {
                    "type": "boolean",
                    "description": ""
                },
                "delRecord": {
                    "type": "boolean",
                    "description": ""
                },
                "plentystat": {
                    "type": "boolean",
                    "description": ""
                },
                "plentyconnect": {
                    "type": "boolean",
                    "description": ""
                },
                "webspaceAccess": {
                    "type": "boolean",
                    "description": ""
                },
                "accessControlList": {
                    "type": "string",
                    "description": ""
                },
                "plentymarketsShippingOrderId": {
                    "type": "boolean",
                    "description": ""
                },
                "plentymarketsShippingItem": {
                    "type": "boolean",
                    "description": ""
                },
                "plentymarketsShippingAuto": {
                    "type": "boolean",
                    "description": ""
                },
                "plentymarketsShippingLabel": {
                    "type": "boolean",
                    "description": ""
                },
                "plentymarketsShippingConfig": {
                    "type": "boolean",
                    "description": ""
                },
                "warehouseId": {
                    "type": "integer",
                    "description": ""
                },
                "calendar": {
                    "type": "boolean",
                    "description": ""
                },
                "orderStatus": {
                    "type": "string",
                    "description": ""
                },
                "warehouseRepairId": {
                    "type": "integer",
                    "description": ""
                },
                "project": {
                    "type": "boolean",
                    "description": ""
                },
                "ticket": {
                    "type": "boolean",
                    "description": ""
                },
                "order": {
                    "type": "boolean",
                    "description": ""
                },
                "blog": {
                    "type": "boolean",
                    "description": ""
                },
                "lead": {
                    "type": "boolean",
                    "description": ""
                },
                "customer": {
                    "type": "boolean",
                    "description": ""
                },
                "totalVacationDays": {
                    "type": "number",
                    "description": ""
                },
                "roleId": {
                    "type": "integer",
                    "description": ""
                },
                "salutation": {
                    "type": "string",
                    "description": ""
                },
                "dataLang": {
                    "type": "string",
                    "description": ""
                },
                "disabled": {
                    "type": "boolean",
                    "description": ""
                },
                "scheduler": {
                    "type": "boolean",
                    "description": ""
                },
                "item": {
                    "type": "boolean",
                    "description": ""
                },
                "incomingItems": {
                    "type": "boolean",
                    "description": ""
                },
                "backendPluginSetId": {
                    "type": "integer",
                    "description": "The ID of the user's selected backend set"
                }
            }
        },
        "Basket": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the shopping cart. The ID increases by 1 when a new customer enters the online store and adds an item to the shopping cart."
                },
                "sessionId": {
                    "type": "string",
                    "description": "The ID of the current customer session"
                },
                "orderId": {
                    "type": "integer",
                    "description": "The ID of the order"
                },
                "customerId": {
                    "type": "integer",
                    "description": "The ID of the customer"
                },
                "customerInvoiceAddressId": {
                    "type": "integer",
                    "description": "The ID of the customer's invoice address"
                },
                "customerShippingAddressId": {
                    "type": "integer",
                    "description": "The ID of the customer's shipping address"
                },
                "currency": {
                    "type": "string",
                    "description": "The currency"
                },
                "referrerId": {
                    "type": "number",
                    "description": "The ID of the order referrer"
                },
                "shippingCountryId": {
                    "type": "integer",
                    "description": "The ID of the shipping country"
                },
                "methodOfPaymentId": {
                    "type": "integer",
                    "description": "The ID of the payment method"
                },
                "shippingProviderId": {
                    "type": "integer",
                    "description": "The ID of the shipping provider"
                },
                "shippingProfileId": {
                    "type": "integer",
                    "description": "The ID of the shipping profile"
                },
                "itemSum": {
                    "type": "number",
                    "description": "The gross value of items in the shopping cart"
                },
                "itemSumNet": {
                    "type": "number",
                    "description": "The net value of items in the shopping cart"
                },
                "basketAmount": {
                    "type": "number",
                    "description": "The total gross value of the shopping cart"
                },
                "basketAmountNet": {
                    "type": "number",
                    "description": "The total net value of the shopping cart"
                },
                "shippingAmount": {
                    "type": "number",
                    "description": "The gross shipping costs"
                },
                "shippingAmountNet": {
                    "type": "number",
                    "description": "The net shipping costs"
                },
                "paymentAmount": {
                    "type": "number",
                    "description": "The amount of the payment"
                },
                "couponCode": {
                    "type": "string",
                    "description": "The entered coupon code"
                },
                "couponDiscount": {
                    "type": "number",
                    "description": "The received discount due to the coupon code"
                },
                "shippingDeleteByCoupon": {
                    "type": "boolean",
                    "description": "Shows whether the shipping costs are subtracted due to a coupon code. Shopping carts that are free of shipping costs have the value true."
                },
                "basketRebate": {
                    "type": "number",
                    "description": "The discount to the shopping cart value. The discount can either be set as a discount scale for items, as a customer class discount or as a discount based on the payment method."
                },
                "basketRebateType": {
                    "type": "integer",
                    "description": "The discount type. The following types are available:\n<ul>\n    <li>Discount scale based on net value of items = 4</li>\n    <li>    Discount based on method of payment = 5</li>\n</ul>"
                },
                "maxFsk": {
                    "type": "integer",
                    "description": "The age rating"
                },
                "orderTimestamp": {
                    "type": "integer",
                    "description": "The timestamp of the order"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date that the shopping cart was created."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date that the shopping cart was updated last."
                }
            }
        },
        "BasketItem": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the item in the shopping cart"
                },
                "basketId": {
                    "type": "integer",
                    "description": "The ID of the shopping cart. The ID increases by 1 when a new customer enters the online store and adds an item to the shopping cart."
                },
                "sessionId": {
                    "type": "string",
                    "description": "The ID of the current customer session"
                },
                "orderRowId": {
                    "type": "integer",
                    "description": ""
                },
                "quantity": {
                    "type": "number",
                    "description": "The current quantity of the item"
                },
                "quantityOriginally": {
                    "type": "number",
                    "description": "The initial quantity of the item"
                },
                "itemId": {
                    "type": "integer",
                    "description": "The ID of the item"
                },
                "priceId": {
                    "type": "integer",
                    "description": "The ID of the item price"
                },
                "attributeValueSetId": {
                    "type": "integer",
                    "description": "The ID of the attribute value set"
                },
                "rebate": {
                    "type": "integer",
                    "description": "The discount on the item"
                },
                "vat": {
                    "type": "number",
                    "description": "The VAT"
                },
                "price": {
                    "type": "number",
                    "description": "The item price"
                },
                "givenPrice": {
                    "type": "number",
                    "description": "The given item price"
                },
                "givenVatId": {
                    "type": "integer",
                    "description": "The given vat id."
                },
                "useGivenPrice": {
                    "type": "boolean",
                    "description": "The flag to use the given values"
                },
                "inputWidth": {
                    "type": "integer",
                    "description": "The width of the item"
                },
                "inputLength": {
                    "type": "integer",
                    "description": "The length of the item"
                },
                "inputHeight": {
                    "type": "integer",
                    "description": "The height of the item"
                },
                "itemType": {
                    "type": "integer",
                    "description": "The item type"
                },
                "externalItemId": {
                    "type": "string",
                    "description": "The external variation ID"
                },
                "noEditByCustomer": {
                    "type": "boolean",
                    "description": "Shows whether the item was edited by the customer"
                },
                "costCenterId": {
                    "type": "integer",
                    "description": ""
                },
                "giftPackageForRowId": {
                    "type": "integer",
                    "description": ""
                },
                "position": {
                    "type": "integer",
                    "description": "The item position"
                },
                "size": {
                    "type": "string",
                    "description": "The item size"
                },
                "shippingProfileId": {
                    "type": "integer",
                    "description": "The ID of the shipping profile"
                },
                "referrerId": {
                    "type": "number",
                    "description": "The ID of the order referrer"
                },
                "deliveryDate": {
                    "type": "string",
                    "description": "The delivery date"
                },
                "categoryId": {
                    "type": "integer",
                    "description": "The ID of the item category"
                },
                "reservationDatetime": {
                    "type": "integer",
                    "description": ""
                },
                "variationId": {
                    "type": "integer",
                    "description": "The ID of the item variation"
                },
                "bundleVariationId": {
                    "type": "integer",
                    "description": "The ID of the item bundle type"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date that the shopping cart was created"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date that the shopping cart was updated last"
                },
                "attributeTotalMarkup": {
                    "type": "number",
                    "description": "attribute total markup"
                },
                "basketItemOrderParams": {
                    "type": "array",
                    "items": [],
                    "description": "Array of BasketItemParams"
                },
                "basketItemVariationProperties": {
                    "type": "array",
                    "items": [],
                    "description": "Array of BasketItemVariationProperties"
                }
            }
        },
        "KeyFigureConfig": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Id of this configuration"
                },
                "hash": {
                    "type": "string",
                    "description": "Hash value to check for updates and avoid duplicate key figures with the same filters"
                },
                "plentyId": {
                    "type": "integer",
                    "description": "The plentymarkets system id"
                },
                "plentyIdHash": {
                    "type": "string",
                    "description": "The plentymarkets system id hash"
                },
                "keyFigure": {
                    "type": "string",
                    "description": "Key figure identifier"
                },
                "keyFigureCaption": {
                    "type": "string",
                    "description": "Key figure caption"
                },
                "keyFigureName": {
                    "type": "string",
                    "description": "User defined name"
                },
                "direct": {
                    "type": "boolean",
                    "description": "This key figure triggers a direct calculation without saving the result"
                },
                "freeOfCharge": {
                    "type": "boolean",
                    "description": "Is this key figure free of charge"
                },
                "isGlobal": {
                    "type": "boolean",
                    "description": ""
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Time of last change"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Time of creation"
                },
                "externalId": {
                    "type": "string",
                    "description": "Identifier to assign the model"
                },
                "dimensions": {
                    "type": "array",
                    "items": [],
                    "description": "List of existing dimensions"
                },
                "dimensionValues": {
                    "type": "array",
                    "items": [],
                    "description": "List of dimension values"
                },
                "category": {
                    "type": "string",
                    "description": "The translated category text of the keyfigure"
                },
                "aggregateFunctions": {
                    "type": "array",
                    "items": [],
                    "description": "List of supported SQL aggregate functions"
                }
            }
        },
        "KeyFigure": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string",
                    "description": ""
                },
                "description": {
                    "type": "string",
                    "description": ""
                },
                "category": {
                    "type": "string",
                    "description": "Key figure category name"
                },
                "keyFigure": {
                    "type": "string",
                    "description": ""
                },
                "dataSeries": {
                    "type": "boolean",
                    "description": ""
                },
                "resultFields": {
                    "type": "array",
                    "items": [],
                    "description": ""
                },
                "primaryResultField": {
                    "type": "string",
                    "description": ""
                },
                "rawDataDeleteAble": {
                    "type": "boolean",
                    "description": "Raw data should be deleted from the data warehouse"
                },
                "freeOfCharge": {
                    "type": "boolean",
                    "description": "Is this key figure free of charge"
                },
                "rawDataColumns": {
                    "type": "array",
                    "items": [],
                    "description": ""
                },
                "resultExportColumns": {
                    "type": "array",
                    "items": [],
                    "description": ""
                },
                "calculation": {
                    "type": "array",
                    "items": [],
                    "description": ""
                },
                "dimensions": {
                    "type": "array",
                    "items": [],
                    "description": ""
                },
                "dataFilters": {
                    "type": "array",
                    "items": [],
                    "description": ""
                },
                "aggregateFunctions": {
                    "type": "array",
                    "items": [],
                    "description": "List of allowed sql aggregate functions. The user can select a value for the display of the calculation results."
                },
                "resultUnitsList": {
                    "type": "array",
                    "items": [],
                    "description": "List of possible result units. [ ['calculation' => 'exampleCalculation', 'unit' => 'exampleUnit'], [...] ]"
                }
            }
        },
        "KeyFigureResultSearchResponse": {
            "type": "object",
            "properties": []
        },
        "KeyFigureSearchRequest": {
            "type": "object",
            "properties": {
                "configId": {
                    "type": "string",
                    "description": "Filter that restricts the search result to key figure results of key figure configuration id. The id of the key figure configuration is mandatory and must be specified, if no value is passed for id."
                },
                "interval": {
                    "type": "string",
                    "description": "Time interval in which the result was calculated: day, week, month, quarter, year."
                },
                "dimension": {
                    "type": "string",
                    "description": "This field will be removed until 11.2020"
                },
                "dimensions": {
                    "type": "array",
                    "items": [],
                    "description": "Filter that restricts the search result to key figure results of one data group. The dimension must be specified."
                },
                "scaleBasis": {
                    "type": "string",
                    "description": "Filter restricts the list of results to items with a scale base time during the specified period. For the time interval day, a date or comma separated two dates (format: YYYYMMDD) can be specified. For the time interval week, several comma-separated days (YYYYMMDD) of different weeks can be specified. For the interval month, a comma separated list of months is expected e.g. 2020-01, 2020-02."
                },
                "resultId": {
                    "type": "boolean",
                    "description": "Return ID of key figure result"
                },
                "resultUnit": {
                    "type": "boolean",
                    "description": "Return unit of the primary result."
                },
                "target": {
                    "type": "boolean",
                    "description": "Return key figure target figure."
                },
                "groupByDimension": {
                    "type": "boolean",
                    "description": "Groups the results by dimension"
                },
                "aggregateFunction": {
                    "type": "string",
                    "description": "Define aggregate (group) function that will operate on key figure results. Default function: sum. Allowed values: sum, avg, count, max, min"
                },
                "itemsPerPage": {
                    "type": "integer",
                    "description": "Limits the number of results listed per page to a specific number. The number of variations to be listed per page must be specified. The default number of results is 12 and the maximum is 100."
                },
                "page": {
                    "type": "integer",
                    "description": "Number of the requested page, default value: 1"
                },
                "searchId": {
                    "type": "string",
                    "description": "Identification string to assign the result"
                },
                "calculatedAt": {
                    "type": "string",
                    "description": "Filter that restricts the search result to key figure results which have been calculated as of this date (format: YYYY-MM-DD HH:II:SS)"
                },
                "sortBy": {
                    "type": "array",
                    "items": [],
                    "description": "Sort the results options."
                }
            }
        },
        "RawDataSearchResult": {
            "type": "object",
            "properties": {
                "after": {
                    "type": "string",
                    "description": "The last evaluated key as base64, provide that as the starting point for the next query (pagination)."
                }
            }
        },
        "RawDataConfigs": {
            "type": "object",
            "properties": {
                "plentyIdHash": {
                    "type": "string",
                    "description": "The plentymarkets system id hash"
                }
            }
        },
        "BlogPost": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": ""
                },
                "plentyIdHash": {
                    "type": "string",
                    "description": ""
                },
                "data": {
                    "type": "string",
                    "description": ""
                }
            }
        },
        "Board": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the board"
                },
                "boardName": {
                    "type": "string",
                    "description": "The name of the board"
                },
                "columnsCount": {
                    "type": "integer",
                    "description": "The number of columns"
                },
                "tasksCount": {
                    "type": "integer",
                    "description": "The number of tasks"
                }
            }
        },
        "BoardColumn": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the board column"
                },
                "boardId": {
                    "type": "string",
                    "description": "The ID of the board"
                },
                "columnName": {
                    "type": "string",
                    "description": "The name of the column"
                },
                "position": {
                    "type": "integer",
                    "description": "The position"
                }
            }
        },
        "BoardTask": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the board task"
                },
                "taskName": {
                    "type": "string",
                    "description": "The name of the task"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the task"
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the task"
                },
                "columnId": {
                    "type": "string",
                    "description": "The ID of the column"
                },
                "boardId": {
                    "type": "string",
                    "description": "The ID of the board"
                }
            }
        },
        "BoardTaskReference": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the board task reference"
                },
                "taskId": {
                    "type": "string",
                    "description": "The ID of the task to create a reference for"
                },
                "referenceValue": {
                    "type": "string",
                    "description": "Reference type followed by foreign ID of the referenced object. Syntax: TYPE-ID Example: user-123456 Types: user,ticket,contact,order,item"
                }
            }
        },
        "Catalog": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": [],
                    "description": "Contains the mappings and template settings"
                },
                "settings": {
                    "type": "array",
                    "items": [],
                    "description": "Contains the settings"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the catalogue"
                },
                "template": {
                    "type": "string",
                    "description": "The id of the template that was used to create the catalogue"
                },
                "id": {
                    "type": "string",
                    "description": "The id of the catalogue"
                },
                "active": {
                    "type": "boolean",
                    "description": "Determines whether a catalogue can be exported"
                },
                "showMandatoryFields": {
                    "type": "boolean",
                    "description": "Determines if only the mandatory fields should be displayed in the catalogue UI"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The updated at date in W3C"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The created at date in W3C"
                }
            }
        },
        "DeleteResponse": {
            "type": "object",
            "properties": []
        },
        "Category": {
            "type": "object",
            "properties": []
        },
        "CategoryDetails": {
            "type": "object",
            "properties": {
                "categoryId": {
                    "type": "integer",
                    "description": "The unique ID of the category these category details belong to"
                },
                "plentyId": {
                    "type": "integer",
                    "description": "The unique plenty ID of the client (store) in which the category is visible. If a subcategory is linked to a client, its parent categories will be linked to this client as well."
                },
                "lang": {
                    "type": "string",
                    "description": "The <a href=\"https://developers.plentymarkets.com/rest-doc/introduction#languages\" target=\"_blank\">language</a> of the category"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the category. The same category name can be used more than once in different categories or on different category levels. However, category names must be unique within the same category or level."
                },
                "description": {
                    "type": "string",
                    "description": "The category text. The description is inserted into the online store using template variables."
                },
                "description2": {
                    "type": "string",
                    "description": "The category text 2. The description 2 is inserted into the online store using template variables."
                },
                "shortDescription": {
                    "type": "string",
                    "description": "The short description of the category. The short description can be inserted into the store's design using template variables."
                },
                "metaKeywords": {
                    "type": "string",
                    "description": "HTML meta keywords to tag the category for search engines. More than one keyword can be separated by commas."
                },
                "metaDescription": {
                    "type": "string",
                    "description": "The meta description of the category. This description is analysed by search engines and displayed in search results. This text should be treated as an advertising text to maximise click-through from search engine result pages. Current recommended limit is 156 characters."
                },
                "nameUrl": {
                    "type": "string",
                    "description": "The category name to be used for the category's URL. The same URL name can be used more than once in different categories or on different category levels. However, URL names must be unique within the same category or level. The URL name should not be changed once the category is indexed by search engines. If no URL name is specified, the name will automatically be used as the URL name when the category is created.<br />Important: Name should contain ASCII code only and no special characters. The following character strings may not be used as prefixes to URL names: a-, b-, c-, f-, fa-, p-, t-. These prefixes will be removed automatically. For instance, a-class will be changed to class automatically. However, the URL name aclass can be used for a category named A-class."
                },
                "metaTitle": {
                    "type": "string",
                    "description": "This will be displayed as the title of a tab in the web browser and as a search result in search engines. If this is left blank, the category name will be used as the title. Current recommended limit is 50 characters. Longer titles will be cut off."
                },
                "image": {
                    "type": "string",
                    "description": "The ID to the image1 of the category."
                },
                "image2": {
                    "type": "string",
                    "description": "The ID to the image2 of the category."
                },
                "imagePath": {
                    "type": "string",
                    "description": "The path to the image1 of the category."
                },
                "image2Path": {
                    "type": "string",
                    "description": "The path to the image2 of the category."
                },
                "previewUrl": {
                    "type": "string",
                    "description": "The category's URL."
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the category within a category level."
                },
                "itemListView": {
                    "type": "string",
                    "description": "The template the category is linked to for the category overview. The template determines what the category overview will look like for this category. This option is available for categories of the type <strong>Item</strong> only. Possible values: ItemViewCategoriesList, ItemViewCategoriesList2 to ItemViewCategoriesList10."
                },
                "singleItemView": {
                    "type": "string",
                    "description": "The template the category is linked to for the single item view. The template determines the appearance of the single item design for this category. This option is available for categories of the type <strong>Item</strong> only. Possible values: ItemViewSingleItem, ItemViewSingleItem2 to ItemViewSingleItem5."
                },
                "pageView": {
                    "type": "string",
                    "description": ""
                },
                "fulltext": {
                    "type": "boolean",
                    "description": "Flag that indicates if the complete category text, i.e. the complete description, will be searched.<ul><li>Y = Complete text will be searched.</li><li>N = Text will not be searched completely.</li></ul>"
                },
                "metaRobots": {
                    "type": "string",
                    "description": "Values from the meta element Robots are analyzed by Web crawlers. These values tell the crawler what it should do with the page and with the links on the page.<ul><li>all = Include this category in the search engine index and follow the links on the page.</li><li>index = Include in the search engine index.</li><li>nofollow = Do not follow the links on the page.</li><li>noindex = Do not include in the search engine index.</li><li>nofollow, noindex = Do not follow the links and do not include the category in the search engine index.</li></ul>"
                },
                "canonicalLink": {
                    "type": "string",
                    "description": "The URL of any category that contains the same content. This\nwill avoid duplicate content."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the category details were last updated"
                },
                "updatedBy": {
                    "type": "string",
                    "description": "The user who last updated the category details"
                }
            }
        },
        "CategoryClient": {
            "type": "object",
            "properties": {
                "plentyId": {
                    "type": "integer",
                    "description": "The unique plenty ID of the client (store) in which the category is visible. Several IDs can be separated by commas. If a subcategory is linked to a client, its parent categories will be linked to this client as well."
                }
            }
        },
        "CategoryProperty": {
            "type": "object",
            "properties": {
                "categoryId": {
                    "type": "integer",
                    "description": "The unique ID of the category"
                },
                "marketId": {
                    "type": "number",
                    "description": "The unique ID of the referrer"
                },
                "plentyId": {
                    "type": "integer",
                    "description": "The unique plenty ID of the client (store)"
                },
                "value": {
                    "type": "string",
                    "description": "The category of the referrer"
                }
            }
        },
        "Document": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the document"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the document. The following types are available:\n                           <ul>\n    <li>admin</li>\n    <li>blog</li>\n <li>category</li>\n <li>correction_document</li>\n <li>credit_note</li>\n    <li>credit_note_external</li>\n       <li>customer</li>\n <li>delivery_note</li>\n    <li>dunning_letter</li>\n       <li>ebics_hash</li>\n    <li>facet</li>\n    <li>invoice</li>\n    <li>invoice_external</li>\n                               <li>pos_invoice</li>\n                               <li>pos_invoice_cancellation</li>\n <li>item</li>\n <li>multi_credit_note</li>\n    <li>multi_invoice</li>\n       <li>offer</li>\n    <li>order_confirmation</li>\n       <li>pickup_delivery</li>\n    <li>receipt</li>\n                               <li>refund_reversal</li>\n    <li>reorder</li>\n    <li>repair_bill</li>\n    <li>return_note</li>\n       <li>reversal_document</li>\n       <li>settlement_report</li>\n    <li>success_confirmation</li>\n    <li>ticket</li>\n    <li>webshop</li>\n  <li>webshop_customer</li>\n    <li>z_report</li>\n    <li>shipping_label</li>\n    <li>shipping_export_label</li>\n    <li>returns_label</li>\n                               <li>reversal_dunning_letter</l>\n</ul>"
                },
                "number": {
                    "type": "integer",
                    "description": "The document number"
                },
                "numberWithPrefix": {
                    "type": "string",
                    "description": "The document number with prefix"
                },
                "path": {
                    "type": "string",
                    "description": "The path to the document"
                },
                "userId": {
                    "type": "integer",
                    "description": "The ID of the user"
                },
                "source": {
                    "type": "string",
                    "description": "The source where the document was generated. Possible sources are 'klarna', 'soap', 'admin', 'hitmeister', 'paypal' and 'rest'."
                },
                "displayDate": {
                    "type": "string",
                    "description": "The date displayed on the document"
                },
                "status": {
                    "type": "string",
                    "description": "The generation status of the document (\"pending\", \"faulty\" or \"done\""
                },
                "content": {
                    "type": "string",
                    "description": "The base64 encoded content of the document."
                }
            }
        },
        "StreamedResponse": {
            "type": "object",
            "properties": []
        },
        "CategoryTemplate": {
            "type": "object",
            "properties": {
                "categoryId": {
                    "type": "integer",
                    "description": "The unique ID of the category"
                },
                "plentyId": {
                    "type": "integer",
                    "description": "The unique plenty ID of the client (store)"
                },
                "lang": {
                    "type": "string",
                    "description": "The language of the template"
                },
                "content": {
                    "type": "string",
                    "description": "The content of the template"
                }
            }
        },
        "PaginationResponse": {
            "type": "object",
            "properties": []
        },
        "CategoryBranch": {
            "type": "object",
            "properties": {
                "categoryId": {
                    "type": "integer",
                    "description": "The ID of the category"
                },
                "category1Id": {
                    "type": "integer",
                    "description": "The ID of the category tree's 1st level. If 1st value is identical to category ID, category is of this level."
                },
                "category2Id": {
                    "type": "integer",
                    "description": "The ID of the category tree's 2nd level. If 2nd level value is identical to category ID, category is of this level. If 2nd level value is <strong>null</strong>, category is of a higher level."
                },
                "category3Id": {
                    "type": "integer",
                    "description": "The ID of the category tree's 3rd level. If 3rd level value is identical to category ID, category is of this level. If 2nd level value is <strong>null</strong>, category is of a higher level."
                },
                "category4Id": {
                    "type": "integer",
                    "description": "The ID of the category tree's 4th level. If 4th level value is identical to category ID, category is of this level. If 2nd level value is <strong>null</strong>, category is of a higher level."
                },
                "category5Id": {
                    "type": "integer",
                    "description": "The ID of the category tree's 5th level. If 5th level value is identical to category ID, category is of this level. If 2nd level value is <strong>null</strong>, category is of a higher level."
                },
                "category6Id": {
                    "type": "integer",
                    "description": "The ID of the category tree's 6th level. If 6th level value is identical to category ID, category is of this level. If 2nd level value is <strong>null</strong>, category is of a higher level."
                }
            }
        },
        "Comment": {
            "type": "object",
            "properties": []
        },
        "int": {
            "type": "object",
            "properties": []
        },
        "Conversation": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string",
                    "description": "The UUID of the conversation"
                },
                "shortId": {
                    "type": "string",
                    "description": "The Short ID of the Conversation"
                },
                "plentyIdHash": {
                    "type": "string",
                    "description": "The plentyIdHash"
                },
                "plentyId": {
                    "type": "integer",
                    "description": "The plentyId of the relation contact"
                },
                "inboxId": {
                    "type": "string",
                    "description": "The inboxId from the assistant"
                },
                "title": {
                    "type": "string",
                    "description": "The Title of the Conversation"
                },
                "tagIds": {
                    "type": "array",
                    "items": [],
                    "description": "Array of tag IDs"
                },
                "isClosed": {
                    "type": "boolean",
                    "description": "Boolean that indicates if the conversation is closed"
                },
                "isDeleted": {
                    "type": "boolean",
                    "description": "Boolean that indicates if the conversation is deleted"
                },
                "readBy": {
                    "type": "array",
                    "items": [],
                    "description": "Array of user ids (int)"
                },
                "": {
                    "type": "boolean",
                    "description": "validRelation Conversation has the relations validated"
                },
                "priorityId": {
                    "type": "string",
                    "description": "The Priority of the Conversation"
                },
                "typeId": {
                    "type": "integer",
                    "description": "ID of conversation type"
                },
                "typePosition": {
                    "type": "integer",
                    "description": "Sort order of conversation type"
                },
                "statusId": {
                    "type": "integer",
                    "description": "ID of conversation status"
                },
                "statusPosition": {
                    "type": "integer",
                    "description": "Sort order of conversation status"
                },
                "hasWhisperedMessages": {
                    "type": "boolean",
                    "description": "Flag that indicates if a conversation contains whispered messages"
                },
                "messagesTitles": {
                    "type": "array",
                    "items": [],
                    "description": "Array of all message titles"
                },
                "messagesBodies": {
                    "type": "array",
                    "items": [],
                    "description": "Array with all message bodies stripped of tags"
                },
                "messagesTags": {
                    "type": "array",
                    "items": [],
                    "description": "Array with all tag ID's from all messages"
                },
                "messagesPaths": {
                    "type": "array",
                    "description": "Array with s3 messages paths"
                },
                "messagesIds": {
                    "type": "array",
                    "description": "Array with all messages UUID's"
                },
                "isMigratedToEs": {
                    "type": "integer",
                    "description": "Flag that indicates if the conversation is synced to ES (used during messenger migration to new structure)"
                },
                "isArchived": {
                    "type": "boolean",
                    "description": "Flag that indicates if the conversation is archived"
                }
            }
        },
        "bool": {
            "type": "object",
            "properties": []
        },
        "ConversationEvent": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": ""
                },
                "name": {
                    "type": "string",
                    "description": ""
                },
                "description": {
                    "type": "string",
                    "description": ""
                },
                "eventClass": {
                    "type": "string",
                    "description": ""
                },
                "isActive": {
                    "type": "boolean",
                    "description": ""
                },
                "userId": {
                    "type": "integer",
                    "description": ""
                },
                "updatedAt": {
                    "type": "string",
                    "description": ""
                },
                "executedAt": {
                    "type": "string",
                    "description": ""
                }
            }
        },
        "ConversationFolder": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string",
                    "description": "The UUID of the folder"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the folder"
                },
                "userId": {
                    "type": "integer",
                    "description": "The user ID which is the folder owner"
                }
            }
        },
        "ConversationStatus": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the status"
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the status (used in sorting)"
                },
                "userId": {
                    "type": "integer",
                    "description": "The suer ID which performed the last update"
                },
                "isDeleted": {
                    "type": "boolean",
                    "description": "Flag that indicates if the status was deleted"
                },
                "": {
                    "type": "string",
                    "description": "colour Color of the status background (example: #0084ff)"
                }
            }
        },
        "ConversationType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the type"
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the type (used in sorting)"
                },
                "userId": {
                    "type": "integer",
                    "description": "The suer ID which performed the last update"
                },
                "isDeleted": {
                    "type": "boolean",
                    "description": "Flag that indicates if the type was deleted"
                }
            }
        },
        "CustomerContract": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": ""
                },
                "contractLang": {
                    "type": "string",
                    "description": ""
                },
                "contractName": {
                    "type": "string",
                    "description": ""
                },
                "contractVisible": {
                    "type": "boolean",
                    "description": ""
                }
            }
        },
        "Signing": {
            "type": "object",
            "properties": {
                "contractId": {
                    "type": "string",
                    "description": ""
                },
                "contactId": {
                    "type": "string",
                    "description": ""
                },
                "signerName": {
                    "type": "string",
                    "description": ""
                },
                "createdAt": {
                    "type": "string",
                    "description": ""
                }
            }
        },
        "DeleteLog": {
            "type": "object",
            "properties": {
                "referenceType": {
                    "type": "integer",
                    "description": "The type of the deleted record<ul><li>1 = Category</li><li>2 = Payment</li><li>3 = Order</li><li>4 = Customer</li><li>5 = Item</li><li>6 = Facet of the type Attribute</li><li>7 = Facet of the type Property</li><li>8 = Facet of the type Manufacturer</li><li>9 = Facet of the type Availability</li><li>10 = Unit</li><li>11 = Sales price</li><li>12 = Sales price link to variation</li><li>13 = Item variation</li></ul>13 = Order item</li></ul>"
                },
                "referenceValue": {
                    "type": "integer",
                    "description": "The ID of the deleted record"
                },
                "userRealName": {
                    "type": "string",
                    "description": "The real name of the user who deleted the record"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date and time that the record was deleted"
                },
                "userId": {
                    "type": "integer",
                    "description": "The ID of the user who deleted the record"
                }
            }
        },
        "DocumentGenerationPreview": {
            "type": "object",
            "properties": {
                "hash": {
                    "type": "string",
                    "description": ""
                },
                "content": {
                    "type": "string",
                    "description": ""
                },
                "status": {
                    "type": "integer",
                    "description": ""
                },
                "orderId": {
                    "type": "integer",
                    "description": ""
                }
            }
        },
        "DocumentGeneration": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": ""
                },
                "status": {
                    "type": "integer",
                    "description": ""
                }
            }
        },
        "ElasticSyncSync": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the elastic sync sync"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the elastic sync sync"
                },
                "syncType": {
                    "type": "string",
                    "description": "The type of the elastic sync sync"
                },
                "sourceType": {
                    "type": "string",
                    "description": "The source type of the elastic sync sync"
                },
                "sourceDataType": {
                    "type": "string",
                    "description": "The source data type of the elastic sync sync"
                }
            }
        },
        "ElasticSyncMappingFilter": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the elastic sync mapping filter"
                },
                "mappingId": {
                    "type": "integer",
                    "description": "The ID of the elastic sync mapping"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the elastic sync mapping filter"
                },
                "operator": {
                    "type": "string",
                    "description": "The operator of the elastic sync mapping filter"
                },
                "source": {
                    "type": "string",
                    "description": "The source of the elastic sync mapping filter"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the elastic sync mapping filter"
                }
            }
        },
        "ElasticSyncMappingRow": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the elastic sync mapping row"
                },
                "mappingId": {
                    "type": "integer",
                    "description": "The ID of the elastic sync mapping"
                },
                "targetModel": {
                    "type": "string",
                    "description": "The target model of the elastic sync mapping row"
                },
                "targetAttribute": {
                    "type": "string",
                    "description": "The target attribute of the elastic sync mapping row"
                },
                "active": {
                    "type": "boolean",
                    "description": "The state of the elastic sync mapping row"
                },
                "entityType": {
                    "type": "string",
                    "description": "The entity type of the elastic sync mapping row (array values: 'ownValue', 'ownAssignment', 'regularExpression', 'csvColumn')"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the elastic sync mapping row"
                },
                "settings": {
                    "type": "string",
                    "description": "The settings of the elastic sync mapping row"
                },
                "identifiers": {
                    "type": "string",
                    "description": "The identifiers of the elastic sync mapping row"
                }
            }
        },
        "ElasticSyncMapping": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the elastic sync mapping"
                },
                "syncId": {
                    "type": "integer",
                    "description": "The ID of the elastic sync sync"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the elastic sync mapping"
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the elastic sync mapping"
                },
                "active": {
                    "type": "boolean",
                    "description": "The state of the elastic sync mapping"
                }
            }
        },
        "ElasticSyncMatching": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the elastic sync matching"
                },
                "syncId": {
                    "type": "integer",
                    "description": "The ID of the elastic sync sync"
                },
                "target": {
                    "type": "string",
                    "description": "The target of the elastic sync matching"
                },
                "source": {
                    "type": "string",
                    "description": "The source of the elastic sync matching"
                },
                "additionalValue": {
                    "type": "string",
                    "description": "The additional value of the elastic sync matching"
                }
            }
        },
        "ElasticSyncOption": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the elastic sync option"
                },
                "syncId": {
                    "type": "integer",
                    "description": "The ID of the elastic sync sync"
                },
                "optionIdentifier": {
                    "type": "string",
                    "description": "The option identifier of the elastic sync option"
                },
                "key": {
                    "type": "string",
                    "description": "The key of the elastic sync option"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the elastic sync option"
                }
            }
        },
        "Export": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "export id"
                },
                "name": {
                    "type": "string",
                    "description": "export name"
                },
                "type": {
                    "type": "string",
                    "description": "export type"
                },
                "limit": {
                    "type": "integer",
                    "description": "maximum number of entries"
                },
                "createdAt": {
                    "type": "string",
                    "description": "created at date timestamp"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "last update date timestamp"
                },
                "formatKey": {
                    "type": "string",
                    "description": "the format key"
                },
                "outputType": {
                    "type": "string",
                    "description": "the output type"
                },
                "generateCache": {
                    "type": "integer",
                    "description": "if cache should be generated"
                }
            }
        },
        "Filter": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "filter id"
                },
                "createdAt": {
                    "type": "string",
                    "description": "created at date timestamp"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "last update date timestamp"
                },
                "exportId": {
                    "type": "integer",
                    "description": "depending export id"
                },
                "key": {
                    "type": "string",
                    "description": "filter key"
                },
                "value": {
                    "type": "string",
                    "description": "filter value"
                }
            }
        },
        "FormatSetting": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "format setting id"
                },
                "createdAt": {
                    "type": "string",
                    "description": "created at date timestamp"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "last update date timestamp"
                },
                "exportId": {
                    "type": "integer",
                    "description": "depending export id"
                },
                "key": {
                    "type": "string",
                    "description": "format setting key"
                },
                "value": {
                    "type": "string",
                    "description": "format setting value"
                }
            }
        },
        "OutputParam": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "output param id"
                },
                "createdAt": {
                    "type": "string",
                    "description": "created at date timestamp"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "last update date timestamp"
                },
                "exportId": {
                    "type": "integer",
                    "description": "depending export id"
                },
                "key": {
                    "type": "string",
                    "description": "output param key"
                },
                "value": {
                    "type": "string",
                    "description": "output param value"
                }
            }
        },
        "FeedbackComment": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the comment"
                },
                "message": {
                    "type": "string",
                    "description": "The message of the comment"
                },
                "isVisible": {
                    "type": "boolean",
                    "description": "If true, the comment is visible"
                }
            }
        },
        "Feedback": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the feedback"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the feedback"
                },
                "authorName": {
                    "type": "string",
                    "description": "The name of the feedback's author"
                },
                "isVisible": {
                    "type": "boolean",
                    "description": "If true, the feedback is visible"
                }
            }
        },
        "FeedbackRating": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the rating"
                },
                "ratingValue": {
                    "type": "string",
                    "description": "The value of the rating"
                },
                "isVisible": {
                    "type": "boolean",
                    "description": "If true, the rating is visible"
                }
            }
        },
        "PickingOrderItem": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": ""
                },
                "pickingOrderId": {
                    "type": "integer",
                    "description": ""
                },
                "orderItemId": {
                    "type": "integer",
                    "description": ""
                },
                "processState": {
                    "type": "string",
                    "description": ""
                },
                "processDate": {
                    "type": "string",
                    "description": ""
                },
                "processUserId": {
                    "type": "integer",
                    "description": ""
                },
                "comment": {
                    "type": "string",
                    "description": ""
                },
                "quantity": {
                    "type": "number",
                    "description": ""
                },
                "itemId": {
                    "type": "integer",
                    "description": ""
                },
                "holdingArea": {
                    "type": "integer",
                    "description": ""
                },
                "warehouseId": {
                    "type": "integer",
                    "description": ""
                },
                "orderIdList": {
                    "type": "string",
                    "description": ""
                }
            }
        },
        "PickingOrder": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": ""
                },
                "createdAt": {
                    "type": "string",
                    "description": ""
                },
                "processDate": {
                    "type": "string",
                    "description": ""
                },
                "doneDate": {
                    "type": "string",
                    "description": ""
                },
                "ownerId": {
                    "type": "integer",
                    "description": ""
                },
                "processUserId": {
                    "type": "integer",
                    "description": ""
                },
                "processState": {
                    "type": "string",
                    "description": ""
                },
                "webstoreId": {
                    "type": "integer",
                    "description": ""
                },
                "warehouseId": {
                    "type": "integer",
                    "description": ""
                },
                "comment": {
                    "type": "string",
                    "description": ""
                },
                "filterOptions": {
                    "type": "array",
                    "items": [],
                    "description": ""
                }
            }
        },
        "ItemSet": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The item ID of the item set. The ID must be unique."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the item set. The default language of the system is used."
                },
                "categories": {
                    "type": "array",
                    "items": [],
                    "description": "The array with categories of the item set. The category ID key  \"categoryId\" must be specified. Example for JSON Object:  \"categories\":[{\"categoryId\":\"34\"},{\"categoryId\":\"35\"}]}]"
                }
            }
        },
        "ItemSetComponent": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The item set component ID. The ID must be unique."
                },
                "setId": {
                    "type": "integer",
                    "description": "The item ID of the item set. The ID must be unique."
                },
                "itemId": {
                    "type": "integer",
                    "description": "The item ID of the set component"
                },
                "minimalOrderQuantity": {
                    "type": "number",
                    "description": "Minimum order quantity."
                },
                "maximumOrderQuantity": {
                    "type": "number",
                    "description": "Maximum order quantity."
                },
                "orderQuantityPossible": {
                    "type": "boolean",
                    "description": "Order quantities possible."
                }
            }
        },
        "ItemSetConfig": {
            "type": "object",
            "properties": {
                "setId": {
                    "type": "integer",
                    "description": "set id The item ID of the item set. The ID must be unique."
                },
                "rebate": {
                    "type": "number",
                    "description": "The discount in percent to be subtracted from the sum of the prices of the selected set components."
                }
            }
        },
        "Item": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the item. The ID must be unique."
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the item"
                },
                "itemType": {
                    "type": "string",
                    "description": "The type of the item. Because Set items are managed using a separate route,\nthis value is always Default."
                },
                "stockType": {
                    "type": "integer",
                    "description": "The stock type of the item. Possible values:\n<ul><li>0 = Stocked item (default)</li>\n    <li>1 = Production item</li>\n    <li>2 = Colli</li>\n    <li>3 = Special order item</li></ul>"
                },
                "storeSpecial": {
                    "type": "integer",
                    "description": "Option to present items more prominently in the online store.\n<ul><li>1 = Special offer</li><li>2 = New items</li><li>3 = Top items</li></ul>"
                },
                "ownerId": {
                    "type": "integer",
                    "description": "The plentymarkets user that is assigned as owner of this item."
                },
                "manufacturerId": {
                    "type": "integer",
                    "description": "The ID of the manufacturer of the item"
                },
                "producingCountryId": {
                    "type": "integer",
                    "description": "The ID of the country in which the item was manufactured."
                },
                "mainVariationId": {
                    "type": "integer",
                    "description": "The ID of the main variation of the item. The ID must be unique."
                },
                "revenueAccount": {
                    "type": "integer",
                    "description": "The revenue account the item is linked to.\nAn individual revenue account can be saved for each item in plentymarkets.\nIf this is not done, plentymarkets automatically determines a revenue account\nbased on the VAT rate."
                },
                "couponRestriction": {
                    "type": "integer",
                    "description": "Indicates if the item can be purchased using a promotional coupon.\n<ul><li>0 = Permitted</li>\n    <li>1 = Not permitted</li>\n    <li>2 = Purchasable with coupon only</li></ul>"
                },
                "condition": {
                    "type": "integer",
                    "description": "The condition of the item. Possible values:\n<ul><li>0 = New</li><li>1 = Used</li>\n    <li>2 = Boxed as new</li>\n    <li>3 = New with label</li>\n    <li>4 = Factory seconds</li></ul>"
                },
                "conditionApi": {
                    "type": "integer",
                    "description": "The condition of the item that is transferred to markets via API.\n<ul><li>0 = New</li>\n    <li>1 = Used but as new</li>\n    <li>2 = Used but very good</li>\n    <li>3 = Used but good</li>\n    <li>4 = Used but acceptable</li>\n    <li>5 = Factory seconds</li></ul>"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Timestamp of the date and time the item was created."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Timestamp of the last date and time the item was updated."
                },
                "isSubscribable": {
                    "type": "boolean",
                    "description": "Flag that indicates if the item can be ordered as a subscription item.\nIf yes, the item can be ordered for delivery at regular intervals."
                },
                "isSerialNumber": {
                    "type": "boolean",
                    "description": "Flag that indicates if serial numbers are to be assigned to variations of this item\nto uniquely identify every item sold. Serial numbers ensure traceability of an item\nin case of errors or problems."
                },
                "isShippingPackage": {
                    "type": "boolean",
                    "description": "Flag that indicates if a shipping package is to be used for this item.\nIf yes and the variation's dimensions are entered in the <b>Settings</b> tab of a\nvariation, the correct shipping package is assigned automatically."
                },
                "amazonFbaPlatform": {
                    "type": "integer",
                    "description": "Indicates the platform used for Fulfilment by Amazon (FBA).\n<ul><li>0 = Do not use</li>\n    <li>1 = AMAZON EU (Europe)</li>\n    <li>2 = AMAZON FE (Far East)</li>\n    <li>3 = AMAZON NA (North America)</li></ul>"
                },
                "isShippableByAmazon": {
                    "type": "boolean",
                    "description": "Flag that indicates if the item can be shipped with Amazon Multi-Channel.\nAmazon Multi-Channel Fulfillment is a service for fulfilling orders from sales\nchannels other than Amazon platforms using inventory stored in the Amazon\nfulfillment center."
                },
                "amazonProductType": {
                    "type": "integer",
                    "description": "The Amazon product type of the item. List of IDs:\nhttps://www.plentymarkets.co.uk/manual/data-exchange/data-formats/item/"
                },
                "amazonFedas": {
                    "type": "string",
                    "description": "The FEDAS product classification key of the item."
                },
                "ebayPresetId": {
                    "type": "integer",
                    "description": "The eBay preset ID. This plentymarkets ID must be specified to save values for\n$ebayCategory, $ebayCategory2, $ebayStoreCategory and $ebayStoreCategory2."
                },
                "ebayCategory": {
                    "type": "integer",
                    "description": "The eBay category 1 of the item. This category is used when a new listing is created."
                },
                "ebayCategory2": {
                    "type": "integer",
                    "description": "The eBay category 2 of the item. This category is used when a new listing is created."
                },
                "ebayStoreCategory": {
                    "type": "integer",
                    "description": "The ID of the eBay store category 1 of the item.\nThis value is used for new listings."
                },
                "ebayStoreCategory2": {
                    "type": "integer",
                    "description": "The ID of the eBay store category 2 of the item.\nThis value is used for new listings."
                },
                "rakutenCategoryId": {
                    "type": "integer",
                    "description": "The ID of the Rakuten category of this item."
                },
                "flagOne": {
                    "type": "integer",
                    "description": "Flag 1 of the item. Flags can be used to organise and filter items.\nEach item can be assigned up to two flags. Possible values: 1 to 31, 0 = no flag"
                },
                "flagTwo": {
                    "type": "integer",
                    "description": "Flag 2 of the item. Flags can be used to organise and filter items.\nEach item can be assigned up to two flags. Possible values: 1 to 11, 0 = no flag"
                },
                "ageRestriction": {
                    "type": "integer",
                    "description": "The age customers must be to purchase the item.\nItems with an age rating of 18+ must be linked to a shipping profile for which the\nPostIdent option is activated.\n<ul><li>0 = None available</li>\n   <li>3 = Released for ages 3 and up</li>\n   <li>6 = Ages 6 and up</li>\n   <li>9 = Ages 9 and up</li>\n   <li>12 = Ages 12 and up</li>\n   <li>14 = Ages 14 and up</li>\n   <li>16 = Ages 16 and up</li>\n   <li>18 = Ages 18 and up</li>\n   <li>50 = Not marked</li>\n   <li>88 = Not required</li>\n   <li>99 = Unknown</li></ul>"
                },
                "feedback": {
                    "type": "integer",
                    "description": "The feedback, i.e. rating, that this item received.\nPossible values are 1 to 5 or 1 to 10 depending on the maximum rating setting.\nAn initial feedback can be saved for items. The saved value will then be displayed as the\ninitial feedback. Every time new feedback is submitted, the average value will be\nrecalculated automatically."
                },
                "free1": {
                    "type": "string",
                    "description": "The content of the free text field 1. This can be displayed in the online store or on eBay."
                },
                "free2": {
                    "type": "string",
                    "description": "The content of the free text field 2. This can be displayed in the online store or on eBay."
                },
                "free3": {
                    "type": "string",
                    "description": "The content of the free text field 3. This can be displayed in the online store or on eBay."
                },
                "free4": {
                    "type": "string",
                    "description": "The content of the free text field 4. This can be displayed in the online store or on eBay."
                },
                "free5": {
                    "type": "string",
                    "description": "The content of the free text field 5. This can be displayed in the online store or on eBay."
                },
                "free6": {
                    "type": "string",
                    "description": "The content of the free text field 6. This can be displayed in the online store or on eBay."
                },
                "free7": {
                    "type": "string",
                    "description": "The content of the free text field 7. This can be displayed in the online store or on eBay."
                },
                "free8": {
                    "type": "string",
                    "description": "The content of the free text field 8. This can be displayed in the online store or on eBay."
                },
                "free9": {
                    "type": "string",
                    "description": "The content of the free text field 9. This can be displayed in the online store or on eBay."
                },
                "free10": {
                    "type": "string",
                    "description": "The content of the free text field 10. This can be displayed in the online store or on eBay."
                },
                "free11": {
                    "type": "string",
                    "description": "The content of the free text field 11. This can be displayed in the online store or on eBay."
                },
                "free12": {
                    "type": "string",
                    "description": "The content of the free text field 12. This can be displayed in the online store or on eBay."
                },
                "free13": {
                    "type": "string",
                    "description": "The content of the free text field 13. This can be displayed in the online store or on eBay."
                },
                "free14": {
                    "type": "string",
                    "description": "The content of the free text field 14. This can be displayed in the online store or on eBay."
                },
                "free15": {
                    "type": "string",
                    "description": "The content of the free text field 15. This can be displayed in the online store or on eBay."
                },
                "free16": {
                    "type": "string",
                    "description": "The content of the free text field 16. This can be displayed in the online store or on eBay."
                },
                "free17": {
                    "type": "string",
                    "description": "The content of the free text field 17. This can be displayed in the online store or on eBay."
                },
                "free18": {
                    "type": "string",
                    "description": "The content of the free text field 18. This can be displayed in the online store or on eBay."
                },
                "free19": {
                    "type": "string",
                    "description": "The content of the free text field 19. This can be displayed in the online store or on eBay."
                },
                "free20": {
                    "type": "string",
                    "description": "The content of the free text field 20. This can be displayed in the online store or on eBay."
                },
                "maximumOrderQuantity": {
                    "type": "number",
                    "description": "The maximum order quantity of an item permitted per order.\nIf a maximum order quantity is specified, no more than this quantity of any\ncombination of the variations of the item can be ordered.\nDecimal values are possible to allow orders by weight or length.\nDefault value is 0. If value is 0, the maximum order quantity is unlimited."
                },
                "customsTariffNumber": {
                    "type": "string",
                    "description": "Deprecated: The customs tariff number of the item;\nusually a 11 digit code number based on the Harmonised System"
                }
            }
        },
        "ItemEbayTitle": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string",
                    "description": "The title."
                },
                "itemId": {
                    "type": "integer",
                    "description": "The unique ID of the item."
                },
                "id": {
                    "type": "integer",
                    "description": "The unique ID of the ebay title."
                }
            }
        },
        "ItemShippingProfiles": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique ID of the link between item and shipping profile"
                },
                "itemId": {
                    "type": "integer",
                    "description": "The unique ID of the item"
                },
                "profileId": {
                    "type": "integer",
                    "description": "The unique ID of the shipping profile"
                }
            }
        },
        "ItemProperty": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The id of the variation property value"
                },
                "itemId": {
                    "type": "integer",
                    "description": "The id of the variation"
                },
                "propertyId": {
                    "type": "integer",
                    "description": "The id of the property item"
                },
                "propertySelectionId": {
                    "type": "integer",
                    "description": "The id of the property selection"
                },
                "valueInt": {
                    "type": "integer",
                    "description": "The int value of the variation property value"
                },
                "valueFloat": {
                    "type": "number",
                    "description": "The float value of the variation property value"
                },
                "valueFile": {
                    "type": "string",
                    "description": "The file value of the variation property value"
                },
                "surcharge": {
                    "type": "number",
                    "description": "The surcharge of the variation property value"
                }
            }
        },
        "Variation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The id of the variation."
                },
                "elasticSearchSource": {
                    "type": "array",
                    "items": [],
                    "description": ""
                }
            }
        },
        "AttributeValueName": {
            "type": "object",
            "properties": {
                "valueId": {
                    "type": "integer",
                    "description": "The unique ID of the attribute value."
                },
                "lang": {
                    "type": "string",
                    "description": "The <a href=\"https://developers.plentymarkets.com/rest-doc/introduction#countries\" target=\"_blank\">language</a> of the attribute value."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the attribute value. This attribute value name is displayed in the online store."
                }
            }
        },
        "Attribute": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique ID of the attribute."
                },
                "backendName": {
                    "type": "string",
                    "description": "The back end name of the attribute. The name must be unique and must not contain commas, colons, semicolons or quotation marks. It is not visible in the plentymarkets front end."
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the attribute. Attributes are displayed in the attribute overview in ascending order by position."
                },
                "isSurchargePercental": {
                    "type": "boolean",
                    "description": "Flag that indicates if the surcharge is percental."
                },
                "isLinkableToImage": {
                    "type": "boolean",
                    "description": "Flag that indicates if an image can be linked to the attribute."
                },
                "amazonAttribute": {
                    "type": "string",
                    "description": "The attribute of the market Amazon that this attribute is liked to. To list variations on this market, attributes must be linked to one of the attributes specified by the market. Check documentation of the market for permitted values."
                },
                "fruugoAttribute": {
                    "type": "string",
                    "description": "The attribute of the market Fruugo that this attribute is linked to. To list variations on this market, attributes must be linked to one of the attributes specified by the market."
                },
                "pixmaniaAttribute": {
                    "type": "integer",
                    "description": "The attribute of the market PIXmania that this attribute is linked to. To list variations on this market, attributes must be linked to one of the attributes specified by the market. Check documentation of the market for permitted values."
                },
                "ottoAttribute": {
                    "type": "string",
                    "description": "The attribute of the market OTTO that this attribute is linked to. To list variations on this market, attributes must be linked to one of the attributes specified by the market."
                },
                "googleShoppingAttribute": {
                    "type": "string",
                    "description": "The attribute of the market Google Shopping that this attribute is linked to. To list variations on this market, attributes must be linked to one of the attributes specified by the market."
                },
                "neckermannAtEpAttribute": {
                    "type": "integer",
                    "description": "The component of the market neckermann AT EP that this attribute is linked to. To list variations on this market, attributes must be linked to one of the components specified by the market. Check documentation of the market for permitted values."
                },
                "typeOfSelectionInOnlineStore": {
                    "type": "string",
                    "description": "How customers can select the attribute in the front end of a client. To allow attribute selection by check mark, attribute availability must be checked on the client side."
                },
                "laRedouteAttribute": {
                    "type": "integer",
                    "description": "The attribute of the market La Redoute that this attribute is linked to. To list variations on this market, attributes must be linked to one of the attributes specified by the market. Check documentation of the market for permitted values."
                },
                "isGroupable": {
                    "type": "boolean",
                    "description": "Flag that indicates if the attribute can be grouped in item lists. If yes, variations with this attribute can be shown in the ItemViewCategoriesList template first. Other attributes are nested and can only be selected after this attribute has been selected."
                }
            }
        },
        "AttributeMap": {
            "type": "object",
            "properties": {
                "marketId": {
                    "type": "number",
                    "description": "The unique ID of the market."
                },
                "attributeId": {
                    "type": "integer",
                    "description": "The unique ID of the attribute."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the attribute map. The name must be unique and must not contain commas, colons, semicolons or quotation marks. It is not visible in the plentymarkets front end."
                },
                "marketInformation1": {
                    "type": "string",
                    "description": "The information regarding the marketplace."
                },
                "marketInformation2": {
                    "type": "string",
                    "description": "The information regarding the marketplace."
                }
            }
        },
        "AttributeValueMap": {
            "type": "object",
            "properties": {
                "marketId": {
                    "type": "number",
                    "description": "The unique ID of the market."
                },
                "attributeId": {
                    "type": "integer",
                    "description": "The unique ID of the attribute."
                },
                "attributeValueId": {
                    "type": "integer",
                    "description": "The unique ID of the attribute value."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the attribute value map. The name must be unique and must not contain commas, colons, semicolons or quotation marks. It is not visible in the plentymarkets front end."
                },
                "marketInformation1": {
                    "type": "string",
                    "description": "The information regarding the marketplace."
                },
                "marketInformation2": {
                    "type": "string",
                    "description": "The information regarding the marketplace."
                }
            }
        },
        "AttributeName": {
            "type": "object",
            "properties": {
                "attributeId": {
                    "type": "integer",
                    "description": "The id of the attribute."
                },
                "lang": {
                    "type": "string",
                    "description": "The <a href=\"https://developers.plentymarkets.com/rest-doc/introduction#countries\" target=\"_blank\">language</a> of the attribute."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the attribute. This attribute name is displayed in the online store."
                }
            }
        },
        "AttributeValueMarketName": {
            "type": "object",
            "properties": {
                "valueId": {
                    "type": "integer",
                    "description": "The unique ID of the attribute value."
                },
                "lang": {
                    "type": "string",
                    "description": "The <a href=\"https://developers.plentymarkets.com/rest-doc/introduction#countries\" target=\"_blank\">language</a> of the attribute value market."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the attribute value market."
                },
                "name2": {
                    "type": "string",
                    "description": "The name2 of the attribute value market."
                },
                "attributeId": {
                    "type": "integer",
                    "description": ""
                },
                "referenceType": {
                    "type": "string",
                    "description": ""
                }
            }
        },
        "AttributeValue": {
            "type": "object",
            "properties": []
        },
        "Barcode": {
            "type": "object",
            "properties": []
        },
        "BarcodeLinkReferrer": {
            "type": "object",
            "properties": {
                "barcodeId": {
                    "type": "integer",
                    "description": "The unique ID of the barcode"
                },
                "referrerId": {
                    "type": "number",
                    "description": "The unique ID of the referrer. To activate all referrers, the value <strong>-1</strong> must be specified. This value activates all referrers in the system by default, including any referrers added at a later stage."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the barcode was created."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the barcode was last updated."
                }
            }
        },
        "ItemListingCategory": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": ""
                },
                "name": {
                    "type": "string",
                    "description": ""
                },
                "fullName": {
                    "type": "string",
                    "description": ""
                },
                "parentId": {
                    "type": "integer",
                    "description": ""
                },
                "isLeaf": {
                    "type": "boolean",
                    "description": ""
                }
            }
        },
        "Manufacturer": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique ID of the manufacturer."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the manufacturer"
                },
                "externalName": {
                    "type": "string",
                    "description": "The external name of the manufacturer. The external name is used for the item export to external markets. If no external name is saved, the Name will be used. The external name will also be transferred to FINDOLOGIC and will be indexed for item searches."
                },
                "logo": {
                    "type": "string",
                    "description": "The URL of the manufacturer's logo"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the manufacturer's website"
                },
                "street": {
                    "type": "string",
                    "description": "The street of the manufacturer's address"
                },
                "houseNo": {
                    "type": "string",
                    "description": "The house number of the manufacturer's address"
                },
                "postcode": {
                    "type": "string",
                    "description": "The postal code of the manufacturer's address"
                },
                "town": {
                    "type": "string",
                    "description": "The town of the manufacturer's address"
                },
                "phoneNumber": {
                    "type": "string",
                    "description": "The phone number of the manufacturer"
                },
                "faxNumber": {
                    "type": "string",
                    "description": "The fax number of the manufacturer"
                },
                "email": {
                    "type": "string",
                    "description": "The email address of the manufacturer"
                },
                "countryId": {
                    "type": "integer",
                    "description": "The ID of the <a href=\"https://developers.plentymarkets.com/rest-doc/introduction#countries\" target=\"_blank\">country</a> in which the manufacturer is based; 0 = unknown."
                },
                "pixmaniaBrandId": {
                    "type": "integer",
                    "description": "The manufacturer's ID on the market Pixmania"
                },
                "neckermannAtEpBrandId": {
                    "type": "integer",
                    "description": "The manufacturer's ID on the market Neckermann Austria, Enterprise version"
                },
                "laRedouteBrandId": {
                    "type": "integer",
                    "description": "The manufacturer's ID on the market La Redoute"
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the manufacturer"
                },
                "comment": {
                    "type": "string",
                    "description": "Internal comments about the manufacturer (optional)"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the manufacturer information was last updated."
                }
            }
        },
        "ManufacturerCommission": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique ID of the manufacturer commission"
                },
                "manufacturerId": {
                    "type": "integer",
                    "description": "The unique ID of the manufacturer"
                },
                "plentyId": {
                    "type": "integer",
                    "description": "The unique ID of the client (store) that the commission applies to. The route /rest/webstores provides access to clients (stores)."
                },
                "referrerId": {
                    "type": "number",
                    "description": "The unique ID of the referrer that the commission applies to. The route /rest/orders/referrers provides access to referrers."
                },
                "commission": {
                    "type": "number",
                    "description": "The manufacturer commission value in percent"
                }
            }
        },
        "PackingUnit": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The id of the packing unit entry. Primary key auto-increment"
                },
                "unitId": {
                    "type": "integer",
                    "description": "The id of the packing unit as it was until now (from 0 to 39 without 33)"
                },
                "unitNameEN": {
                    "type": "string",
                    "description": "The name of the packing unit in English"
                },
                "unitNameDE": {
                    "type": "string",
                    "description": "The name of the packing unit in German"
                }
            }
        },
        "Property": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the property"
                },
                "cast": {
                    "type": "string",
                    "description": "The cast of the property (array values: 'empty','int','float','string','selection','text','html','date','file')"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the property (e.g. 'item' or 'contact')"
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the property"
                }
            }
        },
        "PropertyMarketReference": {
            "type": "object",
            "properties": {
                "propertyId": {
                    "type": "integer",
                    "description": "The unique ID of the property"
                },
                "componentId": {
                    "type": "integer",
                    "description": "The unique ID of the reference for the market"
                },
                "marketId": {
                    "type": "number",
                    "description": "The unique ID of the market"
                },
                "externalComponent": {
                    "type": "string",
                    "description": "The external reference of the property"
                }
            }
        },
        "PropertyName": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the property name"
                },
                "propertyId": {
                    "type": "integer",
                    "description": "The property ID of the property name"
                },
                "lang": {
                    "type": "string",
                    "description": "The language of the property name as ISO 639-1 language code, e.g. en for English"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the property name"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the property name"
                }
            }
        },
        "PropertySelection": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the property selection"
                },
                "propertyId": {
                    "type": "integer",
                    "description": "The property ID of the property selection"
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the property selection"
                }
            }
        },
        "PropertyGroup": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the property group"
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the property group"
                }
            }
        },
        "PropertyGroupName": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the property group name"
                },
                "groupId": {
                    "type": "integer",
                    "description": "The property group ID of the property group"
                },
                "lang": {
                    "type": "string",
                    "description": "The language of the property group name as ISO 639-1 language code, e.g. en for English"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the property group"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the property group"
                }
            }
        },
        "SalesPrice": {
            "type": "object",
            "properties": []
        },
        "SalesPriceName": {
            "type": "object",
            "properties": {
                "salesPriceId": {
                    "type": "integer",
                    "description": "The unique ID of the sales price"
                },
                "lang": {
                    "type": "string",
                    "description": "The <a href='https://developers.plentymarkets.com/rest-doc/introduction#languages' target='_blank'>language code</a> of the sales price name"
                },
                "nameInternal": {
                    "type": "string",
                    "description": "The internal name of the sales price. The internal name is used in the plentymarkets back end only."
                },
                "nameExternal": {
                    "type": "string",
                    "description": "The external name of the sales price. The external name is displayed in the online store and as such is visible for customers."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the name was created."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the name was last updated."
                }
            }
        },
        "SalesPriceCountry": {
            "type": "object",
            "properties": {
                "salesPriceId": {
                    "type": "integer",
                    "description": "The unique ID of the sales price"
                },
                "countryId": {
                    "type": "integer",
                    "description": "The unique ID of the <a href=\"https://developers.plentymarkets.com/rest-doc/introduction#countries\"  target=\"_blank\">country</a>"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the country was activated."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the relationship between country and sales price was last updated."
                }
            }
        },
        "SalesPriceCurrency": {
            "type": "object",
            "properties": {
                "salesPriceId": {
                    "type": "integer",
                    "description": "The unique ID of the sales price"
                },
                "currency": {
                    "type": "string",
                    "description": "The ISO code of the <a href=\"https://developers.plentymarkets.com/rest-doc/introduction#currencies\" target=\"_blank\">currency</a>; -1 = all currencies."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the currency was activated."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the relationship between currency and sales price was last updated."
                }
            }
        },
        "SalesPriceCustomerClass": {
            "type": "object",
            "properties": {
                "salesPriceId": {
                    "type": "integer",
                    "description": "The unique ID of the sales price"
                },
                "customerClassId": {
                    "type": "integer",
                    "description": "The unique ID of the customer class"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the customer class was activated."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the relationship between customer class and sales price was last updated."
                }
            }
        },
        "SalesPriceReferrer": {
            "type": "object",
            "properties": {
                "salesPriceId": {
                    "type": "integer",
                    "description": "The unique ID of the sales price"
                },
                "referrerId": {
                    "type": "number",
                    "description": "The unique ID of the referrer"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the referrer was activated."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the relationship between referrer and sales price was last updated."
                }
            }
        },
        "SalesPriceOnlineStore": {
            "type": "object",
            "properties": {
                "salesPriceId": {
                    "type": "integer",
                    "description": "The unique ID of the sales price"
                },
                "plentyId": {
                    "type": "integer",
                    "description": "The unique ID of the client (store)"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the client (store) was activated."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the relationship between the client (store) and the sales price was last updated."
                }
            }
        },
        "SalesPriceAccount": {
            "type": "object",
            "properties": {
                "salesPriceId": {
                    "type": "integer",
                    "description": "The unique ID of the sales price"
                },
                "referrerId": {
                    "type": "integer",
                    "description": "The ID of the referrer linked to the sales price"
                },
                "accountId": {
                    "type": "integer",
                    "description": "The ID of the referrer account linked to the sales price"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the referrer account was linked to the sales price."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the link was last updated."
                }
            }
        },
        "Unit": {
            "type": "object",
            "properties": []
        },
        "UnitName": {
            "type": "object",
            "properties": {
                "unitId": {
                    "type": "integer",
                    "description": "The unique ID of the unit"
                },
                "lang": {
                    "type": "string",
                    "description": "The <a href=\"https://developers.plentymarkets.com/rest-doc/introduction#languages\"  target=\"_blank\">language</a> of the unit name"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the unit"
                }
            }
        },
        "VariationBarcode": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "description": "The code of the variation's barcode. The combination of code and barcode ID must be unique."
                },
                "barcodeId": {
                    "type": "integer",
                    "description": "The unique ID of the barcode linked to the variation. The combination of code and barcode ID must be unique."
                },
                "variationId": {
                    "type": "integer",
                    "description": "The unique ID of the variation"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the variation's code was created."
                }
            }
        },
        "VariationSalesPrice": {
            "type": "object",
            "properties": {
                "variationId": {
                    "type": "integer",
                    "description": "The unique ID of the variation"
                },
                "salesPriceId": {
                    "type": "integer",
                    "description": "The unique ID of the sales price"
                },
                "price": {
                    "type": "number",
                    "description": "The price of the variation saved for this sales price"
                },
                "lowestPrice": {
                    "type": "number",
                    "description": "The lowest price of the variation saved for this sales price"
                },
                "lowestPriceCalculation": {
                    "type": "boolean",
                    "description": "Is the lowest price calculation active for this sales price"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the sales price was last updated."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the sales price was created."
                }
            }
        },
        "VariationCategory": {
            "type": "object",
            "properties": {
                "variationId": {
                    "type": "integer",
                    "description": "The unique ID of the variation"
                },
                "categoryId": {
                    "type": "integer",
                    "description": "The unique ID of the category"
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the category"
                },
                "isNeckermannPrimary": {
                    "type": "string",
                    "description": "Flag that indicates if the category is the primary category for the market Neckermann for this variation."
                }
            }
        },
        "VariationClient": {
            "type": "object",
            "properties": {
                "variationId": {
                    "type": "integer",
                    "description": "The unique ID of the variation"
                },
                "plentyId": {
                    "type": "integer",
                    "description": "The unique ID of the client (store)"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time at which the client (store) was linked to the variation."
                }
            }
        },
        "VariationMarket": {
            "type": "object",
            "properties": {
                "variationId": {
                    "type": "integer",
                    "description": "The unique ID of the variation"
                },
                "marketId": {
                    "type": "integer",
                    "description": "The unique ID of the market"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the link between the variation and the market was created."
                }
            }
        },
        "VariationDefaultCategory": {
            "type": "object",
            "properties": {
                "variationId": {
                    "type": "integer",
                    "description": "The unique ID of the variation"
                },
                "branchId": {
                    "type": "integer",
                    "description": "The unique ID of the category branch"
                },
                "plentyId": {
                    "type": "integer",
                    "description": "The unique plenty ID of the client (store)"
                },
                "manually": {
                    "type": "string",
                    "description": ""
                }
            }
        },
        "VariationSupplier": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique ID of the link between variation and supplier"
                },
                "variationId": {
                    "type": "integer",
                    "description": "The unique ID of the variation"
                },
                "supplierId": {
                    "type": "integer",
                    "description": "The unique ID of the supplier"
                },
                "purchasePrice": {
                    "type": "number",
                    "description": "The price at which the variation was purchased from this supplier."
                },
                "minimumPurchase": {
                    "type": "integer",
                    "description": "The minimum quantity of the variation that has to be ordered from the supplier. This value is also used as a quantity suggestion when creating reorders."
                },
                "itemNumber": {
                    "type": "string",
                    "description": "The external item number assigned to the variation by this supplier"
                },
                "lastPriceQuery": {
                    "type": "string",
                    "description": "The date of the last price query to this supplier. This helps to plan price negotiations."
                },
                "deliveryTimeInDays": {
                    "type": "integer",
                    "description": "The delivery time in days for the variation saved for this supplier"
                },
                "discount": {
                    "type": "number",
                    "description": "The discount in percent the supplier grants for the variation."
                },
                "isDiscountable": {
                    "type": "string",
                    "description": "Flag that indicates if the supplier's discount for this variation is active."
                },
                "packagingUnit": {
                    "type": "number",
                    "description": "The packaging unit of the supplier if it differs from the packaging unit settings in plentymarkets."
                },
                "lastUpdateTimestamp": {
                    "type": "string",
                    "description": "The time the supplier data was last updated"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the supplier data was created"
                },
                "currencyPurchasePrice": {
                    "type": "number",
                    "description": "The purchase price in the currency of the supplier"
                },
                "itemDescription": {
                    "type": "string",
                    "description": "The supplier item description"
                }
            }
        },
        "VariationWarehouse": {
            "type": "object",
            "properties": {
                "variationId": {
                    "type": "integer",
                    "description": "The unique ID of the variation"
                },
                "warehouseId": {
                    "type": "integer",
                    "description": "The unique ID of the warehouse"
                },
                "warehouseZoneId": {
                    "type": "integer",
                    "description": "The unique ID of the warehouse zone"
                },
                "storageLocationType": {
                    "type": "string",
                    "description": "The storage location type of the warehouse"
                },
                "reorderLevel": {
                    "type": "integer",
                    "description": "The reorder level for the variation in this warehouse"
                },
                "maximumStock": {
                    "type": "integer",
                    "description": "The maximum stock for the variation in this warehouse"
                },
                "stockTurnoverInDays": {
                    "type": "integer",
                    "description": "The stock turnover in days for the variation in this warehouse"
                },
                "storageLocation": {
                    "type": "integer",
                    "description": "The storage location of the variation in this warehouse"
                },
                "stockBuffer": {
                    "type": "integer",
                    "description": "The stock buffer for the variation in this warehouse"
                },
                "isBatch": {
                    "type": "boolean",
                    "description": "Is for warehouse and variation stock batch active"
                },
                "isBestBeforeDate": {
                    "type": "boolean",
                    "description": "Is for warehouse and variation stock best before date active"
                },
                "lastUpdateTimestamp": {
                    "type": "string",
                    "description": "The time the warehouse data was last updated."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the warehouse data was created."
                }
            }
        },
        "AttributeValueSet": {
            "type": "object",
            "properties": {
                "attributeValueSetId": {
                    "type": "integer",
                    "description": "The ID of the attribute value set"
                },
                "attributeId": {
                    "type": "integer",
                    "description": "The ID of the attribute"
                },
                "valueId": {
                    "type": "integer",
                    "description": "The ID of the attribute value"
                },
                "isLinkableToImage": {
                    "type": "integer",
                    "description": "Flag that indicates if an image can be linked to the attribute."
                }
            }
        },
        "UnitCombination": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The id of the unitCombination"
                },
                "unitId": {
                    "type": "integer",
                    "description": "The id of the unit"
                },
                "content": {
                    "type": "integer",
                    "description": "The content of the unit"
                }
            }
        },
        "VariationPropertyValueText": {
            "type": "object",
            "properties": {
                "valueId": {
                    "type": "integer",
                    "description": "The unique ID of the link between the variation and the property"
                },
                "lang": {
                    "type": "string",
                    "description": "The <a href=\"https://developers.plentymarkets.com/rest-doc/introduction#languages\" target=\"_blank\">language</a> of the property value text"
                },
                "value": {
                    "type": "string",
                    "description": "The text saved for the property of the type Text"
                }
            }
        },
        "ItemImage": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique ID of the image"
                },
                "itemId": {
                    "type": "integer",
                    "description": "The unique ID of the item the image is associated with"
                },
                "fileType": {
                    "type": "string",
                    "description": "The file format of the image. Possible file formats: jpg, jpeg, png, gif, svg"
                },
                "path": {
                    "type": "string",
                    "description": "The path under which the image is saved."
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the image. The position is used for sorting images in the online store."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the image was uploaded."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the image details were last updated."
                },
                "md5Checksum": {
                    "type": "string",
                    "description": "The MD5 hash value of the image file"
                },
                "md5ChecksumOriginal": {
                    "type": "string",
                    "description": "The MD5 hash value of the original image file"
                },
                "hasLinkedVariations": {
                    "type": "integer",
                    "description": "Indicates if the item is linked with variations. Returns 1 if at least one variation is linked with the image, otherwise 0."
                },
                "size": {
                    "type": "integer",
                    "description": "The size of the image in pixels"
                },
                "width": {
                    "type": "integer",
                    "description": "The width of the image in pixels"
                },
                "height": {
                    "type": "integer",
                    "description": "The height of the image in pixels"
                },
                "url": {
                    "type": "string",
                    "description": "The URL under which the image can be accessed after the upload."
                },
                "urlMiddle": {
                    "type": "string",
                    "description": "The URL that points to the  medium-sized version of the item image."
                },
                "urlPreview": {
                    "type": "string",
                    "description": "The URL that points to the  first preview version of the item image."
                },
                "urlSecondPreview": {
                    "type": "string",
                    "description": "The URL that points to the second preview version of the item image."
                }
            }
        },
        "ItemImageName": {
            "type": "object",
            "properties": {
                "imageId": {
                    "type": "integer",
                    "description": "The ID of the image. The ID must be unique."
                },
                "lang": {
                    "type": "string",
                    "description": "The language of the image name"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the image in the specified language"
                },
                "alternate": {
                    "type": "string",
                    "description": "The alternative name of the image in the specified language"
                }
            }
        },
        "ItemImageAvailability": {
            "type": "object",
            "properties": {
                "imageId": {
                    "type": "integer",
                    "description": "The ID of the image. The ID must be unique."
                },
                "type": {
                    "type": "string",
                    "description": "The type of referrer for which the image is available. Possible types: <ul><li>mandant = The image can be made available for clients (stores).</li><li>marketplace = The image can be made available for markets.</li><li>listing = The image can be made available for listings.</li></ul>"
                },
                "value": {
                    "type": "number",
                    "description": "For the type <b>mandant</b>, this is the plentyID of the client (store) for which the image is available. For the types <b>marketplace</b> and <b>listing</b>, this is the ID of the referrer for which the image is available. <ul><li><strong>-1.00</strong> = The image is available for all referrers of this type.</li></ul>"
                }
            }
        },
        "AttributeValueImage": {
            "type": "object",
            "properties": {
                "imageId": {
                    "type": "integer",
                    "description": "The unique ID of the image"
                },
                "itemId": {
                    "type": "integer",
                    "description": "The unique ID of the item"
                },
                "attributeId": {
                    "type": "integer",
                    "description": "The unique ID of the attribute"
                },
                "valueId": {
                    "type": "integer",
                    "description": "The unique ID of the attribute value"
                }
            }
        },
        "VariationImage": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique ID of the link between a variation and an image"
                },
                "itemId": {
                    "type": "integer",
                    "description": "The unique ID of the item"
                },
                "variationId": {
                    "type": "integer",
                    "description": "The unique ID of the variation"
                },
                "imageId": {
                    "type": "integer",
                    "description": "The unique ID of the image"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the image was linked to the variation."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the link between an image and a variation was last updated."
                }
            }
        },
        "ItemCrossSelling": {
            "type": "object",
            "properties": {
                "itemId": {
                    "type": "integer",
                    "description": "The unique ID of the item to which cross-selling items are linked"
                },
                "crossItemId": {
                    "type": "integer",
                    "description": "The unique ID of the cross-selling item that is linked to the item"
                },
                "relationship": {
                    "type": "string",
                    "description": "The cross-selling relationship between item and cross-selling item. Possible values:<ul><li>Accessory = The cross-selling item is an accessory of the item.</li><li>ReplacementPart = The cross-selling item is a replacement part for the item.</li><li>Similar = The cross-selling item is similar to the item.</li><li>Bundle = The cross-selling item is suitable to be sold as a bundle with the item.</li></ul>"
                },
                "isDynamic": {
                    "type": "boolean",
                    "description": "Flag that indicates if the cross-selling link was generated automatically."
                }
            }
        },
        "VariationDescription": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique ID of the description"
                },
                "itemId": {
                    "type": "integer",
                    "description": "The unique ID of the item that this description belongs to"
                },
                "lang": {
                    "type": "string",
                    "description": "The <a href=\"https://developers.plentymarkets.com/rest-doc/introduction#countries\" target=\"_blank\">language code</a> of the description"
                },
                "name": {
                    "type": "string",
                    "description": "The default name of the item. By default, this name is displayed in the online store. For Default items, this name is also used for markets. Character limit: max. 240 characters."
                },
                "name2": {
                    "type": "string",
                    "description": "Alternative item name that can be used e.g. for markets. Character limit: max. 240 characters."
                },
                "name3": {
                    "type": "string",
                    "description": "Alternative item name that can be used e.g. for markets. Character limit: max. 240 characters."
                },
                "previewDescription": {
                    "type": "string",
                    "description": "The preview text. The preview text is a short description that can be displayed in item lists."
                },
                "metaDescription": {
                    "type": "string",
                    "description": "The meta description of the item. This description is analysed by search engines and displayed in search results. This text should be treated as an advertising text to maximise click-through from search engine result pages. Current recommended limit is 156 characters."
                },
                "description": {
                    "type": "string",
                    "description": "The item description. This is a detailed description displayed in the item layout of the online store."
                },
                "technicalData": {
                    "type": "string",
                    "description": "The technical data for the item. To display the technical data in the online store, insert the template variable TechnicalData and an optional title into the template ItemViewSingleItem."
                },
                "urlPath": {
                    "type": "string",
                    "description": "The URL path of the item in the online store. By default, the URL path consists of the categories and the item name. The path will be assigned automatically by plentymarkets when the item is created and will be displayed as part of the URL when the item is selected in the online store."
                },
                "metaKeywords": {
                    "type": "string",
                    "description": "Meta keywords to tag the item for search engines. More than one keyword can be separated by commas."
                }
            }
        },
        "VariationMarketIdentNumber": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique ID of the market ident number (ASIN/ePID) of a variation"
                },
                "variationId": {
                    "type": "integer",
                    "description": "The unique ID of the variation"
                },
                "countryId": {
                    "type": "integer",
                    "description": "The country code of the market ident number (ASIN/ePID)"
                },
                "type": {
                    "type": "string",
                    "description": "The type of market ident number (ASIN/ePID)"
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the market ident number  (ASIN/ePID)"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the market ident number (ASIN/ePID)"
                }
            }
        },
        "VariationStock": {
            "type": "object",
            "properties": {
                "itemId": {
                    "type": "integer",
                    "description": "The ID of the item"
                },
                "variationId": {
                    "type": "integer",
                    "description": "The ID of the variation"
                },
                "warehouseId": {
                    "type": "integer",
                    "description": "The ID of the warehouse"
                },
                "reservedListing": {
                    "type": "number",
                    "description": "The quantity of a variation that is reserved for listings"
                },
                "reservedBundles": {
                    "type": "number",
                    "description": "The quantity of a variation that is reserved for item bundles"
                },
                "valueOfGoods": {
                    "type": "number",
                    "description": "The value of goods based on the physical stock"
                },
                "purchasePrice": {
                    "type": "number",
                    "description": "The purchase price of the variation stock"
                },
                "physicalStock": {
                    "type": "number",
                    "description": "The physical stock of the variation stock"
                },
                "reservedStock": {
                    "type": "number",
                    "description": "The reserved stock of the variation stock"
                },
                "netStock": {
                    "type": "number",
                    "description": "The net stock is the stock that can still be sold"
                },
                "reorderLevel": {
                    "type": "number",
                    "description": "The quantity of a variation that triggers a reorder"
                },
                "deltaReorderLevel": {
                    "type": "number",
                    "description": "The quantity of a variation that is required to reach the reorder level"
                }
            }
        },
        "VariationStockMovement": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the stock movement"
                },
                "itemId": {
                    "type": "integer",
                    "description": "The ID of the item"
                },
                "variationId": {
                    "type": "integer",
                    "description": "The ID of the variation"
                },
                "warehouseId": {
                    "type": "integer",
                    "description": "The ID of the warehouse"
                },
                "reasonString": {
                    "type": "string",
                    "description": "The reason string"
                },
                "attributeValues": {
                    "type": "string",
                    "description": "The attribute values of a variation"
                },
                "processRowId": {
                    "type": "integer",
                    "description": "The ID is either the actual ID of an order or of an incoming item data set. Whether it is an order ID or an incoming item data set ID depends on the processRowType."
                },
                "quantity": {
                    "type": "integer",
                    "description": "The quantity"
                },
                "reason": {
                    "type": "integer",
                    "description": "The reason for the movement"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date and time that the movement was created. This date is in W3C format."
                },
                "processRowType": {
                    "type": "integer",
                    "description": "The type of the stock movement\n<ul>\n    <li>1 = incoming item data set</li>\n    <li>2 = order</li>\n    <li>3 = deleted stock movement</li>\n    <li>4 = new stock intake</li>\n</ul>"
                },
                "bestBeforeDate": {
                    "type": "string",
                    "description": "The best before date for the movement"
                },
                "batch": {
                    "type": "string",
                    "description": "The batch for the movement"
                },
                "storageLocationName": {
                    "type": "string",
                    "description": "The name of the storage location"
                },
                "warehouseName": {
                    "type": "string",
                    "description": "The name of the warehouse"
                },
                "purchasePrice": {
                    "type": "integer",
                    "description": "The purchase price of a variation"
                },
                "userId": {
                    "type": "integer",
                    "description": "The id of the user. Can be null if the movement was not triggered by an user."
                }
            }
        },
        "StockStorageLocation": {
            "type": "object",
            "properties": {
                "itemId": {
                    "type": "integer",
                    "description": "The ID of the item"
                },
                "variationId": {
                    "type": "integer",
                    "description": "The ID of the variation"
                },
                "storageLocationId": {
                    "type": "integer",
                    "description": "The ID of the storage location."
                },
                "warehouseId": {
                    "type": "integer",
                    "description": "The ID of the warehouse that the storage location is in"
                },
                "quantity": {
                    "type": "number",
                    "description": "The quantity stored at the storage location"
                },
                "bestBeforeDate": {
                    "type": "string",
                    "description": "The best before date"
                },
                "batch": {
                    "type": "string",
                    "description": "The batch"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The day and time the stock was last updated"
                }
            }
        },
        "VariationAdditionalSku": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the additional sku"
                },
                "variationId": {
                    "type": "integer",
                    "description": "The ID of the variation."
                },
                "marketId": {
                    "type": "number",
                    "description": "The ID of the market reference."
                },
                "marketAccountId": {
                    "type": "integer",
                    "description": "The ID of the market account."
                },
                "sku": {
                    "type": "string",
                    "description": "The additional sku for this variation."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the SKU was created (YYYY-MM-DD HH:MM:SS)."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the SKU was updated (YYYY-MM-DD HH:MM:SS)."
                }
            }
        },
        "VariationBundle": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique ID of the link that marks a variation as a bundle component"
                },
                "variationId": {
                    "type": "integer",
                    "description": "The unique ID of the variation to which other variations are added to create a bundle"
                },
                "componentVariationId": {
                    "type": "integer",
                    "description": "The unique ID of the variation added as bundle component"
                },
                "componentQuantity": {
                    "type": "integer",
                    "description": "The quantity of the variation to be added as bundle component"
                },
                "lastUpdatedTimestamp": {
                    "type": "string",
                    "description": "The time the bundle was last updated."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the bundle was created."
                }
            }
        },
        "VariationPropertyValue": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique ID of the link between the variation and the property value"
                },
                "variationId": {
                    "type": "integer",
                    "description": "The unique ID of the variation"
                },
                "propertyId": {
                    "type": "integer",
                    "description": "The unique ID of the property"
                },
                "propertySelectionId": {
                    "type": "integer",
                    "description": "The unique ID of the property selection of the variation"
                },
                "valueInt": {
                    "type": "integer",
                    "description": "The int value of the property value of the variation"
                },
                "valueFloat": {
                    "type": "number",
                    "description": "The float value of the property value of the variation"
                },
                "valueFile": {
                    "type": "string",
                    "description": "The file value of the property value of the variation"
                },
                "surcharge": {
                    "type": "number",
                    "description": "The surcharge of the property value of the variation"
                }
            }
        },
        "VariationSku": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The row ID of the table plenty_item_variation_market_status"
                },
                "variationId": {
                    "type": "integer",
                    "description": "The ID of the variation"
                },
                "marketId": {
                    "type": "number",
                    "description": "The ID of the market"
                },
                "accountId": {
                    "type": "integer",
                    "description": "The ID of the market account"
                },
                "initialSku": {
                    "type": "string",
                    "description": "The initial SKU of the variation. The initial SKU cannot be modified even if the variation SKU is changed. However, it is possible to reset the variation SKU to the initial SKU."
                },
                "sku": {
                    "type": "string",
                    "description": "The SKU of the variation. The SKU is adjustable but may not exist twice for the combination of market Id and account Id."
                },
                "parentSku": {
                    "type": "string",
                    "description": "The Parent SKU of the variation. The Parent SKU is adjustable. The same Parent SKU value should be used on variations of same article."
                },
                "isActive": {
                    "type": "boolean",
                    "description": "Flag that indicates if the item is ready for export (currently not in use)."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the SKU was created (YYYY-MM-DD HH:MM:SS)."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the SKU was updated (YYYY-MM-DD HH:MM:SS)."
                },
                "exportedAt": {
                    "type": "string",
                    "description": "The time the variation was last exported (YYYY-MM-DD HH:MM:SS)."
                },
                "stockUpdatedAt": {
                    "type": "string",
                    "description": ""
                },
                "deletedAt": {
                    "type": "string",
                    "description": "The time the variation was deleted (YYYY-MM-DD HH:MM:SS)."
                },
                "status": {
                    "type": "string",
                    "description": "The status of the variation after the export. Possible entries are INACTIVE, ERROR, SENT and ACTIVE."
                },
                "additionalInformation": {
                    "type": "string",
                    "description": "The field that contains additional information."
                }
            }
        },
        "ImagesRelation": {
            "type": "object",
            "properties": []
        },
        "ItemImagesRelation": {
            "type": "object",
            "properties": []
        },
        "Tag": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the tag"
                },
                "name": {
                    "type": "string",
                    "description": "The backend name of the tag"
                },
                "color": {
                    "type": "string",
                    "description": "The color for the tag"
                }
            }
        },
        "PluginTranslation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the translation"
                },
                "pluginSetId": {
                    "type": "integer",
                    "description": "The ID of the plugin set"
                },
                "pluginName": {
                    "type": "string",
                    "description": "The name of the plugin"
                },
                "languageCode": {
                    "type": "string",
                    "description": "The code of the language"
                },
                "fileName": {
                    "type": "string",
                    "description": "The file of the key"
                },
                "key": {
                    "type": "string",
                    "description": "The translation key"
                },
                "value": {
                    "type": "string",
                    "description": "The translation value"
                }
            }
        },
        "LegalInformation": {
            "type": "object",
            "properties": {
                "plentyId": {
                    "type": "integer",
                    "description": "The unique identifier of the plenty client"
                },
                "lang": {
                    "type": "string",
                    "description": "The language of the legal information text"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the legal information text. The types available are:\n<ul>\n<li>TermsConditions</li>\n<li>CancellationRights</li>\n<li>PrivacyPolicy</li>\n<li>LegalDisclosure</li>\n<li>WithdrawalForm</li>\n</ul>"
                },
                "plainText": {
                    "type": "string",
                    "description": "The text value of the legal information text"
                },
                "htmlText": {
                    "type": "string",
                    "description": "The html value of the legal information text"
                }
            }
        },
        "Listing": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the listing."
                },
                "itemId": {
                    "type": "integer",
                    "description": "The ID of the item."
                },
                "typeId": {
                    "type": "integer",
                    "description": "The ID of the listing type. Possible types are:\n<ul>\n    <li>1 = Auction</li>\n    <li>2 = Fixed</li>\n    <li>3 = Shop item</li>\n</ul>"
                },
                "stockDependenceTypeId": {
                    "type": "integer",
                    "description": "The ID of the listing stock dependence. Possible stock dependence types are:\n<ul>\n    <li>1 = Unlimited with sync</li>\n    <li>2 = Limited with reservation</li>\n    <li>3 = Limited without reservation</li>\n    <li>4 = Unlimited without sync</li>\n</ul>"
                },
                "unitCombinationId": {
                    "type": "integer",
                    "description": "The ID of the unit combination."
                }
            }
        },
        "LayoutTemplate": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the layout template."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the layout template."
                },
                "css": {
                    "type": "string",
                    "description": "The css of the layout template."
                },
                "htmlStructure": {
                    "type": "string",
                    "description": "The html structure of the layout template."
                },
                "mainFrame": {
                    "type": "string",
                    "description": "The main frame of the layout template."
                },
                "additionalContent": {
                    "type": "array",
                    "items": [],
                    "description": "The additional content of the layout template."
                },
                "appendixType": {
                    "type": "string",
                    "description": "The appendix type of the layout template."
                }
            }
        },
        "ListingMarket": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the listing market."
                },
                "listingId": {
                    "type": "integer",
                    "description": "The listing ID of the current listing market."
                },
                "variationId": {
                    "type": "integer",
                    "description": "The variation ID for this listing market."
                },
                "referrerId": {
                    "type": "integer",
                    "description": "The ID of the referrer."
                },
                "credentialsId": {
                    "type": "integer",
                    "description": "The credentials ID that this listing market belongs to."
                },
                "directoryId": {
                    "type": "integer",
                    "description": "The directory ID of the listing market."
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Indicates if the listing market is enabled."
                },
                "duration": {
                    "type": "string",
                    "description": "The duration of the listing market."
                },
                "verified": {
                    "type": "string",
                    "description": "Indicates if the listing market has been verified. Possible values are: 'succeeded', 'failed', 'unknown'."
                },
                "quantity": {
                    "type": "integer",
                    "description": "The quantity set for this listing market."
                },
                "allVariations": {
                    "type": "boolean",
                    "description": "Indicates if all variations should be included."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date that the listing was created."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date that the listing was last updated."
                }
            }
        },
        "ListingMarketHistory": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The listing market history ID."
                },
                "listingMarketId": {
                    "type": "integer",
                    "description": "The listing market ID of the current listing market history."
                },
                "referrerId": {
                    "type": "integer",
                    "description": "The referrer ID."
                },
                "externalId": {
                    "type": "string",
                    "description": "The external ID of the listing market history."
                },
                "statusId": {
                    "type": "integer",
                    "description": "The status ID of the current listing market history. The following properties are available:\n<ul>\n<li>1 = Active</li>\n<li>2 = Ended</li>\n<li>3 = Relisted</li>\n<li>4 = Hidden</li>\n</ul>"
                },
                "quantity": {
                    "type": "integer",
                    "description": "The quantity available for sale on the marketplace."
                },
                "quantitySold": {
                    "type": "integer",
                    "description": "The quantity sold currently on the marketplace."
                },
                "quantitySoldDelta": {
                    "type": "integer",
                    "description": "The difference between the sold quantity and orders imported for this listing market history."
                },
                "quantityRemain": {
                    "type": "integer",
                    "description": "The quantity remaining on the marketplace."
                },
                "price": {
                    "type": "number",
                    "description": "The price offered for this listing market. @see ListingMarketHistoryVariation if the listing market history contains variations."
                },
                "currency": {
                    "type": "string",
                    "description": "The currency for the price of this listing market."
                },
                "sku": {
                    "type": "string",
                    "description": "The stock keeping unit of this listing market history."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date that the entry was created."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date that the entry was updated last."
                },
                "hasStockReservationForEbay": {
                    "type": "boolean",
                    "description": "The flag which indicates if we have an active stock reservations for this listing"
                }
            }
        },
        "ListingMarketDirectory": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the listing market directory."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the listing market directory."
                },
                "parentId": {
                    "type": "integer",
                    "description": "The parent ID of the listing market directory."
                },
                "level": {
                    "type": "integer",
                    "description": "The level of the directory."
                }
            }
        },
        "ListingMarketInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The listing market info ID."
                },
                "listingMarketId": {
                    "type": "integer",
                    "description": "The listing market ID that the current information belongs to."
                },
                "type": {
                    "type": "string",
                    "description": "The information type. Possible values: 'warning', 'error', 'info'."
                },
                "code": {
                    "type": "integer",
                    "description": "The information code."
                },
                "message": {
                    "type": "string",
                    "description": "The information message."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date that the listing market info was created."
                }
            }
        },
        "ListingMarketItemSpecific": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the item specific."
                },
                "listingMarketId": {
                    "type": "integer",
                    "description": "The LMID which belongs to the item specific ID."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the item specific."
                },
                "value": {
                    "type": "string",
                    "description": "The value of the item specific."
                }
            }
        },
        "ListingMarketText": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the listing market text."
                },
                "listingMarketId": {
                    "type": "integer",
                    "description": "The ID of the listing market the text belongs to."
                },
                "lang": {
                    "type": "string",
                    "description": "The language of the listing market text. Available values: 'de', 'en', 'fr', 'it', 'es', 'tr', 'nl', 'pl', 'nn', 'da', 'se', 'cz', 'ru', 'sk', 'cn', 'vn', 'pt', 'bg', 'ro'."
                },
                "title": {
                    "type": "string",
                    "description": "The title of the listing market text."
                },
                "subtitle": {
                    "type": "string",
                    "description": "The subtitle of the listing market text."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the listing market text."
                }
            }
        },
        "OptionTemplate": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the option template."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the option template."
                },
                "listing": {
                    "type": "array",
                    "items": [],
                    "description": "The listing options of the option template."
                },
                "listingMarket": {
                    "type": "array",
                    "items": [],
                    "description": "The listing market options of the option template."
                },
                "marketOptions": {
                    "type": "array",
                    "items": [],
                    "description": "The market options of the option template."
                }
            }
        },
        "ShippingProfile": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The listing shipping profile ID."
                },
                "name": {
                    "type": "string",
                    "description": "The listing shipping profile name."
                },
                "credentialsId": {
                    "type": "integer",
                    "description": "The credentials ID that this listing shipping profile belongs to."
                },
                "referrerId": {
                    "type": "integer",
                    "description": "The referrer ID."
                },
                "createdBy": {
                    "type": "string",
                    "description": "Who created the shipping profile. Possible values: 'migration','customer','external'."
                },
                "isDefault": {
                    "type": "boolean",
                    "description": "Tells if the current listing shipping profile is set as default."
                },
                "extendedData": {
                    "type": "array",
                    "items": [],
                    "description": "Extended data that defines the current shipping profile."
                }
            }
        },
        "StockDependenceType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the listing stock dependence type."
                },
                "isErasable": {
                    "type": "integer",
                    "description": "Flag that indicates if the type can be deleted."
                },
                "position": {
                    "type": "integer",
                    "description": "The position for sorting."
                }
            }
        },
        "ListingType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the listing type."
                },
                "isErasable": {
                    "type": "integer",
                    "description": "Flag that indicates if the type can be deleted."
                },
                "position": {
                    "type": "integer",
                    "description": "The position for sorting."
                }
            }
        },
        "Log": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the log entry"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date when the log entry was created"
                },
                "integration": {
                    "type": "string",
                    "description": "The integration key used for the log entry. Used as a first level allocation."
                },
                "identifier": {
                    "type": "string",
                    "description": "The identifier used for the log entry. Used as a second level allocation."
                },
                "code": {
                    "type": "string",
                    "description": "The code for this current log entry. For log entries with level \"debug\", \"info\", \"notice\", \"warning\" and \"report\" this needs to have an translation in order to be stored."
                },
                "referenceType": {
                    "type": "string",
                    "description": "Deprecated field, see the <code>references</code> field instead."
                },
                "referenceValue": {
                    "type": "string",
                    "description": "Deprecated field, see the <code>references</code> field instead."
                },
                "level": {
                    "type": "string",
                    "description": "The level this current log entry belongs to. Notice! When storing log entries with level \"report\" the entries will actually be stored as level \"info\". The difference between \"report\" and \"info\" is that log entries with level \"report\" do not need prior activation."
                },
                "additionalInfo": {
                    "type": "string",
                    "description": "Additional information that need to also be stored. Can be an int, string or object."
                },
                "callerFunction": {
                    "type": "string",
                    "description": ""
                },
                "callerLine": {
                    "type": "integer",
                    "description": ""
                },
                "references": {
                    "type": "array",
                    "items": [],
                    "description": "All the reference types and values correlated with this log entry."
                }
            }
        },
        "Credentials": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the credentials."
                },
                "environment": {
                    "type": "string",
                    "description": "The environment for the credentials. Possible values: sandbox, production"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the credentials. Possible values: active, inactive, pending"
                },
                "data": {
                    "type": "array",
                    "items": [],
                    "description": "The data of the credentials."
                },
                "market": {
                    "type": "string",
                    "description": "The market for the current credentials."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date that the credentials was created."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date that the credentials was updated last."
                }
            }
        },
        "FulfillmentPolicy": {
            "type": "object",
            "properties": {
                "fulfillmentPolicyId": {
                    "type": "string",
                    "description": "The ID of the fulfillment policy."
                },
                "description": {
                    "type": "string",
                    "description": "An optional seller-defined description of the fulfillment policy."
                },
                "freightShipping": {
                    "type": "boolean",
                    "description": "Set this value to true to indicate the seller offers freight shipping."
                },
                "globalShipping": {
                    "type": "boolean",
                    "description": "If this value is set to true, it indicates the seller has opted-in to the eBay Global Shipping Program and that they use that service for thier internation shipments."
                },
                "localPickup": {
                    "type": "boolean",
                    "description": "If this value is set to true, it indicates the seller offers local pickup of their items."
                },
                "marketplaceId": {
                    "type": "string",
                    "description": "The ID of the eBay marketplace to which this fulfillment policy applies. If this value is not specified, value defaults to the seller's eBay registration site."
                },
                "name": {
                    "type": "string",
                    "description": "A user-defined name for this fulfillment policy. Names must be unique for policies assigned to the same marketplace."
                },
                "pickupDropOff": {
                    "type": "boolean",
                    "description": "If this value is set to true, it indicates the seller offers the \"Click and Collect\" feature."
                }
            }
        },
        "ItemSpecific": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "A recommended Item Specific name."
                },
                "minValues": {
                    "type": "integer",
                    "description": "Minimum number of values that you can specify for this Item Specific."
                },
                "maxValues": {
                    "type": "integer",
                    "description": "Maximum number of values that you can specify for this Item Specific."
                },
                "selectionMode": {
                    "type": "string",
                    "description": "Controls whether you can specify your own name and value in listing requests, or if you need to use a name and/or value that eBay has defined."
                },
                "valueType": {
                    "type": "string",
                    "description": "The data type (e.g., date) that eBay expects the value to adhere to in listing requests. Only returned if the data type is not Text. In some cases, more details about the data type are returned in the `valueFormat` field."
                },
                "valueFormat": {
                    "type": "string",
                    "description": "The format of the data type (e.g., date format) that eBay expects the item specific's value to adhere to in listing requests. A data type identified by the `valueType` field may have different representations, and `valueFormat` specifies the precise format that is required."
                },
                "helpText": {
                    "type": "string",
                    "description": "Help-text defines the purpose of the Item Specific. The help text will be shown only when it is available for the particular Item Specific."
                },
                "helpUrl": {
                    "type": "string",
                    "description": "A page on the eBay Web site with context-specific help tips that provide useful information about this Item Specific. Only returned when an applicable page is available in the system."
                },
                "variationPicture": {
                    "type": "string",
                    "description": "Indicates whether the name (e.g., Color) can (or must) be used to classify the variation pictures"
                },
                "variationSpecifics": {
                    "type": "string",
                    "description": "Indicates whether the recommended name/value pair can be used as variation attributes in a fixed-price listing call. For example, a given category could disable a name like Brand in variation specifics (if Brand is only allowed in the item specifics at the Item level). The same category could enable a name like Size for variation specifics (in addition to recommending it for item specifics). If not returned, then the name/value can be used for both variation specifics and item specifics."
                },
                "values": {
                    "type": "array",
                    "items": [],
                    "description": "The available values."
                }
            }
        },
        "Marketplace": {
            "type": "object",
            "properties": {
                "siteId": {
                    "type": "integer",
                    "description": "The ID of the site exactly as eBay specifies it in the docs. This value is/was used in the old eBay SOAP APIs"
                },
                "marketplaceId": {
                    "type": "string",
                    "description": "The ID of the marketplace exactly as eBay specifies it in the docs. This value is used in the new eBay REST APIs. Eg. `EBAY_DE` or `EBAY-DE`"
                },
                "marketId": {
                    "type": "integer",
                    "description": "System-Listing wide internal ID for the listing marketplace. This id occurs only in correlation with the listing DB tables."
                },
                "referrerId": {
                    "type": "number",
                    "description": "System wide internal ID for the marketplace. Use this instead of `marketId` whenever possible!"
                },
                "shortcut": {
                    "type": "string",
                    "description": "The marketplace shortcut name."
                },
                "currency": {
                    "type": "string",
                    "description": "The currency used for the marketplace"
                }
            }
        },
        "Fitment": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The id of the fitment."
                },
                "marketId": {
                    "type": "integer",
                    "description": "The id of the market the fitment belongs to."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the fitment."
                },
                "categoryId": {
                    "type": "integer",
                    "description": "The id of the category the fitment belongs to."
                }
            }
        },
        "FitmentItem": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The id of the item that belongs to the fitment."
                },
                "fitmentId": {
                    "type": "integer",
                    "description": "The id of the fitment."
                }
            }
        },
        "PaymentPolicy": {
            "type": "object",
            "properties": {
                "paymentPolicyId": {
                    "type": "string",
                    "description": "The ID of the payment policy."
                },
                "description": {
                    "type": "string",
                    "description": "An optional seller-defined description of the payment policy. (Max length: 250)"
                },
                "immediatePay": {
                    "type": "boolean",
                    "description": "Indicate if the payment is due upon receipt or not. (eBay generates a receipt when the buyer agrees to purchase an item)"
                },
                "marketplaceId": {
                    "type": "string",
                    "description": "The ID of the eBay marketplace to which this return policy applies. If this value is not specified, value defaults to the seller's eBay registration site."
                },
                "name": {
                    "type": "string",
                    "description": "A user-defined name for this payment policy. Names must be unique for policies assigned to the same marketplace. (Max length: 64)"
                },
                "paymentInstructions": {
                    "type": "string",
                    "description": "Allows the seller to give payment instructions to the buyer. These instructions appear on the eBay View Item and Checkout pages."
                }
            }
        },
        "ReturnPolicy": {
            "type": "object",
            "properties": {
                "returnPolicyId": {
                    "type": "string",
                    "description": "The ID of the return policy."
                },
                "description": {
                    "type": "string",
                    "description": "An optional seller-defined description of the return policy."
                },
                "extendedHolidayReturnsOffered": {
                    "type": "boolean",
                    "description": "If this value is set to true, it indicates the seller offers an Extended Holiday Returns policy for their listings."
                },
                "marketplaceId": {
                    "type": "string",
                    "description": "The ID of the eBay marketplace to which this return policy applies. If this value is not specified, value defaults to the seller's eBay registration site."
                },
                "name": {
                    "type": "string",
                    "description": "A user-defined name for this fulfillment policy. Names must be unique for policies assigned to the same marketplace."
                },
                "refundMethod": {
                    "type": "string",
                    "description": "Indicates the method the seller uses to compensate the buyer for returned items. The return method specified applies only to remorse returns. Available options: `MERCHANDISE_CREDIT`, `MONEY_BACK`."
                },
                "restockingFeePercentage": {
                    "type": "string",
                    "description": "Sellers who accept returns should include this field if they charge buyers a restocking fee when items are returned."
                },
                "returnInstruction": {
                    "type": "string",
                    "description": "This optional free-form string field lets the seller provide a detailed explanation of the return policy."
                },
                "returnInstructions": {
                    "type": "string",
                    "description": "This optional free-form string field lets the seller provide a detailed explanation of the return policy."
                },
                "returnMethod": {
                    "type": "string",
                    "description": "This field indicates the method in which the seller handles non-money back return requests for remorse returns. Sellers can specify they either exchange or replace items. Available options: `EXCHANGE`, `REPLACEMENT`."
                },
                "returnsAccepted": {
                    "type": "boolean",
                    "description": "Set this value to true to indicate the seller accepts returns."
                },
                "returnShippingCostPayer": {
                    "type": "string",
                    "description": "The seller uses this value to specify whether the buyer or the seller is responsible for paying return shipping charges. The field can be set to either `BUYER` or `SELLER`."
                }
            }
        },
        "Transaction": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the transaction."
                },
                "orderId": {
                    "type": "integer",
                    "description": "The ID of the plentymarkets order."
                },
                "market": {
                    "type": "string",
                    "description": "The market. Possible values are: 'ebay', 'hood', 'ricardo'"
                },
                "externalListingId": {
                    "type": "string",
                    "description": "The ID of the external listing."
                },
                "credentialsId": {
                    "type": "string",
                    "description": "The ID of the credentials."
                },
                "buyerUserId": {
                    "type": "string",
                    "description": "The ID of the ebay buyer."
                },
                "feedback": {
                    "type": "integer",
                    "description": "The feedback."
                },
                "transactionId": {
                    "type": "string",
                    "description": "The ID of the ebay transaction."
                },
                "endTime": {
                    "type": "string",
                    "description": "The date that the item was bought."
                },
                "quantity": {
                    "type": "integer",
                    "description": "The purchased quantity."
                },
                "title": {
                    "type": "string",
                    "description": "The title of the purchased item."
                },
                "price": {
                    "type": "number",
                    "description": "The price of the transaction."
                },
                "shippingAddressCountry": {
                    "type": "string",
                    "description": "The shipping address country."
                },
                "referrerId": {
                    "type": "integer",
                    "description": "The ID of the order referrer."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date that the transaction was created."
                },
                "notification": {
                    "type": "integer",
                    "description": "Flag that indicates if the transaction import was by notification."
                },
                "orderRowId": {
                    "type": "integer",
                    "description": "The ID of the order row."
                },
                "sku": {
                    "type": "string",
                    "description": "The SKU."
                },
                "lastUpdate": {
                    "type": "integer",
                    "description": "The date that the transaction was last updated."
                },
                "externalOrderId": {
                    "type": "string",
                    "description": "The ID of the external order."
                },
                "externalReferenceNo": {
                    "type": "string",
                    "description": "The external reference number."
                },
                "cancelId": {
                    "type": "string",
                    "description": "The ID of the cancellation."
                },
                "isEbayPlus": {
                    "type": "string",
                    "description": "The transaction is ebay plus. Possible values are: 'YES', 'NO'."
                },
                "isClickAndCollect": {
                    "type": "string",
                    "description": "The transaction is click and collect. Possible values are: 'YES', 'NO'."
                },
                "extendedOrderId": {
                    "type": "string",
                    "description": "The extended order ID of eBay."
                },
                "importStatus": {
                    "type": "string",
                    "description": "The current status of the order. Possible values are: 'NEW', 'IN_PROGRESS' and 'DONE'. Default is 'NEW'."
                }
            }
        },
        "Settings": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the market settings."
                },
                "marketplaceId": {
                    "type": "integer",
                    "description": "The ID of the marketplace."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the current market settings. Possible values are: attribute, attributeValue, property, category, shipping."
                },
                "settings": {
                    "type": "array",
                    "items": [],
                    "description": "The market settings for the current marketplace."
                }
            }
        },
        "Message": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string",
                    "description": "The UUID5 identifier of the message"
                },
                "plentyIdHash": {
                    "type": "string",
                    "description": "The plenty ID hash"
                },
                "parentUuid": {
                    "type": "string",
                    "description": "The UUID5 of the parent message"
                },
                "conversationId": {
                    "type": "string",
                    "description": "The UUID5 of the conversation"
                },
                "whispered": {
                    "type": "boolean",
                    "description": "Whether the message is whispered (not visible for the contact/order linked to the message) or not"
                },
                "tags": {
                    "type": "array",
                    "items": [],
                    "description": "An array with tag IDs assigned to the message"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the message"
                },
                "preview": {
                    "type": "string",
                    "description": "The first two lines of the message without any markup"
                },
                "message": {
                    "type": "string",
                    "description": "The content of the message"
                },
                "plainMessage": {
                    "type": "string",
                    "description": "The content of the message as plain text"
                },
                "attachedFilesCount": {
                    "type": "integer",
                    "description": "The amount of attached files (readonly)"
                },
                "doneAt": {
                    "type": "string",
                    "description": "The date the messages was set to done"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation date of the message"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date of the last update of the message"
                },
                "deletedAt": {
                    "type": "string",
                    "description": "The date the message was deleted"
                },
                "deletedBy": {
                    "type": "integer",
                    "description": "The ID of the user who deleted the message"
                }
            }
        },
        "MessageTo": {
            "type": "object",
            "properties": {
                "user": {
                    "type": "array",
                    "items": [],
                    "description": "An array with user IDs of users receiving the message"
                },
                "role": {
                    "type": "array",
                    "items": [],
                    "description": "An array with user role IDs of user roles receiving the message"
                },
                "email": {
                    "type": "array",
                    "items": [],
                    "description": "An array with emails receiving the message"
                },
                "allUsers": {
                    "type": "boolean",
                    "description": "Flag indicating that all system users receive the message"
                }
            }
        },
        "MessageLinkedTo": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The type of the link (one of {@link MessageTypesService::LINKED_TO_TYPE_MESSAGE},\n{@link MessageTypesService::LINKED_TO_TYPE_ORDER}, {@link MessageTypesService::LINKED_TO_TYPE_CONTACT}\nand {@link MessageTypesService::LINKED_TO_TYPE_PAYMENT})"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the link. For type {@link MessageTypesService::LINKED_TO_TYPE_MESSAGE} it is a string (uuid5)\nand an integer otherwise."
                },
                "typeId": {
                    "type": "string",
                    "description": "This can be the ID of a sub-type (e.g. the order subTypeId). (optional)"
                }
            }
        },
        "MessageMetaData": {
            "type": "object",
            "properties": {
                "readBy": {
                    "type": "array",
                    "items": [],
                    "description": "The array of users"
                },
                "plentyId": {
                    "type": "integer",
                    "description": "the plenty id of the related contact"
                }
            }
        },
        "MessageFrom": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The type of the from instance (one of {@link MessageTypesService::FROM_TYPE_USER},\n{@link MessageTypesService::FROM_TYPE_CONTACT} and {@link MessageTypesService::FROM_TYPE_EMAIL})"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the instance. For type {@link MessageTypesService::FROM_TYPE_EMAIL} it is a string (the email)\nand the id of the user or the contact otherwise."
                },
                "name": {
                    "type": "string",
                    "description": "An optional name for the instance, e.g. the real name for type {@link MessageTypesService::FROM_TYPE_EMAIL}"
                }
            }
        },
        "MessageReferrer": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The type of the from instance (one of {@link MessageTypesService::REFERRER_TYPE_SYSTEM},\n{@link MessageTypesService::REFERRER_TYPE_BACKEND}, {@link MessageTypesService::REFERRER_TYPE_REST}\nand {@link MessageTypesService::REFERRER_TYPE_PLUGIN})"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the instance. It is an integer (the user id) for type\n{@link MessageTypesService::REFERRER_TYPE_SYSTEM}, {@link MessageTypesService::REFERRER_TYPE_EMAIL}, {@link MessageTypesService::REFERRER_TYPE_BACKEND}\nand {@link MessageTypesService::REFERRER_TYPE_REST} and a string (the plugin name) for type\n{@link MessageTypesService::REFERRER_TYPE_PLUGIN}."
                },
                "name": {
                    "type": "string",
                    "description": "An optional name for the instance. For type {@link MessageTypesService::REFERRER_TYPE_PLUGIN} it is\nthe plugin namespace, the user name otherwise."
                }
            }
        },
        "Attachment": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The file name of the attachment"
                },
                "message": {
                    "type": "string",
                    "description": "The UUID of the message the attachment belongs to"
                },
                "size": {
                    "type": "integer",
                    "description": "The size of the attachment in bytes"
                },
                "contentType": {
                    "type": "string",
                    "description": "The content type fo the attachment"
                },
                "content": {
                    "type": "string",
                    "description": "The content of the attachment"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The createdAt date of the attachment"
                }
            }
        },
        "ConversationSettings": {
            "type": "object",
            "properties": []
        },
        "Entry": {
            "type": "object",
            "properties": {
                "subject": {
                    "type": "string",
                    "description": "The subject of the newsletter entry"
                },
                "body": {
                    "type": "string",
                    "description": "The body of the newsletter entry"
                },
                "kind": {
                    "type": "string",
                    "description": "The type of the newsletter entry"
                }
            }
        },
        "Folder": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the newsletter folder"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the newsletter folder"
                },
                "isDeletable": {
                    "type": "boolean",
                    "description": "Flag that indicates if the newsletter folder can be deleted. The folders 'Customers' and 'Interested parties' are available by default and cannot be deleted."
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the newsletter folder"
                },
                "isSelectable": {
                    "type": "boolean",
                    "description": "Flag that indicates if the newsletter folder can be selected by customers in the online store. If this is allowed, the folder will be displayed in the My account area of the online store. Customers will then be able to subscribe to the newsletters that are included in this folder."
                }
            }
        },
        "Recipient": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the newsletter recipient"
                },
                "folderId": {
                    "type": "integer",
                    "description": "The ID of the newsletter folder"
                },
                "contactId": {
                    "type": "integer",
                    "description": "The ID of the contact"
                },
                "firstName": {
                    "type": "string",
                    "description": "The first name of the recipient"
                },
                "lastName": {
                    "type": "string",
                    "description": "The last name of the recipient"
                },
                "email": {
                    "type": "string",
                    "description": "The email address of the recipient"
                },
                "gender": {
                    "type": "string",
                    "description": "The gender of the recipient"
                },
                "birthday": {
                    "type": "string",
                    "description": "The birthday of the recipient"
                },
                "timestamp": {
                    "type": "integer",
                    "description": "The timestamp when the newsletter email was sent to the recipient"
                },
                "templateLang": {
                    "type": "string",
                    "description": "The language of the newsletter email template"
                },
                "confirmedTimestamp": {
                    "type": "integer",
                    "description": "The timestamp when the recipient confirmed the newsletter subscription"
                },
                "confirmAuthString": {
                    "type": "string",
                    "description": "The key that is automatically generated by the system. This key recognises the user regardless whether the user is logged in to the system and will then set the confirmation timestamp."
                },
                "confirmationURL": {
                    "type": "string",
                    "description": "The url with which the customer has confirmed the newsletter"
                }
            }
        },
        "AddressOrderRelation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the address order relation"
                },
                "orderId": {
                    "type": "integer",
                    "description": "The ID of the order"
                },
                "typeId": {
                    "type": "integer",
                    "description": "The ID of the address type\n<ul>\n     <li>Billing address = 1</li>\n     <li>Delivery address = 2</li>\n     <li>Sender address = 3</li>\n     <li>Return address = 4</li>\n     <li>Client address = 5</li>\n     <li>Contractor address = 6</li>\n     <li>Warehouse address = 7</li>\n </ul>"
                },
                "addressId": {
                    "type": "integer",
                    "description": "The ID of the address"
                }
            }
        },
        "CouponCampaignCode": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "description": "The coupon code"
                },
                "campaignId": {
                    "type": "integer",
                    "description": "The ID of the campaign that the code belongs to"
                },
                "disable": {
                    "type": "integer",
                    "description": "Flag that indicates if a code is active or deactivated.\n<ul><li>True = the code is deactivated</li>\n    <li>False = the code is active</li></ul>"
                },
                "consumed": {
                    "type": "integer",
                    "description": "Flag that indicates if a code was redeemed or not.\n<ul><li>True = the code was redeemed</li>\n    <li>False = the code is not redeemed</li></ul>"
                },
                "usedCount": {
                    "type": "integer",
                    "description": "How many times a code has been redeemed"
                },
                "usedAmount": {
                    "type": "number",
                    "description": "The amount that is already redeemed. The total amount that can be redeemed is defined in the campaign as coupon value, because the value applies to all codes of a campaign."
                },
                "value": {
                    "type": "number",
                    "description": "The value of the coupon if it differs from the campaign value. The value is null if the campaign value is used."
                }
            }
        },
        "CouponCodeValidation": {
            "type": "object",
            "properties": {
                "campaignId": {
                    "type": "integer",
                    "description": "The ID of the campaign"
                },
                "validationType": {
                    "type": "string",
                    "description": "The type of the campaign. Currently the only type available is plentymarkets."
                },
                "contactId": {
                    "type": "integer",
                    "description": "The ID of the contact that wants to redeem the coupon"
                },
                "couponCode": {
                    "type": "string",
                    "description": "The coupon code"
                },
                "currency": {
                    "type": "string",
                    "description": "The currency of the purchase"
                },
                "exchangeRate": {
                    "type": "number",
                    "description": "The exchange rate of the purchase (optional, is loaded from settings if not given)"
                },
                "referrer": {
                    "type": "number",
                    "description": "The order referrer"
                },
                "salesDiscount": {
                    "type": "number",
                    "description": "The total discount from a coupon applied to an order. The discount is given as gross amount."
                },
                "salesDiscountNet": {
                    "type": "number",
                    "description": "The net discount from a coupon applied to an order. The net discount is the total discount minus the vat amount."
                },
                "itemDiscount": {
                    "type": "number",
                    "description": "The discount amount applied to items."
                },
                "itemDiscountNet": {
                    "type": "number",
                    "description": "The net discount applied to items."
                },
                "shippingDiscount": {
                    "type": "number",
                    "description": "The discount applied to shipping costs."
                },
                "shippingDiscountNet": {
                    "type": "number",
                    "description": "The net discount applied to shipping costs."
                },
                "usedVatFields": {
                    "type": "array",
                    "items": [],
                    "description": "The vat fields used for the validation"
                },
                "restCouponAmount": {
                    "type": "number",
                    "description": "The remaining coupon amount"
                },
                "checkedItems": {
                    "type": "array",
                    "items": [],
                    "description": "The list of variations that passed the validation"
                },
                "validateParams": {
                    "type": "array",
                    "items": [],
                    "description": "Validation parameters"
                },
                "couponCampaignType": {
                    "type": "string",
                    "description": "The campaign type"
                }
            }
        },
        "CouponCodeContact": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "description": "The coupon code"
                },
                "contactId": {
                    "type": "integer",
                    "description": "The ID of the contact that redeemed the coupon"
                },
                "openAmount": {
                    "type": "number",
                    "description": "The coupon amount that can still be redeemed"
                },
                "redeemCount": {
                    "type": "integer",
                    "description": "How many times a coupon code has already been redeemed"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date that the coupon code was updated last."
                },
                "campaignId": {
                    "type": "integer",
                    "description": "The ID of the campaign that the coupon belongs to"
                },
                "externalTransactionId": {
                    "type": "integer",
                    "description": "The ID that is assigned to a coupon by the external coupon service provider, when the coupon is redeemed."
                }
            }
        },
        "Currency": {
            "type": "object",
            "properties": {
                "currency": {
                    "type": "string",
                    "description": "The ISO 4217 code and id of the currency."
                },
                "htmlCode": {
                    "type": "string",
                    "description": "The html code (entity) for the currency."
                },
                "unicodeSign": {
                    "type": "string",
                    "description": "The unicode symbol for the currency. If no unicode symbol exists, the html code will be used."
                },
                "isActive": {
                    "type": "boolean",
                    "description": "Flag that indicates if the currency is active in the system or not. Currencies are activated per sales price."
                },
                "isErasable": {
                    "type": "boolean",
                    "description": "Flag that indicates if this currency can be deleted or not. <ul><li>False = Currency cannot be deleted</li><li>True = Currency can be deleted</li></ul>"
                },
                "exchangeRate": {
                    "type": "number",
                    "description": "The current exchange rate for this currency."
                }
            }
        },
        "Country": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The country id."
                },
                "name": {
                    "type": "string",
                    "description": "The system country name."
                },
                "shippingDestinationId": {
                    "type": "integer",
                    "description": "The shipping destination (region) id."
                },
                "active": {
                    "type": "integer",
                    "description": "The active flag (1: active, 2: backend active, 3: supplier active"
                },
                "storehouseId": {
                    "type": "integer",
                    "description": "The id of the main warehouse in this country."
                },
                "isoCode2": {
                    "type": "string",
                    "description": "The ISO 3166 ALPHA-2 code of the country."
                },
                "isoCode3": {
                    "type": "string",
                    "description": "The ISO 3166 ALPHA-3 code of the country."
                },
                "lang": {
                    "type": "string",
                    "description": "The main language spoken in the country."
                },
                "isCountryStateMandatory": {
                    "type": "boolean",
                    "description": "Flag that states if a country state is mandatory for the country."
                },
                "vatCodes": {
                    "type": "array",
                    "items": [],
                    "description": "An array with country vat codes."
                }
            }
        },
        "CurrencyExchangeRate": {
            "type": "object",
            "properties": {
                "exchangeRate": {
                    "type": "number",
                    "description": "The exchange rate"
                }
            }
        },
        "OrderDateType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the order date type. The following date types are available:\n\n* Deleted on = 1\n* Created on = 2\n* Paid date = 3\n* Last update = 4\n* Completed on = 5\n* Return date = 6\n* Payment due date = 7\n* Estimated shipping date = 8\n* Start date = 9\n* End date = 10\n* Possible delivery date = 11\n* Market transfer date = 12\n* Subscription cancelled on = 13\n* Subscription last run = 14\n* Subscription next run = 15\n* Confirmation link valid until  = 19"
                },
                "isErasable": {
                    "type": "boolean",
                    "description": "Flag that indicates if this type can be deleted or not."
                },
                "position": {
                    "type": "integer",
                    "description": "The position for sorting"
                }
            }
        },
        "OrderDateTypeName": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the order date type name"
                },
                "typeId": {
                    "type": "integer",
                    "description": "The ID of the date type that this name belongs to. The following date types are available:\n\n* Deleted on = 1\n* Created on = 2\n* Paid date = 3\n* Last update = 4\n* Completed on = 5\n* Return date = 6\n* Payment due date = 7\n* Estimated shipping date = 8\n* Start date = 9\n* End date = 10\n* Possible delivery date = 11\n* Market transfer date = 12"
                },
                "lang": {
                    "type": "string",
                    "description": "The ISO 639-1 language code for the name, e.g. \"en\" for English"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the order date type"
                }
            }
        },
        "OrderItemDate": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the order date"
                },
                "orderItemId": {
                    "type": "integer",
                    "description": "The ID of the order item that the date belongs to"
                },
                "typeId": {
                    "type": "integer",
                    "description": "The ID of the date type. The following types are available:\n\n* Start date = 9\n* End date = 10\n* Estimated delivery date = 11"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date when the date was created"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date when the date was last updated"
                }
            }
        },
        "OrderItemProperty": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the order item property."
                },
                "orderItemId": {
                    "type": "integer",
                    "description": "The ID of the order item that the property belongs to."
                },
                "typeId": {
                    "type": "integer",
                    "description": "The ID of the property type.\n\n* WAREHOUSE\t\t              =\t1\n* SHIPPING_PROFILE\t              =\t2\n* PAYMENT_METHOD\t              =\t3\n* WEIGHT\t\t\t              =\t11\n* WIDTH\t\t\t              =\t12\n* LENGTH\t\t                  =\t13\n* HEIGHT\t      \t\t          = 14\n* EXTERNAL_TOKEN_ID              =\t16\n* EXTERNAL_ITEM_ID               =\t17\n* COUPON_CODE\t      \t          =\t18\n* COUPON_TYPE\t\t              =\t19\n* ORIGINAL_WAREHOUSE\t          =\t20\n* ORIGINAL_QUANTITY              =\t21\n* CATEGORY_ID                    = 22\n* MARKET_FEE\t\t              =\t23\n* STOCK_REVERSING\t              =\t24\n* DISPUTE_STATUS      \t          =\t25\n* NO_CHANGE_BY_CONTACT           = 26\n* SIZE \t\t\t              =\t29\n* LOCATION_RESERVED\t          =\t30\n* EXTERNAL_SHIPMENT_ITEM_ID      =\t31\n* PARTIAL_SHIPPING_COSTS         =\t32\n* MAIN_DOCUMENT_NUMBER           =\t33\n* SALES_TAX_ID_NUMBER            =\t34\n* RETURNS_REASON                 =\t35\n* RETURNS_ITEM_STATUS            =\t36\n* FULFILLMENT_CENTER_ID          = 37\n* FULFILLMENT_CENTER_COUNTRY_ISO = 38\n* REORDER_ITEM_ID                = 39\n* LISTING_TYPE                   = 40\n* SOLD_COUPON_CODE               = 46\n* ORDER_ITEM_STATE               = 48\n* SAP_ORDER_NUMBER               = 50\n* DISCOUNT                       = 52\n* REORDER_ITEM_PACKAGE_UNIT      = 53\n* REORDER_ITEM_MINIMUM_PURCHASE  = 54\n* REORDER_ITEM_DELIVERY_TIME_IN_DAYS = 55\n* REORDER_ITEM_DISCOUNTABLE      = 56\n* RETURNS_REMAINING_PERCENTAGE   = 57\n* ORDER_PROPERTY_ID              = 81\n* ORDER_PROPERTY_VALUE           = 82\n* ORDER_PROPERTY_GROUP_ID        = 83\n* WEEE_PICK_UP = 92"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the property. The value depends on type."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date that the property was created."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date that the property was last updated."
                }
            }
        },
        "OrderItemTransaction": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the transaction"
                },
                "orderItemId": {
                    "type": "integer",
                    "description": "The ID of the order item"
                },
                "quantity": {
                    "type": "number",
                    "description": "The quantity"
                },
                "userId": {
                    "type": "integer",
                    "description": "The ID of the user"
                },
                "identification": {
                    "type": "string",
                    "description": "External identification. Can be an arbitrary string."
                },
                "direction": {
                    "type": "string",
                    "description": "The direction. Possible values are 'in' and 'out'."
                },
                "status": {
                    "type": "string",
                    "description": "The status. Possible values are 'regular' and 'cancelled'."
                },
                "receiptId": {
                    "type": "integer",
                    "description": "The receipt ID"
                },
                "warehouseLocationId": {
                    "type": "integer",
                    "description": "The ID of the warehouse location"
                },
                "batch": {
                    "type": "string",
                    "description": "The batch"
                },
                "bestBeforeDate": {
                    "type": "string",
                    "description": "The best before date"
                },
                "batchBestBeforeDateId": {
                    "type": "integer",
                    "description": "Deprecated. Replaced by $batch and $bestBeforeDate."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date the transaction was created"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date the transaction was last updated"
                }
            }
        },
        "OrderBooking": {
            "type": "object",
            "properties": []
        },
        "OrderPropertyType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the property type"
                },
                "isErasable": {
                    "type": "boolean",
                    "description": "Flag that states if this type can be deleted or not."
                },
                "position": {
                    "type": "integer",
                    "description": "The position for sorting"
                },
                "cast": {
                    "type": "string",
                    "description": "The data type of the values of this property type. Valid types are:\n\n* string\n* int\n* numeric\n* bool\n* enum(val1,val2,val3,...)"
                }
            }
        },
        "OrderPropertyTypeName": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of type name"
                },
                "typeId": {
                    "type": "integer",
                    "description": "The ID of the property type"
                },
                "name": {
                    "type": "string",
                    "description": "The name of property type"
                },
                "lang": {
                    "type": "string",
                    "description": "The language of the type name"
                }
            }
        },
        "OrderProperty": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the order property"
                },
                "orderId": {
                    "type": "integer",
                    "description": "The ID of the order that the property belongs to"
                },
                "typeId": {
                    "type": "integer",
                    "description": "The ID of the property type. The following types are available:\n\n* WAREHOUSE\t\t=\t1\n* SHIPPING_PROFILE\t=\t2\n* PAYMENT_METHOD\t\t\t=\t3\n* PAYMENT_STATUS\t\t\t=\t4\n* EXTERNAL_SHIPPING_PROFILE\t\t\t=\t5\n* DOCUMENT_LANGUAGE\t\t\t=\t6\n* EXTERNAL_ORDER_ID\t\t\t=\t7\n* CUSTOMER_SIGN\t\t\t=\t8\n* DUNNING_LEVEL\t\t\t=\t9\n* SELLER_ACCOUNT\t\t\t=\t10\n* WEIGHT\t\t\t=\t11\n* WIDTH\t\t\t=\t12\n* LENGTH          =\t13\n* HEIGHT\t\t=\t14\n* FLAG\t\t\t=\t15\n* EXTERNAL_TOKEN_ID\t\t\t=\t16\n* EXTERNAL_ITEM_ID\t\t\t=\t17\n* COUPON_CODE\t\t\t=\t18\n* COUPON_TYPE         =   19\n* SALES_TAX_ID_NUMBER =   34\n* MAIN_DOCUMENT_NUMBER = 33\n* PAYMENT_TRANSACTION_ID = 45\n* EXTERNAL_TAX_SERVICE = 47\n* MERCHANT_ID = 60\n* REPORT_ID = 61\n* PREFERRED_STORAGE_LOCATION_ID = 63\n* AMAZON_SHIPPING_LABEL = 64\n* MARKET_TAX_ID = 88\n* MARKET_EORI = 89\n* IS_REVERSE_CHARGED = 90\n* DISALLOW_INTERNAL_TAX_RELEVANT_DOCUMENTS = 91\n* EBAY_PLUS = 994\n* FULFILLMENT_SERVICE = 995"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the property. The value depends on the type."
                }
            }
        },
        "OrderReferrer": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number",
                    "description": "The ID of the order referrer"
                },
                "isEditable": {
                    "type": "boolean",
                    "description": "Flag that indicates if this referrer can be updated as well as deleted or not\n<ul><li>True = the referrer can be edited and deleted</li>\n<li>False = the referrer can neither be edited nor deleted</li></ul>"
                },
                "backendName": {
                    "type": "string",
                    "description": "The backend name of the referrer"
                },
                "name": {
                    "type": "string",
                    "description": "The public name of the referrer as it is displayed e.g. on documents"
                },
                "orderOwnerId": {
                    "type": "integer",
                    "description": "The user ID of whoever owns new orders from this referrer"
                },
                "isFilterable": {
                    "type": "boolean",
                    "description": "Flag that indicates if this referrer can be used as a filter or not\n<ul><li>True = Can be used as a filter</li>\n<li>False = Cannot be used as a filter</li></ul>"
                },
                "origin": {
                    "type": "string",
                    "description": "The origin of this referrer"
                },
                "showInLeads": {
                    "type": "boolean",
                    "description": "Referrer is showed in list when creating a new lead"
                }
            }
        },
        "ExportDocument": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": ""
                },
                "orderId": {
                    "type": "integer",
                    "description": ""
                },
                "packageNumber": {
                    "type": "integer",
                    "description": ""
                },
                "base64Content": {
                    "type": "integer",
                    "description": ""
                }
            }
        },
        "ShippingPackageType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the shipping package type"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the shipping package type"
                },
                "width": {
                    "type": "integer",
                    "description": "The width of the shipping package type"
                },
                "height": {
                    "type": "integer",
                    "description": "The height of the shipping package type"
                },
                "length": {
                    "type": "integer",
                    "description": "The length of the shipping package type"
                },
                "unit": {
                    "type": "string",
                    "description": "The unit of the shipping package type dimension"
                },
                "maxWeight": {
                    "type": "integer",
                    "description": "The maximum weight of the shipping package type"
                },
                "maxVolume": {
                    "type": "integer",
                    "description": "The maximum volume of the shipping package type"
                },
                "volumeType": {
                    "type": "integer",
                    "description": "The volume type of the shipping package type"
                }
            }
        },
        "OrderShippingPackage": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the order shipping package"
                },
                "orderId": {
                    "type": "integer",
                    "description": "The ID of the order"
                },
                "packageId": {
                    "type": "integer",
                    "description": "The ID of the package"
                },
                "weight": {
                    "type": "integer",
                    "description": "The weight of the package in grams"
                },
                "packageNumber": {
                    "type": "string",
                    "description": "The package number"
                },
                "labelPath": {
                    "type": "string",
                    "description": "The path to the label"
                },
                "labelBase64": {
                    "type": "string",
                    "description": "The base64 encoded label"
                },
                "exportLabelBase64": {
                    "type": "string",
                    "description": "The base64 encoded export label"
                },
                "returnPackageNumber": {
                    "type": "string",
                    "description": "The return package number"
                },
                "packageType": {
                    "type": "integer",
                    "description": "The type of the package. The following types are valid:\n<ul>\n <li>0: unpacked</li>\n <li>1: Bale</li>\n <li>2: Dispenser</li>\n <li>3: Coil</li>\n <li>4: Roll pallet</li>\n <li>5: Colli</li>\n <li>6: Container</li>\n <li>7: Bucket</li>\n <li>8: Cask</li>\n <li>9: Bottles</li>\n <li>10: European flat pallet</li>\n <li>11: Structural frame</li>\n <li>12: Gas cylinder</li>\n <li>13: Pallet cage</li>\n <li>14: Hobbock</li>\n <li>15: Half pallet</li>\n <li>16: Pallet of food items</li>\n <li>17: Wooden coaster</li>\n <li>18: IBC container</li>\n <li>19: Pitcher</li>\n <li>20: Wicker bottle</li>\n <li>21: Case</li>\n <li>22: Canister</li>\n <li>23: Customer pallet</li>\n <li>24: Cardboard box</li>\n <li>25: Composite packaging</li>\n <li>26: Package</li>\n <li>27: Ring</li>\n <li>28: Role</li>\n <li>29: Sack</li>\n <li>30: units</li>\n <li>31: Tank</li>\n <li>32: Drum</li>\n <li>34: Crate</li>\n <li>35: Quarter pallet</li>\n <li>36: Other pallets</li>\n <li>37: Bin</li>\n <li>38: One-way pallet</li>\n <li>39: Foil bag</li>\n</ul>"
                },
                "volume": {
                    "type": "number",
                    "description": "The volume of the package"
                },
                "palletId": {
                    "type": "integer",
                    "description": "The id of the pallet of which the package belong to"
                },
                "isClosed": {
                    "type": "boolean",
                    "description": "Flag to say if the package is editable or not"
                },
                "createdAt": {
                    "type": "string",
                    "description": ""
                },
                "updatedAt": {
                    "type": "string",
                    "description": ""
                },
                "packageSscc": {
                    "type": "string",
                    "description": "Amazon Vendor PackageSscc"
                }
            }
        },
        "OrderShippingPackageItems": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the order shipping package item. Primary key auto-increment"
                },
                "packageId": {
                    "type": "integer",
                    "description": "The ID of the package (id column from plenty_package_type2order)"
                },
                "itemId": {
                    "type": "integer",
                    "description": "The ID of the item (plenty_item_variation_base_item_id column from plenty_item_variation_base)"
                },
                "variationId": {
                    "type": "integer",
                    "description": "The ID of the variation (plenty_item_variation_base_id column from plenty_item_variation_base)"
                },
                "itemQuantity": {
                    "type": "number",
                    "description": "The quantity of the item in the package"
                }
            }
        },
        "OrderShippingPallet": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the order shipping pallet"
                },
                "weight": {
                    "type": "number",
                    "description": "The weight of the order shipping pallet, including it's contents"
                },
                "individualWeight": {
                    "type": "number",
                    "description": "The weight of the order shipping pallet"
                },
                "width": {
                    "type": "number",
                    "description": "The width of the order shipping pallet"
                },
                "height": {
                    "type": "number",
                    "description": "The height of the order shipping pallet"
                },
                "length": {
                    "type": "number",
                    "description": "The length of the order shipping pallet"
                },
                "isStackable": {
                    "type": "boolean",
                    "description": "Flag to tell if the pallet is stackable or not. If true, another pallet can be placed over the current one"
                },
                "additionalInfo": {
                    "type": "integer",
                    "description": "Additional info"
                },
                "barcode": {
                    "type": "string",
                    "description": "The barcode"
                },
                "isClosed": {
                    "type": "boolean",
                    "description": "Flag to tell if the pallet is closed or not. If true, the information within the pallet should not be changed anymore"
                },
                "palletSscc": {
                    "type": "string",
                    "description": "Amazon Vendor PalletSscc"
                },
                "orderId": {
                    "type": "integer",
                    "description": "The id of the order"
                }
            }
        },
        "ParcelServiceRegion": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the parcel service region"
                },
                "shippingRegionId": {
                    "type": "integer",
                    "description": "The ID of the shipping region"
                },
                "parcelServicePresetId": {
                    "type": "integer",
                    "description": "The ID of the parcel service preset"
                },
                "shippingRegionName": {
                    "type": "string",
                    "description": "The name of the shipping region"
                },
                "serviceType": {
                    "type": "integer",
                    "description": "Type of the parcel service"
                }
            }
        },
        "ParcelServicePreset": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the shipping profile (autoincrement value)"
                },
                "parcelServiceId": {
                    "type": "integer",
                    "description": "The ID of the shipping service provider"
                },
                "backendName": {
                    "type": "string",
                    "description": "The back end name of the shipping profile"
                },
                "flag": {
                    "type": "integer",
                    "description": "The icon of the shipping profile"
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority of the shipping profile"
                },
                "category": {
                    "type": "integer",
                    "description": "The category of the shipping profile"
                },
                "useArticlePorto": {
                    "type": "integer",
                    "description": "Flag that indicates if the extra shipping charge saved in the item data record is used"
                },
                "isInsured": {
                    "type": "integer",
                    "description": "Flag that indicates if the shipping profile is insured"
                },
                "isExpress": {
                    "type": "integer",
                    "description": "Flag that indicates if the shipping profile is used for express delivery"
                },
                "isPostident": {
                    "type": "integer",
                    "description": "Flag that indicates if the shipping profile includes an authority verification"
                },
                "isDefaultEnabled": {
                    "type": "integer",
                    "description": "Flag that indicates if the shipping profile is automatically assigned to new items"
                },
                "islandFee": {
                    "type": "number",
                    "description": "The extra charge for islands saved in the shipping profile"
                },
                "isCod": {
                    "type": "integer",
                    "description": "Flag that indicates Cash on Delivery"
                },
                "supportedMultishop": {
                    "type": "array",
                    "items": [],
                    "description": "The clients (stores) that are activated for the shipping profile"
                },
                "supportedReferrer": {
                    "type": "array",
                    "items": [],
                    "description": "The order referrers that are activated for the shipping profile"
                },
                "subreferrerSupport": {
                    "type": "array",
                    "items": [],
                    "description": "This field is currently without any function."
                },
                "excludedPaymentMethods": {
                    "type": "array",
                    "items": [],
                    "description": "The blocked payment methods that are not offered for the shipping profile"
                },
                "excludedCustomerGroups": {
                    "type": "array",
                    "items": [],
                    "description": "The blocked customer groups for the shipping profile. Blocked customer groups cannot select the shipping profile during checkout."
                },
                "shippingGroup": {
                    "type": "string",
                    "description": "The group of the shipping profile"
                },
                "dispatchIdentifier": {
                    "type": "string",
                    "description": "This field is currently without any function."
                },
                "auctionType": {
                    "type": "integer",
                    "description": "The eBay listing type for the shipping profile"
                },
                "supportedLoyaltyPrograms": {
                    "type": "array",
                    "items": [],
                    "description": "The loyalty programs that are supported by the shipping profile"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date the shipping profile was last updated"
                },
                "showDataPrivacyAgreementHint": {
                    "type": "integer",
                    "description": ""
                },
                "transmitPrivacyRule": {
                    "type": "string",
                    "description": ""
                },
                "alternativeEmail": {
                    "type": "string",
                    "description": ""
                },
                "alternativePhone": {
                    "type": "string",
                    "description": ""
                },
                "isParcelBox": {
                    "type": "integer",
                    "description": "Indicates whether the e.g. paketshop is supported"
                },
                "isPostOffice": {
                    "type": "integer",
                    "description": "Indicates whether the e.g. postfiliale is supported"
                }
            }
        },
        "ReturnsServiceProvider": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the returns service provider"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the returns service provider"
                },
                "pluginId": {
                    "type": "integer",
                    "description": "The optional ID of the plugin when the returns service provider is registered as a plugin"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the returns service provider was created"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the returns service provider was updated"
                }
            }
        },
        "OrderReturns": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": ""
                },
                "orderId": {
                    "type": "integer",
                    "description": ""
                },
                "returnsOrderId": {
                    "type": "integer",
                    "description": ""
                },
                "providerId": {
                    "type": "integer",
                    "description": ""
                },
                "fileName": {
                    "type": "string",
                    "description": ""
                },
                "externalNumber": {
                    "type": "string",
                    "description": ""
                },
                "externalData": {
                    "type": "string",
                    "description": ""
                }
            }
        },
        "ShippingInformation": {
            "type": "object",
            "properties": {
                "orderId": {
                    "type": "integer",
                    "description": "The ID of the order"
                },
                "shippingServiceProvider": {
                    "type": "string",
                    "description": "The name of the shipping service provider"
                },
                "transactionId": {
                    "type": "string",
                    "description": "The ID of the transaction"
                },
                "shippingStatus": {
                    "type": "string",
                    "description": "The shipping status. Possible values are 'open', 'prepared' and 'registered'."
                },
                "shippingCosts": {
                    "type": "number",
                    "description": "The shipping costs"
                },
                "additionalData": {
                    "type": "string",
                    "description": "The additional data. Depending on the shipping service provider selected, this data may contain different information, e.g. shipping service, email address and order ID."
                },
                "registrationAt": {
                    "type": "integer",
                    "description": "The date and time the shipment was registered"
                },
                "shipmentAt": {
                    "type": "integer",
                    "description": "The date the items will be shipped"
                }
            }
        },
        "ShippingServiceProvider": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the shipping service provider"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the shipping service provider"
                },
                "pluginId": {
                    "type": "integer",
                    "description": "The optional ID of the plugin when the shipping service provider is registered as a plugin"
                },
                "icon": {
                    "type": "string",
                    "description": "The optional path of the icon"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the shipping service provider was created"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the shipping service provider was updated"
                }
            }
        },
        "StatusHistoryEntry": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the status history entry"
                },
                "orderId": {
                    "type": "integer",
                    "description": "The ID of the order"
                },
                "statusId": {
                    "type": "number",
                    "description": "The ID of the status"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date when the entry was created"
                },
                "userId": {
                    "type": "integer",
                    "description": "The ID of the user"
                },
                "procedureText": {
                    "type": "string",
                    "description": "The information text of the procedure that created the entry"
                }
            }
        },
        "OrderStatus": {
            "type": "object",
            "properties": {
                "statusId": {
                    "type": "number",
                    "description": "The ID of the status."
                },
                "isErasable": {
                    "type": "boolean",
                    "description": "Flag that indicates whether the status is erasable or not."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date, when the status was created."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date, when the status was updated."
                },
                "isFrontendVisible": {
                    "type": "boolean",
                    "description": "Indicates visibility in frontend."
                },
                "isReorderVisible": {
                    "type": "boolean",
                    "description": "Indicates visibility in reorder."
                },
                "isRedistributionVisible": {
                    "type": "boolean",
                    "description": "Indicates visibility in redistribution."
                },
                "color": {
                    "type": "string",
                    "description": "The color of the status."
                }
            }
        },
        "ContactWish": {
            "type": "object",
            "properties": {
                "text": {
                    "type": "string",
                    "description": "The text of the contact wish"
                }
            }
        },
        "OrderDate": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the order date"
                },
                "orderId": {
                    "type": "integer",
                    "description": "The ID of the order that the date belongs to"
                },
                "typeId": {
                    "type": "integer",
                    "description": "The ID of the date type. The following types are available:\n\n* Deleted on = 1\n* Created on = 2\n* Paid date = 3\n* Last update = 4\n* Completed date = 5\n* Return date = 6\n* Payment due date = 7\n* Estimated shipping date = 8\n* Start date = 9\n* End date = 10\n* Estimated delivery date = 11\n* Market transfer date = 12\n* Subscription cancelled on = 13\n* Subscription last run = 14\n* Subscription next run = 15\n* Purchase date = 16\n* Finish date = 17"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date when the date was created"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date when the date was last updated"
                }
            }
        },
        "DocumentData": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string",
                    "description": "The base64 encoded file data."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the document."
                },
                "number": {
                    "type": "integer",
                    "description": "The document number"
                },
                "numberWithPrefix": {
                    "type": "string",
                    "description": "The document number with prefix"
                },
                "directoryId": {
                    "type": "integer",
                    "description": "The ID of the directory"
                },
                "path": {
                    "type": "string",
                    "description": "The path"
                },
                "userId": {
                    "type": "integer",
                    "description": "The ID of the user"
                },
                "source": {
                    "type": "string",
                    "description": "The source"
                },
                "displayDate": {
                    "type": "string",
                    "description": "The date displayed on the document"
                }
            }
        },
        "OrderFamily": {
            "type": "object",
            "properties": {
                "originOrderId": {
                    "type": "integer",
                    "description": ""
                },
                "mainSalesOrderId": {
                    "type": "integer",
                    "description": ""
                }
            }
        },
        "OrderItem": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the order item"
                },
                "orderId": {
                    "type": "integer",
                    "description": "The ID of the order that the order item belongs to"
                },
                "typeId": {
                    "type": "integer",
                    "description": "The ID of the order item type\n\n* VARIATION\t\t\t=\t1\n* ITEM_BUNDLE\t\t\t=\t2\n* BUNDLE_COMPONENT\t\t=\t3\n* PROMOTIONAL_COUPON\t=\t4\n* GIFT_CARD\t\t\t=\t5\n* SHIPPING_COSTS\t\t=\t6\n* PAYMENT_SURCHARGE\t=\t7\n* GIFT_WRAP\t\t\t=\t8\n* UNASSIGEND_VARIATION\t=\t9\n* DEPOSIT\t\t\t\t=\t10\n* ORDER\t\t\t\t=\t11\n* DUNNING_CHARGE\t\t=   12\n* ITEM_SET\t\t        =   13\n* SET_COMPONENT\t\t=   14\n* ORDER_PROPERTY\t\t=   15"
                },
                "referrerId": {
                    "type": "number",
                    "description": "The ID of order item referrer"
                },
                "itemVariationId": {
                    "type": "integer",
                    "description": "The ID of the item variation"
                },
                "quantity": {
                    "type": "number",
                    "description": "The quantity."
                },
                "orderItemName": {
                    "type": "string",
                    "description": "The name of the order item"
                },
                "attributeValues": {
                    "type": "string",
                    "description": "The attribute value names"
                },
                "shippingProfileId": {
                    "type": "integer",
                    "description": "The ID of the order item's shipping profile"
                },
                "countryVatId": {
                    "type": "integer",
                    "description": "The ID of the country vat"
                },
                "vatField": {
                    "type": "integer",
                    "description": "The vat id (0-5)."
                },
                "vatRate": {
                    "type": "number",
                    "description": "The vat amount, e.g. 19.0 for 19% VAT."
                },
                "position": {
                    "type": "integer",
                    "description": "The order items position in the order."
                },
                "warehouseId": {
                    "type": "integer",
                    "description": "The ID of the warehouse."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date at which the order item was created."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date that the order item was last updated."
                }
            }
        },
        "OrderSerialNumber": {
            "type": "object",
            "properties": {
                "serialNumberId": {
                    "type": "integer",
                    "description": "The ID of the serial number"
                },
                "orderId": {
                    "type": "integer",
                    "description": "The ID of the order"
                },
                "orderItemId": {
                    "type": "integer",
                    "description": "The ID of the order item"
                },
                "serialNumber": {
                    "type": "string",
                    "description": "The serial number"
                }
            }
        },
        "PaymentPropertyTypeName": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the name of the property type"
                },
                "typeId": {
                    "type": "integer",
                    "description": "The ID of the property type"
                },
                "lang": {
                    "type": "string",
                    "description": "The language of the name of the property type"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the property type"
                }
            }
        },
        "PaymentContactRelation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the payment order relation"
                },
                "paymentId": {
                    "type": "integer",
                    "description": "The ID of the payment"
                },
                "contactId": {
                    "type": "integer",
                    "description": "The ID of the contact"
                },
                "assignedAt": {
                    "type": "string",
                    "description": "The time the payment contact relation was assigned"
                }
            }
        },
        "PaymentOrderRelation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the payment order relation"
                },
                "paymentId": {
                    "type": "integer",
                    "description": "The ID of the payment"
                },
                "orderId": {
                    "type": "integer",
                    "description": "The ID of the order"
                },
                "assignedAt": {
                    "type": "string",
                    "description": "The time the payment order relation was assigned"
                }
            }
        },
        "Payment": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the payment"
                },
                "amount": {
                    "type": "number",
                    "description": "The amount of the payment"
                },
                "exchangeRatio": {
                    "type": "number",
                    "description": "The exchange rate. Exchange rates are used if the default currency saved in plentymarkets differs from the currency of the order."
                },
                "parentId": {
                    "type": "integer",
                    "description": "The ID of the parent payment"
                },
                "deleted": {
                    "type": "integer",
                    "description": "A deleted payment. Deleted payments have the value 1 and are not displayed in the plentymarkets back end."
                },
                "unaccountable": {
                    "type": "integer",
                    "description": "An unassigned payment. Unassigned payments have the value 1."
                },
                "currency": {
                    "type": "string",
                    "description": "The currency of the payment in ISO 4217 code."
                },
                "type": {
                    "type": "string",
                    "description": "The payment type. Available types are credit and debit."
                },
                "hash": {
                    "type": "string",
                    "description": "The hash code of the payment. The hash code consists of 32 characters and is automatically generated."
                },
                "origin": {
                    "type": "integer",
                    "description": "The origin of the payment. The following origins are available:\n<ul>\n    <li>Undefined = 0</li>\n    <li>System = 1</li>\n    <li>Manually = 2</li>\n    <li>SOAP = 3</li>\n    <li>Import = 4</li>\n    <li>Split payment = 5</li>\n    <li>Plugin = 6</li>\n    <li>POS = 7</li>\n</ul>"
                },
                "receivedAt": {
                    "type": "string",
                    "description": "The time the payment was received"
                },
                "importedAt": {
                    "type": "string",
                    "description": "The time the payment was imported"
                },
                "status": {
                    "type": "integer",
                    "description": "The <a href=\"https://developers.plentymarkets.com/en-gb/developers/main/rest-api-guides/getting-started.html#_payment_status_ids\"  target=\"_blank\">status</a> of the payment"
                },
                "transactionType": {
                    "type": "integer",
                    "description": "The transaction type of the payment. The following transaction types are available:\n<ul>\n    <li>Interim transaction report = 1</li>\n    <li>Booked payment = 2</li>\n    <li>Split payment = 3</li>\n</ul>"
                },
                "mopId": {
                    "type": "integer",
                    "description": "The ID of the payment method"
                },
                "regenerateHash": {
                    "type": "boolean",
                    "description": "If $regenerateHash is true, regenerate the payment hash value. Default is false."
                },
                "updateOrderPaymentStatus": {
                    "type": "boolean",
                    "description": "If $updateOrderPaymentStatus is true, update the order payment status. Default is false."
                },
                "isSystemCurrency": {
                    "type": "boolean",
                    "description": "If $isSystemCurrency is false, the value will be converted to the standard currency with the provided exchange rate. If $isSystemCurrency is true, the value is not converted. Default is true."
                }
            }
        },
        "PaymentHistory": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the payment history"
                },
                "paymentId": {
                    "type": "integer",
                    "description": "The ID of the payment"
                },
                "typeId": {
                    "type": "integer",
                    "description": "The ID of the history type. The following types are available:\n<ul>\n    <li>Created = 1</li>\n    <li>Status updated = 2</li>\n    <li>Assigned = 3</li>\n    <li>Detached = 4</li>\n    <li>Deleted = 5</li>\n    <li>Updated = 6</li>\n</ul>"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the payment history"
                },
                "user": {
                    "type": "string",
                    "description": "The user who initiated the action"
                }
            }
        },
        "PaymentProperty": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the payment property"
                },
                "paymentId": {
                    "type": "integer",
                    "description": "The ID of the payment"
                },
                "typeId": {
                    "type": "integer",
                    "description": "The ID of the property type. The following property types are available:\n<ul>\n    <li>Transaction ID = 1</li>\n    <li>Reference ID = 2</li>\n    <li>Booking text = 3</li>\n    <li>Transaction password = 4</li>\n    <li>Transaction code = 5</li>\n    <li>Authorisation ID = 6</li>\n    <li>Capture ID = 7</li>\n    <li>Refund ID = 8</li>\n    <li>Credit note ID = 9</li>\n    <li>Order reference = 10</li>\n    <li>Name of the sender = 11</li>\n    <li>Email of the sender = 12</li>\n    <li>The sender's sort code = 13</li>\n    <li>The sender's bank name = 14</li>\n    <li>The sender's bank account number = 15</li>\n    <li>The holder of the bank account = 16</li>\n    <li>The country of the sender's bank account = 17</li>\n    <li>The sender's IBAN = 18</li>\n    <li>The sender's BIC = 19</li>\n    <li>Name of the recipient = 20</li>\n    <li>The recipient's bank account = 21</li>\n    <li>Reference text of the payment = 22</li>\n    <li>Payment origin = 23</li>\n    <li>Shipping address ID = 24</li>\n    <li>Invoice address ID = 25</li>\n    <li>Item buyer = 26</li>\n    <li>Item number = 27</li>\n    <li>Item transaction ID = 28</li>\n    <li>External transaction type = 29</li>\n    <li>External transaction status = 30</li>\n    <li>The receiver's IBAN = 31</li>\n    <li>The receiver's BIC = 32</li>\n    <li>Transaction fee = 33</li>\n    <li>Transaction lifespan = 34</li>\n    <li>Matching rate = 36</li>\n</ul>"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the property type"
                }
            }
        },
        "PaymentMethodName": {
            "type": "object",
            "properties": {
                "paymentMethodId": {
                    "type": "integer",
                    "description": ""
                },
                "lang": {
                    "type": "string",
                    "description": ""
                },
                "name": {
                    "type": "string",
                    "description": ""
                }
            }
        },
        "PaymentMethod": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the payment method"
                },
                "pluginKey": {
                    "type": "string",
                    "description": "The plugin key of the payment method"
                },
                "paymentKey": {
                    "type": "string",
                    "description": "The payment key of the payment method"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the payment method"
                }
            }
        },
        "PaymentPropertyType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the property type"
                },
                "erasable": {
                    "type": "integer",
                    "description": "Specifies whether the property type can be deleted. Property types that can be deleted have the value 1. Default property types cannot be deleted."
                },
                "position": {
                    "type": "integer",
                    "description": "The position number of the property type"
                }
            }
        },
        "ItemSerialNumber": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the serial number"
                },
                "orderId": {
                    "type": "integer",
                    "description": "The ID of the order"
                },
                "orderItemId": {
                    "type": "integer",
                    "description": "The ID of the order item"
                },
                "itemId": {
                    "type": "integer",
                    "description": "The ID of the item"
                },
                "serialNumber": {
                    "type": "string",
                    "description": "The serial number"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date the serial number was created"
                }
            }
        },
        "AdditionalSku": {
            "type": "object",
            "properties": []
        },
        "BundleComponent": {
            "type": "object",
            "properties": []
        },
        "Client": {
            "type": "object",
            "properties": []
        },
        "DefaultCategory": {
            "type": "object",
            "properties": []
        },
        "Image": {
            "type": "object",
            "properties": []
        },
        "Market": {
            "type": "object",
            "properties": []
        },
        "MarketIdentNumber": {
            "type": "object",
            "properties": []
        },
        "Sku": {
            "type": "object",
            "properties": []
        },
        "Supplier": {
            "type": "object",
            "properties": []
        },
        "Warehouse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The id of the warehouse"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the warehouse"
                },
                "note": {
                    "type": "string",
                    "description": "A note for this warehouse"
                },
                "typeId": {
                    "type": "integer",
                    "description": "The id of the warehouse type. The following types are available:\n<ul>\n    <li>0 = Sales warehouse</li>\n    <li>1 = Repair warehouse</li>\n    <li>4 = Storage warehouse</li>\n    <li>5 = Transit warehouse</li>\n    <li>6 = Distribution warehouse</li>\n    <li>7 = Other</li>\n</ul>"
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority of the warehouse. The higher the priority, the more important the warehouse is. The priority is used for automatic warehouse detection."
                },
                "allocationReferrerIds": {
                    "type": "array",
                    "items": [],
                    "description": "Allocation Referrer Ids by automatic warehouse detection"
                },
                "onStockAvailability": {
                    "type": "integer",
                    "description": "Displayed availability of a variation if stock is available"
                },
                "outOfStockAvailability": {
                    "type": "integer",
                    "description": "Displayed availability of a variation if no stock is available"
                },
                "splitByShippingProfile": {
                    "type": "boolean",
                    "description": "Flag that indicates if for this warehouse orders are split by shipping profiles or not. <ul><li>True = Orders are split by shipping profiles</li> <li>False = Orders will not be split by shipping profiles</li></ul>"
                },
                "storageLocationType": {
                    "type": "string",
                    "description": "The storage location type. The following types are available: <ul><li>none</li> <li>small</li><li>medium</li> <li>large</li> <li>europallet</li></ul>"
                },
                "storageLocationZone": {
                    "type": "integer",
                    "description": "The zone that the storage location is in"
                },
                "repairWarehouseId": {
                    "type": "integer",
                    "description": "The id of the associated repair warehouse"
                },
                "isInventoryModeActive": {
                    "type": "boolean",
                    "description": "Flag that indicates if the stocktaking mode for this warehouse is active or not. <ul><li>True = active</li> <li>False = inactive</li></ul>"
                },
                "logisticsType": {
                    "type": "string",
                    "description": "The id of the logistics type of the warehouse. The logistics type states which service provider fulfills the storage and shipping. The following logistics types are available:\n<ul>\n<li>own</li>\n<li>amazon</li>\n<li>dhlFulfillment</li>\n</ul>"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The updated at timestamp of the warehouse"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The created at timestamp of the warehouse"
                }
            }
        },
        "Inheritance": {
            "type": "object",
            "properties": []
        },
        "Base": {
            "type": "object",
            "properties": []
        },
        "CursorResult": {
            "type": "object",
            "properties": []
        },
        "PluginSet": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": ""
                },
                "hash": {
                    "type": "string",
                    "description": ""
                },
                "hasSuccessfulBuild": {
                    "type": "boolean",
                    "description": ""
                },
                "parentPluginSetId": {
                    "type": "integer",
                    "description": ""
                },
                "name": {
                    "type": "string",
                    "description": ""
                },
                "description": {
                    "type": "string",
                    "description": ""
                }
            }
        },
        "PluginSetsInfo": {
            "type": "object",
            "properties": []
        },
        "Plugin": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the plugin"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the plugin"
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the plugin. The position is used to determine the plugin\norder."
                },
                "activeStage": {
                    "type": "boolean",
                    "description": "Shows whether the plugin is active in Stage. Inactive plugins will not\nbe provisioned in Stage."
                },
                "activeProductive": {
                    "type": "boolean",
                    "description": "Shows whether the plugin is active in Productive. Inactive plugins will\nnot be provisioned in Productive."
                },
                "created_at": {
                    "type": "string",
                    "description": "The date that the plugin was created."
                },
                "updated_at": {
                    "type": "string",
                    "description": "The date that the plugin was updated last."
                },
                "inStage": {
                    "type": "boolean",
                    "description": "Shows whether the plugin is provisioned in Stage."
                },
                "inProductive": {
                    "type": "boolean",
                    "description": "Shows whether the plugin is provisioned in Productive."
                },
                "isConnectedWithGit": {
                    "type": "boolean",
                    "description": ""
                },
                "updateInformation": {
                    "type": "array",
                    "items": [],
                    "description": ""
                },
                "type": {
                    "type": "string",
                    "description": "The type of the plugin. The following plugin types are available:\n<ul>\n    <li>Template</li>\n    <li>Export</li>\n</ul>"
                },
                "installed": {
                    "type": "boolean",
                    "description": "Whether or not the plugin is installed. This will be false for plugins\nthat have been purchased from the marketplace but have not yet been installed in any set."
                },
                "version": {
                    "type": "string",
                    "description": "The version of the plugin"
                },
                "versionStage": {
                    "type": "string",
                    "description": "The version of the plugin in stage"
                },
                "versionProductive": {
                    "type": "string",
                    "description": "The version of the plugin in productive"
                },
                "description": {
                    "type": "string",
                    "description": "The description text of the plugin"
                },
                "namespace": {
                    "type": "string",
                    "description": "The namespace of the plugin"
                },
                "dependencies": {
                    "type": "array",
                    "items": [],
                    "description": "A list of plugins with dependencies to the plugin"
                },
                "author": {
                    "type": "string",
                    "description": "The name of the plugin author"
                },
                "price": {
                    "type": "number",
                    "description": "The price of the plugin"
                },
                "keywords": {
                    "type": "array",
                    "items": [],
                    "description": "A list of plugin keywords"
                },
                "require": {
                    "type": "array",
                    "items": [],
                    "description": "A list of plugins that are required by the plugin"
                },
                "platform": {
                    "type": "array",
                    "items": [],
                    "description": "Details about what platform does the plugin support."
                },
                "notInstalledRequirements": {
                    "type": "array",
                    "items": [],
                    "description": "A list of required plugins that are not installed"
                },
                "notActiveStageRequirements": {
                    "type": "array",
                    "items": [],
                    "description": "A list of required plugins that are not active in stage"
                },
                "notActiveProductiveRequirements": {
                    "type": "array",
                    "items": [],
                    "description": "A list of required plugins that are not active in productive"
                },
                "runOnBuild": {
                    "type": "array",
                    "items": [],
                    "description": "The list of classes to execute once on plugin build"
                },
                "checkOnBuild": {
                    "type": "array",
                    "items": [],
                    "description": "The list of classes to execute on every plugin build"
                },
                "authorIcon": {
                    "type": "string",
                    "description": "The author icon"
                },
                "pluginIcon": {
                    "type": "string",
                    "description": "The plugin icon"
                },
                "license": {
                    "type": "string",
                    "description": "The plugin license"
                },
                "shortDescription": {
                    "type": "array",
                    "items": [],
                    "description": ""
                },
                "isClosedSource": {
                    "type": "boolean",
                    "description": "is closed source"
                },
                "inboxPath": {
                    "type": "string",
                    "description": "path in the inbox (closed source, open source)"
                },
                "marketplaceName": {
                    "type": "array",
                    "items": [],
                    "description": "The plugin name displayed in marketplace"
                },
                "source": {
                    "type": "string",
                    "description": "Whether this plugin was installed from marketplace, git or local"
                },
                "javaScriptFiles": {
                    "type": "array",
                    "items": [],
                    "description": "A list of included javascript files"
                },
                "containers": {
                    "type": "array",
                    "items": [],
                    "description": "A list of provided containers with name and description"
                },
                "dataProviders": {
                    "type": "array",
                    "items": [],
                    "description": "A list of data providers with name and description"
                },
                "categories": {
                    "type": "array",
                    "items": [],
                    "description": ""
                },
                "webhookUrl": {
                    "type": "string",
                    "description": "webhookUrl"
                },
                "isExternalTool": {
                    "type": "boolean",
                    "description": "is external tool"
                },
                "directDownloadLinks": {
                    "type": "array",
                    "items": [],
                    "description": "A list of urls for the external tool"
                },
                "forwardLink": {
                    "type": "string",
                    "description": "A forward link to the external tool developers page"
                },
                "branch": {
                    "type": "string",
                    "description": "The branch to checkout for this particular Plugin"
                },
                "commit": {
                    "type": "string",
                    "description": "The commit to checkout for this particular Plugin"
                },
                "offerTrial": {
                    "type": "boolean",
                    "description": "Determines if the plugin offers a trial period for plentyMarketplace"
                },
                "offerFreemium": {
                    "type": "boolean",
                    "description": "Determines if the plugin offers freemium functionality"
                },
                "pluginSetIds": {
                    "type": "array",
                    "items": [],
                    "description": "Array of PluginSet Ids where this plugin is contained."
                }
            }
        },
        "PluginSetEntry": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": ""
                },
                "pluginId": {
                    "type": "integer",
                    "description": ""
                },
                "pluginSetId": {
                    "type": "integer",
                    "description": ""
                },
                "branchName": {
                    "type": "string",
                    "description": ""
                },
                "commit": {
                    "type": "string",
                    "description": ""
                },
                "position": {
                    "type": "integer",
                    "description": ""
                },
                "isInstalledFromGit": {
                    "type": "boolean",
                    "description": ""
                }
            }
        },
        "Webstore": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the client (store)"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the client (store)"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the client (store)"
                },
                "storeIdentifier": {
                    "type": "integer",
                    "description": "The identifier of the client (store)"
                },
                "pluginSetId": {
                    "type": "integer",
                    "description": "The plugin set id of the client (store)"
                }
            }
        },
        "Configuration": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": ""
                },
                "key": {
                    "type": "string",
                    "description": ""
                },
                "value": {
                    "type": "string",
                    "description": ""
                },
                "plugin_id": {
                    "type": "integer",
                    "description": ""
                },
                "tab": {
                    "type": "string",
                    "description": ""
                },
                "label": {
                    "type": "string",
                    "description": ""
                },
                "type": {
                    "type": "string",
                    "description": ""
                },
                "possibleValues": {
                    "type": "array",
                    "items": [],
                    "description": ""
                },
                "default": {
                    "type": "string",
                    "description": ""
                },
                "scss": {
                    "type": "boolean",
                    "description": ""
                },
                "updated_at": {
                    "type": "string",
                    "description": ""
                },
                "pluginSetEntryId": {
                    "type": "integer",
                    "description": ""
                }
            }
        },
        "PropertyAmazon": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the property amazon"
                },
                "propertyId": {
                    "type": "integer",
                    "description": "The property ID of the property amazon"
                },
                "platform": {
                    "type": "string",
                    "description": "The platform of the property amazon"
                },
                "category": {
                    "type": "string",
                    "description": "The category of the property amazon"
                },
                "field": {
                    "type": "string",
                    "description": "The field of the property amazon"
                }
            }
        },
        "PropertyAvailability": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the property availability"
                },
                "propertyId": {
                    "type": "integer",
                    "description": "The ID of the property"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the property availability"
                },
                "value": {
                    "type": "number",
                    "description": "The value of the property availability"
                }
            }
        },
        "PropertyGroupOption": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the property group option"
                },
                "groupId": {
                    "type": "integer",
                    "description": "The property group ID of the property group"
                },
                "type": {
                    "type": "string",
                    "description": "The identifier of the property group option"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the property group option"
                }
            }
        },
        "PropertyMarket": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the property market"
                },
                "propertyId": {
                    "type": "integer",
                    "description": "The ID of the property"
                },
                "referrerId": {
                    "type": "number",
                    "description": "The ID of the referrer"
                },
                "referrerSubId": {
                    "type": "integer",
                    "description": "The ID of the sub referrer"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the property market"
                }
            }
        },
        "PropertyOption": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the property option"
                },
                "propertyId": {
                    "type": "integer",
                    "description": "The property ID of the property option"
                },
                "type": {
                    "type": "string",
                    "description": "The identifier type of the option"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the option"
                }
            }
        },
        "PropertyRelation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the property relation"
                },
                "propertyId": {
                    "type": "integer",
                    "description": "The property ID of the property relation"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the property relation"
                },
                "targetId": {
                    "type": "string",
                    "description": "The ID of the target of the property relation"
                },
                "groupId": {
                    "type": "integer",
                    "description": "The property group ID of the property relation"
                },
                "markup": {
                    "type": "number",
                    "description": "The mark up of the property relation"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the property relation for properties of the following type: int, float, date and file."
                }
            }
        },
        "PropertyRelationValue": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the property relation value"
                },
                "relationId": {
                    "type": "integer",
                    "description": "The ID of the property relation"
                },
                "lang": {
                    "type": "string",
                    "description": "The language of the property relation value"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the property relation"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the property relation value"
                }
            }
        },
        "RepairReason": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the repair reason."
                },
                "reason": {
                    "type": "string",
                    "description": "The specified reason in system language."
                }
            }
        },
        "RepairStatus": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the repair status."
                },
                "status": {
                    "type": "string",
                    "description": "The specified status in system language."
                }
            }
        },
        "ReturnReason": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the return reason."
                },
                "reason": {
                    "type": "string",
                    "description": "The specified reason in system language."
                }
            }
        },
        "ReturnStatus": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the return status."
                },
                "status": {
                    "type": "string",
                    "description": "The specified status in system language."
                }
            }
        },
        "ContentLink": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the content link"
                },
                "contentId": {
                    "type": "integer",
                    "description": "The ID of the content"
                },
                "containerName": {
                    "type": "string",
                    "description": "The name of the container"
                },
                "pluginSetId": {
                    "type": "integer",
                    "description": "The Id of the plugin set"
                },
                "language": {
                    "type": "string",
                    "description": "The language where the content is linked to."
                },
                "active": {
                    "type": "boolean",
                    "description": "Indicates if the link is active and the content should be visible for the frontend."
                },
                "relatedContentType": {
                    "type": "string",
                    "description": "The content type the content is linked to"
                },
                "relatedContainerName": {
                    "type": "string",
                    "description": "The container name the content is linked to"
                },
                "inherit": {
                    "type": "boolean",
                    "description": "Indicates if this content should be inherited to child contents."
                },
                "invalid": {
                    "type": "boolean",
                    "description": "Indicate if the content is invalid and should be regenerated on next request."
                }
            }
        },
        "Content": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the content"
                },
                "dataProviderName": {
                    "type": "string",
                    "description": "The name of the data provider"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the content"
                },
                "widgets": {
                    "type": "string",
                    "description": "The configured widgets of the content. This attribute is deprecated. Use $dropzones instead."
                },
                "dropzones": {
                    "type": "array",
                    "items": [],
                    "description": "Dropzones of the content"
                }
            }
        },
        "ContentPage": {
            "type": "object",
            "properties": {
                "identifier": {
                    "type": "string",
                    "description": "The identifier of the content page"
                },
                "caption": {
                    "type": "string",
                    "description": "Translation key to read the caption from"
                }
            }
        },
        "SearchResult": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string",
                    "description": ""
                },
                "label": {
                    "type": "string",
                    "description": ""
                },
                "source": {
                    "type": "string",
                    "description": ""
                }
            }
        },
        "Reservation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": ""
                },
                "initialId": {
                    "type": "string",
                    "description": ""
                },
                "transactionId": {
                    "type": "string",
                    "description": ""
                },
                "variationId": {
                    "type": "integer",
                    "description": ""
                },
                "warehouseId": {
                    "type": "integer",
                    "description": ""
                },
                "storageLocationId": {
                    "type": "integer",
                    "description": ""
                },
                "batch": {
                    "type": "string",
                    "description": ""
                },
                "difference": {
                    "type": "number",
                    "description": ""
                },
                "reason": {
                    "type": "string",
                    "description": ""
                },
                "priority": {
                    "type": "integer",
                    "description": ""
                },
                "mayBecomePending": {
                    "type": "boolean",
                    "description": ""
                },
                "timeToLive": {
                    "type": "integer",
                    "description": ""
                }
            }
        },
        "Stock": {
            "type": "object",
            "properties": {
                "itemId": {
                    "type": "integer",
                    "description": "The ID of the item"
                },
                "variationId": {
                    "type": "integer",
                    "description": "The ID of the variation"
                },
                "warehouseId": {
                    "type": "integer",
                    "description": "The ID of the warehouse"
                },
                "stockPhysical": {
                    "type": "number",
                    "description": "The physical stock"
                },
                "reservedStock": {
                    "type": "number",
                    "description": "The reserved stock"
                },
                "reservedEbay": {
                    "type": "number",
                    "description": "The stock reserved for ebay"
                },
                "reorderDelta": {
                    "type": "number",
                    "description": "The reorder delta"
                },
                "stockNet": {
                    "type": "number",
                    "description": "The net stock"
                },
                "reordered": {
                    "type": "integer",
                    "description": "The reordered quantity of a variation"
                },
                "warehousePriority": {
                    "type": "integer",
                    "description": "The priority of the warehouse"
                },
                "reservedBundle": {
                    "type": "number",
                    "description": "Reserved bundle"
                },
                "averagePurchasePrice": {
                    "type": "number",
                    "description": "The average purchase price"
                },
                "averageSale": {
                    "type": "number",
                    "description": "The average sale"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the stock was last updated"
                }
            }
        },
        "VariationStockRedistribution": {
            "type": "object",
            "properties": {
                "variationId": {
                    "type": "integer",
                    "description": "The ID of the variation"
                },
                "reasonId": {
                    "type": "integer",
                    "description": "The reason for the redistribution. Valid reasons are:\n<ul>\n <li>401: Stock transfer</li>\n <li>402: Stock correction by stocktaking</li>\n <li>403: Stock transfer because of need for repair</li>\n</ul>"
                },
                "quantity": {
                    "type": "number",
                    "description": "The quantity to redistribute"
                },
                "bestBeforeDate": {
                    "type": "string",
                    "description": "The best before date of the redistribution"
                },
                "batch": {
                    "type": "string",
                    "description": "The batch of the redistribution"
                },
                "currentStorageLocationId": {
                    "type": "integer",
                    "description": "The ID of the current storage location"
                },
                "currentWarehouseId": {
                    "type": "integer",
                    "description": "The ID of the current warehouse"
                },
                "newStorageLocationId": {
                    "type": "integer",
                    "description": "The ID of the new storage location"
                },
                "newWarehouseId": {
                    "type": "integer",
                    "description": "The ID of the new warehouse"
                }
            }
        },
        "StorageLocation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The id of the storage location."
                },
                "warehouseId": {
                    "type": "integer",
                    "description": "The id of the warehouse the storage location belongs to."
                },
                "rackId": {
                    "type": "integer",
                    "description": "The id of the rack the storage location belongs to."
                },
                "shelfId": {
                    "type": "integer",
                    "description": "The id of the shelf the storage location belongs to."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the storage location."
                },
                "type": {
                    "type": "integer",
                    "description": "The type of the storage location. Valid strings are: 'small', 'medium', 'large', 'europallet'."
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the storage location."
                }
            }
        },
        "VariationStockIntake": {
            "type": "object",
            "properties": {
                "variationId": {
                    "type": "integer",
                    "description": "The ID of the variation"
                },
                "warehouseId": {
                    "type": "integer",
                    "description": "The ID of the warehouse"
                },
                "storageLocationId": {
                    "type": "integer",
                    "description": "The ID of the storage location"
                },
                "deliveredAt": {
                    "type": "string",
                    "description": "The date when stock was booked in. The date is given in W3C format."
                },
                "orderNumber": {
                    "type": "string",
                    "description": "The order number"
                },
                "supplierId": {
                    "type": "integer",
                    "description": "The ID of the supplier"
                },
                "currency": {
                    "type": "string",
                    "description": "The currency"
                },
                "exchangeRate": {
                    "type": "number",
                    "description": "The exchange rate"
                },
                "quantity": {
                    "type": "number",
                    "description": "The quantity of a variation"
                },
                "purchasePrice": {
                    "type": "number",
                    "description": "The purchase price"
                },
                "bestBeforeDate": {
                    "type": "string",
                    "description": "The best before date of the variation"
                },
                "batch": {
                    "type": "string",
                    "description": "The batch of the variation"
                },
                "reasonId": {
                    "type": "integer",
                    "description": "The ID of the reason. The following IDs are available:\n<ul>\n<li>101: Incoming items</li>\n<li>102: Booked in by stocktaking</li>\n<li>104: Rebooked into stock because no production errors were found</li>\n<li>106: Maculation canceled</li>\n<li>107: Packing error, items are re-booked</li>\n<li>109: Incoming items (logistics)</li>\n<li>115: Incoming items (second choice)</li>\n<li>116: Booked in by correction</li>\n<li>117: Unpacked item</li>\n<li>180: Incoming items (purchase order)</li>\n<li>181: Incoming items (warehousing)</li>\n</ul>"
                }
            }
        },
        "VariationStockDischarge": {
            "type": "object",
            "properties": {
                "variationId": {
                    "type": "integer",
                    "description": "The ID of the variation"
                },
                "warehouseId": {
                    "type": "integer",
                    "description": "The ID of the warehouse"
                },
                "storageLocationId": {
                    "type": "integer",
                    "description": "The ID of the storage location"
                },
                "deliveredAt": {
                    "type": "string",
                    "description": "The date when stock was booked in. The date is given in W3C format."
                },
                "orderNumber": {
                    "type": "string",
                    "description": "The order number"
                },
                "supplierId": {
                    "type": "integer",
                    "description": "The ID of the supplier"
                },
                "currency": {
                    "type": "string",
                    "description": "The currency"
                },
                "exchangeRate": {
                    "type": "number",
                    "description": "The exchange rate"
                },
                "quantity": {
                    "type": "number",
                    "description": "The quantity of a variation"
                },
                "bestBeforeDate": {
                    "type": "string",
                    "description": "The best before date of the variation"
                },
                "batch": {
                    "type": "string",
                    "description": "The batch of the variation"
                },
                "reasonId": {
                    "type": "integer",
                    "description": "The ID of the reason. The following IDs are available:\n<ul>\n<li>201: Outbound items</li>\n<li>202: Outbound inventur</li>\n<li>205: Outbound rubbish</li>\n<li>206: Outbound packing error</li>\n<li>207: Outbound defect</li>\n<li>208: Outbound complaint</li>\n<li>209: Outbound logistic</li>\n<li>214: Outbound warehouse movement</li>\n<li>215: Outbound second choise</li>\n<li>216: Outbound correction</li>\n<li>280: Outbound purchase order</li>\n<li>281: Outbound loss</li>\n</ul>"
                }
            }
        },
        "VariationStockCorrection": {
            "type": "object",
            "properties": {
                "variationId": {
                    "type": "integer",
                    "description": "The ID of the variation"
                },
                "warehouseId": {
                    "type": "integer",
                    "description": "The ID of the warehouse"
                },
                "storageLocationId": {
                    "type": "integer",
                    "description": "The ID of the storage location"
                },
                "quantity": {
                    "type": "number",
                    "description": "The quantity of the variation"
                },
                "bestBeforeDate": {
                    "type": "string",
                    "description": "The best before date of the variation"
                },
                "batch": {
                    "type": "string",
                    "description": "The batch of the variation"
                },
                "reasonId": {
                    "type": "integer",
                    "description": "The reason for correction. The following reasons are available:\n<ul>\n<li>301: Stock correction</li>\n<li>302: Stock correction by stocktaking</li>\n<li>304: Stock correction because of manufacturer error</li>\n<li>305: Stock correction because of unusable paper</li>\n<li>306: Stock correction because of packing error</li>\n<li>307: Stock correction because of damage</li>\n<li>309: Stock correction (internal offset)</li>\n<li>317: Stock correction because of BBD</li>\n<li>318: Stock correction because of shipping items to FBA</li>\n<li>319: Stock correction because of shipping items to fulfillment service provider</li>\n<li>320: Stock correction because of sample for interested parties</li>\n<li>321: Stock correction because of sample for customers</li>\n<li>322: Stock correction because of sample</li>\n<li>323: Stock correction because quality models are booked in</li>\n<li>324: Stock correction because quality models are booked out</li>\n<li>325: Stock correction because of gift</li>\n<li>326: Stock correction because of malfunction (without return)</li>\n<li>327: Stock correction because of loss</li>\n<li>328: Stock correction because of unpack</li>\n</ul>"
                }
            }
        },
        "CloudMetricsList": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer",
                    "description": ""
                },
                "totalsCount": {
                    "type": "integer",
                    "description": ""
                },
                "isLastPage": {
                    "type": "boolean",
                    "description": ""
                }
            }
        },
        "TaricVatAssignment": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the taric vat assignment"
                },
                "taricCode": {
                    "type": "integer",
                    "description": "The taric code"
                },
                "countryId": {
                    "type": "integer",
                    "description": "The ID of the country that the taric code configuration belongs to"
                },
                "vatField": {
                    "type": "string",
                    "description": "The ID of the VAT rate of the taric code / country id combination."
                }
            }
        },
        "TagAvailability": {
            "type": "object",
            "properties": {
                "tagId": {
                    "type": "integer",
                    "description": "The Tag ID of the tag"
                },
                "tagType": {
                    "type": "string",
                    "description": "The type of the tag. The following types are available.\n<ul>\n<li>blog</li>\n<li>category</li>\n<li>content_page</li>\n<li>variation</li>\n<li>ticket</li>\n<li>board</li>\n<li>order</li>\n</ul>"
                }
            }
        },
        "TagClient": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The id of the relation"
                },
                "tagId": {
                    "type": "integer",
                    "description": "The Tag ID of the tag"
                },
                "plentyId": {
                    "type": "integer",
                    "description": "The PlentyId of the client"
                }
            }
        },
        "TagName": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The name ID of the tag"
                },
                "tagId": {
                    "type": "integer",
                    "description": "The tag ID"
                },
                "tagLang": {
                    "type": "string",
                    "description": "The lang of the tag name."
                },
                "tagName": {
                    "type": "string",
                    "description": "The name of the tag."
                }
            }
        },
        "TagRelationship": {
            "type": "object",
            "properties": {
                "tagId": {
                    "type": "integer",
                    "description": "The ID of the tag"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the relationship"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the relationship"
                },
                "UUID5": {
                    "type": "string",
                    "description": "The UUID5 of the relationship"
                }
            }
        },
        "Ticket": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the ticket"
                },
                "typeId": {
                    "type": "integer",
                    "description": "The type ID of the ticket"
                },
                "priorityId": {
                    "type": "integer",
                    "description": "The priority ID of the ticket"
                },
                "parentTicketId": {
                    "type": "integer",
                    "description": "The ID of the parent ticket"
                },
                "statusId": {
                    "type": "integer",
                    "description": "The status ID of the ticket"
                },
                "confidential": {
                    "type": "array",
                    "items": [],
                    "description": "The confidential value. Displays 1 if the ticket is confidential. Displays 0 if the ticket is not confidential."
                },
                "contactId": {
                    "type": "integer",
                    "description": "The ID of the contact that is linked with the ticket"
                },
                "orderId": {
                    "type": "integer",
                    "description": "The ID of the order linked with the ticket"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the ticket was created as unix timestamp or carbon object"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the ticket was last updated as unix timestamp or carbon object"
                },
                "contactLastUpdateAt": {
                    "type": "string",
                    "description": "The time the contact was last updated"
                },
                "deadlineAt": {
                    "type": "string",
                    "description": "The date of the ticket deadline"
                },
                "finishedAt": {
                    "type": "string",
                    "description": "The date the ticket is solved and displays 100 percent in the progress bar"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the ticket"
                },
                "progress": {
                    "type": "integer",
                    "description": "The progress of the ticket in percent"
                },
                "plentyId": {
                    "type": "integer",
                    "description": "The ID of the client (store)"
                },
                "source": {
                    "type": "array",
                    "items": [],
                    "description": "The source of the ticket. Possible values are 'frontend', 'backend', 'ebay' and 'email'."
                },
                "documentsCount": {
                    "type": "integer",
                    "description": "The number of documents that are attached to the ticket"
                },
                "hasDocuments": {
                    "type": "integer",
                    "description": "Displays 1 if the ticket has one or more documents. Displays 0 if the ticket has no document."
                },
                "childrenCount": {
                    "type": "integer",
                    "description": "The number of child tickets"
                },
                "resubmissionAt": {
                    "type": "string",
                    "description": "The date the ticket should be resubmitted"
                },
                "parseData": {
                    "type": "string",
                    "description": "The ParseData from the ticket"
                }
            }
        },
        "TicketOwner": {
            "type": "object",
            "properties": {
                "ticketId": {
                    "type": "integer",
                    "description": "The ID of the ticket"
                },
                "userId": {
                    "type": "integer",
                    "description": "The user ID of the owner"
                },
                "roleId": {
                    "type": "integer",
                    "description": "The role ID of the owner"
                }
            }
        },
        "TicketMessage": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the message"
                },
                "ticketId": {
                    "type": "integer",
                    "description": "The ticket ID the message belongs to"
                },
                "userId": {
                    "type": "integer",
                    "description": "The user of the message"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the ticket message was created as unix timestamp or carbon object"
                },
                "text": {
                    "type": "string",
                    "description": "The content of the message"
                },
                "type": {
                    "type": "array",
                    "items": [],
                    "description": "The type of the message. Two types are available:\n<ul>\n<li>message (visible for the customer)</li>\n<li>comment (not visible for the customer)</li>\n</ul>"
                },
                "source": {
                    "type": "array",
                    "items": [],
                    "description": "The origin of the message. The following sources are available by default and cannot be deleted.\n<ul>\n<li>backend</li>\n<li>frontend</li>\n<li>ebay</li>\n<li>email</li>\n</ul>"
                },
                "topicId": {
                    "type": "integer",
                    "description": "The ID of the topic the message is assigned to"
                }
            }
        },
        "TicketStatusName": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the status name"
                },
                "statusId": {
                    "type": "integer",
                    "description": "The status ID of the status name"
                },
                "lang": {
                    "type": "string",
                    "description": "The language of the status name"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the status"
                }
            }
        },
        "TicketTypeName": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the role name"
                },
                "typeId": {
                    "type": "integer",
                    "description": "The type id of the role name"
                },
                "lang": {
                    "type": "string",
                    "description": "The language of the role name"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the role"
                }
            }
        },
        "Todo": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": ""
                },
                "flag": {
                    "type": "integer",
                    "description": ""
                },
                "userId": {
                    "type": "integer",
                    "description": ""
                },
                "priorityId": {
                    "type": "integer",
                    "description": ""
                },
                "progress": {
                    "type": "number",
                    "description": ""
                },
                "title": {
                    "type": "string",
                    "description": ""
                },
                "description": {
                    "type": "string",
                    "description": ""
                }
            }
        },
        "PropertyGroupRelation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the property group relation"
                },
                "propertyId": {
                    "type": "integer",
                    "description": "The ID of the property"
                },
                "groupId": {
                    "type": "integer",
                    "description": "The ID of the property group"
                }
            }
        },
        "PropertyRelationSelection": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the property relation selection value"
                },
                "relationId": {
                    "type": "integer",
                    "description": "The relation ID of the property relation selection value"
                },
                "selectionId": {
                    "type": "integer",
                    "description": "The selection ID of the property relation selection value"
                }
            }
        },
        "PropertySelectionName": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the property selection name"
                },
                "selectionId": {
                    "type": "integer",
                    "description": "The selection ID of the property selection name"
                },
                "lang": {
                    "type": "string",
                    "description": "The language of the property selection name"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the property selection name"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the property selection name"
                }
            }
        },
        "Vat": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the VAT configuration. A VAT configuration includes 4 VAT rates"
                },
                "countryId": {
                    "type": "integer",
                    "description": "The ID of the country that the VAT configuration belongs to"
                },
                "taxIdNumber": {
                    "type": "string",
                    "description": "The tax id number of VAT configuration."
                },
                "startedAt": {
                    "type": "string",
                    "description": "The date when the VAT configuration went into effect"
                },
                "invalidFrom": {
                    "type": "string",
                    "description": "The date when the VAT configuration should not be used any more"
                },
                "locationId": {
                    "type": "integer",
                    "description": "The ID of the location"
                },
                "marginScheme": {
                    "type": "string",
                    "description": "Specifies the tax rate that is used, when the margin scheme is applied. Available values: 'none', 'vat1', 'vat2', 'vat3', 'vat4'."
                },
                "isRestrictedToDigitalItems": {
                    "type": "boolean",
                    "description": "Flag that indicates if the VAT configuration is used only applied to digital goods or not. True= The VAT set is only applied to digital goods. False = The VAT set is applied to all types of goods."
                },
                "isStandard": {
                    "type": "boolean",
                    "description": "Flag that indicates if the VAT configuration is the standard VAT configuration for the location"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date at which the VAT configuration was created."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date that the VAT configuration was last updated."
                }
            }
        },
        "VatRate": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the VAT rate"
                },
                "vatRate": {
                    "type": "number",
                    "description": "The percentage of the VAT rate, e.g. 19.00 for 19 %"
                },
                "name": {
                    "type": "string",
                    "description": "The name of a VAT rate"
                },
                "revenueAccount": {
                    "type": "string",
                    "description": "The revenue account for the VAT rate"
                }
            }
        },
        "WarehouseLocationDimension": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the storage location dimension"
                },
                "parentId": {
                    "type": "integer",
                    "description": "The parent ID of the storage location dimension"
                },
                "warehouseId": {
                    "type": "integer",
                    "description": "The warehouse ID of the storage location dimension"
                },
                "level": {
                    "type": "integer",
                    "description": "The level of the storage location dimension"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the storage location dimension"
                },
                "shortcut": {
                    "type": "string",
                    "description": "The shortcut of the storage location dimension"
                },
                "separator": {
                    "type": "string",
                    "description": "The separator of the storage location dimension"
                },
                "displayInName": {
                    "type": "integer",
                    "description": "If true, the dimension prefix will be shown in the storage location name"
                },
                "isActiveForPickupPath": {
                    "type": "integer",
                    "description": "Active flag for pickup path of the storage location dimension"
                }
            }
        },
        "WarehouseLocation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the storage location"
                },
                "levelId": {
                    "type": "integer",
                    "description": "The level ID of the storage location"
                },
                "label": {
                    "type": "string",
                    "description": "The label of the storage location"
                },
                "purposeKey": {
                    "type": "string",
                    "description": "The purpose key of the storage location"
                },
                "statusKey": {
                    "type": "string",
                    "description": "The status key of the storage location"
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the storage location"
                },
                "fullLabel": {
                    "type": "string",
                    "description": "The label with level path name"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the storage location (array values: 'small','medium','large','europallet')"
                },
                "notes": {
                    "type": "string",
                    "description": "The notes of the storage location"
                }
            }
        },
        "WarehouseLocationInventory": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the storage location"
                },
                "userId": {
                    "type": "integer",
                    "description": "The user ID of the storage location"
                },
                "user_id": {
                    "type": "integer",
                    "description": "deprecated - use userID instead"
                },
                "status": {
                    "type": "integer",
                    "description": "The status of the storage location stocktaking"
                },
                "warehouseLocationId": {
                    "type": "integer",
                    "description": "The  storage location ID"
                },
                "warehouse_location": {
                    "type": "integer",
                    "description": "deprecated - use WarehouseLocationId"
                }
            }
        },
        "WarehouseLocationLevel": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the storage location level"
                },
                "parentId": {
                    "type": "integer",
                    "description": "The parent ID of the storage location level"
                },
                "dimensionId": {
                    "type": "integer",
                    "description": "The storage location dimension id of the storage location level"
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the storage location level"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the storage location level"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the storage location ['small','medium','large','europallet']"
                },
                "pathName": {
                    "type": "string",
                    "description": "The complete path name from the level"
                }
            }
        },
        "Wizard": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string",
                    "description": "The title"
                },
                "key": {
                    "type": "string",
                    "description": "The wizard's key"
                },
                "settingsHandlerClass": {
                    "type": "string",
                    "description": "Settings handler"
                },
                "shortDescription": {
                    "type": "string",
                    "description": "The short description"
                },
                "translationKey": {
                    "type": "string",
                    "description": "The translation key"
                },
                "deleteConfirmationText": {
                    "type": "string",
                    "description": "Delete confirmation Text in deletion overlay"
                },
                "topics": {
                    "type": "array",
                    "items": [],
                    "description": "The topics"
                },
                "steps": {
                    "type": "array",
                    "items": [],
                    "description": "Wizard's structure"
                },
                "priority": {
                    "type": "integer",
                    "description": "Wizard's listing priority in the overview"
                },
                "relevance": {
                    "type": "string",
                    "description": "Wizard's level of relevance"
                },
                "keywords": {
                    "type": "array",
                    "items": [],
                    "description": "Keywords describing the wizard"
                }
            }
        }
    }
}