<?php

namespace lujie\amazon\sp;

use lujie\amazon\sp\api\AplusContent20201101;
use lujie\amazon\sp\api\Authorization;
use lujie\amazon\sp\api\CatalogItemsV0;
use lujie\amazon\sp\api\CatalogItems20201201;
use lujie\amazon\sp\api\CatalogItems20220401;
use lujie\amazon\sp\api\DefinitionsProductTypes20200901;
use lujie\amazon\sp\api\EasyShip20220323;
use lujie\amazon\sp\api\ExternalFulfillmentInventory20210106;
use lujie\amazon\sp\api\ExternalFulfillmentShipment20210106;
use lujie\amazon\sp\api\FbaInbound;
use lujie\amazon\sp\api\FbaInventory;
use lujie\amazon\sp\api\FbaSmallandLight;
use lujie\amazon\sp\api\Feeds20200904;
use lujie\amazon\sp\api\Feeds20210630;
use lujie\amazon\sp\api\FinancesV0;
use lujie\amazon\sp\api\FulfillmentInboundV0;
use lujie\amazon\sp\api\FulfillmentOutbound20200701;
use lujie\amazon\sp\api\ListingsItems20200901;
use lujie\amazon\sp\api\ListingsItems20210801;
use lujie\amazon\sp\api\ListingsRestrictions20210801;
use lujie\amazon\sp\api\MerchantFulfillmentV0;
use lujie\amazon\sp\api\Messaging;
use lujie\amazon\sp\api\Notifications;
use lujie\amazon\sp\api\OrdersV0;
use lujie\amazon\sp\api\ProductFeesV0;
use lujie\amazon\sp\api\ProductPricingV0;
use lujie\amazon\sp\api\ProductPricing20220501;
use lujie\amazon\sp\api\Replenishment20221107;
use lujie\amazon\sp\api\Reports20200904;
use lujie\amazon\sp\api\Reports20210630;
use lujie\amazon\sp\api\Sales;
use lujie\amazon\sp\api\Sellers;
use lujie\amazon\sp\api\Services;
use lujie\amazon\sp\api\ShipmentInvoicingV0;
use lujie\amazon\sp\api\Shipping;
use lujie\amazon\sp\api\Solicitations;
use lujie\amazon\sp\api\Tokens20210301;
use lujie\amazon\sp\api\Uploads20201101;
use lujie\amazon\sp\api\VendorDirectFulfillmentInventoryV1;
use lujie\amazon\sp\api\VendorDirectFulfillmentOrdersV1;
use lujie\amazon\sp\api\VendorDirectFulfillmentOrders20211228;
use lujie\amazon\sp\api\VendorDirectFulfillmentPaymentsV1;
use lujie\amazon\sp\api\VendorDirectFulfillmentSandboxData20211028;
use lujie\amazon\sp\api\VendorDirectFulfillmentShippingV1;
use lujie\amazon\sp\api\VendorDirectFulfillmentShipping20211228;
use lujie\amazon\sp\api\VendorDirectFulfillmentTransactionsV1;
use lujie\amazon\sp\api\VendorDirectFulfillmentTransactions20211228;
use lujie\amazon\sp\api\VendorInvoices;
use lujie\amazon\sp\api\VendorOrders;
use lujie\amazon\sp\api\VendorShipments;
use lujie\amazon\sp\api\VendorTransactionStatus;
use lujie\common\account\models\Account;
use yii\base\InvalidConfigException;

/**
 * This class is autogenerated by the OpenAPI gii generator
 */
class AmazonSPClientFactory extends BaseAmazonSPClientFactory
{

    /**
     * @param Account $account
     * @return AplusContent20201101|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getAplusContent20201101(Account $account): AplusContent20201101|BaseAmazonSPClient|null
    {
        return $this->createClient(AplusContent20201101::class, $account);
    }

    /**
     * @param Account $account
     * @return Authorization|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getAuthorization(Account $account): Authorization|BaseAmazonSPClient|null
    {
        return $this->createClient(Authorization::class, $account);
    }

    /**
     * @param Account $account
     * @return CatalogItemsV0|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getCatalogItemsV0(Account $account): CatalogItemsV0|BaseAmazonSPClient|null
    {
        return $this->createClient(CatalogItemsV0::class, $account);
    }

    /**
     * @param Account $account
     * @return CatalogItems20201201|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getCatalogItems20201201(Account $account): CatalogItems20201201|BaseAmazonSPClient|null
    {
        return $this->createClient(CatalogItems20201201::class, $account);
    }

    /**
     * @param Account $account
     * @return CatalogItems20220401|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getCatalogItems20220401(Account $account): CatalogItems20220401|BaseAmazonSPClient|null
    {
        return $this->createClient(CatalogItems20220401::class, $account);
    }

    /**
     * @param Account $account
     * @return DefinitionsProductTypes20200901|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getDefinitionsProductTypes20200901(Account $account): DefinitionsProductTypes20200901|BaseAmazonSPClient|null
    {
        return $this->createClient(DefinitionsProductTypes20200901::class, $account);
    }

    /**
     * @param Account $account
     * @return EasyShip20220323|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getEasyShip20220323(Account $account): EasyShip20220323|BaseAmazonSPClient|null
    {
        return $this->createClient(EasyShip20220323::class, $account);
    }

    /**
     * @param Account $account
     * @return ExternalFulfillmentInventory20210106|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getExternalFulfillmentInventory20210106(Account $account): ExternalFulfillmentInventory20210106|BaseAmazonSPClient|null
    {
        return $this->createClient(ExternalFulfillmentInventory20210106::class, $account);
    }

    /**
     * @param Account $account
     * @return ExternalFulfillmentShipment20210106|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getExternalFulfillmentShipment20210106(Account $account): ExternalFulfillmentShipment20210106|BaseAmazonSPClient|null
    {
        return $this->createClient(ExternalFulfillmentShipment20210106::class, $account);
    }

    /**
     * @param Account $account
     * @return FbaInbound|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getFbaInbound(Account $account): FbaInbound|BaseAmazonSPClient|null
    {
        return $this->createClient(FbaInbound::class, $account);
    }

    /**
     * @param Account $account
     * @return FbaInventory|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getFbaInventory(Account $account): FbaInventory|BaseAmazonSPClient|null
    {
        return $this->createClient(FbaInventory::class, $account);
    }

    /**
     * @param Account $account
     * @return FbaSmallandLight|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getFbaSmallandLight(Account $account): FbaSmallandLight|BaseAmazonSPClient|null
    {
        return $this->createClient(FbaSmallandLight::class, $account);
    }

    /**
     * @param Account $account
     * @return Feeds20200904|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getFeeds20200904(Account $account): Feeds20200904|BaseAmazonSPClient|null
    {
        return $this->createClient(Feeds20200904::class, $account);
    }

    /**
     * @param Account $account
     * @return Feeds20210630|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getFeeds20210630(Account $account): Feeds20210630|BaseAmazonSPClient|null
    {
        return $this->createClient(Feeds20210630::class, $account);
    }

    /**
     * @param Account $account
     * @return FinancesV0|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getFinancesV0(Account $account): FinancesV0|BaseAmazonSPClient|null
    {
        return $this->createClient(FinancesV0::class, $account);
    }

    /**
     * @param Account $account
     * @return FulfillmentInboundV0|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getFulfillmentInboundV0(Account $account): FulfillmentInboundV0|BaseAmazonSPClient|null
    {
        return $this->createClient(FulfillmentInboundV0::class, $account);
    }

    /**
     * @param Account $account
     * @return FulfillmentOutbound20200701|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getFulfillmentOutbound20200701(Account $account): FulfillmentOutbound20200701|BaseAmazonSPClient|null
    {
        return $this->createClient(FulfillmentOutbound20200701::class, $account);
    }

    /**
     * @param Account $account
     * @return ListingsItems20200901|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getListingsItems20200901(Account $account): ListingsItems20200901|BaseAmazonSPClient|null
    {
        return $this->createClient(ListingsItems20200901::class, $account);
    }

    /**
     * @param Account $account
     * @return ListingsItems20210801|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getListingsItems20210801(Account $account): ListingsItems20210801|BaseAmazonSPClient|null
    {
        return $this->createClient(ListingsItems20210801::class, $account);
    }

    /**
     * @param Account $account
     * @return ListingsRestrictions20210801|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getListingsRestrictions20210801(Account $account): ListingsRestrictions20210801|BaseAmazonSPClient|null
    {
        return $this->createClient(ListingsRestrictions20210801::class, $account);
    }

    /**
     * @param Account $account
     * @return MerchantFulfillmentV0|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getMerchantFulfillmentV0(Account $account): MerchantFulfillmentV0|BaseAmazonSPClient|null
    {
        return $this->createClient(MerchantFulfillmentV0::class, $account);
    }

    /**
     * @param Account $account
     * @return Messaging|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getMessaging(Account $account): Messaging|BaseAmazonSPClient|null
    {
        return $this->createClient(Messaging::class, $account);
    }

    /**
     * @param Account $account
     * @return Notifications|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getNotifications(Account $account): Notifications|BaseAmazonSPClient|null
    {
        return $this->createClient(Notifications::class, $account);
    }

    /**
     * @param Account $account
     * @return OrdersV0|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getOrdersV0(Account $account): OrdersV0|BaseAmazonSPClient|null
    {
        return $this->createClient(OrdersV0::class, $account);
    }

    /**
     * @param Account $account
     * @return ProductFeesV0|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getProductFeesV0(Account $account): ProductFeesV0|BaseAmazonSPClient|null
    {
        return $this->createClient(ProductFeesV0::class, $account);
    }

    /**
     * @param Account $account
     * @return ProductPricingV0|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getProductPricingV0(Account $account): ProductPricingV0|BaseAmazonSPClient|null
    {
        return $this->createClient(ProductPricingV0::class, $account);
    }

    /**
     * @param Account $account
     * @return ProductPricing20220501|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getProductPricing20220501(Account $account): ProductPricing20220501|BaseAmazonSPClient|null
    {
        return $this->createClient(ProductPricing20220501::class, $account);
    }

    /**
     * @param Account $account
     * @return Replenishment20221107|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getReplenishment20221107(Account $account): Replenishment20221107|BaseAmazonSPClient|null
    {
        return $this->createClient(Replenishment20221107::class, $account);
    }

    /**
     * @param Account $account
     * @return Reports20200904|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getReports20200904(Account $account): Reports20200904|BaseAmazonSPClient|null
    {
        return $this->createClient(Reports20200904::class, $account);
    }

    /**
     * @param Account $account
     * @return Reports20210630|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getReports20210630(Account $account): Reports20210630|BaseAmazonSPClient|null
    {
        return $this->createClient(Reports20210630::class, $account);
    }

    /**
     * @param Account $account
     * @return Sales|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getSales(Account $account): Sales|BaseAmazonSPClient|null
    {
        return $this->createClient(Sales::class, $account);
    }

    /**
     * @param Account $account
     * @return Sellers|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getSellers(Account $account): Sellers|BaseAmazonSPClient|null
    {
        return $this->createClient(Sellers::class, $account);
    }

    /**
     * @param Account $account
     * @return Services|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getServices(Account $account): Services|BaseAmazonSPClient|null
    {
        return $this->createClient(Services::class, $account);
    }

    /**
     * @param Account $account
     * @return ShipmentInvoicingV0|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getShipmentInvoicingV0(Account $account): ShipmentInvoicingV0|BaseAmazonSPClient|null
    {
        return $this->createClient(ShipmentInvoicingV0::class, $account);
    }

    /**
     * @param Account $account
     * @return Shipping|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getShipping(Account $account): Shipping|BaseAmazonSPClient|null
    {
        return $this->createClient(Shipping::class, $account);
    }

    /**
     * @param Account $account
     * @return Solicitations|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getSolicitations(Account $account): Solicitations|BaseAmazonSPClient|null
    {
        return $this->createClient(Solicitations::class, $account);
    }

    /**
     * @param Account $account
     * @return Tokens20210301|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getTokens20210301(Account $account): Tokens20210301|BaseAmazonSPClient|null
    {
        return $this->createClient(Tokens20210301::class, $account);
    }

    /**
     * @param Account $account
     * @return Uploads20201101|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getUploads20201101(Account $account): Uploads20201101|BaseAmazonSPClient|null
    {
        return $this->createClient(Uploads20201101::class, $account);
    }

    /**
     * @param Account $account
     * @return VendorDirectFulfillmentInventoryV1|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getVendorDirectFulfillmentInventoryV1(Account $account): VendorDirectFulfillmentInventoryV1|BaseAmazonSPClient|null
    {
        return $this->createClient(VendorDirectFulfillmentInventoryV1::class, $account);
    }

    /**
     * @param Account $account
     * @return VendorDirectFulfillmentOrdersV1|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getVendorDirectFulfillmentOrdersV1(Account $account): VendorDirectFulfillmentOrdersV1|BaseAmazonSPClient|null
    {
        return $this->createClient(VendorDirectFulfillmentOrdersV1::class, $account);
    }

    /**
     * @param Account $account
     * @return VendorDirectFulfillmentOrders20211228|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getVendorDirectFulfillmentOrders20211228(Account $account): VendorDirectFulfillmentOrders20211228|BaseAmazonSPClient|null
    {
        return $this->createClient(VendorDirectFulfillmentOrders20211228::class, $account);
    }

    /**
     * @param Account $account
     * @return VendorDirectFulfillmentPaymentsV1|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getVendorDirectFulfillmentPaymentsV1(Account $account): VendorDirectFulfillmentPaymentsV1|BaseAmazonSPClient|null
    {
        return $this->createClient(VendorDirectFulfillmentPaymentsV1::class, $account);
    }

    /**
     * @param Account $account
     * @return VendorDirectFulfillmentSandboxData20211028|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getVendorDirectFulfillmentSandboxData20211028(Account $account): VendorDirectFulfillmentSandboxData20211028|BaseAmazonSPClient|null
    {
        return $this->createClient(VendorDirectFulfillmentSandboxData20211028::class, $account);
    }

    /**
     * @param Account $account
     * @return VendorDirectFulfillmentShippingV1|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getVendorDirectFulfillmentShippingV1(Account $account): VendorDirectFulfillmentShippingV1|BaseAmazonSPClient|null
    {
        return $this->createClient(VendorDirectFulfillmentShippingV1::class, $account);
    }

    /**
     * @param Account $account
     * @return VendorDirectFulfillmentShipping20211228|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getVendorDirectFulfillmentShipping20211228(Account $account): VendorDirectFulfillmentShipping20211228|BaseAmazonSPClient|null
    {
        return $this->createClient(VendorDirectFulfillmentShipping20211228::class, $account);
    }

    /**
     * @param Account $account
     * @return VendorDirectFulfillmentTransactionsV1|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getVendorDirectFulfillmentTransactionsV1(Account $account): VendorDirectFulfillmentTransactionsV1|BaseAmazonSPClient|null
    {
        return $this->createClient(VendorDirectFulfillmentTransactionsV1::class, $account);
    }

    /**
     * @param Account $account
     * @return VendorDirectFulfillmentTransactions20211228|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getVendorDirectFulfillmentTransactions20211228(Account $account): VendorDirectFulfillmentTransactions20211228|BaseAmazonSPClient|null
    {
        return $this->createClient(VendorDirectFulfillmentTransactions20211228::class, $account);
    }

    /**
     * @param Account $account
     * @return VendorInvoices|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getVendorInvoices(Account $account): VendorInvoices|BaseAmazonSPClient|null
    {
        return $this->createClient(VendorInvoices::class, $account);
    }

    /**
     * @param Account $account
     * @return VendorOrders|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getVendorOrders(Account $account): VendorOrders|BaseAmazonSPClient|null
    {
        return $this->createClient(VendorOrders::class, $account);
    }

    /**
     * @param Account $account
     * @return VendorShipments|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getVendorShipments(Account $account): VendorShipments|BaseAmazonSPClient|null
    {
        return $this->createClient(VendorShipments::class, $account);
    }

    /**
     * @param Account $account
     * @return VendorTransactionStatus|BaseAmazonSPClient|null
     * @throws InvalidConfigException
     */
    public function getVendorTransactionStatus(Account $account): VendorTransactionStatus|BaseAmazonSPClient|null
    {
        return $this->createClient(VendorTransactionStatus::class, $account);
    }

}
