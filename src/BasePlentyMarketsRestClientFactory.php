<?php

namespace lujie\plentyMarkets;

use DoubleBreak\Spapi\Credentials;
use DoubleBreak\Spapi\Signer;
use lujie\amazon\sp\BaseAmazonSPClient;
use lujie\amazon\sp\StateTokenStorage;
use lujie\common\account\models\Account;
use lujie\common\oauth\models\AuthToken;
use lujie\data\loader\DataLoaderInterface;
use lujie\extend\psr\http\Yii2HttpHandler;
use Yii;
use yii\authclient\CacheStateStorage;
use yii\authclient\StateStorageInterface;
use yii\base\BaseObject;
use yii\di\Instance;
use yii\helpers\Inflector;
use yii\helpers\StringHelper;

/**
* This class is autogenerated by the OpenAPI gii generator
*/
class BasePlentyMarketsRestClientFactory extends BaseObject
{
    public $username;
    public $password;

    /**
     * @var array
     */
    private static $_clients = [];

    /**
     * @return array
     */
    protected function getConfig(): array
    {
        return [
            'username' => $this->username,
            'password' => $this->password,
        ];
    }

    /**
     * @param string $clientClass
     * @return BasePlentyMarketsRestClient
     * @inheritdoc
     */
    protected function createClient(string $clientClass): BasePlentyMarketsRestClient
    {
        $key = $clientClass;
        if (empty(self::$_clients[$key])) {
            /** @var BasePlentyMarketsRestClient $client */
            $client = new $clientClass([
                'username' => $this->username,
                'password' => $this->password,
            ]);
            self::$_clients[$key] = $client;
        }
        return self::$_clients[$key];
    }
}
