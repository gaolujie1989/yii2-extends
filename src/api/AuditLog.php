<?php

namespace lujie\plentyMarkets\api;

use Yii;
use Iterator;

/**
* This class is autogenerated by the OpenAPI gii generator
* @description The plentymarkets REST API expands the functionality of the plentymarkets CMS and allows access to resources, i.e. data records, via unique URI paths
*/
class AuditLog extends \lujie\plentyMarkets\BasePlentyMarketsRestClient
{

                
    /**
     * @description Get a list of all available audit log entities grouped by a group name
     * @tag AuditLog
     * @return array
     *      - *page* - integer
     *          - Current page of the response
     *      - *totalsCount* - integer
     *          - The total number of entries in the response
     *      - *isLastPage* - boolean
     *          - Flag that indicates if the page shown is the last page of the response
     *      - *lastPageNumber* - integer
     *          - The last page number
     *      - *firstOnPage* - integer
     *          - The index of the first item of the current page result
     *      - *lastOnPage* - integer
     *          - The index of the last item of the current page result
     *      - *itemsPerPage* - integer
     *          - The requested amount of items per result page
     *      - *entries* - array
     *          - List of Archive
     */
    public function getAuditLogArchive(): array
    {
        return $this->api("/rest/audit-log/archive");
    }
                    
    /**
     * @description Restore an audit log archive and make it downloadable for approximately 2 days
     * @tag AuditLog
     * @param int $key 
     */
    public function createAuditLogArchiveOreByKey(int $key)
    {
        return $this->api("/rest/audit-log/archive/{$key}/restore", 'POST');
    }
                    
    /**
     * @description Get the download url for an restored audit log archive
     * @tag AuditLog
     * @param int $key 
     */
    public function getAuditLogArchiveSignedUrlByKey(int $key)
    {
        return $this->api("/rest/audit-log/archive/{$key}/signed-url");
    }
                    
    /**
     * @description Get a list of all available audit log entities grouped by a group name
     * @tag AuditLog
     * @return array
     */
    public function getAuditLogEntities(): array
    {
        return $this->api("/rest/audit-log/entities");
    }
                    
    /**
     * @description Get a list of all available audit log entities grouped by a group name
     * @tag AuditLog
     * @return array
     */
    public function getAuditLogFiles(): array
    {
        return $this->api("/rest/audit-log/files");
    }
                    
    /**
     * @description Get the download url for an restored audit log file
     * @tag AuditLog
     * @param int $key 
     */
    public function getAuditLogFilesSignedUrlByKey(int $key)
    {
        return $this->api("/rest/audit-log/files/{$key}/signed-url");
    }
                    
    /**
     * @description Get the current audit log configuration. The system configuration contains the information which entities should be logged and which not.
     * @tag AuditLog
     * @return array
     *      - *archiveActive* - boolean
     *          - Is the Archive activated
     */
    public function getAuditLogSystemConfig(): array
    {
        return $this->api("/rest/audit-log/system-config");
    }
                
    /**
     * @description Update the audit log system configuration. The system configuration contains the information which entities should be logged and which not.
     * @tag AuditLog
     * @return array
     *      - *archiveActive* - boolean
     *          - Is the Archive activated
     */
    public function createAuditLogSystemConfig(): array
    {
        return $this->api("/rest/audit-log/system-config", 'POST');
    }
    
}
