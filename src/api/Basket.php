<?php

namespace lujie\plentyMarkets\api;

use Yii;
use Iterator;

/**
* This class is autogenerated by the OpenAPI gii generator
* @description The plentymarkets REST API expands the functionality of the plentymarkets CMS and allows access to resources, i.e. data records, via unique URI paths
*/
class Basket extends \lujie\plentyMarkets\BasePlentyMarketsRestClient
{

                
    /**
     * @description Gets the shopping cart for the current customer session.
     * @tag Basket
     * @return array
     *      - *id* - integer
     *          - The ID of the shopping cart. The ID increases by 1 when a new customer enters the online store and adds an item to the shopping cart.
     *      - *sessionId* - string
     *          - The ID of the current customer session
     *      - *orderId* - integer
     *          - The ID of the order
     *      - *customerId* - integer
     *          - The ID of the customer
     *      - *customerInvoiceAddressId* - integer
     *          - The ID of the customer's invoice address
     *      - *customerShippingAddressId* - integer
     *          - The ID of the customer's shipping address
     *      - *currency* - string
     *          - The currency
     *      - *referrerId* - number
     *          - The ID of the order referrer
     *      - *shippingCountryId* - integer
     *          - The ID of the shipping country
     *      - *methodOfPaymentId* - integer
     *          - The ID of the payment method
     *      - *shippingProviderId* - integer
     *          - The ID of the shipping provider
     *      - *shippingProfileId* - integer
     *          - The ID of the shipping profile
     *      - *itemSum* - number
     *          - The gross value of items in the shopping cart
     *      - *itemSumNet* - number
     *          - The net value of items in the shopping cart
     *      - *basketAmount* - number
     *          - The total gross value of the shopping cart
     *      - *basketAmountNet* - number
     *          - The total net value of the shopping cart
     *      - *shippingAmount* - number
     *          - The gross shipping costs
     *      - *shippingAmountNet* - number
     *          - The net shipping costs
     *      - *paymentAmount* - number
     *          - The amount of the payment
     *      - *couponCode* - string
     *          - The entered coupon code
     *      - *couponDiscount* - number
     *          - The received discount due to the coupon code
     *      - *shippingDeleteByCoupon* - boolean
     *          - Shows whether the shipping costs are subtracted due to a coupon code. Shopping carts that are free of shipping costs have the value true.
     *      - *basketRebate* - number
     *          - The discount to the shopping cart value. The discount can either be set as a discount scale for items, as a customer class discount or as a discount based on the payment method.
     *      - *basketRebateType* - integer
     *          - The discount type. The following types are available:
<ul>
    <li>Discount scale based on net value of items = 4</li>
    <li>    Discount based on method of payment = 5</li>
</ul>
     *      - *maxFsk* - integer
     *          - The age rating
     *      - *orderTimestamp* - integer
     *          - The timestamp of the order
     *      - *createdAt* - string
     *          - The date that the shopping cart was created.
     *      - *updatedAt* - string
     *          - The date that the shopping cart was updated last.
     */
    public function getBasket(): array
    {
        return $this->api("/rest/basket");
    }
                    
    /**
     * @description Lists all items in the shopping cart for the current customer session.
     * @tag Basket
     * @return array
     */
    public function getBasketItems(): array
    {
        return $this->api("/rest/basket/items");
    }
                
    /**
     * @description Adds a new item to the shopping cart using the request parameters.
     * @tag Basket
     * @param array $data 
     * @return array
     *      - *id* - integer
     *          - The ID of the item in the shopping cart
     *      - *basketId* - integer
     *          - The ID of the shopping cart. The ID increases by 1 when a new customer enters the online store and adds an item to the shopping cart.
     *      - *sessionId* - string
     *          - The ID of the current customer session
     *      - *orderRowId* - integer
     *      - *quantity* - number
     *          - The current quantity of the item
     *      - *quantityOriginally* - number
     *          - The initial quantity of the item
     *      - *itemId* - integer
     *          - The ID of the item
     *      - *priceId* - integer
     *          - The ID of the item price
     *      - *attributeValueSetId* - integer
     *          - The ID of the attribute value set
     *      - *rebate* - integer
     *          - The discount on the item
     *      - *vat* - number
     *          - The VAT
     *      - *price* - number
     *          - The item price
     *      - *givenPrice* - number
     *          - The given item price
     *      - *givenVatId* - integer
     *          - The given vat id.
     *      - *useGivenPrice* - boolean
     *          - The flag to use the given values
     *      - *inputWidth* - integer
     *          - The width of the item
     *      - *inputLength* - integer
     *          - The length of the item
     *      - *inputHeight* - integer
     *          - The height of the item
     *      - *itemType* - integer
     *          - The item type
     *      - *externalItemId* - string
     *          - The external variation ID
     *      - *noEditByCustomer* - boolean
     *          - Shows whether the item was edited by the customer
     *      - *costCenterId* - integer
     *      - *giftPackageForRowId* - integer
     *      - *position* - integer
     *          - The item position
     *      - *size* - string
     *          - The item size
     *      - *shippingProfileId* - integer
     *          - The ID of the shipping profile
     *      - *referrerId* - number
     *          - The ID of the order referrer
     *      - *deliveryDate* - string
     *          - The delivery date
     *      - *categoryId* - integer
     *          - The ID of the item category
     *      - *reservationDatetime* - integer
     *      - *variationId* - integer
     *          - The ID of the item variation
     *      - *bundleVariationId* - integer
     *          - The ID of the item bundle type
     *      - *createdAt* - string
     *          - The date that the shopping cart was created
     *      - *updatedAt* - string
     *          - The date that the shopping cart was updated last
     *      - *attributeTotalMarkup* - number
     *          - attribute total markup
     *      - *basketItemOrderParams* - array
     *          - Array of BasketItemParams
     *      - *basketItemVariationProperties* - array
     *          - Array of BasketItemVariationProperties
     */
    public function createBasketItem(array $data): array
    {
        return $this->api("/rest/basket/items", 'POST', $data);
    }
                    
    /**
     * @description Retrieve an item that is currently in the basket by it's ID
     * @tag Basket
     * @param int $id 
     * @return array
     *      - *id* - integer
     *          - The ID of the item in the shopping cart
     *      - *basketId* - integer
     *          - The ID of the shopping cart. The ID increases by 1 when a new customer enters the online store and adds an item to the shopping cart.
     *      - *sessionId* - string
     *          - The ID of the current customer session
     *      - *orderRowId* - integer
     *      - *quantity* - number
     *          - The current quantity of the item
     *      - *quantityOriginally* - number
     *          - The initial quantity of the item
     *      - *itemId* - integer
     *          - The ID of the item
     *      - *priceId* - integer
     *          - The ID of the item price
     *      - *attributeValueSetId* - integer
     *          - The ID of the attribute value set
     *      - *rebate* - integer
     *          - The discount on the item
     *      - *vat* - number
     *          - The VAT
     *      - *price* - number
     *          - The item price
     *      - *givenPrice* - number
     *          - The given item price
     *      - *givenVatId* - integer
     *          - The given vat id.
     *      - *useGivenPrice* - boolean
     *          - The flag to use the given values
     *      - *inputWidth* - integer
     *          - The width of the item
     *      - *inputLength* - integer
     *          - The length of the item
     *      - *inputHeight* - integer
     *          - The height of the item
     *      - *itemType* - integer
     *          - The item type
     *      - *externalItemId* - string
     *          - The external variation ID
     *      - *noEditByCustomer* - boolean
     *          - Shows whether the item was edited by the customer
     *      - *costCenterId* - integer
     *      - *giftPackageForRowId* - integer
     *      - *position* - integer
     *          - The item position
     *      - *size* - string
     *          - The item size
     *      - *shippingProfileId* - integer
     *          - The ID of the shipping profile
     *      - *referrerId* - number
     *          - The ID of the order referrer
     *      - *deliveryDate* - string
     *          - The delivery date
     *      - *categoryId* - integer
     *          - The ID of the item category
     *      - *reservationDatetime* - integer
     *      - *variationId* - integer
     *          - The ID of the item variation
     *      - *bundleVariationId* - integer
     *          - The ID of the item bundle type
     *      - *createdAt* - string
     *          - The date that the shopping cart was created
     *      - *updatedAt* - string
     *          - The date that the shopping cart was updated last
     *      - *attributeTotalMarkup* - number
     *          - attribute total markup
     *      - *basketItemOrderParams* - array
     *          - Array of BasketItemParams
     *      - *basketItemVariationProperties* - array
     *          - Array of BasketItemVariationProperties
     */
    public function getBasketItemById(int $id): array
    {
        return $this->api("/rest/basket/items/{$id}");
    }
    
}
