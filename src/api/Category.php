<?php

namespace lujie\plentyMarkets\api;

use Yii;
use Iterator;

/**
* This class is autogenerated by the OpenAPI gii generator
* @description The plentymarkets REST API expands the functionality of the plentymarkets CMS and allows access to resources, i.e. data records, via unique URI paths
*/
class Category extends \lujie\plentyMarkets\BasePlentyMarketsRestClient
{

            
    /**
     * @description Search for categories.
     * @tag Category
     * @param array $query
     *      - *page* - int - optional
     *          - The requested page of results
     *      - *itemsPerPage* - int - optional
     *          - The number of results per page
     *      - *with* - string - optional
     *          - Includes the detail information, the active clients (stores) list of the category, all linked tags and their information and/or the linked Elmar category for each client. Available values: details, clients, elmarCategories, tags 
     *      - *lang* - string - optional
     *          - The <a href='https://developers.plentymarkets.com/rest-doc/introduction#countries' target='_blank'>languages</a> of the category detail information. Several languages must be separated by commas. If no language filter is set, the default language of the system is used.
     *      - *type* - string - optional
     *          - The category type. Available values: item, container, content, blog 
     *      - *parentId* - int - optional
     *          - The unique ID of the parent category
     *      - *plentyId* - int - optional
     *          - The unique plenty ID of the client (store)
     *      - *name* - string - optional
     *          - The name of the category
     *      - *level* - string - optional
     *          - The level of the category
     *      - *linklist* - boolean - optional
     *          - Filter for the linklist of categories
     *      - *updatedAt* - string - optional
     *          - Filter restricts the list of results to items updated after the specified date. The date can be specified as unix timestamps or in the ISO 8601 date format. The PHP function strtotime is also supported.
     *      - *tagId* - int - optional
     *          - Filter restricts the list of results to items with a specific tag
     *      - *metaKeywords* - string - optional
     *          - Filter restricts the list of results to items with a specific meta keyword. Possible search operators are 'like' and 'eq'.
     * @return Iterator
     *      - *page* - integer
     *          - Current page of the response
     *      - *totalsCount* - integer
     *          - The total number of entries in the response
     *      - *isLastPage* - boolean
     *          - Flag that indicates if the page shown is the last page of the response
     *      - *lastPageNumber* - integer
     *          - The last page number
     *      - *firstOnPage* - integer
     *          - The index of the first item of the current page result
     *      - *lastOnPage* - integer
     *          - The index of the last item of the current page result
     *      - *itemsPerPage* - integer
     *          - The requested amount of items per result page
     *      - *entries* - array
     *          - List of Category
     */
    public function eachCategories(array $query = []): Iterator
    {
        return $this->eachInternal('getCategories', func_get_args());
    }
        
    /**
     * @description Search for categories.
     * @tag Category
     * @param array $query
     *      - *page* - int - optional
     *          - The requested page of results
     *      - *itemsPerPage* - int - optional
     *          - The number of results per page
     *      - *with* - string - optional
     *          - Includes the detail information, the active clients (stores) list of the category, all linked tags and their information and/or the linked Elmar category for each client. Available values: details, clients, elmarCategories, tags 
     *      - *lang* - string - optional
     *          - The <a href='https://developers.plentymarkets.com/rest-doc/introduction#countries' target='_blank'>languages</a> of the category detail information. Several languages must be separated by commas. If no language filter is set, the default language of the system is used.
     *      - *type* - string - optional
     *          - The category type. Available values: item, container, content, blog 
     *      - *parentId* - int - optional
     *          - The unique ID of the parent category
     *      - *plentyId* - int - optional
     *          - The unique plenty ID of the client (store)
     *      - *name* - string - optional
     *          - The name of the category
     *      - *level* - string - optional
     *          - The level of the category
     *      - *linklist* - boolean - optional
     *          - Filter for the linklist of categories
     *      - *updatedAt* - string - optional
     *          - Filter restricts the list of results to items updated after the specified date. The date can be specified as unix timestamps or in the ISO 8601 date format. The PHP function strtotime is also supported.
     *      - *tagId* - int - optional
     *          - Filter restricts the list of results to items with a specific tag
     *      - *metaKeywords* - string - optional
     *          - Filter restricts the list of results to items with a specific meta keyword. Possible search operators are 'like' and 'eq'.
     * @return Iterator
     *      - *page* - integer
     *          - Current page of the response
     *      - *totalsCount* - integer
     *          - The total number of entries in the response
     *      - *isLastPage* - boolean
     *          - Flag that indicates if the page shown is the last page of the response
     *      - *lastPageNumber* - integer
     *          - The last page number
     *      - *firstOnPage* - integer
     *          - The index of the first item of the current page result
     *      - *lastOnPage* - integer
     *          - The index of the last item of the current page result
     *      - *itemsPerPage* - integer
     *          - The requested amount of items per result page
     *      - *entries* - array
     *          - List of Category
     */
    public function batchCategories(array $query = []): Iterator
    {
        return $this->batchInternal('getCategories', func_get_args());
    }
    
    /**
     * @description Search for categories.
     * @tag Category
     * @param array $query
     *      - *page* - int - optional
     *          - The requested page of results
     *      - *itemsPerPage* - int - optional
     *          - The number of results per page
     *      - *with* - string - optional
     *          - Includes the detail information, the active clients (stores) list of the category, all linked tags and their information and/or the linked Elmar category for each client. Available values: details, clients, elmarCategories, tags 
     *      - *lang* - string - optional
     *          - The <a href='https://developers.plentymarkets.com/rest-doc/introduction#countries' target='_blank'>languages</a> of the category detail information. Several languages must be separated by commas. If no language filter is set, the default language of the system is used.
     *      - *type* - string - optional
     *          - The category type. Available values: item, container, content, blog 
     *      - *parentId* - int - optional
     *          - The unique ID of the parent category
     *      - *plentyId* - int - optional
     *          - The unique plenty ID of the client (store)
     *      - *name* - string - optional
     *          - The name of the category
     *      - *level* - string - optional
     *          - The level of the category
     *      - *linklist* - boolean - optional
     *          - Filter for the linklist of categories
     *      - *updatedAt* - string - optional
     *          - Filter restricts the list of results to items updated after the specified date. The date can be specified as unix timestamps or in the ISO 8601 date format. The PHP function strtotime is also supported.
     *      - *tagId* - int - optional
     *          - Filter restricts the list of results to items with a specific tag
     *      - *metaKeywords* - string - optional
     *          - Filter restricts the list of results to items with a specific meta keyword. Possible search operators are 'like' and 'eq'.
     * @return array
     *      - *page* - integer
     *          - Current page of the response
     *      - *totalsCount* - integer
     *          - The total number of entries in the response
     *      - *isLastPage* - boolean
     *          - Flag that indicates if the page shown is the last page of the response
     *      - *lastPageNumber* - integer
     *          - The last page number
     *      - *firstOnPage* - integer
     *          - The index of the first item of the current page result
     *      - *lastOnPage* - integer
     *          - The index of the last item of the current page result
     *      - *itemsPerPage* - integer
     *          - The requested amount of items per result page
     *      - *entries* - array
     *          - List of Category
     */
    public function getCategories(array $query = []): array
    {
        return $this->api(array_merge(["/rest/categories"], $query));
    }
                
    /**
     * @description Creates new categories.
     * @tag Category
     * @param array $data 
     * @return array
     */
    public function createCategory(array $data): array
    {
        return $this->api("/rest/categories", 'POST', $data);
    }
                
    /**
     * @description Updates existing categories.
     * @tag Category
     * @param array $data 
     * @return array
     */
    public function updateCategory(array $data): array
    {
        return $this->api("/rest/categories", 'PUT', $data);
    }
                    
    /**
     * @description Deletes a category. The ID of the category must be specified.
     * @tag Category
     * @param int $id 
     */
    public function deleteCategoryById(int $id)
    {
        return $this->api("/rest/categories/{$id}", 'DELETE');
    }
            
    /**
     * @description Gets a category specified by categoryId.
     * @tag Category
     * @param int $id The ID of the category
     * @param array $query
     *      - *page* - int - optional
     *          - The requested page of results
     *      - *itemsPerPage* - int - optional
     *          - The number of results per page
     *      - *with* - string - optional
     *          - Includes the detail information, the active clients (stores) list of the category and/or the linked Elmar category for each client. Available values: details, clients, elmarCategories 
     *      - *lang* - string - optional
     *          - The <a href='https://developers.plentymarkets.com/rest-doc/introduction#countries' target='_blank'>languages</a> of the category detail information. Several languages must be separated by commas. If no language filter is set, the default language of the system is used.
     *      - *type* - string - optional
     *          - The category type. Available values: item, container, content, blog 
     *      - *parentId* - int - optional
     *          - The unique ID of the parent category
     *      - *plentyId* - int - optional
     *          - The unique plenty ID of the client (store)
     *      - *name* - string - optional
     *          - The name of the category
     *      - *level* - string - optional
     *          - The level of the category
     *      - *linklist* - boolean - optional
     *          - Filter for the linklist of categories
     *      - *updatedAt* - string - optional
     *          - Filter restricts the list of results to items updated after the specified date. The date can be specified as unix timestamps or in the ISO 8601 date format. The PHP function strtotime is also supported.
     * @return Iterator
     *      - *page* - integer
     *          - Current page of the response
     *      - *totalsCount* - integer
     *          - The total number of entries in the response
     *      - *isLastPage* - boolean
     *          - Flag that indicates if the page shown is the last page of the response
     *      - *lastPageNumber* - integer
     *          - The last page number
     *      - *firstOnPage* - integer
     *          - The index of the first item of the current page result
     *      - *lastOnPage* - integer
     *          - The index of the last item of the current page result
     *      - *itemsPerPage* - integer
     *          - The requested amount of items per result page
     *      - *entries* - array
     *          - List of Category
     */
    public function eachCategoryById(int $id, array $query = []): Iterator
    {
        return $this->eachInternal('getCategoryById', func_get_args());
    }
        
    /**
     * @description Gets a category specified by categoryId.
     * @tag Category
     * @param int $id The ID of the category
     * @param array $query
     *      - *page* - int - optional
     *          - The requested page of results
     *      - *itemsPerPage* - int - optional
     *          - The number of results per page
     *      - *with* - string - optional
     *          - Includes the detail information, the active clients (stores) list of the category and/or the linked Elmar category for each client. Available values: details, clients, elmarCategories 
     *      - *lang* - string - optional
     *          - The <a href='https://developers.plentymarkets.com/rest-doc/introduction#countries' target='_blank'>languages</a> of the category detail information. Several languages must be separated by commas. If no language filter is set, the default language of the system is used.
     *      - *type* - string - optional
     *          - The category type. Available values: item, container, content, blog 
     *      - *parentId* - int - optional
     *          - The unique ID of the parent category
     *      - *plentyId* - int - optional
     *          - The unique plenty ID of the client (store)
     *      - *name* - string - optional
     *          - The name of the category
     *      - *level* - string - optional
     *          - The level of the category
     *      - *linklist* - boolean - optional
     *          - Filter for the linklist of categories
     *      - *updatedAt* - string - optional
     *          - Filter restricts the list of results to items updated after the specified date. The date can be specified as unix timestamps or in the ISO 8601 date format. The PHP function strtotime is also supported.
     * @return Iterator
     *      - *page* - integer
     *          - Current page of the response
     *      - *totalsCount* - integer
     *          - The total number of entries in the response
     *      - *isLastPage* - boolean
     *          - Flag that indicates if the page shown is the last page of the response
     *      - *lastPageNumber* - integer
     *          - The last page number
     *      - *firstOnPage* - integer
     *          - The index of the first item of the current page result
     *      - *lastOnPage* - integer
     *          - The index of the last item of the current page result
     *      - *itemsPerPage* - integer
     *          - The requested amount of items per result page
     *      - *entries* - array
     *          - List of Category
     */
    public function batchCategoryById(int $id, array $query = []): Iterator
    {
        return $this->batchInternal('getCategoryById', func_get_args());
    }
    
    /**
     * @description Gets a category specified by categoryId.
     * @tag Category
     * @param int $id The ID of the category
     * @param array $query
     *      - *page* - int - optional
     *          - The requested page of results
     *      - *itemsPerPage* - int - optional
     *          - The number of results per page
     *      - *with* - string - optional
     *          - Includes the detail information, the active clients (stores) list of the category and/or the linked Elmar category for each client. Available values: details, clients, elmarCategories 
     *      - *lang* - string - optional
     *          - The <a href='https://developers.plentymarkets.com/rest-doc/introduction#countries' target='_blank'>languages</a> of the category detail information. Several languages must be separated by commas. If no language filter is set, the default language of the system is used.
     *      - *type* - string - optional
     *          - The category type. Available values: item, container, content, blog 
     *      - *parentId* - int - optional
     *          - The unique ID of the parent category
     *      - *plentyId* - int - optional
     *          - The unique plenty ID of the client (store)
     *      - *name* - string - optional
     *          - The name of the category
     *      - *level* - string - optional
     *          - The level of the category
     *      - *linklist* - boolean - optional
     *          - Filter for the linklist of categories
     *      - *updatedAt* - string - optional
     *          - Filter restricts the list of results to items updated after the specified date. The date can be specified as unix timestamps or in the ISO 8601 date format. The PHP function strtotime is also supported.
     * @return array
     *      - *page* - integer
     *          - Current page of the response
     *      - *totalsCount* - integer
     *          - The total number of entries in the response
     *      - *isLastPage* - boolean
     *          - Flag that indicates if the page shown is the last page of the response
     *      - *lastPageNumber* - integer
     *          - The last page number
     *      - *firstOnPage* - integer
     *          - The index of the first item of the current page result
     *      - *lastOnPage* - integer
     *          - The index of the last item of the current page result
     *      - *itemsPerPage* - integer
     *          - The requested amount of items per result page
     *      - *entries* - array
     *          - List of Category
     */
    public function getCategoryById(int $id, array $query = []): array
    {
        return $this->api(array_merge(["/rest/categories/{$id}"], $query));
    }
                
    /**
     * @description Updates an existing category. The ID of the category must be specified.
     * @tag Category
     * @param int $id 
     * @param array $data 
     */
    public function updateCategoryById(int $id, array $data)
    {
        return $this->api("/rest/categories/{$id}", 'PUT', $data);
    }
                    
    /**
     * @description Deactivate availability for clients
     * @tag Category
     * @param int $id 
     */
    public function deleteCategoriesClientById(int $id)
    {
        return $this->api("/rest/categories/{$id}/clients", 'DELETE');
    }
                    
    /**
     * @description Delete category details for the specified languages
     * @tag Category
     * @param int $id 
     * @param array $data 
     */
    public function deleteCategoriesDetailById(int $id, array $data)
    {
        return $this->api("/rest/categories/{$id}/details", 'DELETE', $data);
    }
                    
    /**
     * @description Deletes a category template. The ID of the category, the plenty ID of the client (store) and the language must be specified.
     * @tag Category
     * @param int $id 
     * @param array $data 
     * @return array
     *      - *categoryId* - integer
     *          - The unique ID of the category
     *      - *plentyId* - integer
     *          - The unique plenty ID of the client (store)
     *      - *lang* - string
     *          - The language of the template
     *      - *content* - string
     *          - The content of the template
     */
    public function deleteCategoriesTemplateById(int $id, array $data): array
    {
        return $this->api("/rest/categories/{$id}/templates", 'DELETE', $data);
    }
                
    /**
     * @description Gets a category template. The ID of the category, the plenty ID of the client (store) and the language must be specified.
     * @tag Category
     * @param int $id 
     * @param array $data 
     * @param array $query
     *      - *lang* - string - optional
     *          - The <a href='https://developers.plentymarkets.com/rest-doc/introduction#countries' target='_blank'>language</a> of the template. If no language filter is set, the default language of the system is used.
     *      - *plentyId* - int - required
     *          - The unique plenty ID of the client (store)
     * @return array
     *      - *categoryId* - integer
     *          - The unique ID of the category
     *      - *plentyId* - integer
     *          - The unique plenty ID of the client (store)
     *      - *lang* - string
     *          - The language of the template
     *      - *content* - string
     *          - The content of the template
     */
    public function getCategoriesTemplatesById(int $id, array $data, array $query): array
    {
        return $this->api(array_merge(["/rest/categories/{$id}/templates"], $query), 'GET', $data);
    }
                
    /**
     * @description Updates a category template. The ID of the category, the plenty ID of the client (store) and the language must be specified.
     * @tag Category
     * @param int $id 
     * @param array $data 
     * @return array
     *      - *categoryId* - integer
     *          - The unique ID of the category
     *      - *plentyId* - integer
     *          - The unique plenty ID of the client (store)
     *      - *lang* - string
     *          - The language of the template
     *      - *content* - string
     *          - The content of the template
     */
    public function updateCategoriesTemplateById(int $id, array $data): array
    {
        return $this->api("/rest/categories/{$id}/templates", 'PUT', $data);
    }
                    
    /**
     * @description Gets category trees.
     * @tag Category
     * @param array $query
     *      - *page* - int - optional
     *          - The requested page of results
     *      - *itemsPerPage* - int - optional
     *          - The number of results per page
     *      - *type* - string - optional
     *          - The category type. Available values: item, container, content, blog 
     */
    public function getCategoryBranches(array $query = [])
    {
        return $this->api(array_merge(["/rest/category_branches"], $query));
    }
                    
    /**
     * @description Gets the category tree of a category. The ID of the category must be specified.
     * @tag Category
     * @param int $id The unique category ID
     * @return array
     *      - *categoryId* - integer
     *          - The ID of the category
     *      - *category1Id* - integer
     *          - The ID of the category tree's 1st level. If 1st value is identical to category ID, category is of this level.
     *      - *category2Id* - integer
     *          - The ID of the category tree's 2nd level. If 2nd level value is identical to category ID, category is of this level. If 2nd level value is <strong>null</strong>, category is of a higher level.
     *      - *category3Id* - integer
     *          - The ID of the category tree's 3rd level. If 3rd level value is identical to category ID, category is of this level. If 2nd level value is <strong>null</strong>, category is of a higher level.
     *      - *category4Id* - integer
     *          - The ID of the category tree's 4th level. If 4th level value is identical to category ID, category is of this level. If 2nd level value is <strong>null</strong>, category is of a higher level.
     *      - *category5Id* - integer
     *          - The ID of the category tree's 5th level. If 5th level value is identical to category ID, category is of this level. If 2nd level value is <strong>null</strong>, category is of a higher level.
     *      - *category6Id* - integer
     *          - The ID of the category tree's 6th level. If 6th level value is identical to category ID, category is of this level. If 2nd level value is <strong>null</strong>, category is of a higher level.
     */
    public function getCategoryBranchById(int $id): array
    {
        return $this->api("/rest/category_branches/{$id}");
    }
    
}
