<?php

namespace lujie\amazon\advertising\api;

use Yii;
use Iterator;

/**
* This class is autogenerated by the OpenAPI gii generator
* @description Conversion management.
*/
class ConversionsAPIV3 extends \lujie\amazon\advertising\BaseAmazonAdvertisingClient
{

                
    /**
     * @description 
     * @tag Apps
     * @param array $data 
     *      - *nextToken* - string
     *          - Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.
     *      - *maxResults* - integer
     *          - Sets the maximum number of conversions in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.
     *      - *filters* - array
     * @return array
     *      - *nextToken* - string
     *      - *maxResults* - integer
     *      - *appRegistrations* - array
     *          - Array of Mobile Measurement Partner app registrations given filters.
     */
    public function dspAmazonListMobileMeasurementPartnerAppRegistrations(array $data, string $contentType = 'application/vnd.dspmobilemeasurementpartnerappregistration.v1+json'): array
    {
        return $this->api("/accounts/{accountId}/dsp/mobileMeasurementPartners/list", 'POST', $data, ['content-type' => $contentType, 'accept' => $contentType]);
    }
                    
    /**
     * @description 
     * @tag Conversion Event Data
     * @param array $data 
     *      - *eventData* - array
     *      - *source* - 
     * @return array
     *      - *success* - array
     *      - *error* - array
     */
    public function dspAmazonIngestConversionData(array $data, string $contentType = 'application/vnd.dspconversioneventimport.v1+json'): array
    {
        return $this->api("/accounts/{accountId}/dsp/conversionDefinitions/eventData", 'POST', $data, ['content-type' => $contentType, 'accept' => $contentType]);
    }
                    
    /**
     * @description 
     * @tag Amazon Ad Tag
     * @return array
     *      - *adTag* - 
     */
    public function dspAmazonAdTagGetAdTagByAdvertiserId(): array
    {
        return $this->api("/accounts/{accountId}/dsp/amazonAdTag");
    }
                    
    /**
     * @description 
     * @tag Apps
     * @param array $data 
     * @return array
     *      - *success* - array
     *      - *error* - array
     */
    public function dspAmazonBatchCreateMobileMeasurementPartnerAppRegistration(array $data, string $contentType = 'application/vnd.dspmobilemeasurementpartnerappregistration.v1+json'): array
    {
        return $this->api("/accounts/{accountId}/dsp/mobileMeasurementPartners", 'POST', $data, ['content-type' => $contentType, 'accept' => $contentType]);
    }
                
    /**
     * @description 
     * @tag Apps
     * @param array $data 
     * @return array
     *      - *success* - array
     *      - *error* - array
     */
    public function dspAmazonBatchUpdateMobileMeasurementPartnerAppRegistration(array $data, string $contentType = 'application/vnd.dspmobilemeasurementpartnerappregistration.v1+json'): array
    {
        return $this->api("/accounts/{accountId}/dsp/mobileMeasurementPartners", 'PUT', $data, ['content-type' => $contentType, 'accept' => $contentType]);
    }
                    
    /**
     * @description 
     * @tag Data Deletion Requests
     * @param array $data 
     *      - *deletionRequests* - array
     * @return array
     *      - *success* - array
     *      - *error* - array
     */
    public function dspAmazonDeletionRequest(array $data, string $contentType = 'application/vnd.dspuserdeletionrequest.v1+json'): array
    {
        return $this->api("/accounts/{accountId}/dsp/conversionDefinitions/delete", 'POST', $data, ['content-type' => $contentType, 'accept' => $contentType]);
    }
                    
    /**
     * @description 
     * @tag Conversion Order Association
     * @param array $data A list of orderIds to retrieve the associated conversion definitions.
     *      - *nextToken* - string
     *          - Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.
     *      - *maxResults* - integer
     *          - Sets the maximum number of conversions in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.
     *      - *orderIds* - array
     * @return array
     *      - *nextToken* - string
     *      - *maxResults* - string
     *      - *conversionDefinitions* - array
     *          - List of associated ConversionDefinitions.
     */
    public function dspAmazonBatchGetConversionDefinitionsForOrders(array $data, string $contentType = 'application/vnd.dspbatchgetconversiondefinitions.v1+json'): array
    {
        return $this->api("/accounts/{accountId}/dsp/batchOrders/conversionDefinitionAssociations", 'POST', $data, ['content-type' => $contentType, 'accept' => $contentType]);
    }
                    
    /**
     * @description 
     * @tag Conversion Ad Tag Association
     * @param string $conversionDefinitionId The identifier of the ConversionDefinition.
     * @param array $data 
     *      - *adTagEventName* - string
     *      - *adTagId* - string
     *      - *operation* - string
     * @return array
     *      - *adTagEventName* - string
     *      - *adTagId* - string
     */
    public function dspAmazonUpdateAdTagAssociatedEvent(string $conversionDefinitionId, array $data, string $contentType = 'application/vnd.dspconversionadtageventassociation.v1+json'): array
    {
        return $this->api("/accounts/{accountId}/dsp/conversionDefinitions/{$conversionDefinitionId}/adTagEventAssociations", 'POST', $data, ['content-type' => $contentType, 'accept' => $contentType]);
    }
                
    /**
     * @description 
     * @tag Conversion Ad Tag Association
     * @param string $conversionDefinitionId The identifier of the ConversionDefinition.
     * @return array
     *      - *adTagEventName* - string
     *      - *adTagId* - string
     */
    public function dspAmazonGetAdTagAssociatedEvent(string $conversionDefinitionId): array
    {
        return $this->api("/accounts/{accountId}/dsp/conversionDefinitions/{$conversionDefinitionId}/adTagEventAssociations");
    }
                    
    /**
     * @description 
     * @tag Amazon Conversion Definitions
     * @param array $data 
     * @return array
     *      - *success* - array
     *      - *error* - array
     */
    public function dspAmazonCreateConversionDefinitions(array $data, string $contentType = 'application/vnd.dspconversiondefinition.v1+json'): array
    {
        return $this->api("/accounts/{accountId}/dsp/conversionDefinitions", 'POST', $data, ['content-type' => $contentType, 'accept' => $contentType]);
    }
                
    /**
     * @description 
     * @tag Amazon Conversion Definitions
     * @param array $data 
     * @return array
     *      - *success* - array
     *      - *error* - array
     */
    public function dspAmazonUpdateConversionDefinitions(array $data, string $contentType = 'application/vnd.dspconversiondefinition.v1+json'): array
    {
        return $this->api("/accounts/{accountId}/dsp/conversionDefinitions", 'PUT', $data, ['content-type' => $contentType, 'accept' => $contentType]);
    }
                    
    /**
     * @description 
     * @tag Apps
     * @param array $data 
     * @return array
     *      - *success* - array
     *      - *error* - array
     */
    public function dspAmazonDeleteMeasurementPartnerAppRegistrations(array $data, string $contentType = 'application/vnd.dspmobilemeasurementpartnerappregistration.v1+json'): array
    {
        return $this->api("/accounts/{accountId}/dsp/mobileMeasurementPartners/delete", 'POST', $data, ['content-type' => $contentType, 'accept' => $contentType]);
    }
                    
    /**
     * @description 
     * @tag Apps
     * @param string $conversionDefinitionId The identifier of the ConversionDefinition.
     * @return array
     *      - *associatedMobileApp* - 
     *      - *eventName* - string
     *          - Mobile measurement partner event associated with this conversion definition
     */
    public function dspAmazonGetAssociatedMobileAppForConversionDefinition(string $conversionDefinitionId): array
    {
        return $this->api("/accounts/{accountId}/dsp/conversionDefinitions/{$conversionDefinitionId}/mobileMeasurementPartnerAppRegistration");
    }
                    
    /**
     * @description 
     * @tag Amazon Conversion Definitions
     * @param array $data Filters to apply when retrieving conversion definitions.
     *      - *nextToken* - string
     *          - Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.
     *      - *maxResults* - integer
     *          - Sets the maximum number of conversions in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.
     *      - *filters* - array
     * @return array
     *      - *nextToken* - string
     *      - *maxResults* - integer
     *      - *conversionDefinitions* - array
     *          - Array of conversion definitions given filters.
     */
    public function dspAmazonListConversionDefinitions(array $data, string $contentType = 'application/vnd.dspconversiondefinition.v1+json'): array
    {
        return $this->api("/accounts/{accountId}/dsp/conversionDefinitions/list", 'POST', $data, ['content-type' => $contentType, 'accept' => $contentType]);
    }
                
    /**
     * @description 
     * @tag Amazon Ad Tag
     * @param string $adTagId The identifier of the ad tag.
     * @param array $query
     *      - *searchTerm* - string - optional
     *          - A string used to fuzzy search for event metadata by event name.
     *      - *startDateTime* - string - optional
     *          - A date string to create a time window for events that have seen activity. If not set, a start date 30 days before the request was sent will be chosen. The oldest start date is 1 year before the request was sent to this api.
     *      - *nextToken* - string - optional
     *          - Token from a previous request. Use to control pagination of the returned array.
     *      - *maxResults* - int - optional
     *          - Sets the maximum number of associated conversions in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.
     *      - *endDateTime* - string - optional
     *          - A date string to create a time window for events that have seen activity. If not set, the day and time the request was sent will be chosen as the end date. The maximum end date is the day the request to this api was sent.
     * @return Iterator
     *      - *amazonAdTagEvents* - array
     *          - Array of Amazon ad tag events given filters.
     *      - *nextToken* - string
     *          - Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.
     *      - *maxResults* - integer
     */
    public function eachAmazonAdTagGetEventsByAdTagId(string $adTagId, array $query = []): Iterator
    {
        return $this->eachInternal('dspAmazonAdTagGetEventsByAdTagId', func_get_args());
    }
        
    /**
     * @description 
     * @tag Amazon Ad Tag
     * @param string $adTagId The identifier of the ad tag.
     * @param array $query
     *      - *searchTerm* - string - optional
     *          - A string used to fuzzy search for event metadata by event name.
     *      - *startDateTime* - string - optional
     *          - A date string to create a time window for events that have seen activity. If not set, a start date 30 days before the request was sent will be chosen. The oldest start date is 1 year before the request was sent to this api.
     *      - *nextToken* - string - optional
     *          - Token from a previous request. Use to control pagination of the returned array.
     *      - *maxResults* - int - optional
     *          - Sets the maximum number of associated conversions in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.
     *      - *endDateTime* - string - optional
     *          - A date string to create a time window for events that have seen activity. If not set, the day and time the request was sent will be chosen as the end date. The maximum end date is the day the request to this api was sent.
     * @return Iterator
     *      - *amazonAdTagEvents* - array
     *          - Array of Amazon ad tag events given filters.
     *      - *nextToken* - string
     *          - Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.
     *      - *maxResults* - integer
     */
    public function batchAmazonAdTagGetEventsByAdTagId(string $adTagId, array $query = []): Iterator
    {
        return $this->batchInternal('dspAmazonAdTagGetEventsByAdTagId', func_get_args());
    }
    
    /**
     * @description 
     * @tag Amazon Ad Tag
     * @param string $adTagId The identifier of the ad tag.
     * @param array $query
     *      - *searchTerm* - string - optional
     *          - A string used to fuzzy search for event metadata by event name.
     *      - *startDateTime* - string - optional
     *          - A date string to create a time window for events that have seen activity. If not set, a start date 30 days before the request was sent will be chosen. The oldest start date is 1 year before the request was sent to this api.
     *      - *nextToken* - string - optional
     *          - Token from a previous request. Use to control pagination of the returned array.
     *      - *maxResults* - int - optional
     *          - Sets the maximum number of associated conversions in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.
     *      - *endDateTime* - string - optional
     *          - A date string to create a time window for events that have seen activity. If not set, the day and time the request was sent will be chosen as the end date. The maximum end date is the day the request to this api was sent.
     * @return array
     *      - *amazonAdTagEvents* - array
     *          - Array of Amazon ad tag events given filters.
     *      - *nextToken* - string
     *          - Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.
     *      - *maxResults* - integer
     */
    public function dspAmazonAdTagGetEventsByAdTagId(string $adTagId, array $query = []): array
    {
        return $this->api(array_merge(["/accounts/{accountId}/dsp/adTagEvents/{$adTagId}/list"], $query));
    }
                    
    /**
     * @description 
     * @tag Conversion Order Association
     * @param string $orderId The identifier of the order.
     * @param array $data 
     * @return array
     *      - *success* - array
     *      - *error* - array
     */
    public function dspAmazonUpdateAssociatedConversionDefinitionsForOrder(string $orderId, array $data, string $contentType = 'application/vnd.dsporderconversionassociation.v1+json'): array
    {
        return $this->api("/accounts/{accountId}/dsp/orders/{$orderId}/conversionDefinitionAssociations", 'POST', $data, ['content-type' => $contentType, 'accept' => $contentType]);
    }
            
    /**
     * @description 
     * @tag Conversion Order Association
     * @param string $orderId The identifier of the order.
     * @param array $query
     *      - *nextToken* - string - optional
     *          - Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.
     *      - *maxResults* - int - optional
     *          - Sets the maximum number of associated conversions in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.
     * @return Iterator
     *      - *nextToken* - string
     *      - *maxResults* - string
     *      - *conversionDefinitionIds* - array
     *          - List of associated ConversionDefinition identifiers for the order.
     */
    public function eachAmazonGetAssociatedConversionDefinitionsForOrder(string $orderId, array $query = []): Iterator
    {
        return $this->eachInternal('dspAmazonGetAssociatedConversionDefinitionsForOrder', func_get_args());
    }
        
    /**
     * @description 
     * @tag Conversion Order Association
     * @param string $orderId The identifier of the order.
     * @param array $query
     *      - *nextToken* - string - optional
     *          - Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.
     *      - *maxResults* - int - optional
     *          - Sets the maximum number of associated conversions in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.
     * @return Iterator
     *      - *nextToken* - string
     *      - *maxResults* - string
     *      - *conversionDefinitionIds* - array
     *          - List of associated ConversionDefinition identifiers for the order.
     */
    public function batchAmazonGetAssociatedConversionDefinitionsForOrder(string $orderId, array $query = []): Iterator
    {
        return $this->batchInternal('dspAmazonGetAssociatedConversionDefinitionsForOrder', func_get_args());
    }
    
    /**
     * @description 
     * @tag Conversion Order Association
     * @param string $orderId The identifier of the order.
     * @param array $query
     *      - *nextToken* - string - optional
     *          - Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.
     *      - *maxResults* - int - optional
     *          - Sets the maximum number of associated conversions in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.
     * @return array
     *      - *nextToken* - string
     *      - *maxResults* - string
     *      - *conversionDefinitionIds* - array
     *          - List of associated ConversionDefinition identifiers for the order.
     */
    public function dspAmazonGetAssociatedConversionDefinitionsForOrder(string $orderId, array $query = []): array
    {
        return $this->api(array_merge(["/accounts/{accountId}/dsp/orders/{$orderId}/conversionDefinitionAssociations"], $query));
    }
    
}
