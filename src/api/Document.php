<?php

namespace lujie\plentyMarkets\api;

use Yii;
use Iterator;

/**
* This class is autogenerated by the OpenAPI gii generator
* @description The plentymarkets REST API expands the functionality of the plentymarkets CMS and allows access to resources, i.e. data records, via unique URI paths
*/
class Document extends \lujie\plentyMarkets\BasePlentyMarketsRestClient
{

                
    /**
     * @description Lists the documents of a category. The ID of the category must be specified.
     * @tag Document
     * @param int $categoryId The ID of the category
     * @return array
     *      - *page* - integer
     *          - Current page of the response
     *      - *totalsCount* - integer
     *          - The total number of entries in the response
     *      - *isLastPage* - boolean
     *          - Flag that indicates if the page shown is the last page of the response
     *      - *lastPageNumber* - integer
     *          - The last page number
     *      - *firstOnPage* - integer
     *          - The index of the first item of the current page result
     *      - *lastOnPage* - integer
     *          - The index of the last item of the current page result
     *      - *itemsPerPage* - integer
     *          - The requested amount of items per result page
     *      - *entries* - array
     *          - List of Document
     */
    public function getCategoriesDocumentsByCategoryId(int $categoryId): array
    {
        return $this->api("/rest/categories/{$categoryId}/documents");
    }
                
    /**
     * @description Uploads documents to a category. The ID of the category must be specified.
     * @tag Document
     * @param int $categoryId The ID of the category
     * @param array $data 
     * @param array $query
     *      - *documents* - array - required
     *          - The array with the category documents
     *      - *number* - int - optional
     *          - The document number
     *      - *numberWithPrefix* - string - optional
     *          - Number with prefix
     *      - *directoryId* - int - optional
     *          -  The directory ID
     *      - *displayDate* - string - optional
     *          -  The date displayed on the document
     * @return array
     */
    public function createCategoriesDocumentByCategoryId(int $categoryId, array $data, array $query): array
    {
        return $this->api(array_merge(["/rest/categories/{$categoryId}/documents"], $query), 'POST', $data);
    }
                    
    /**
     * @description Downloads the documents of a category as a zip file. The ID of the category must be specified.
     * @tag Document
     * @param int $categoryId The ID of the category
     */
    public function getCategoriesDocumentsDownloadsByCategoryId(int $categoryId): void
    {
        $this->api("/rest/categories/{$categoryId}/documents/downloads");
    }
                    
    /**
     * @description Deletes a category document. The ID of the document must be specified.
     * @tag Document
     * @param int $categoryId 
     * @param int $documentId 
     */
    public function deleteCategoriesDocumentByCategoryIdDocumentId(int $categoryId, int $documentId): void
    {
        $this->api("/rest/categories/{$categoryId}/documents/{$documentId}", 'DELETE');
    }
                    
    /**
     * @description Generates a preview of a document. The type of the preview must be specified.
     * @tag Document
     * @param int $previewType 
     * @return array
     *      - *hash* - string
     *      - *content* - string
     *      - *status* - integer
     *      - *orderId* - integer
     */
    public function createDocumentsPreviewGenerateByPreviewType(int $previewType): array
    {
        return $this->api("/rest/documents/preview/generate/{$previewType}", 'POST');
    }
                    
    /**
     * @description Download the content of a preview document. The hash of the document must be specified.
     * @tag Document
     * @param int $documentHash 
     */
    public function getDocumentsPreviewByDocumentHash(int $documentHash): void
    {
        $this->api("/rest/documents/preview/{$documentHash}");
    }
                    
    /**
     * @description Downloads the content of a document. The ID of the document must be specified.
     * @tag Document
     * @param int $documentId The ID of the document
     */
    public function getDocumentByDocumentId(int $documentId): void
    {
        $this->api("/rest/documents/{$documentId}");
    }
                    
    /**
     * @description Get status of a document. The ID of the document must be specified.
     * @tag Document
     * @param int $documentId 
     * @return array
     *      - *id* - integer
     *      - *status* - integer
     */
    public function getDocumentsStatusByDocumentId(int $documentId): array
    {
        return $this->api("/rest/documents/{$documentId}/status");
    }
                
    /**
     * @description Lists all order regardless of type.
     * @tag Document
     * @param array $query
     *      - *contactId* - int - optional
     *          - Filter that restricts the search results to documents belonging to a specific contact ID.
     *      - *plentyId* - int - optional
     *          - Filter that restricts the search results to documents belonging to the specific plenty ID.
     *      - *createdAtFrom* - string - optional
     *          - Filter that restricts the search result to documents that were created on the specified date. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *createdAtTo* - string - optional
     *          - Filter that restricts the search result to documents that were created within a certain period of time. This filter can be used alone or can be combined with the CreatedAtFrom filter. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *displayDateFrom* - string - optional
     *          - Filter that restricts the search result to documents that were displayed on the specified date. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *displayDateTo* - string - optional
     *          - Filter that restricts the search result to documents that were displayed within a certain period of time. This filter can be used alone or can be combined with the displayDateFrom filter. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *page* - int - required
     *          - The page of results to search for
     *      - *itemsPerPage* - int - required
     *          - The items per page to search for
     *      - *with* - array - optional
     *          - Load additional relations for a document. Currently possible are:
    <ul>
    <li>'references' = The document reference objects that are associated with the document.</li>
    </ul>
    Example: <code>?with[]=references</code>
     * @return Iterator
     *      - *page* - integer
     *          - Current page of the response
     *      - *totalsCount* - integer
     *          - The total number of entries in the response
     *      - *isLastPage* - boolean
     *          - Flag that indicates if the page shown is the last page of the response
     *      - *lastPageNumber* - integer
     *          - The last page number
     *      - *firstOnPage* - integer
     *          - The index of the first item of the current page result
     *      - *lastOnPage* - integer
     *          - The index of the last item of the current page result
     *      - *itemsPerPage* - integer
     *          - The requested amount of items per result page
     *      - *entries* - array
     *          - List of Document
     */
    public function eachOrdersDocuments(array $query): Iterator
    {
        return $this->eachInternal('getOrdersDocuments', func_get_args());
    }
        
    /**
     * @description Lists all order regardless of type.
     * @tag Document
     * @param array $query
     *      - *contactId* - int - optional
     *          - Filter that restricts the search results to documents belonging to a specific contact ID.
     *      - *plentyId* - int - optional
     *          - Filter that restricts the search results to documents belonging to the specific plenty ID.
     *      - *createdAtFrom* - string - optional
     *          - Filter that restricts the search result to documents that were created on the specified date. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *createdAtTo* - string - optional
     *          - Filter that restricts the search result to documents that were created within a certain period of time. This filter can be used alone or can be combined with the CreatedAtFrom filter. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *displayDateFrom* - string - optional
     *          - Filter that restricts the search result to documents that were displayed on the specified date. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *displayDateTo* - string - optional
     *          - Filter that restricts the search result to documents that were displayed within a certain period of time. This filter can be used alone or can be combined with the displayDateFrom filter. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *page* - int - required
     *          - The page of results to search for
     *      - *itemsPerPage* - int - required
     *          - The items per page to search for
     *      - *with* - array - optional
     *          - Load additional relations for a document. Currently possible are:
    <ul>
    <li>'references' = The document reference objects that are associated with the document.</li>
    </ul>
    Example: <code>?with[]=references</code>
     * @return Iterator
     *      - *page* - integer
     *          - Current page of the response
     *      - *totalsCount* - integer
     *          - The total number of entries in the response
     *      - *isLastPage* - boolean
     *          - Flag that indicates if the page shown is the last page of the response
     *      - *lastPageNumber* - integer
     *          - The last page number
     *      - *firstOnPage* - integer
     *          - The index of the first item of the current page result
     *      - *lastOnPage* - integer
     *          - The index of the last item of the current page result
     *      - *itemsPerPage* - integer
     *          - The requested amount of items per result page
     *      - *entries* - array
     *          - List of Document
     */
    public function batchOrdersDocuments(array $query): Iterator
    {
        return $this->batchInternal('getOrdersDocuments', func_get_args());
    }
    
    /**
     * @description Lists all order regardless of type.
     * @tag Document
     * @param array $query
     *      - *contactId* - int - optional
     *          - Filter that restricts the search results to documents belonging to a specific contact ID.
     *      - *plentyId* - int - optional
     *          - Filter that restricts the search results to documents belonging to the specific plenty ID.
     *      - *createdAtFrom* - string - optional
     *          - Filter that restricts the search result to documents that were created on the specified date. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *createdAtTo* - string - optional
     *          - Filter that restricts the search result to documents that were created within a certain period of time. This filter can be used alone or can be combined with the CreatedAtFrom filter. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *displayDateFrom* - string - optional
     *          - Filter that restricts the search result to documents that were displayed on the specified date. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *displayDateTo* - string - optional
     *          - Filter that restricts the search result to documents that were displayed within a certain period of time. This filter can be used alone or can be combined with the displayDateFrom filter. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *page* - int - required
     *          - The page of results to search for
     *      - *itemsPerPage* - int - required
     *          - The items per page to search for
     *      - *with* - array - optional
     *          - Load additional relations for a document. Currently possible are:
    <ul>
    <li>'references' = The document reference objects that are associated with the document.</li>
    </ul>
    Example: <code>?with[]=references</code>
     * @return array
     *      - *page* - integer
     *          - Current page of the response
     *      - *totalsCount* - integer
     *          - The total number of entries in the response
     *      - *isLastPage* - boolean
     *          - Flag that indicates if the page shown is the last page of the response
     *      - *lastPageNumber* - integer
     *          - The last page number
     *      - *firstOnPage* - integer
     *          - The index of the first item of the current page result
     *      - *lastOnPage* - integer
     *          - The index of the last item of the current page result
     *      - *itemsPerPage* - integer
     *          - The requested amount of items per result page
     *      - *entries* - array
     *          - List of Document
     */
    public function getOrdersDocuments(array $query): array
    {
        return $this->api(array_merge(["/rest/orders/documents"], $query));
    }
                    
    /**
     * @description Downloads all documents as a zip file. The documents must be given as an array of indices. An optional filename for the zip file can also be given
     * @tag Document
     * @param array $query
     *      - *ids* - array - required
     *          - The document ids to be downloaded
     *      - *filename* - string - optional
     *          - The filename to be used for the zip file
     */
    public function getOrdersDocumentsDownloadsAsZip(array $query): void
    {
        $this->api(array_merge(["/rest/orders/documents/downloads/as_zip"], $query));
    }
                    
    /**
     * @description Downloads documents of the same document type as a zip file. The type of the documents must be specified.
     * @tag Document
     * @param string $type The type of the order document. The available types are receipt, zReport, tillCount, posCouponReceipt, posInvoice, posInvoiceCancellation, cancellation, invoiceExternal, invoice, deliveryNote, creditNote, creditNoteExternal, orderConfirmation, offer, dunningLetter, reversalDunningLetter, returnNote, successConfirmation, correction, reorder, uploaded.
     * @param array $query
     *      - *contactId* - int - optional
     *          - Filter that restricts the search results to documents belonging to a specific contact ID.
     *      - *plentyId* - int - optional
     *          - Filter that restricts the search results to documents belonging to the specific plenty ID.
     *      - *createdAtFrom* - string - optional
     *          - Filter that restricts the search result to documents that were created on the specified date. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *createdAtTo* - string - optional
     *          - Filter that restricts the search result to documents that were created within a certain period of time. This filter can be used alone or can be combined with the CreatedAtFrom filter. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *updatedAtFrom* - string - optional
     *          - Filter that restricts the search result to documents that were updated on the specified date. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *updatedAtTo* - string - optional
     *          - Filter that restricts the search result to documents that were updated within a certain period of time. This filter can be used alone or can be combined with the UpdatedAtFrom filter. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *displayDateFrom* - string - optional
     *          - Filter that restricts the search result to documents that were displayed on the specified date. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *displayDateTo* - string - optional
     *          - Filter that restricts the search result to documents that were displayed within a certain period of time. This filter can be used alone or can be combined with the displayDateFrom filter. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *page* - int - required
     *          - The page of results to search for
     *      - *itemsPerPage* - int - required
     *          - The number of documents to display per page. The default number displayed is 50. The maximum number is 6000.
     */
    public function getOrdersDocumentsDownloadByType(string $type, array $query): void
    {
        $this->api(array_merge(["/rest/orders/documents/downloads/{$type}"], $query));
    }
                
    /**
     * @description Lists documents. The documents listed can be limited by order ID, document type, the page or results per page.
     * @tag Document
     * @param array $query
     *      - *contactId* - int - optional
     *          - Filter that restricts the search results to documents belonging to a specific contact ID.
     *      - *plentyId* - int - optional
     *          - Filter that restricts the search results to documents belonging to the specific plenty ID.
     *      - *createdAtFrom* - string - optional
     *          - Filter that restricts the search result to documents that were created on the specified date. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *createdAtTo* - string - optional
     *          - Filter that restricts the search result to documents that were created within a certain period of time. This filter can be used alone or can be combined with the CreatedAtFrom filter. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *updatedAtFrom* - string - optional
     *          - Filter that restricts the search result to documents that were updated on the specified date. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *updatedAtTo* - string - optional
     *          - Filter that restricts the search result to documents that were updated within a certain period of time. This filter can be used alone or can be combined with the UpdatedAtFrom filter. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *displayDateFrom* - string - optional
     *          - Filter that restricts the search result to documents that were displayed on the specified date. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *displayDateTo* - string - optional
     *          - Filter that restricts the search result to documents that were displayed within a certain period of time. This filter can be used alone or can be combined with the displayDateFrom filter. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *orderId* - int - optional
     *          - The ID of the order
     *      - *type* - string - optional
     *          - The type of the order document. The available types are receipt, invoiceExternal, invoice, deliveryNote, poDeliveryNote, creditNote, creditNoteExternal, orderConfirmation, offer, dunningLetter, reversalDunningLetter, returnNote, successConfirmation, correction, uploaded.
     *      - *page* - int - required
     *          - The page to get. The default page that will be returned is page 1.
     *      - *itemsPerPage* - int - required
     *          - The number of documents to list per page. The default number of documents per page is 50. The maximum number is 6000.
     * @return Iterator
     *      - *page* - integer
     *          - Current page of the response
     *      - *totalsCount* - integer
     *          - The total number of entries in the response
     *      - *isLastPage* - boolean
     *          - Flag that indicates if the page shown is the last page of the response
     *      - *lastPageNumber* - integer
     *          - The last page number
     *      - *firstOnPage* - integer
     *          - The index of the first item of the current page result
     *      - *lastOnPage* - integer
     *          - The index of the last item of the current page result
     *      - *itemsPerPage* - integer
     *          - The requested amount of items per result page
     *      - *entries* - array
     *          - List of Document
     */
    public function eachOrdersDocumentsFind(array $query): Iterator
    {
        return $this->eachInternal('getOrdersDocumentsFind', func_get_args());
    }
        
    /**
     * @description Lists documents. The documents listed can be limited by order ID, document type, the page or results per page.
     * @tag Document
     * @param array $query
     *      - *contactId* - int - optional
     *          - Filter that restricts the search results to documents belonging to a specific contact ID.
     *      - *plentyId* - int - optional
     *          - Filter that restricts the search results to documents belonging to the specific plenty ID.
     *      - *createdAtFrom* - string - optional
     *          - Filter that restricts the search result to documents that were created on the specified date. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *createdAtTo* - string - optional
     *          - Filter that restricts the search result to documents that were created within a certain period of time. This filter can be used alone or can be combined with the CreatedAtFrom filter. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *updatedAtFrom* - string - optional
     *          - Filter that restricts the search result to documents that were updated on the specified date. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *updatedAtTo* - string - optional
     *          - Filter that restricts the search result to documents that were updated within a certain period of time. This filter can be used alone or can be combined with the UpdatedAtFrom filter. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *displayDateFrom* - string - optional
     *          - Filter that restricts the search result to documents that were displayed on the specified date. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *displayDateTo* - string - optional
     *          - Filter that restricts the search result to documents that were displayed within a certain period of time. This filter can be used alone or can be combined with the displayDateFrom filter. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *orderId* - int - optional
     *          - The ID of the order
     *      - *type* - string - optional
     *          - The type of the order document. The available types are receipt, invoiceExternal, invoice, deliveryNote, poDeliveryNote, creditNote, creditNoteExternal, orderConfirmation, offer, dunningLetter, reversalDunningLetter, returnNote, successConfirmation, correction, uploaded.
     *      - *page* - int - required
     *          - The page to get. The default page that will be returned is page 1.
     *      - *itemsPerPage* - int - required
     *          - The number of documents to list per page. The default number of documents per page is 50. The maximum number is 6000.
     * @return Iterator
     *      - *page* - integer
     *          - Current page of the response
     *      - *totalsCount* - integer
     *          - The total number of entries in the response
     *      - *isLastPage* - boolean
     *          - Flag that indicates if the page shown is the last page of the response
     *      - *lastPageNumber* - integer
     *          - The last page number
     *      - *firstOnPage* - integer
     *          - The index of the first item of the current page result
     *      - *lastOnPage* - integer
     *          - The index of the last item of the current page result
     *      - *itemsPerPage* - integer
     *          - The requested amount of items per result page
     *      - *entries* - array
     *          - List of Document
     */
    public function batchOrdersDocumentsFind(array $query): Iterator
    {
        return $this->batchInternal('getOrdersDocumentsFind', func_get_args());
    }
    
    /**
     * @description Lists documents. The documents listed can be limited by order ID, document type, the page or results per page.
     * @tag Document
     * @param array $query
     *      - *contactId* - int - optional
     *          - Filter that restricts the search results to documents belonging to a specific contact ID.
     *      - *plentyId* - int - optional
     *          - Filter that restricts the search results to documents belonging to the specific plenty ID.
     *      - *createdAtFrom* - string - optional
     *          - Filter that restricts the search result to documents that were created on the specified date. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *createdAtTo* - string - optional
     *          - Filter that restricts the search result to documents that were created within a certain period of time. This filter can be used alone or can be combined with the CreatedAtFrom filter. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *updatedAtFrom* - string - optional
     *          - Filter that restricts the search result to documents that were updated on the specified date. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *updatedAtTo* - string - optional
     *          - Filter that restricts the search result to documents that were updated within a certain period of time. This filter can be used alone or can be combined with the UpdatedAtFrom filter. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *displayDateFrom* - string - optional
     *          - Filter that restricts the search result to documents that were displayed on the specified date. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *displayDateTo* - string - optional
     *          - Filter that restricts the search result to documents that were displayed within a certain period of time. This filter can be used alone or can be combined with the displayDateFrom filter. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *orderId* - int - optional
     *          - The ID of the order
     *      - *type* - string - optional
     *          - The type of the order document. The available types are receipt, invoiceExternal, invoice, deliveryNote, poDeliveryNote, creditNote, creditNoteExternal, orderConfirmation, offer, dunningLetter, reversalDunningLetter, returnNote, successConfirmation, correction, uploaded.
     *      - *page* - int - required
     *          - The page to get. The default page that will be returned is page 1.
     *      - *itemsPerPage* - int - required
     *          - The number of documents to list per page. The default number of documents per page is 50. The maximum number is 6000.
     * @return array
     *      - *page* - integer
     *          - Current page of the response
     *      - *totalsCount* - integer
     *          - The total number of entries in the response
     *      - *isLastPage* - boolean
     *          - Flag that indicates if the page shown is the last page of the response
     *      - *lastPageNumber* - integer
     *          - The last page number
     *      - *firstOnPage* - integer
     *          - The index of the first item of the current page result
     *      - *lastOnPage* - integer
     *          - The index of the last item of the current page result
     *      - *itemsPerPage* - integer
     *          - The requested amount of items per result page
     *      - *entries* - array
     *          - List of Document
     */
    public function getOrdersDocumentsFind(array $query): array
    {
        return $this->api(array_merge(["/rest/orders/documents/find"], $query));
    }
                    
    /**
     * @description Gets an order document. The document id must be specified.
     * @tag Document
     * @param int $documentId 
     * @return array
     *      - *id* - integer
     *          - The ID of the document
     *      - *type* - string
     *          - The type of the document. The following types are available:
                           <ul>
    <li>admin</li>
    <li>blog</li>
 <li>category</li>
 <li>correction_document</li>
 <li>credit_note</li>
    <li>credit_note_external</li>
       <li>customer</li>
 <li>delivery_note</li>
    <li>dunning_letter</li>
       <li>ebics_hash</li>
    <li>facet</li>
    <li>invoice</li>
    <li>invoice_external</li>
                               <li>pos_invoice</li>
                               <li>pos_invoice_cancellation</li>
 <li>item</li>
 <li>multi_credit_note</li>
    <li>multi_invoice</li>
       <li>offer</li>
    <li>order_confirmation</li>
       <li>pickup_delivery</li>
    <li>receipt</li>
                               <li>refund_reversal</li>
    <li>reorder</li>
    <li>repair_bill</li>
    <li>return_note</li>
       <li>reversal_document</li>
       <li>settlement_report</li>
    <li>success_confirmation</li>
    <li>ticket</li>
    <li>webshop</li>
  <li>webshop_customer</li>
    <li>z_report</li>
    <li>shipping_label</li>
    <li>shipping_export_label</li>
    <li>returns_label</li>
                               <li>reversal_dunning_letter</l>
</ul>
     *      - *number* - integer
     *          - The document number
     *      - *numberWithPrefix* - string
     *          - The document number with prefix
     *      - *path* - string
     *          - The path to the document
     *      - *userId* - integer
     *          - The ID of the user
     *      - *source* - string
     *          - The source where the document was generated. Possible sources are 'klarna', 'soap', 'admin', 'hitmeister', 'paypal' and 'rest'.
     *      - *displayDate* - string
     *          - The date displayed on the document
     *      - *status* - string
     *          - The generation status of the document ("pending", "faulty" or "done"
     *      - *content* - string
     *          - The base64 encoded content of the document.
     */
    public function getOrdersDocumentByDocumentId(int $documentId): array
    {
        return $this->api("/rest/orders/documents/{$documentId}");
    }
                
    /**
     * @description Lists documents of a type. The type must be specified.
     * @tag Document
     * @param string $type The type of the order document. The available types are receipt, tillCount, posCouponReceipt, posInvoice, posInvoiceCancellation, cancellation, zReport, invoiceExternal, invoice, deliveryNote, poDeliveryNote, creditNote, creditNoteExternal, orderConfirmation, offer, dunningLetter, reversalDunningLetter, returnNote, successConfirmation, correction, reversal, reversalRefund, proFormaInvoice, reorder, uploaded.
     * @param array $query
     *      - *contactId* - int - optional
     *          - Filter that restricts the search results to documents belonging to a specific contact ID.
     *      - *plentyId* - int - optional
     *          - Filter that restricts the search results to documents belonging to the specific plenty ID.
     *      - *createdAtFrom* - string - optional
     *          - Filter that restricts the search result to documents that were created on the specified date. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *createdAtTo* - string - optional
     *          - Filter that restricts the search result to documents that were created within a certain period of time. This filter can be used alone or can be combined with the CreatedAtFrom filter. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *updatedAtFrom* - string - optional
     *          - Filter that restricts the search result to documents that were updated on the specified date. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *updatedAtTo* - string - optional
     *          - Filter that restricts the search result to documents that were updated within a certain period of time. This filter can be used alone or can be combined with the UpdatedAtFrom filter. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *displayDateFrom* - string - optional
     *          - Filter that restricts the search result to documents that were displayed on the specified date. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *displayDateTo* - string - optional
     *          - Filter that restricts the search result to documents that were displayed within a certain period of time. This filter can be used alone or can be combined with the displayDateFrom filter. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *page* - int - required
     *          - The page of results to search for
     *      - *itemsPerPage* - int - required
     *          - The items per page to search for
     *      - *with* - array - optional
     *          - Load additional relations for a document. Currently possible are:
    <ul>
    <li>'references' = The document reference objects that are associated with the document.</li>
    </ul>
    Example: <code>?with[]=references</code>
     * @return Iterator
     *      - *page* - integer
     *          - Current page of the response
     *      - *totalsCount* - integer
     *          - The total number of entries in the response
     *      - *isLastPage* - boolean
     *          - Flag that indicates if the page shown is the last page of the response
     *      - *lastPageNumber* - integer
     *          - The last page number
     *      - *firstOnPage* - integer
     *          - The index of the first item of the current page result
     *      - *lastOnPage* - integer
     *          - The index of the last item of the current page result
     *      - *itemsPerPage* - integer
     *          - The requested amount of items per result page
     *      - *entries* - array
     *          - List of Document
     */
    public function eachOrdersDocumentByType(string $type, array $query): Iterator
    {
        return $this->eachInternal('getOrdersDocumentByType', func_get_args());
    }
        
    /**
     * @description Lists documents of a type. The type must be specified.
     * @tag Document
     * @param string $type The type of the order document. The available types are receipt, tillCount, posCouponReceipt, posInvoice, posInvoiceCancellation, cancellation, zReport, invoiceExternal, invoice, deliveryNote, poDeliveryNote, creditNote, creditNoteExternal, orderConfirmation, offer, dunningLetter, reversalDunningLetter, returnNote, successConfirmation, correction, reversal, reversalRefund, proFormaInvoice, reorder, uploaded.
     * @param array $query
     *      - *contactId* - int - optional
     *          - Filter that restricts the search results to documents belonging to a specific contact ID.
     *      - *plentyId* - int - optional
     *          - Filter that restricts the search results to documents belonging to the specific plenty ID.
     *      - *createdAtFrom* - string - optional
     *          - Filter that restricts the search result to documents that were created on the specified date. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *createdAtTo* - string - optional
     *          - Filter that restricts the search result to documents that were created within a certain period of time. This filter can be used alone or can be combined with the CreatedAtFrom filter. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *updatedAtFrom* - string - optional
     *          - Filter that restricts the search result to documents that were updated on the specified date. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *updatedAtTo* - string - optional
     *          - Filter that restricts the search result to documents that were updated within a certain period of time. This filter can be used alone or can be combined with the UpdatedAtFrom filter. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *displayDateFrom* - string - optional
     *          - Filter that restricts the search result to documents that were displayed on the specified date. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *displayDateTo* - string - optional
     *          - Filter that restricts the search result to documents that were displayed within a certain period of time. This filter can be used alone or can be combined with the displayDateFrom filter. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *page* - int - required
     *          - The page of results to search for
     *      - *itemsPerPage* - int - required
     *          - The items per page to search for
     *      - *with* - array - optional
     *          - Load additional relations for a document. Currently possible are:
    <ul>
    <li>'references' = The document reference objects that are associated with the document.</li>
    </ul>
    Example: <code>?with[]=references</code>
     * @return Iterator
     *      - *page* - integer
     *          - Current page of the response
     *      - *totalsCount* - integer
     *          - The total number of entries in the response
     *      - *isLastPage* - boolean
     *          - Flag that indicates if the page shown is the last page of the response
     *      - *lastPageNumber* - integer
     *          - The last page number
     *      - *firstOnPage* - integer
     *          - The index of the first item of the current page result
     *      - *lastOnPage* - integer
     *          - The index of the last item of the current page result
     *      - *itemsPerPage* - integer
     *          - The requested amount of items per result page
     *      - *entries* - array
     *          - List of Document
     */
    public function batchOrdersDocumentByType(string $type, array $query): Iterator
    {
        return $this->batchInternal('getOrdersDocumentByType', func_get_args());
    }
    
    /**
     * @description Lists documents of a type. The type must be specified.
     * @tag Document
     * @param string $type The type of the order document. The available types are receipt, tillCount, posCouponReceipt, posInvoice, posInvoiceCancellation, cancellation, zReport, invoiceExternal, invoice, deliveryNote, poDeliveryNote, creditNote, creditNoteExternal, orderConfirmation, offer, dunningLetter, reversalDunningLetter, returnNote, successConfirmation, correction, reversal, reversalRefund, proFormaInvoice, reorder, uploaded.
     * @param array $query
     *      - *contactId* - int - optional
     *          - Filter that restricts the search results to documents belonging to a specific contact ID.
     *      - *plentyId* - int - optional
     *          - Filter that restricts the search results to documents belonging to the specific plenty ID.
     *      - *createdAtFrom* - string - optional
     *          - Filter that restricts the search result to documents that were created on the specified date. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *createdAtTo* - string - optional
     *          - Filter that restricts the search result to documents that were created within a certain period of time. This filter can be used alone or can be combined with the CreatedAtFrom filter. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *updatedAtFrom* - string - optional
     *          - Filter that restricts the search result to documents that were updated on the specified date. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *updatedAtTo* - string - optional
     *          - Filter that restricts the search result to documents that were updated within a certain period of time. This filter can be used alone or can be combined with the UpdatedAtFrom filter. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *displayDateFrom* - string - optional
     *          - Filter that restricts the search result to documents that were displayed on the specified date. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *displayDateTo* - string - optional
     *          - Filter that restricts the search result to documents that were displayed within a certain period of time. This filter can be used alone or can be combined with the displayDateFrom filter. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *page* - int - required
     *          - The page of results to search for
     *      - *itemsPerPage* - int - required
     *          - The items per page to search for
     *      - *with* - array - optional
     *          - Load additional relations for a document. Currently possible are:
    <ul>
    <li>'references' = The document reference objects that are associated with the document.</li>
    </ul>
    Example: <code>?with[]=references</code>
     * @return array
     *      - *page* - integer
     *          - Current page of the response
     *      - *totalsCount* - integer
     *          - The total number of entries in the response
     *      - *isLastPage* - boolean
     *          - Flag that indicates if the page shown is the last page of the response
     *      - *lastPageNumber* - integer
     *          - The last page number
     *      - *firstOnPage* - integer
     *          - The index of the first item of the current page result
     *      - *lastOnPage* - integer
     *          - The index of the last item of the current page result
     *      - *itemsPerPage* - integer
     *          - The requested amount of items per result page
     *      - *entries* - array
     *          - List of Document
     */
    public function getOrdersDocumentByType(string $type, array $query): array
    {
        return $this->api(array_merge(["/rest/orders/documents/{$type}"], $query));
    }
                    
    /**
     * @description Generate adjustment form of an order. The ID of the order must be specified.
The document can only be generated for orders of the type 'credit note'.
     * @tag Document
     * @param int $orderId The ID of the order
     * @param array $query
     *      - *documentDate* - string - optional
     *          - If not set, the current date will be used. The date has to be entered in W3C format, e.g. '2019-05-29T13:33:23+02:00'.
     *      - *comment* - string - optional
     *          - Comment that appears below the stock units.
     */
    public function createOrdersDocumentsCorrectionDocumentGenerateByOrderId(int $orderId, array $query = []): void
    {
        $this->api(array_merge(["/rest/orders/{$orderId}/documents/correction_document/generate"], $query), 'POST');
    }
                    
    /**
     * @description Generate credit note of an order. The ID of the order must be specified.
The document can only be generated for orders of the type 'credit note'.
     * @tag Document
     * @param int $orderId The ID of the order
     * @param array $query
     *      - *documentDate* - string - optional
     *          - If not set, the current date will be used. The date has to be entered in W3C format, e.g. '2019-05-29T13:33:23+02:00'
     *      - *allowRegenerate* - boolean - optional
     *          - Deprecated. This parameter has no effect anymore.
     *      - *comment* - string - optional
     *          - Comment that appears below the stock units.
     */
    public function createOrdersDocumentsCreditNoteGenerateByOrderId(int $orderId, array $query = []): void
    {
        $this->api(array_merge(["/rest/orders/{$orderId}/documents/credit_note/generate"], $query), 'POST');
    }
                    
    /**
     * @description Generate delivery note of an order. The ID of the order must be specified.
The document can only be generated for orders of the type 'order', 'warranty', 'repair' and 'delivery order'.
     * @tag Document
     * @param int $orderId The ID of the order
     * @param array $query
     *      - *documentDate* - string - optional
     *          - If not set, the current date will be used. The date has to be entered in W3C format, e.g. '2019-05-29T13:33:23+02:00'.
     *      - *comment* - string - optional
     *          - Comment that appears below the stock units.
     *      - *storehouseId* - int - optional
     *          - If set, only items with the given warehouse ID are included on the document.
     */
    public function createOrdersDocumentsDeliveryNoteGenerateByOrderId(int $orderId, array $query = []): void
    {
        $this->api(array_merge(["/rest/orders/{$orderId}/documents/delivery_note/generate"], $query), 'POST');
    }
                    
    /**
     * @description Downloads documents of an order as a zip file. The ID of the order must be specified. In addition a type can be specified.
     * @tag Document
     * @param int $orderId The ID of the order
     * @param string $type The type of the document. The types available are receipt, zReport, tillCount, posCouponReceipt, cancellation, posInvoice, posInvoiceCancellation, invoiceExternal, invoice, deliveryNote, poDeliveryNote, creditNote, creditNoreExternal, orderConfirmation, offer, dunningLetter, reversalDunningLetter, returnNote, successConfirmation, reorder, correction and uploaded.
     */
    public function getOrdersDocumentsDownloadsTypeByOrderIdType(int $orderId, string $type): void
    {
        $this->api("/rest/orders/{$orderId}/documents/downloads/{type?}");
    }
                    
    /**
     * @description Generate dunning letter of an order. The ID of the order must be specified.
The document can only be generated for orders of the type 'order', 'warranty', 'repair' and 'multi order'.
     * @tag Document
     * @param int $orderId The ID of the order
     * @param array $query
     *      - *documentDate* - string - optional
     *          - If not set, the current date will be used. The date has to be entered in W3C format, e.g. '2019-05-29T13:33:23+02:00'.
     *      - *comment* - string - optional
     *          - Comment that appears below the stock units.
     *      - *articleId* - int - optional
     *          - Add an item to the order.
     *      - *variationId* - int - optional
     *          - Add a variation to the order.
     */
    public function createOrdersDocumentsDunningLetterGenerateByOrderId(int $orderId, array $query = []): void
    {
        $this->api(array_merge(["/rest/orders/{$orderId}/documents/dunning_letter/generate"], $query), 'POST');
    }
                    
    /**
     * @description Generate invoice of an order. The ID of the order must be specified.
The document can only be generated for orders of the type 'order', 'warranty', 'repair' and 'advance order'.
     * @tag Document
     * @param int $orderId The ID of the order
     * @param array $query
     *      - *documentDate* - string - optional
     *          - If not set, the current date will be used. The date has to be entered in W3C format, e.g. '2019-05-29T13:33:23+02:00'.
     *      - *allowRegenerate* - boolean - optional
     *          - Deprecated. This parameter has no effect anymore.
     *      - *comment* - string - optional
     *          - Comment that appears below the stock units.
     *      - *valuta* - boolean - optional
     *          - Deprecated. This parameter has no effect anymore.
     *      - *discount* - boolean - optional
     *          - Deprecated. This parameter has no effect anymore.
     *      - *discountPercentage* - int - optional
     *          - Deprecated. This parameter has no effect anymore.
     *      - *discountDays* - int - optional
     *          - Deprecated. This parameter has no effect anymore.
     *      - *paymentDue* - boolean - optional
     *          - Deprecated. This parameter has no effect anymore.
     *      - *paymentDueDays* - int - optional
     *          - Deprecated. This parameter has no effect anymore.
     */
    public function createOrdersDocumentsInvoiceGenerateByOrderId(int $orderId, array $query = []): void
    {
        $this->api(array_merge(["/rest/orders/{$orderId}/documents/invoice/generate"], $query), 'POST');
    }
                    
    /**
     * @description Generate multi credit note of an order. The ID of the order must be specified.
The document can only be generated for orders of the type 'multi credit note'.
     * @tag Document
     * @param int $orderId The ID of the order
     * @param array $query
     *      - *documentDate* - string - optional
     *          - If not set, the current date will be used. The date has to be entered in W3C format, e.g. '2019-05-29T13:33:23+02:00'.
     *      - *comment* - string - optional
     *          - Comment that appears below the stock units.
     */
    public function createOrdersDocumentsMultiCreditNoteGenerateByOrderId(int $orderId, array $query = []): void
    {
        $this->api(array_merge(["/rest/orders/{$orderId}/documents/multi_credit_note/generate"], $query), 'POST');
    }
                    
    /**
     * @description Generate multi-invoice of an order. The ID of the order must be specified.
The document can only be generated for orders of the type 'multi order'.
     * @tag Document
     * @param int $orderId The ID of the order
     * @param array $query
     *      - *documentDate* - string - optional
     *          - If not set, the current date will be used. The date has to be entered in W3C format, e.g. '2019-05-29T13:33:23+02:00'.
     *      - *comment* - string - optional
     *          - Comment that appears below the stock units.
     */
    public function createOrdersDocumentsMultiInvoiceGenerateByOrderId(int $orderId, array $query = []): void
    {
        $this->api(array_merge(["/rest/orders/{$orderId}/documents/multi_invoice/generate"], $query), 'POST');
    }
                    
    /**
     * @description Generate offer document of an order. The ID of the order must be specified.
The document can only be generated for orders of the type 'offer'.
     * @tag Document
     * @param int $orderId The ID of the order
     * @param array $query
     *      - *documentDate* - string - optional
     *          - If not set, the current date will be used. The date has to be entered in W3C format, e.g. '2019-05-29T13:33:23+02:00'.
     *      - *comment* - string - optional
     *          - Comment that appears below the stock units.
     */
    public function createOrdersDocumentsOfferGenerateByOrderId(int $orderId, array $query = []): void
    {
        $this->api(array_merge(["/rest/orders/{$orderId}/documents/offer/generate"], $query), 'POST');
    }
                    
    /**
     * @description Generate order confirmation of an order. The ID of the order must be specified.
The document can only be generated for orders of the type 'order', 'warranty', 'repair', 'advance order' and 'offer'.
     * @tag Document
     * @param int $orderId The ID of the order
     * @param array $query
     *      - *documentDate* - string - optional
     *          - If not set, the current date will be used. The date has to be entered in W3C format, e.g. '2019-05-29T13:33:23+02:00'.
     *      - *comment* - string - optional
     *          - Comment that appears below the stock units.
     *      - *valuta* - boolean - optional
     *          - Deprecated. This parameter has no effect anymore.
     *      - *discount* - boolean - optional
     *          - Deprecated. This parameter has no effect anymore.
     *      - *discountPercentage* - int - optional
     *          - Deprecated. This parameter has no effect anymore.
     *      - *discountDays* - int - optional
     *          - Deprecated. This parameter has no effect anymore.
     *      - *paymentDue* - boolean - optional
     *          - Deprecated. This parameter has no effect anymore.
     *      - *paymentDueDays* - int - optional
     *          - Deprecated. This parameter has no effect anymore.
     */
    public function createOrdersDocumentsOrderConfirmationGenerateByOrderId(int $orderId, array $query = []): void
    {
        $this->api(array_merge(["/rest/orders/{$orderId}/documents/order_confirmation/generate"], $query), 'POST');
    }
                    
    /**
     * @description Generate order custom document of an order. The ID of the order must be specified.
     * @tag Document
     * @param int $orderId The ID of the order
     * @param array $query
     *      - *documentDate* - string - optional
     *          - If not set, the current date will be used. The date has to be entered in W3C format, e.g. '2019-05-29T13:33:23+02:00'.
     *      - *comment* - string - optional
     *          - Comment that appears below the stock units.
     */
    public function createOrdersDocumentsOrderCustomGenerateByOrderId(int $orderId, array $query = []): void
    {
        $this->api(array_merge(["/rest/orders/{$orderId}/documents/order_custom/generate"], $query), 'POST');
    }
                    
    /**
     * @description Generate pick-up delivery note of an order. The ID of the order must be specified.
The document can only be generated for orders of the type 'order', 'warranty' and 'repair'.
     * @tag Document
     * @param int $orderId The ID of the order
     * @param array $query
     *      - *documentDate* - string - optional
     *          - If not set, the current date will be used. The date has to be entered in W3C format, e.g. '2019-05-29T13:33:23+02:00'.
     *      - *comment* - string - optional
     *          - Comment that appears below the stock units.
     */
    public function createOrdersDocumentsPickupDeliveryGenerateByOrderId(int $orderId, array $query = []): void
    {
        $this->api(array_merge(["/rest/orders/{$orderId}/documents/pickup_delivery/generate"], $query), 'POST');
    }
                    
    /**
     * @description Generate PO delivery note of an order. The ID of the order must be specified.
The document can only be generated for orders of the type 'redistribution'.
     * @tag Document
     * @param int $orderId The ID of the order
     * @param array $query
     *      - *documentDate* - string - optional
     *          - If not set, the current date will be used. The date has to be entered in W3C format, e.g. '2019-05-29T13:33:23+02:00'.
     */
    public function createOrdersDocumentsPoDeliveryNoteGenerateByOrderId(int $orderId, array $query = []): void
    {
        $this->api(array_merge(["/rest/orders/{$orderId}/documents/po_delivery_note/generate"], $query), 'POST');
    }
                    
    /**
     * @description Generate pro forma invoice of an order. The ID of the order must be specified.
The document can only be generated for orders of the type 'order', 'warranty', 'repair', 'advance order' and 'delivery order'.
     * @tag Document
     * @param int $orderId The ID of the order
     * @param array $query
     *      - *documentDate* - string - optional
     *          - If not set, the current date will be used. The date has to be entered in W3C format, e.g. '2019-05-29T13:33:23+02:00'.
     *      - *comment* - string - optional
     *          - Comment that appears below the stock units.
     *      - *valuta* - boolean - optional
     *          - Deprecated. This parameter has no effect anymore.
     *      - *discount* - boolean - optional
     *          - Deprecated. This parameter has no effect anymore.
     *      - *discountPercentage* - int - optional
     *          - Deprecated. This parameter has no effect anymore.
     *      - *discountDays* - int - optional
     *          - Deprecated. This parameter has no effect anymore.
     *      - *paymentDue* - boolean - optional
     *          - Deprecated. This parameter has no effect anymore.
     *      - *paymentDueDays* - int - optional
     *          - Deprecated. This parameter has no effect anymore.
     */
    public function createOrdersDocumentsProFormaInvoiceGenerateByOrderId(int $orderId, array $query = []): void
    {
        $this->api(array_merge(["/rest/orders/{$orderId}/documents/pro_forma_invoice/generate"], $query), 'POST');
    }
                    
    /**
     * @description Generate reorder document of an order. The ID of the order must be specified.
The document can only be generated for orders of the type 'reorder'.
     * @tag Document
     * @param int $orderId The ID of the order
     * @param array $query
     *      - *allowRegenerate* - boolean - optional
     *          - If true, existing reorder document is generated once again.
     *      - *comment* - string - optional
     *          - Comment that appears below the stock units.
     */
    public function createOrdersDocumentsReorderGenerateByOrderId(int $orderId, array $query = []): void
    {
        $this->api(array_merge(["/rest/orders/{$orderId}/documents/reorder/generate"], $query), 'POST');
    }
                    
    /**
     * @description Generate repair slip of an order. The ID of the order must be specified.
The document can only be generated for orders of the type 'repair'.
     * @tag Document
     * @param int $orderId The ID of the order
     * @param array $query
     *      - *documentDate* - string - optional
     *          - If not set, the current date will be used. The date has to be entered in W3C format, e.g. '2019-05-29T13:33:23+02:00'.
     *      - *comment* - string - optional
     *          - Comment that appears below the stock units.
     */
    public function createOrdersDocumentsRepairBillGenerateByOrderId(int $orderId, array $query = []): void
    {
        $this->api(array_merge(["/rest/orders/{$orderId}/documents/repair_bill/generate"], $query), 'POST');
    }
                    
    /**
     * @description Generate return slip of an order. The ID of the order must be specified.
The document can only be generated for orders of the type 'order', 'warranty', 'repair' and 'returns'.
     * @tag Document
     * @param int $orderId The ID of the order
     * @param array $query
     *      - *documentDate* - string - optional
     *          - If not set, the current date will be used. The date has to be entered in W3C format, e.g. '2019-05-29T13:33:23+02:00'.
     *      - *comment* - string - optional
     *          - Comment that appears below the stock units.
     */
    public function createOrdersDocumentsReturnNoteGenerateByOrderId(int $orderId, array $query = []): void
    {
        $this->api(array_merge(["/rest/orders/{$orderId}/documents/return_note/generate"], $query), 'POST');
    }
                    
    /**
     * @description Generate reversal document of an order. The ID of the order must be specified.
The document can only be generated for orders of the type 'order', 'warranty', 'repair' and 'advance order'. A valid invoice must exist.
     * @tag Document
     * @param int $orderId The ID of the order
     * @param array $query
     *      - *documentDate* - string - optional
     *          - If not set, the current date will be used. The date has to be entered in W3C format, e.g. '2019-05-29T13:33:23+02:00'.
     *      - *comment* - string - optional
     *          - Comment that appears below the stock units.
     */
    public function createOrdersDocumentsReversalDocumentGenerateByOrderId(int $orderId, array $query = []): void
    {
        $this->api(array_merge(["/rest/orders/{$orderId}/documents/reversal_document/generate"], $query), 'POST');
    }
                    
    /**
     * @description Generate dunning letter reversal document of an order. The ID of the order must be specified.
The document can only be generated for orders of the type 'order', 'repair' and 'warranty'. A valid dunning letter document must exist.
     * @tag Document
     * @param int $orderId The ID of the order
     * @param array $query
     *      - *documentDate* - string - optional
     *          - If not set, the current date will be used. The date has to be entered in W3C format, e.g. '2019-05-29T13:33:23+02:00'.
     *      - *comment* - string - optional
     *          - Comment that appears below the stock units.
     */
    public function createOrdersDocumentsReversalDunningLetterGenerateByOrderId(int $orderId, array $query = []): void
    {
        $this->api(array_merge(["/rest/orders/{$orderId}/documents/reversal_dunning_letter/generate"], $query), 'POST');
    }
                    
    /**
     * @description Generate refund reversal document of an order. The ID of the order must be specified.
The document can only be generated for orders of the type 'credit note'. A valid credit note document must exist.
     * @tag Document
     * @param int $orderId The ID of the order
     * @param array $query
     *      - *documentDate* - string - optional
     *          - If not set, the current date will be used. The date has to be entered in W3C format, e.g. '2019-05-29T13:33:23+02:00'.
     *      - *comment* - string - optional
     *          - Comment that appears below the stock units.
     */
    public function createOrdersDocumentsReversalRefundGenerateByOrderId(int $orderId, array $query = []): void
    {
        $this->api(array_merge(["/rest/orders/{$orderId}/documents/reversal_refund/generate"], $query), 'POST');
    }
                    
    /**
     * @description Generate success confirmation of an order. The ID of the order must be specified.
The document can only be generated for orders of the type 'order', 'warranty', 'repair', 'advance order' and 'offer'.
     * @tag Document
     * @param int $orderId The ID of the order
     * @param array $query
     *      - *documentDate* - string - optional
     *          - If not set, the current date will be used. The date has to be entered in W3C format, e.g. '2019-05-29T13:33:23+02:00'.
     *      - *comment* - string - optional
     *          - Comment that appears below the stock units.
     */
    public function createOrdersDocumentsSuccessConfirmationGenerateByOrderId(int $orderId, array $query = []): void
    {
        $this->api(array_merge(["/rest/orders/{$orderId}/documents/success_confirmation/generate"], $query), 'POST');
    }
                    
    /**
     * @description Deletes document of an order. The ID of the order and the ID of the document must be specified.
     * @tag Document
     * @param int $orderId The ID of the order
     * @param int $documentId The ID of the document
     */
    public function deleteOrdersDocumentByOrderIdDocumentId(int $orderId, int $documentId): void
    {
        $this->api("/rest/orders/{$orderId}/documents/{$documentId}", 'DELETE');
    }
                    
    /**
     * @description Archives a document of an order. The ID of the order and the ID of the document must be specified.
     * @tag Document
     * @param int $orderId The ID of the order
     * @param int $documentId The ID of the document
     */
    public function createOrdersDocumentsArchiveByOrderIdDocumentId(int $orderId, int $documentId): void
    {
        $this->api("/rest/orders/{$orderId}/documents/{$documentId}/archive", 'POST');
    }
                    
    /**
     * @description Lists documents of an order. The ID of the order must be specified. In addition a type can be specified.
     * @tag Document
     * @param int $orderId The ID of the order
     * @param string $type The type of the order document. The available types are receipt, zReport, tillCount, posCouponReceipt, posInvoice, posInvoiceCancellation, cancellation, invoiceExternal, invoice, deliveryNote, poDeliveryNote, creditNote, creditNoteExternal, orderConfirmation, offer, dunningLetter, reversalDunningLetter, returnNote, successConfirmation, correction, reorder, uploaded.
     * @param array $query
     *      - *createdAtFrom* - string - optional
     *          - Filter that restricts the search result to documents that were created on the specified date. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *createdAtTo* - string - optional
     *          - Filter that restricts the search result to documents that were created within a certain period of time. This filter can be used alone or can be combined with the CreatedAtFrom filter. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *updatedAtFrom* - string - optional
     *          - Filter that restricts the search result to documents that were updated on the specified date. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *updatedAtTo* - string - optional
     *          - Filter that restricts the search result to documents that were updated within a certain period of time. This filter can be used alone or can be combined with the UpdatedAtFrom filter. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *displayDateFrom* - string - optional
     *          - Filter that restricts the search result to documents that were displayed on the specified date. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *displayDateTo* - string - optional
     *          - Filter that restricts the search result to documents that were displayed within a certain period of time. This filter can be used alone or can be combined with the displayDateFrom filter. The date has to be in the W3C format, e.g. '2016-10-24T13:33:23+02:00'.
     *      - *with* - array - optional
     *          - Load additional relations for a document. Currently possible are:
    <ul>
    <li>'references' = The document reference objects that are associated with the document.</li>
    </ul>
    Example: <code>?with[]=references</code>
     *      - *withContent* - boolean - optional
     *          - Load also the document content as base64 encoded string.
     * @return array
     *      - *page* - integer
     *          - Current page of the response
     *      - *totalsCount* - integer
     *          - The total number of entries in the response
     *      - *isLastPage* - boolean
     *          - Flag that indicates if the page shown is the last page of the response
     *      - *lastPageNumber* - integer
     *          - The last page number
     *      - *firstOnPage* - integer
     *          - The index of the first item of the current page result
     *      - *lastOnPage* - integer
     *          - The index of the last item of the current page result
     *      - *itemsPerPage* - integer
     *          - The requested amount of items per result page
     *      - *entries* - array
     *          - List of Document
     */
    public function getOrdersDocumentsTypeByOrderIdType(int $orderId, string $type, array $query = []): array
    {
        return $this->api(array_merge(["/rest/orders/{$orderId}/documents/{type?}"], $query));
    }
                    
    /**
     * @description Uploads order documents. The ID of the order and the document type must be specified.
     * @tag Document
     * @param int $orderId The ID of the order
     * @param string $type The document type. Supported types are 'invoiceExternal', 'deliveryNote', 'poDeliveryNote', 'orderConfirmation', 'offer', 'dunningLetter', 'reversalDunningLetter', 'returnNote', 'successConfirmation', 'correction', 'creditNoteExternal', 'reorder', 'uploaded'.
     * @param array $data 
     * @return array
     */
    public function createOrdersDocumentByOrderIdType(int $orderId, string $type, array $data): array
    {
        return $this->api("/rest/orders/{$orderId}/documents/{$type}", 'POST', $data);
    }
                    
    /**
     * @description Get current invoice or credit note of an order. The ID of the order must be specified. The last valid document for which no reversal document exists is found.
     * @tag Document
     * @param int $orderId The ID of the order
     * @param string $type The type of the order document. The available types are invoice, creditNote, dunningLetter
     * @param array $query
     *      - *withContent* - boolean - optional
     *          - Load also the document content as base64 encoded string.
     * @return array
     *      - *id* - integer
     *          - The ID of the document
     *      - *type* - string
     *          - The type of the document. The following types are available:
                           <ul>
    <li>admin</li>
    <li>blog</li>
 <li>category</li>
 <li>correction_document</li>
 <li>credit_note</li>
    <li>credit_note_external</li>
       <li>customer</li>
 <li>delivery_note</li>
    <li>dunning_letter</li>
       <li>ebics_hash</li>
    <li>facet</li>
    <li>invoice</li>
    <li>invoice_external</li>
                               <li>pos_invoice</li>
                               <li>pos_invoice_cancellation</li>
 <li>item</li>
 <li>multi_credit_note</li>
    <li>multi_invoice</li>
       <li>offer</li>
    <li>order_confirmation</li>
       <li>pickup_delivery</li>
    <li>receipt</li>
                               <li>refund_reversal</li>
    <li>reorder</li>
    <li>repair_bill</li>
    <li>return_note</li>
       <li>reversal_document</li>
       <li>settlement_report</li>
    <li>success_confirmation</li>
    <li>ticket</li>
    <li>webshop</li>
  <li>webshop_customer</li>
    <li>z_report</li>
    <li>shipping_label</li>
    <li>shipping_export_label</li>
    <li>returns_label</li>
                               <li>reversal_dunning_letter</l>
</ul>
     *      - *number* - integer
     *          - The document number
     *      - *numberWithPrefix* - string
     *          - The document number with prefix
     *      - *path* - string
     *          - The path to the document
     *      - *userId* - integer
     *          - The ID of the user
     *      - *source* - string
     *          - The source where the document was generated. Possible sources are 'klarna', 'soap', 'admin', 'hitmeister', 'paypal' and 'rest'.
     *      - *displayDate* - string
     *          - The date displayed on the document
     *      - *status* - string
     *          - The generation status of the document ("pending", "faulty" or "done"
     *      - *content* - string
     *          - The base64 encoded content of the document.
     */
    public function getOrdersDocumentsCurrentByOrderIdType(int $orderId, string $type, array $query = []): array
    {
        return $this->api(array_merge(["/rest/orders/{$orderId}/documents/{$type}/current"], $query));
    }
                    
    /**
     * @description Generate document of an order. The ID of the order and the type of the document must be specified.
     * @tag Document
     * @param int $orderId 
     * @param int $type 
     */
    public function createOrdersDocumentsGenerateByOrderIdType(int $orderId, int $type): void
    {
        $this->api("/rest/orders/{$orderId}/documents/{$type}/generate", 'POST');
    }
                    
    /**
     * @description Get most recent document of an order. The ID of the order must be specified.
     * @tag Document
     * @param int $orderId The ID of the order
     * @param string $type The type of the order document. The available types are receipt, invoiceExternal, invoice, deliveryNote, poDeliveryNote, creditNote, creditNoteExternal, orderConfirmation, offer, dunningLetter, reversalDunningLetter, returnNote, successConfirmation, correction, reversal, reversalRefund, .
     * @param array $query
     *      - *withContent* - boolean - optional
     *          - Load also the document content as base64 encoded string.
     * @return array
     *      - *id* - integer
     *          - The ID of the document
     *      - *type* - string
     *          - The type of the document. The following types are available:
                           <ul>
    <li>admin</li>
    <li>blog</li>
 <li>category</li>
 <li>correction_document</li>
 <li>credit_note</li>
    <li>credit_note_external</li>
       <li>customer</li>
 <li>delivery_note</li>
    <li>dunning_letter</li>
       <li>ebics_hash</li>
    <li>facet</li>
    <li>invoice</li>
    <li>invoice_external</li>
                               <li>pos_invoice</li>
                               <li>pos_invoice_cancellation</li>
 <li>item</li>
 <li>multi_credit_note</li>
    <li>multi_invoice</li>
       <li>offer</li>
    <li>order_confirmation</li>
       <li>pickup_delivery</li>
    <li>receipt</li>
                               <li>refund_reversal</li>
    <li>reorder</li>
    <li>repair_bill</li>
    <li>return_note</li>
       <li>reversal_document</li>
       <li>settlement_report</li>
    <li>success_confirmation</li>
    <li>ticket</li>
    <li>webshop</li>
  <li>webshop_customer</li>
    <li>z_report</li>
    <li>shipping_label</li>
    <li>shipping_export_label</li>
    <li>returns_label</li>
                               <li>reversal_dunning_letter</l>
</ul>
     *      - *number* - integer
     *          - The document number
     *      - *numberWithPrefix* - string
     *          - The document number with prefix
     *      - *path* - string
     *          - The path to the document
     *      - *userId* - integer
     *          - The ID of the user
     *      - *source* - string
     *          - The source where the document was generated. Possible sources are 'klarna', 'soap', 'admin', 'hitmeister', 'paypal' and 'rest'.
     *      - *displayDate* - string
     *          - The date displayed on the document
     *      - *status* - string
     *          - The generation status of the document ("pending", "faulty" or "done"
     *      - *content* - string
     *          - The base64 encoded content of the document.
     */
    public function getOrdersDocumentsRecentByOrderIdType(int $orderId, string $type, array $query = []): array
    {
        return $this->api(array_merge(["/rest/orders/{$orderId}/documents/{$type}/recent"], $query));
    }
    
}
