<?php

namespace lujie\amazon\advertising\api;

use Yii;
use Iterator;

/**
* This class is autogenerated by the OpenAPI gii generator
* @description Measurement management.
*/
class MeasurementV3 extends \lujie\amazon\advertising\BaseAmazonAdvertisingClient
{

            
    /**
     * @description Gets the survey question templates for the specific vendor product(s).     * @tag Measurement
     * @param array $query
     *      - *vendorProductIds* - array - optional
     *          - Vendor product canonical identifier to filter with.
     *      - *surveyQuestionTemplateIds* - array - optional
     *          - Vendor product survey question template identifier to filter with.
     *      - *nextToken* - string - optional
     *          - Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.
     *      - *maxResults* - int - optional
     *          - Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.
     * @return Iterator
     *      - *surveyQuestionTemplates* - array
     *      - *totalResults* - integer
     *          - The total number of templates.
     *      - *nextToken* - string
     */
    public function eachdorProductSurveyQuestionTemplates(array $query = [], string $contentType = 'application/vnd.measurementvendor.v1.1+json'): Iterator
    {
        return $this->eachInternal('vendorProductSurveyQuestionTemplates', func_get_args());
    }
        
    /**
     * @description Gets the survey question templates for the specific vendor product(s).     * @tag Measurement
     * @param array $query
     *      - *vendorProductIds* - array - optional
     *          - Vendor product canonical identifier to filter with.
     *      - *surveyQuestionTemplateIds* - array - optional
     *          - Vendor product survey question template identifier to filter with.
     *      - *nextToken* - string - optional
     *          - Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.
     *      - *maxResults* - int - optional
     *          - Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.
     * @return Iterator
     *      - *surveyQuestionTemplates* - array
     *      - *totalResults* - integer
     *          - The total number of templates.
     *      - *nextToken* - string
     */
    public function batchdorProductSurveyQuestionTemplates(array $query = [], string $contentType = 'application/vnd.measurementvendor.v1.1+json'): Iterator
    {
        return $this->batchInternal('vendorProductSurveyQuestionTemplates', func_get_args());
    }
    
    /**
     * @description Gets the survey question templates for the specific vendor product(s).     * @tag Measurement
     * @param array $query
     *      - *vendorProductIds* - array - optional
     *          - Vendor product canonical identifier to filter with.
     *      - *surveyQuestionTemplateIds* - array - optional
     *          - Vendor product survey question template identifier to filter with.
     *      - *nextToken* - string - optional
     *          - Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.
     *      - *maxResults* - int - optional
     *          - Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.
     * @return array
     *      - *surveyQuestionTemplates* - array
     *      - *totalResults* - integer
     *          - The total number of templates.
     *      - *nextToken* - string
     */
    public function vendorProductSurveyQuestionTemplates(array $query = [], string $contentType = 'application/vnd.measurementvendor.v1.1+json'): array
    {
        return $this->api(array_merge(["/measurement/vendorProducts/surveyQuestionTemplates"], $query), ['content-type' => $contentType, 'accept' => $contentType]);
    }
                    
    /**
     * @description Create new DSP BRAND_LIFT studies.     * @tag Measurement
     * @param array $data An array of study objects. For each object, specify required fields and their values. Maximum length of the array is 1.
     * @return array
     *      - *requestId* - string
     *          - Request Id that uniquely identifies your request.
     *      - *responses* - array
     */
    public function createDSPBrandLiftStudies(array $data, string $contentType = 'application/vnd.studymanagement.v1.1+json'): array
    {
        return $this->api("/dsp/measurement/studies/brandLift", 'POST', $data, ['content-type' => $contentType, 'accept' => $contentType]);
    }
            
    /**
     * @description Gets one or more DSP BRAND_LIFT studies with requested study identifiers or an advertiser identifier.     * @tag Measurement
     * @param array $query
     *      - *studyIdFilters* - array - optional
     *          - Study canonical identifier to filter with. Either one of studyIdFilters or advertiserId should be provided.
     *      - *advertiserId* - string - optional
     *          - The advertiser canonical identifier. Either one of studyIdFilters or advertiserId should be provided.
     *      - *nextToken* - string - optional
     *          - Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.
     *      - *maxResults* - int - optional
     *          - Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.
     * @return Iterator
     *      - *nextToken* - string
     *      - *measurements* - array
     */
    public function eachDSPBrandLiftStudies(array $query = [], string $contentType = 'application/vnd.studymanagement.v1.1+json'): Iterator
    {
        return $this->eachInternal('getDSPBrandLiftStudies', func_get_args());
    }
        
    /**
     * @description Gets one or more DSP BRAND_LIFT studies with requested study identifiers or an advertiser identifier.     * @tag Measurement
     * @param array $query
     *      - *studyIdFilters* - array - optional
     *          - Study canonical identifier to filter with. Either one of studyIdFilters or advertiserId should be provided.
     *      - *advertiserId* - string - optional
     *          - The advertiser canonical identifier. Either one of studyIdFilters or advertiserId should be provided.
     *      - *nextToken* - string - optional
     *          - Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.
     *      - *maxResults* - int - optional
     *          - Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.
     * @return Iterator
     *      - *nextToken* - string
     *      - *measurements* - array
     */
    public function batchDSPBrandLiftStudies(array $query = [], string $contentType = 'application/vnd.studymanagement.v1.1+json'): Iterator
    {
        return $this->batchInternal('getDSPBrandLiftStudies', func_get_args());
    }
    
    /**
     * @description Gets one or more DSP BRAND_LIFT studies with requested study identifiers or an advertiser identifier.     * @tag Measurement
     * @param array $query
     *      - *studyIdFilters* - array - optional
     *          - Study canonical identifier to filter with. Either one of studyIdFilters or advertiserId should be provided.
     *      - *advertiserId* - string - optional
     *          - The advertiser canonical identifier. Either one of studyIdFilters or advertiserId should be provided.
     *      - *nextToken* - string - optional
     *          - Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.
     *      - *maxResults* - int - optional
     *          - Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.
     * @return array
     *      - *nextToken* - string
     *      - *measurements* - array
     */
    public function getDSPBrandLiftStudies(array $query = [], string $contentType = 'application/vnd.studymanagement.v1.1+json'): array
    {
        return $this->api(array_merge(["/dsp/measurement/studies/brandLift"], $query), ['content-type' => $contentType, 'accept' => $contentType]);
    }
                
    /**
     * @description Update DSP BRAND_LIFT studies. This will be a full update.     * @tag Measurement
     * @param array $data An array of measurement objects. For each object, specify required fields and their values. Maximum length of the array is 1.
     * @return array
     *      - *requestId* - string
     *          - Request Id that uniquely identifies your request.
     *      - *responses* - array
     */
    public function updateDSPBrandLiftStudies(array $data, string $contentType = 'application/vnd.studymanagement.v1.1+json'): array
    {
        return $this->api("/dsp/measurement/studies/brandLift", 'PUT', $data, ['content-type' => $contentType, 'accept' => $contentType]);
    }
                    
    /**
     * @description Checks eligibility against all vendor products.     * @tag Measurement
     * @param array $data Fetch measurement vendor products request object.
     * @param array $query
     *      - *nextToken* - string - optional
     *          - Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.
     *      - *maxResults* - int - optional
     *          - Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.
     * @return array
     *      - *metadata* - 
     *      - *nextToken* - string
     *      - *vendorProductEligibilities* - array
     */
    public function checkPlanningEligibility(array $data, array $query = [], string $contentType = 'application/vnd.measurementeligibility.v1.3+json'): array
    {
        return $this->api(array_merge(["/measurement/planning/eligibility"], $query), 'POST', $data, ['content-type' => $contentType, 'accept' => $contentType]);
    }
                    
    /**
     * @description Create new DSP CREATIVE_TESTING study.     * @tag Measurement
     * @param array $data Create object for DSP CREATIVE_TESTING study.
     * @return array
     */
    public function createDSPCreativeTestingStudy(array $data, string $contentType = 'application/vnd.studymanagement.v1.2+json'): array
    {
        return $this->api("/dsp/measurement/studies/creativeTesting", 'POST', $data, ['content-type' => $contentType, 'accept' => $contentType]);
    }
            
    /**
     * @description Gets one or more DSP CREATIVE_TESTING studies with requested study identifiers or an advertiser identifier.     * @tag Measurement
     * @param array $query
     *      - *studyIds* - array - optional
     *          - Study canonical identifier to filter with. Either one of studyIds or advertiserId should be provided.
     *      - *advertiserId* - string - optional
     *          - The advertiser canonical identifier. Either one of studyIds or advertiserId should be provided.
     *      - *nextToken* - string - optional
     *          - Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.
     *      - *maxResults* - int - optional
     *          - Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.
     * @return Iterator
     *      - *nextToken* - string
     *      - *measurements* - array
     */
    public function eachDSPCreativeTestingStudies(array $query = [], string $contentType = 'application/vnd.studymanagement.v1.2+json'): Iterator
    {
        return $this->eachInternal('getDSPCreativeTestingStudies', func_get_args());
    }
        
    /**
     * @description Gets one or more DSP CREATIVE_TESTING studies with requested study identifiers or an advertiser identifier.     * @tag Measurement
     * @param array $query
     *      - *studyIds* - array - optional
     *          - Study canonical identifier to filter with. Either one of studyIds or advertiserId should be provided.
     *      - *advertiserId* - string - optional
     *          - The advertiser canonical identifier. Either one of studyIds or advertiserId should be provided.
     *      - *nextToken* - string - optional
     *          - Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.
     *      - *maxResults* - int - optional
     *          - Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.
     * @return Iterator
     *      - *nextToken* - string
     *      - *measurements* - array
     */
    public function batchDSPCreativeTestingStudies(array $query = [], string $contentType = 'application/vnd.studymanagement.v1.2+json'): Iterator
    {
        return $this->batchInternal('getDSPCreativeTestingStudies', func_get_args());
    }
    
    /**
     * @description Gets one or more DSP CREATIVE_TESTING studies with requested study identifiers or an advertiser identifier.     * @tag Measurement
     * @param array $query
     *      - *studyIds* - array - optional
     *          - Study canonical identifier to filter with. Either one of studyIds or advertiserId should be provided.
     *      - *advertiserId* - string - optional
     *          - The advertiser canonical identifier. Either one of studyIds or advertiserId should be provided.
     *      - *nextToken* - string - optional
     *          - Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.
     *      - *maxResults* - int - optional
     *          - Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.
     * @return array
     *      - *nextToken* - string
     *      - *measurements* - array
     */
    public function getDSPCreativeTestingStudies(array $query = [], string $contentType = 'application/vnd.studymanagement.v1.2+json'): array
    {
        return $this->api(array_merge(["/dsp/measurement/studies/creativeTesting"], $query), ['content-type' => $contentType, 'accept' => $contentType]);
    }
                    
    /**
     * @description Create new study surveys.     * @tag Measurement
     * @param array $data An array of measurement objects. For each object, specify required fields and their values. Maximum length of the array is 1.
     * @return array
     *      - *requestId* - string
     *          - Request Id that uniquely identifies your request.
     *      - *responses* - array
     */
    public function createSurveys(array $data, string $contentType = 'application/vnd.studymanagement.v1.1+json'): array
    {
        return $this->api("/measurement/studies/surveys", 'POST', $data, ['content-type' => $contentType, 'accept' => $contentType]);
    }
            
    /**
     * @description Gets one or more study surveys with requested survey identifiers or a study identifier.     * @tag Measurement
     * @param array $query
     *      - *surveyIds* - array - optional
     *          - Survey canonical identifier to filter with. Either one of surveyIds or studyId should be provided.
     *      - *studyId* - string - optional
     *          - A study canonical identifier. Either one of surveyIds or studyId should be provided.
     *      - *nextToken* - string - optional
     *          - Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.
     *      - *maxResults* - int - optional
     *          - Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.
     * @return Iterator
     *      - *nextToken* - string
     *      - *surveys* - array
     */
    public function eachSurveys(array $query = [], string $contentType = 'application/vnd.studymanagement.v1.1+json'): Iterator
    {
        return $this->eachInternal('getSurveys', func_get_args());
    }
        
    /**
     * @description Gets one or more study surveys with requested survey identifiers or a study identifier.     * @tag Measurement
     * @param array $query
     *      - *surveyIds* - array - optional
     *          - Survey canonical identifier to filter with. Either one of surveyIds or studyId should be provided.
     *      - *studyId* - string - optional
     *          - A study canonical identifier. Either one of surveyIds or studyId should be provided.
     *      - *nextToken* - string - optional
     *          - Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.
     *      - *maxResults* - int - optional
     *          - Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.
     * @return Iterator
     *      - *nextToken* - string
     *      - *surveys* - array
     */
    public function batchSurveys(array $query = [], string $contentType = 'application/vnd.studymanagement.v1.1+json'): Iterator
    {
        return $this->batchInternal('getSurveys', func_get_args());
    }
    
    /**
     * @description Gets one or more study surveys with requested survey identifiers or a study identifier.     * @tag Measurement
     * @param array $query
     *      - *surveyIds* - array - optional
     *          - Survey canonical identifier to filter with. Either one of surveyIds or studyId should be provided.
     *      - *studyId* - string - optional
     *          - A study canonical identifier. Either one of surveyIds or studyId should be provided.
     *      - *nextToken* - string - optional
     *          - Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.
     *      - *maxResults* - int - optional
     *          - Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.
     * @return array
     *      - *nextToken* - string
     *      - *surveys* - array
     */
    public function getSurveys(array $query = [], string $contentType = 'application/vnd.studymanagement.v1.1+json'): array
    {
        return $this->api(array_merge(["/measurement/studies/surveys"], $query), ['content-type' => $contentType, 'accept' => $contentType]);
    }
                
    /**
     * @description Update measurement surveys. This will be a full update.     * @tag Measurement
     * @param array $data An array of survey objects. For each object, specify required fields and their values. Maximum length of the array is 1.
     * @return array
     *      - *requestId* - string
     *          - Request Id that uniquely identifies your request.
     *      - *responses* - array
     */
    public function updateSurveys(array $data, string $contentType = 'application/vnd.studymanagement.v1.1+json'): array
    {
        return $this->api("/measurement/studies/surveys", 'PUT', $data, ['content-type' => $contentType, 'accept' => $contentType]);
    }
                    
    /**
     * @description Get result of a DSP BRAND_LIFT study. Returns 200 successful response if json resource is requested in Accept header. Returns a 307 Temporary Redirect response if any of the file types is requested and response includes a location header with the value set to an AWS S3 path where the result is located. The path expires after 60 seconds.     * @tag Measurement
     * @param string $studyId The canonical identifier that represents a unique study.
     * @return array
     *      - *totalResponses* - number
     *          - Total number of responses received in the Survey.
     *      - *brandLiftSummary* - array
     *          - Summary of Brand Lift achieved for each objective.
     *      - *studyId* - string
     *          - The canonical Id of Study.
     *      - *surveyResponses* - array
     *          - Detailed response rate for each response in Survey question aggregated by different segments.
     */
    public function getDSPBrandLiftStudyResult(string $studyId, string $contentType = 'application/vnd.measurementresult.v1.1+json'): array
    {
        return $this->api("/measurement/studies/brandLift/{$studyId}/result", ['content-type' => $contentType, 'accept' => $contentType]);
    }
                    
    /**
     * @description Checks the DSP OMNICHANNEL_METRICS study type eligibility status against vendor products.     * @tag Measurement
     * @param array $data The DSP omnichannel metrics eligibility request object.
     * @param array $query
     *      - *nextToken* - string - optional
     *          - Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.
     *      - *maxResults* - int - optional
     *          - Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.
     * @return array
     *      - *metadata* - 
     *      - *nextToken* - string
     *      - *vendorProductEligibilities* - array
     */
    public function checkDSPOmnichannelMetricsEligibility(array $data, array $query = [], string $contentType = 'application/vnd.measurementeligibility.v1.2+json'): array
    {
        return $this->api(array_merge(["/dsp/measurement/eligibility/omnichannelMetrics"], $query), 'POST', $data, ['content-type' => $contentType, 'accept' => $contentType]);
    }
                    
    /**
     * @description Update DSP CREATIVE_TESTING study. This will be a full update.     * @tag Measurement
     * @param string $studyId The canonical identifier that represents a unique study.
     * @param array $data Update object for DSP CREATIVE_TESTING study.
     * @return array
     */
    public function updateDSPCreativeTestingStudy(string $studyId, array $data, string $contentType = 'application/vnd.studymanagement.v1.2+json'): array
    {
        return $this->api("/dsp/measurement/studies/creativeTesting/{$studyId}", 'PUT', $data, ['content-type' => $contentType, 'accept' => $contentType]);
    }
                    
    /**
     * @description Create new DSP AUDIENCE_RESEARCH study.     * @tag Measurement
     * @param array $data Create object for DSP AUDIENCE_RESEARCH study.
     * @return array
     */
    public function createDSPAudienceResearchStudy(array $data, string $contentType = 'application/vnd.studymanagement.v1.2+json'): array
    {
        return $this->api("/dsp/measurement/studies/audienceResearch", 'POST', $data, ['content-type' => $contentType, 'accept' => $contentType]);
    }
            
    /**
     * @description Gets one or more DSP AUDIENCE_RESEARCH studies with requested study identifiers or an advertiser identifier.     * @tag Measurement
     * @param array $query
     *      - *studyIds* - array - optional
     *          - Study canonical identifier to filter with. Either one of studyIds or advertiserId should be provided.
     *      - *advertiserId* - string - optional
     *          - The advertiser canonical identifier. Either one of studyIds or advertiserId should be provided.
     *      - *nextToken* - string - optional
     *          - Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.
     *      - *maxResults* - int - optional
     *          - Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.
     * @return Iterator
     *      - *nextToken* - string
     *      - *measurements* - array
     */
    public function eachDSPAudienceResearchStudies(array $query = [], string $contentType = 'application/vnd.studymanagement.v1.2+json'): Iterator
    {
        return $this->eachInternal('getDSPAudienceResearchStudies', func_get_args());
    }
        
    /**
     * @description Gets one or more DSP AUDIENCE_RESEARCH studies with requested study identifiers or an advertiser identifier.     * @tag Measurement
     * @param array $query
     *      - *studyIds* - array - optional
     *          - Study canonical identifier to filter with. Either one of studyIds or advertiserId should be provided.
     *      - *advertiserId* - string - optional
     *          - The advertiser canonical identifier. Either one of studyIds or advertiserId should be provided.
     *      - *nextToken* - string - optional
     *          - Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.
     *      - *maxResults* - int - optional
     *          - Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.
     * @return Iterator
     *      - *nextToken* - string
     *      - *measurements* - array
     */
    public function batchDSPAudienceResearchStudies(array $query = [], string $contentType = 'application/vnd.studymanagement.v1.2+json'): Iterator
    {
        return $this->batchInternal('getDSPAudienceResearchStudies', func_get_args());
    }
    
    /**
     * @description Gets one or more DSP AUDIENCE_RESEARCH studies with requested study identifiers or an advertiser identifier.     * @tag Measurement
     * @param array $query
     *      - *studyIds* - array - optional
     *          - Study canonical identifier to filter with. Either one of studyIds or advertiserId should be provided.
     *      - *advertiserId* - string - optional
     *          - The advertiser canonical identifier. Either one of studyIds or advertiserId should be provided.
     *      - *nextToken* - string - optional
     *          - Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.
     *      - *maxResults* - int - optional
     *          - Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.
     * @return array
     *      - *nextToken* - string
     *      - *measurements* - array
     */
    public function getDSPAudienceResearchStudies(array $query = [], string $contentType = 'application/vnd.studymanagement.v1.2+json'): array
    {
        return $this->api(array_merge(["/dsp/measurement/studies/audienceResearch"], $query), ['content-type' => $contentType, 'accept' => $contentType]);
    }
                    
    /**
     * @description Checks the DSP AUDIENCE_RESEARCH study type eligibility status against vendor products.     * @tag Measurement
     * @param array $data The DSP audience research study eligibility request object.
     * @param array $query
     *      - *nextToken* - string - optional
     *          - Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.
     *      - *maxResults* - int - optional
     *          - Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.
     * @return array
     *      - *metadata* - 
     *      - *nextToken* - string
     *      - *vendorProductEligibilities* - array
     */
    public function checkDSPAudienceResearchEligibility(array $data, array $query = [], string $contentType = 'application/vnd.measurementeligibility.v1.2+json'): array
    {
        return $this->api(array_merge(["/dsp/measurement/eligibility/audienceResearch"], $query), 'POST', $data, ['content-type' => $contentType, 'accept' => $contentType]);
    }
                    
    /**
     * @description Lists the supported measurement vendors products.     * @tag Measurement
     * @param array $data Fetch measurement vendor products request object.
     *      - *fundingTypeFilters* - array
     *          - FundingType filters to be applied when fetching measurement vendor products. If not supplied we will include all available vendor products.
     *      - *objectiveTypeFilters* - array
     *          - StudyObjective filters to be applied when fetching measurement vendor products. If not supplied we will include all available vendor products.
     *      - *vendorProductIdFilters* - array
     *          - VendorProduct identifier filters to be applied when fetching measurement vendor products. If not supplied we will include all available vendor products.
     *      - *adTypeFilters* - array
     *          - AdType filters to be applied when fetching measurement vendor products. If not supplied we will include all available vendor products.
     *      - *vendorTypeFilters* - array
     *          - VendorType filters to be applied when fetching measurement vendor products. If not supplied we will include all available vendor products.
     *      - *studyTypeFilters* - array
     *          - StudyType filters to be applied when fetching measurement vendor products. If not supplied we will include all available vendor products.
     * @param array $query
     *      - *nextToken* - string - optional
     *          - Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.
     *      - *maxResults* - int - optional
     *          - Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.
     * @return array
     *      - *totalResults* - integer
     *          - The total number of vendor products.
     *      - *vendorProducts* - array
     *      - *nextToken* - string
     */
    public function vendorProduct(array $data, array $query = [], string $contentType = 'application/vnd.measurementvendor.v1.1+json'): array
    {
        return $this->api(array_merge(["/measurement/vendorProducts/list"], $query), 'POST', $data, ['content-type' => $contentType, 'accept' => $contentType]);
    }
                
    /**
     * @description Gets base study objects given a list of studyIds or a list of advertiserIds.     * @tag Measurement
     * @param array $query
     *      - *studyIds* - array - optional
     *          - Study canonical identifier to filter with. Either one of studyIds or advertiserId should be provided.
     *      - *advertiserId* - string - optional
     *          - The advertiser canonical identifier. Either one of studyIds or advertiserId should be provided.
     *      - *nextToken* - string - optional
     *          - Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.
     *      - *maxResults* - int - optional
     *          - Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.
     * @return Iterator
     *      - *nextToken* - string
     *      - *measurements* - array
     */
    public function eachStudies(array $query = [], string $contentType = 'application/vnd.studymanagement.v1.1+json'): Iterator
    {
        return $this->eachInternal('getStudies', func_get_args());
    }
        
    /**
     * @description Gets base study objects given a list of studyIds or a list of advertiserIds.     * @tag Measurement
     * @param array $query
     *      - *studyIds* - array - optional
     *          - Study canonical identifier to filter with. Either one of studyIds or advertiserId should be provided.
     *      - *advertiserId* - string - optional
     *          - The advertiser canonical identifier. Either one of studyIds or advertiserId should be provided.
     *      - *nextToken* - string - optional
     *          - Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.
     *      - *maxResults* - int - optional
     *          - Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.
     * @return Iterator
     *      - *nextToken* - string
     *      - *measurements* - array
     */
    public function batchStudies(array $query = [], string $contentType = 'application/vnd.studymanagement.v1.1+json'): Iterator
    {
        return $this->batchInternal('getStudies', func_get_args());
    }
    
    /**
     * @description Gets base study objects given a list of studyIds or a list of advertiserIds.     * @tag Measurement
     * @param array $query
     *      - *studyIds* - array - optional
     *          - Study canonical identifier to filter with. Either one of studyIds or advertiserId should be provided.
     *      - *advertiserId* - string - optional
     *          - The advertiser canonical identifier. Either one of studyIds or advertiserId should be provided.
     *      - *nextToken* - string - optional
     *          - Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.
     *      - *maxResults* - int - optional
     *          - Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.
     * @return array
     *      - *nextToken* - string
     *      - *measurements* - array
     */
    public function getStudies(array $query = [], string $contentType = 'application/vnd.studymanagement.v1.1+json'): array
    {
        return $this->api(array_merge(["/measurement/studies"], $query), ['content-type' => $contentType, 'accept' => $contentType]);
    }
                
    /**
     * @description Cancel existing studies.     * @tag Measurement
     * @param array $query
     *      - *studyIds* - array - optional
     *          - Study canonical identifiers to cancel.
     * @return array
     *      - *requestId* - string
     *          - Request Id that uniquely identifies your request.
     *      - *responses* - array
     */
    public function cancelMeasurementStudies(array $query = [], string $contentType = 'application/vnd.studymanagement.v1.1+json'): array
    {
        return $this->api(array_merge(["/measurement/studies"], $query), 'DELETE', ['content-type' => $contentType, 'accept' => $contentType]);
    }
                    
    /**
     * @description Create new DSP OMNICHANNEL_METRICS studies.     * @tag Measurement
     * @param array $data An array of study objects. For each object, specify required fields and their values. Maximum length of the array is 1.
     * @return array
     *      - *requestId* - string
     *          - Request Id that uniquely identifies your request.
     *      - *responses* - array
     */
    public function createDSPOmnichannelMetricsStudies(array $data, string $contentType = 'application/vnd.studymanagement.v1.2+json'): array
    {
        return $this->api("/dsp/measurement/studies/omnichannelMetrics", 'POST', $data, ['content-type' => $contentType, 'accept' => $contentType]);
    }
            
    /**
     * @description Gets one or more DSP OMNICHANNEL_METRICS studies with requested study identifiers or an advertiser identifier.     * @tag Measurement
     * @param array $query
     *      - *studyIds* - array - optional
     *          - Study canonical identifier to filter with. Either one of studyIds or advertiserId should be provided.
     *      - *advertiserId* - string - optional
     *          - The advertiser canonical identifier. Either one of studyIdFilters or advertiserId should be provided.
     *      - *nextToken* - string - optional
     *          - Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.
     *      - *maxResults* - int - optional
     *          - Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.
     * @return Iterator
     *      - *nextToken* - string
     *      - *measurements* - array
     */
    public function eachDSPOmnichannelMetricsStudies(array $query = [], string $contentType = 'application/vnd.studymanagement.v1.2+json'): Iterator
    {
        return $this->eachInternal('getDSPOmnichannelMetricsStudies', func_get_args());
    }
        
    /**
     * @description Gets one or more DSP OMNICHANNEL_METRICS studies with requested study identifiers or an advertiser identifier.     * @tag Measurement
     * @param array $query
     *      - *studyIds* - array - optional
     *          - Study canonical identifier to filter with. Either one of studyIds or advertiserId should be provided.
     *      - *advertiserId* - string - optional
     *          - The advertiser canonical identifier. Either one of studyIdFilters or advertiserId should be provided.
     *      - *nextToken* - string - optional
     *          - Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.
     *      - *maxResults* - int - optional
     *          - Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.
     * @return Iterator
     *      - *nextToken* - string
     *      - *measurements* - array
     */
    public function batchDSPOmnichannelMetricsStudies(array $query = [], string $contentType = 'application/vnd.studymanagement.v1.2+json'): Iterator
    {
        return $this->batchInternal('getDSPOmnichannelMetricsStudies', func_get_args());
    }
    
    /**
     * @description Gets one or more DSP OMNICHANNEL_METRICS studies with requested study identifiers or an advertiser identifier.     * @tag Measurement
     * @param array $query
     *      - *studyIds* - array - optional
     *          - Study canonical identifier to filter with. Either one of studyIds or advertiserId should be provided.
     *      - *advertiserId* - string - optional
     *          - The advertiser canonical identifier. Either one of studyIdFilters or advertiserId should be provided.
     *      - *nextToken* - string - optional
     *          - Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.
     *      - *maxResults* - int - optional
     *          - Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.
     * @return array
     *      - *nextToken* - string
     *      - *measurements* - array
     */
    public function getDSPOmnichannelMetricsStudies(array $query = [], string $contentType = 'application/vnd.studymanagement.v1.2+json'): array
    {
        return $this->api(array_merge(["/dsp/measurement/studies/omnichannelMetrics"], $query), ['content-type' => $contentType, 'accept' => $contentType]);
    }
                
    /**
     * @description Update DSP OMNICHANNEL_METRICS studies. This will be a full update.     * @tag Measurement
     * @param array $data An array of measurement objects. For each object, specify required fields and their values. Maximum length of the array is 1.
     * @return array
     *      - *requestId* - string
     *          - Request Id that uniquely identifies your request.
     *      - *responses* - array
     */
    public function updateDSPOmnichannelMetricsStudies(array $data, string $contentType = 'application/vnd.studymanagement.v1.2+json'): array
    {
        return $this->api("/dsp/measurement/studies/omnichannelMetrics", 'PUT', $data, ['content-type' => $contentType, 'accept' => $contentType]);
    }
                    
    /**
     * @description Checks the DSP CREATIVE_TESTING study type eligibility status against vendor products.     * @tag Measurement
     * @param array $data The DSP creative testing study eligibility request object.
     * @param array $query
     *      - *nextToken* - string - optional
     *          - Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.
     *      - *maxResults* - int - optional
     *          - Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.
     * @return array
     *      - *metadata* - 
     *      - *nextToken* - string
     *      - *vendorProductEligibilities* - array
     */
    public function checkDSPCreativeTestingEligibility(array $data, array $query = [], string $contentType = 'application/vnd.measurementeligibility.v1.2+json'): array
    {
        return $this->api(array_merge(["/dsp/measurement/eligibility/creativeTesting"], $query), 'POST', $data, ['content-type' => $contentType, 'accept' => $contentType]);
    }
                
    /**
     * @description Gets the policies for the specific vendor product(s).     * @tag Measurement
     * @param array $query
     *      - *vendorProductIds* - array - optional
     *          - Vendor product canonical identifier to filter with.
     *      - *nextToken* - string - optional
     *          - Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.
     *      - *maxResults* - int - optional
     *          - Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.
     * @return Iterator
     *      - *totalResults* - integer
     *          - The total number of vendor products.
     *      - *nextToken* - string
     *      - *policies* - array
     */
    public function eachdorProductPolicy(array $query = [], string $contentType = 'application/vnd.measurementvendor.v1.1+json'): Iterator
    {
        return $this->eachInternal('vendorProductPolicy', func_get_args());
    }
        
    /**
     * @description Gets the policies for the specific vendor product(s).     * @tag Measurement
     * @param array $query
     *      - *vendorProductIds* - array - optional
     *          - Vendor product canonical identifier to filter with.
     *      - *nextToken* - string - optional
     *          - Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.
     *      - *maxResults* - int - optional
     *          - Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.
     * @return Iterator
     *      - *totalResults* - integer
     *          - The total number of vendor products.
     *      - *nextToken* - string
     *      - *policies* - array
     */
    public function batchdorProductPolicy(array $query = [], string $contentType = 'application/vnd.measurementvendor.v1.1+json'): Iterator
    {
        return $this->batchInternal('vendorProductPolicy', func_get_args());
    }
    
    /**
     * @description Gets the policies for the specific vendor product(s).     * @tag Measurement
     * @param array $query
     *      - *vendorProductIds* - array - optional
     *          - Vendor product canonical identifier to filter with.
     *      - *nextToken* - string - optional
     *          - Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.
     *      - *maxResults* - int - optional
     *          - Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.
     * @return array
     *      - *totalResults* - integer
     *          - The total number of vendor products.
     *      - *nextToken* - string
     *      - *policies* - array
     */
    public function vendorProductPolicy(array $query = [], string $contentType = 'application/vnd.measurementvendor.v1.1+json'): array
    {
        return $this->api(array_merge(["/measurement/vendorProducts/policies"], $query), ['content-type' => $contentType, 'accept' => $contentType]);
    }
                    
    /**
     * @description Checks the DSP BRAND_LIFT study type eligibility status against vendor products.     * @tag Measurement
     * @param array $data The DSP brand lift eligibility request object.
     * @param array $query
     *      - *nextToken* - string - optional
     *          - Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.
     *      - *maxResults* - int - optional
     *          - Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.
     * @return array
     *      - *metadata* - 
     *      - *nextToken* - string
     *      - *vendorProductEligibilities* - array
     */
    public function checkDSPBrandLiftEligibility(array $data, array $query = [], string $contentType = 'application/vnd.measurementeligibility.v1+json'): array
    {
        return $this->api(array_merge(["/dsp/measurement/eligibility/brandLift"], $query), 'POST', $data, ['content-type' => $contentType, 'accept' => $contentType]);
    }
                    
    /**
     * @description Update DSP AUDIENCE_RESEARCH study. This will be a full update.     * @tag Measurement
     * @param string $studyId The canonical identifier that represents a unique study.
     * @param array $data Update object for DSP AUDIENCE_RESEARCH study.
     * @return array
     */
    public function updateDSPAudienceResearchStudy(string $studyId, array $data, string $contentType = 'application/vnd.studymanagement.v1.2+json'): array
    {
        return $this->api("/dsp/measurement/studies/audienceResearch/{$studyId}", 'PUT', $data, ['content-type' => $contentType, 'accept' => $contentType]);
    }
                    
    /**
     * @description Get result of a DSP AUDIENCE_RESEARCH study. Returns 200 successful response if json resource is requested in Accept header. Returns a 307 Temporary Redirect response if any of the file types is requested and response includes a location header with the value set to an AWS S3 path where the result is located. The path expires after 60 seconds.     * @tag Measurement
     * @param string $studyId The canonical identifier that represents a unique study.
     * @return array
     *      - *totalResponses* - number
     *          - Total number of responses received in the Survey.
     *      - *studyId* - string
     *          - The canonical Id of Study.
     *      - *surveyResponses* - array
     *          - Detailed response rate for each response in Survey question aggregated by different segments.
     */
    public function getDSPAudienceResearchStudyResult(string $studyId, string $contentType = 'application/vnd.measurementresult.v1.2+json'): array
    {
        return $this->api("/dsp/measurement/studies/audienceResearch/{$studyId}/result", ['content-type' => $contentType, 'accept' => $contentType]);
    }
                    
    /**
     * @description Get result of a DSP CREATIVE_TESTING study. Returns 200 successful response if json resource is requested in Accept header. Returns a 307 Temporary Redirect response if any of the file types is requested and response includes a location header with the value set to an AWS S3 path where the result is located. The path expires after 60 seconds.     * @tag Measurement
     * @param string $studyId The canonical identifier that represents a unique study.
     * @return array
     *      - *totalResponses* - number
     *          - Total number of responses received in the Survey.
     *      - *studyId* - string
     *          - The canonical Id of Study.
     *      - *surveyResponses* - array
     *          - Detailed response rate for each response in Survey question aggregated by different segments.
     */
    public function getDSPCreativeTestingStudyResult(string $studyId, string $contentType = 'application/vnd.measurementresult.v1.2+json'): array
    {
        return $this->api("/dsp/measurement/studies/creativeTesting/{$studyId}/result", ['content-type' => $contentType, 'accept' => $contentType]);
    }
                    
    /**
     * @description Search for brands to be used in the OMNICHANNEL_METRICS vendor product.     * @tag Measurement
     * @param array $data Fetch measurement vendor products request object.
     *      - *brandIdFilter* - array
     *          - List of brandIds in the omnichannel metrics brand catalog. Either one of brandIdFilter or brandNameSearch should be provided.
     *      - *brandNameSearch* - string
     *          - Text to search for eligible brands in the omnichannel metrics brand catalog. Either one of brandIdFilter or brandNameSearch should be provided.
     * @param array $query
     *      - *nextToken* - string - optional
     *          - Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.
     *      - *maxResults* - int - optional
     *          - Sets the maximum number of brands in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.
     * @return array
     *      - *totalResults* - integer
     *          - The total number of matched brands.
     *      - *brands* - array
     *      - *nextToken* - string
     */
    public function omnichannelMetricsBrandSearch(array $data, array $query = [], string $contentType = 'application/vnd.ocmbrands.v1.3+json'): array
    {
        return $this->api(array_merge(["/measurement/vendorProducts/omnichannelMetrics/brands/list"], $query), 'POST', $data, ['content-type' => $contentType, 'accept' => $contentType]);
    }
                    
    /**
     * @description Get result of a DSP OMNICHANNEL_METRICS study. Returns a 307 Temporary Redirect response if any of the file types is requested and response includes a location header with the value set to an AWS S3 path where the result is located. The path expires after 60 seconds. Accept header does not support json for OMNICHANNEL_METRICS study type.     * @tag Measurement
     * @param string $studyId The canonical identifier that represents a unique study.
     */
    public function getDSPOmnichannelMetricsStudyResult(string $studyId): void
    {
        $this->api("/dsp/measurement/studies/omnichannelMetrics/{$studyId}/result");
    }
    
}
