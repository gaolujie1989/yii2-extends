<?php

namespace lujie\amazon\advertising\api;

use Yii;
use Iterator;

/**
* This class is autogenerated by the OpenAPI gii generator
* @description 
*/
class OfflineReportV3 extends \lujie\amazon\advertising\BaseAmazonAdvertisingClient
{

                
    /**
     * @description Gets a generation status of a report by id. Uses the `reportId` value from
the response of previously requested report via `POST /reporting/reports`
operation. When `status` is set to `COMPLETED`, the report will be
available to be downloaded at `url`.

Report generation can take as long as 3 hours. Repeated calls to check report status may generate a 429 response,
indicating that your requests have been throttled. To retrieve reports programmatically, your application logic should
institute a delay between requests. For more information,
see [Retry logic with exponential backoff](concepts/rate-limiting#use-retry-logic-with-exponential-backoff).
     * @tag Asynchronous Reports
     * @param string $reportId The identifier of the requested report.
     * @return array
     *      - *reportId* - string
     *          - The identifier of the requested report.
     *      - *endDate* - string
     *          - The end date for the reporting period in YYYY-mm-dd format.
     *      - *configuration* - 
     *      - *urlExpiresAt* - string
     *          - The date at which the download URL for the generated report expires. urlExpires at this time defaults to 3600 seconds but may vary in the future.
     *      - *url* - string
     *          - URL of the generated report.
     *      - *createdAt* - string
     *          - The date at which the report was created in ISO 8601 date time format.
     *      - *fileSize* - number
     *          - The size of the report file, in bytes.
     *      - *failureReason* - string
     *          - Present for failed reports only. The reason why a report failed to generate.
     *      - *name* - string
     *          - Optional. The name of the generated report.
     *      - *generatedAt* - string
     *          - The date at which the report was generated in ISO 8601 date time format.
     *      - *startDate* - string
     *          - The start date for the reporting period in YYYY-mm-dd format.
     *      - *status* - string
     *          - The build status of the report.
  - `PENDING` - Report is created and awaiting processing.
  - `PROCESSING` - Report is processing. Please wait.
  - `COMPLETED` - Report has completed.  Check the `url` for the output file.
  - `FAILED` - Report generation failed.  Check the `failureReason` for details.

     *      - *updatedAt* - string
     *          - The date at which the report was last updated in ISO 8601 date time format.
     */
    public function getAsyncReport(string $reportId): array
    {
        return $this->api("/reporting/reports/{$reportId}");
    }
                
    /**
     * @description Deletes a report by id. Use this operation to cancel a report in a `PENDING` status.     * @tag Asynchronous Reports
     * @param string $reportId The identifier of the requested report.
     * @return array
     *      - *code* - string
     *          - The HTTP status code of the response.
     *      - *reportId* - string
     *          - The identifier of the report.
     *      - *detail* - string
     *          - A human-readable description of the response.
     */
    public function deleteAsyncReport(string $reportId): array
    {
        return $this->api("/reporting/reports/{$reportId}", 'DELETE');
    }
                    
    /**
     * @description Creates a report request. Use this operation to request the creation of a new report for Amazon Advertising Products. Use `adProduct` to specify the Advertising Product of the report.     * @tag Asynchronous Reports
     * @param array $data 
     *      - *endDate* - string
     *          - YYYY-MM-DD format. The maximum lookback window supported depends on the selection of reportTypeId. Most report types support `95 days` as lookback window.
     *      - *configuration* - 
     *      - *name* - string
     *          - The name of the report.
     *      - *startDate* - string
     *          - YYYY-MM-DD format. The maximum lookback window supported depends on the selection of reportTypeId. Most report types support `95 days` as lookback window.
     * @return array
     *      - *reportId* - string
     *          - The identifier of the requested report.
     *      - *endDate* - string
     *          - The end date for the reporting period in YYYY-mm-dd format.
     *      - *configuration* - 
     *      - *urlExpiresAt* - string
     *          - The date at which the download URL for the generated report expires. urlExpires at this time defaults to 3600 seconds but may vary in the future.
     *      - *url* - string
     *          - URL of the generated report.
     *      - *createdAt* - string
     *          - The date at which the report was created in ISO 8601 date time format.
     *      - *fileSize* - number
     *          - The size of the report file, in bytes.
     *      - *failureReason* - string
     *          - Present for failed reports only. The reason why a report failed to generate.
     *      - *name* - string
     *          - Optional. The name of the generated report.
     *      - *generatedAt* - string
     *          - The date at which the report was generated in ISO 8601 date time format.
     *      - *startDate* - string
     *          - The start date for the reporting period in YYYY-mm-dd format.
     *      - *status* - string
     *          - The build status of the report.
  - `PENDING` - Report is created and awaiting processing.
  - `PROCESSING` - Report is processing. Please wait.
  - `COMPLETED` - Report has completed.  Check the `url` for the output file.
  - `FAILED` - Report generation failed.  Check the `failureReason` for details.

     *      - *updatedAt* - string
     *          - The date at which the report was last updated in ISO 8601 date time format.
     */
    public function createAsyncReport(array $data): array
    {
        return $this->api("/reporting/reports", 'POST', $data, ['content-type' => 'application/vnd.createasyncreportrequest.v3+json']);
    }
    
}
