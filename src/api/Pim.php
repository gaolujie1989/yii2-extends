<?php

namespace lujie\plentyMarkets\api;

use Yii;
use Iterator;

/**
* This class is autogenerated by the OpenAPI gii generator
* @description The plentymarkets REST API expands the functionality of the plentymarkets CMS and allows access to resources, i.e. data records, via unique URI paths
*/
class Pim extends \lujie\plentyMarkets\BasePlentyMarketsRestClient
{

                
    /**
     * @description Gets a list of all amazon product types.
     * @tag Pim

     */
    public function getPimAmazonProductTypes(): void
    {
        $this->api("/rest/pim/amazon-product-types");
    }
                    
    /**
     * @description Deletes a list of attributes.
     * @tag Pim

     */
    public function deletePimAttribute(): void
    {
        $this->api("/rest/pim/attributes", 'DELETE');
    }
                
    /**
     * @description Searches attributes. Returns a paginated result.
     * @tag Pim
     * @param array $query
     *      - *with* - string - optional
     *          - Includes the specified information in the results. More than one parameter should be separated by commas. The following parameters are available:<ul><li> 'attributeNames' = The attribute names of the attribute.</li><li> 'values' = The attribute values of the attribute.</li><li> 'maps' = The attribute maps of the attribute.</li></ub>
     *      - *ids* - string - optional
     *          - Filter restricts the result to attributes with the specified IDs. More than one parameter should be separated by commas. Allowed comparators: 'eq', 'in', 'between', 'gte', 'lte', 'gt' and 'lt'.
     *      - *backendName* - string - optional
     *          - Filter restricts the result to attributes with the specified backend name. Allowed comparators: 'eq' and 'in'.
     *      - *name* - string - optional
     *          - Filter restricts the result to attributes with the specified name. Allowed comparators: 'eq'.
     *      - *position* - int - optional
     *          - Filter restricts the result to attributes with the specified position. Allowed comparator: 'eq', 'between', 'gte', 'lte', 'gt' and 'lt'.
     *      - *updatedAt* - string - optional
     *          - Filter restricts the result to attributes which have been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead. Allowed comparator: 'eq'', 'gte', 'lte', 'gt' and 'lt'.
     * @return array
     *      - *page* - integer
     *          - Current page of the response
     *      - *totalsCount* - integer
     *          - The total number of entries in the response
     *      - *isLastPage* - boolean
     *          - Flag that indicates if the page shown is the last page of the response
     *      - *lastPageNumber* - integer
     *          - The last page number
     *      - *firstOnPage* - integer
     *          - The index of the first item of the current page result
     *      - *lastOnPage* - integer
     *          - The index of the last item of the current page result
     *      - *itemsPerPage* - integer
     *          - The requested amount of items per result page
     *      - *entries* - array
     *          - List of Attribute
     */
    public function getPimAttributes(array $query = []): array
    {
        return $this->api(array_merge(["/rest/pim/attributes"], $query));
    }
                
    /**
     * @description Creates a list of new attributes.
     * @tag Pim
     * @param array $data 
     */
    public function createPimAttribute(array $data): void
    {
        $this->api("/rest/pim/attributes", 'POST', $data);
    }
                
    /**
     * @description Updates a list of attributes.
     * @tag Pim
     * @param array $data 
     */
    public function updatePimAttribute(array $data): void
    {
        $this->api("/rest/pim/attributes", 'PUT', $data);
    }
                    
    /**
     * @description Deletes a list of attribute names.
     * @tag Pim

     */
    public function deletePimAttributesName(): void
    {
        $this->api("/rest/pim/attributes/names", 'DELETE');
    }
                
    /**
     * @description Searches attribute names. Returns a paginated result.
     * @tag Pim
     * @param array $query
     *      - *with* - string - optional
     *          - Includes the specified information in the results. More than one parameter should be separated by commas. The following parameters are available:<ul><li> 'attribute' = The attribute to the attribute name.</li></ub>
     *      - *attributeId* - string - optional
     *          - Filter restricts the result to attributes with the specified attribute ID. More than one parameter should be separated by commas. Allowed comparators: 'eq', 'in', 'between', 'gte', 'lte', 'gt' and 'lt'
     *      - *lang* - string - optional
     *          - Filter restricts the result to attributes with the specified language. More than one parameter should be separated by commas. Allowed comparators: 'eq' and 'in'.
     *      - *name* - string - optional
     *          - Filter restricts the result to attributes with the specified name. More than one parameter should be separated by commas. Allowed comparators: 'eq'.
     * @return array
     *      - *page* - integer
     *          - Current page of the response
     *      - *totalsCount* - integer
     *          - The total number of entries in the response
     *      - *isLastPage* - boolean
     *          - Flag that indicates if the page shown is the last page of the response
     *      - *lastPageNumber* - integer
     *          - The last page number
     *      - *firstOnPage* - integer
     *          - The index of the first item of the current page result
     *      - *lastOnPage* - integer
     *          - The index of the last item of the current page result
     *      - *itemsPerPage* - integer
     *          - The requested amount of items per result page
     *      - *entries* - array
     *          - List of AttributeName
     */
    public function getPimAttributesNames(array $query = []): array
    {
        return $this->api(array_merge(["/rest/pim/attributes/names"], $query));
    }
                
    /**
     * @description Creates a list of attribute names.
     * @tag Pim
     * @param array $data 
     */
    public function createPimAttributesName(array $data): void
    {
        $this->api("/rest/pim/attributes/names", 'POST', $data);
    }
                
    /**
     * @description Updates a list of attribute names.
     * @tag Pim
     * @param array $data 
     */
    public function updatePimAttributesName(array $data): void
    {
        $this->api("/rest/pim/attributes/names", 'PUT', $data);
    }
                    
    /**
     * @description Deletes a list of attribute values.
     * @tag Pim

     */
    public function deletePimAttributesValue(): void
    {
        $this->api("/rest/pim/attributes/values", 'DELETE');
    }
                
    /**
     * @description Searches attribute values. Returns a paginated result.
     * @tag Pim
     * @param array $query
     *      - *with* - string - optional
     *          - Includes the specified information in the results. More than one parameter should be separated by commas. The following parameters are available:<ul><li> 'valueNames' = The names of the attribute value.</li><li> 'attribute' = The attribute of the attribute value.</li><li> 'valueMaps' = The maps of the attribute value.</li><li> 'valueMarketNames' = The value market names of the attribute value.</li></ub>
     *      - *ids* - string - optional
     *          - Filter restricts the result to attribute values with the specified IDs. More than one parameter should be separated by commas. Allowed comparators: 'eq', 'in', 'between', 'gte', 'lte', 'gt' and 'lt'.
     *      - *attributeId* - string - optional
     *          - Filter restricts the result to attribute values with the specified attribute ID. More than one parameter should be separated by commas. Allowed comparators: 'eq', 'in', 'between', 'gte', 'lte', 'gt' and 'lt'.
     *      - *backendName* - string - optional
     *          - Filter restricts the result to attribute values with the specified backend name. More than one parameter should be separated by commas. Allowed comparators: 'eq' and 'in'.
     *      - *name* - string - optional
     *          - Filter restricts the result to attribute values with the specified name. More than one parameter should be separated by commas. Allowed comparators: 'eq'.
     *      - *position* - string - optional
     *          - Filter restricts the result to attribute values with the specified IDs. More than one parameter should be separated by commas. Allowed comparators: 'eq', 'between', 'gte', 'lte', 'gt' and 'lt'.
     *      - *updatedAt* - string - optional
     *          - Filter restricts the result to attribute values which have been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead. Allowed comparator: 'eq'', 'gte', 'lte', 'gt' and 'lt'.
     * @return array
     *      - *page* - integer
     *          - Current page of the response
     *      - *totalsCount* - integer
     *          - The total number of entries in the response
     *      - *isLastPage* - boolean
     *          - Flag that indicates if the page shown is the last page of the response
     *      - *lastPageNumber* - integer
     *          - The last page number
     *      - *firstOnPage* - integer
     *          - The index of the first item of the current page result
     *      - *lastOnPage* - integer
     *          - The index of the last item of the current page result
     *      - *itemsPerPage* - integer
     *          - The requested amount of items per result page
     *      - *entries* - array
     *          - List of AttributeValue
     */
    public function getPimAttributesValues(array $query = []): array
    {
        return $this->api(array_merge(["/rest/pim/attributes/values"], $query));
    }
                
    /**
     * @description Creates a list of attribute values.
     * @tag Pim

     */
    public function createPimAttributesValue(): void
    {
        $this->api("/rest/pim/attributes/values", 'POST');
    }
                
    /**
     * @description Updates a list of attribute values.
     * @tag Pim

     */
    public function updatePimAttributesValue(): void
    {
        $this->api("/rest/pim/attributes/values", 'PUT');
    }
                    
    /**
     * @description Deletes a list of attribute value names.
     * @tag Pim

     */
    public function deletePimAttributesValuesName(): void
    {
        $this->api("/rest/pim/attributes/values/names", 'DELETE');
    }
                
    /**
     * @description Searches attribute value names. Returns a paginated result.
     * @tag Pim
     * @param array $query
     *      - *with* - string - optional
     *          - Includes the specified information in the results. More than one parameter should be separated by commas. The following parameters are available:<ul><li> 'attributeValue' = The attribute value to the attribute value name.</li></ub>
     *      - *valueId* - string - optional
     *          - Filter restricts the result to attribute value names with the specified value ID. More than one parameter should be separated by commas. Allowed comparators: 'eq', 'in', 'between', 'gte', 'lte', 'gt' and 'lt'
     *      - *lang* - string - optional
     *          - Filter restricts the result to attribute value names with the specified language. More than one parameter should be separated by commas. Allowed comparators: 'eq' and 'in'.
     *      - *name* - string - optional
     *          - Filter restricts the result to attribute value names with the specified name. More than one parameter should be separated by commas. Allowed comparators: 'eq'.
     * @return array
     *      - *page* - integer
     *          - Current page of the response
     *      - *totalsCount* - integer
     *          - The total number of entries in the response
     *      - *isLastPage* - boolean
     *          - Flag that indicates if the page shown is the last page of the response
     *      - *lastPageNumber* - integer
     *          - The last page number
     *      - *firstOnPage* - integer
     *          - The index of the first item of the current page result
     *      - *lastOnPage* - integer
     *          - The index of the last item of the current page result
     *      - *itemsPerPage* - integer
     *          - The requested amount of items per result page
     *      - *entries* - array
     *          - List of AttributeValueName
     */
    public function getPimAttributesValuesNames(array $query = []): array
    {
        return $this->api(array_merge(["/rest/pim/attributes/values/names"], $query));
    }
                
    /**
     * @description Creates a list of attribute value names.
     * @tag Pim
     * @param array $data 
     */
    public function createPimAttributesValuesName(array $data): void
    {
        $this->api("/rest/pim/attributes/values/names", 'POST', $data);
    }
                
    /**
     * @description Updates a list of attribute value names.
     * @tag Pim
     * @param array $data 
     */
    public function updatePimAttributesValuesName(array $data): void
    {
        $this->api("/rest/pim/attributes/values/names", 'PUT', $data);
    }
                    
    /**
     * @description Gets one attribute value. The ID must be specified.
     * @tag Pim
     * @param int $id 
     */
    public function getPimAttributesValueById(int $id): void
    {
        $this->api("/rest/pim/attributes/values/{$id}");
    }
                    
    /**
     * @description Gets one attribute. The ID must be specified.
     * @tag Pim
     * @param int $id 
     * @return array
     *      - *id* - integer
     *          - The unique ID of the attribute.
     *      - *backendName* - string
     *          - The back end name of the attribute. The name must be unique and must not contain commas, colons, semicolons or quotation marks. It is not visible in the plentymarkets front end.
     *      - *position* - integer
     *          - The position of the attribute. Attributes are displayed in the attribute overview in ascending order by position.
     *      - *isSurchargePercental* - boolean
     *          - Flag that indicates if the surcharge is percental.
     *      - *isLinkableToImage* - boolean
     *          - Flag that indicates if an image can be linked to the attribute.
     *      - *amazonAttribute* - string
     *          - The attribute of the market Amazon that this attribute is liked to. To list variations on this market, attributes must be linked to one of the attributes specified by the market. Check documentation of the market for permitted values.
     *      - *fruugoAttribute* - string
     *          - The attribute of the market Fruugo that this attribute is linked to. To list variations on this market, attributes must be linked to one of the attributes specified by the market.
     *      - *pixmaniaAttribute* - integer
     *          - The attribute of the market PIXmania that this attribute is linked to. To list variations on this market, attributes must be linked to one of the attributes specified by the market. Check documentation of the market for permitted values.
     *      - *ottoAttribute* - string
     *          - The attribute of the market OTTO that this attribute is linked to. To list variations on this market, attributes must be linked to one of the attributes specified by the market.
     *      - *googleShoppingAttribute* - string
     *          - The attribute of the market Google Shopping that this attribute is linked to. To list variations on this market, attributes must be linked to one of the attributes specified by the market.
     *      - *neckermannAtEpAttribute* - integer
     *          - The component of the market neckermann AT EP that this attribute is linked to. To list variations on this market, attributes must be linked to one of the components specified by the market. Check documentation of the market for permitted values.
     *      - *typeOfSelectionInOnlineStore* - string
     *          - How customers can select the attribute in the front end of a client. To allow attribute selection by check mark, attribute availability must be checked on the client side.
     *      - *laRedouteAttribute* - integer
     *          - The attribute of the market La Redoute that this attribute is linked to. To list variations on this market, attributes must be linked to one of the attributes specified by the market. Check documentation of the market for permitted values.
     *      - *isGroupable* - boolean
     *          - Flag that indicates if the attribute can be grouped in item lists. If yes, variations with this attribute can be shown in the ItemViewCategoriesList template first. Other attributes are nested and can only be selected after this attribute has been selected.
     */
    public function getPimAttributeById(int $id): array
    {
        return $this->api("/rest/pim/attributes/{$id}");
    }
                    
    /**
     * @description Deletes a list of barcodes.
     * @tag Pim

     */
    public function deletePimBarcode(): void
    {
        $this->api("/rest/pim/barcodes", 'DELETE');
    }
                
    /**
     * @description Searches barcodes. Returns a paginated result.
     * @tag Pim
     * @param array $query
     *      - *with* - string - optional
     *          - Includes the specified information in the results. More than one parameter should be separated by commas. The following parameters are available:<ul><li> 'referrers' = The referrers of the barcode </li></ub>
     *      - *ids* - string - optional
     *          - Filter restricts the result to barcodes with the specified IDs. More than one parameter should be separated by commas. Allowed comparators: 'eq', 'in', 'between', 'gte', 'lte', 'gt' and 'lt'.
     *      - *code* - string - optional
     *          - Filter restricts the result to barcodes with the specified code. More than one parameter should be separated by commas. Allowed comparators: 'eq' and 'in'.
     *      - *type* - string - optional
     *          - Filter restricts the result to barcodes with the specified type. More than one parameter should be separated by commas. Allowed comparator: 'eq', 'in' and 'not'.
     *      - *referrerIds* - string - optional
     *          - Filter restricts the result to barcodes with the specified referrers. More than one parameter should be separated by commas. Allowed comparator: 'eq' and 'in'.
     * @return array
     *      - *page* - integer
     *          - Current page of the response
     *      - *totalsCount* - integer
     *          - The total number of entries in the response
     *      - *isLastPage* - boolean
     *          - Flag that indicates if the page shown is the last page of the response
     *      - *lastPageNumber* - integer
     *          - The last page number
     *      - *firstOnPage* - integer
     *          - The index of the first item of the current page result
     *      - *lastOnPage* - integer
     *          - The index of the last item of the current page result
     *      - *itemsPerPage* - integer
     *          - The requested amount of items per result page
     *      - *entries* - array
     *          - List of Barcode
     */
    public function getPimBarcodes(array $query = []): array
    {
        return $this->api(array_merge(["/rest/pim/barcodes"], $query));
    }
                
    /**
     * @description Creates a list of new barcodes.
     * @tag Pim
     * @param array $data 
     */
    public function createPimBarcode(array $data): void
    {
        $this->api("/rest/pim/barcodes", 'POST', $data);
    }
                
    /**
     * @description Updates a list of barcodes.
     * @tag Pim
     * @param array $data 
     */
    public function updatePimBarcode(array $data): void
    {
        $this->api("/rest/pim/barcodes", 'PUT', $data);
    }
                    
    /**
     * @description Gets all duplicated barcodes.
     * @tag Pim
     * @return array
     *      - *page* - integer
     *          - Current page of the response
     *      - *totalsCount* - integer
     *          - The total number of entries in the response
     *      - *isLastPage* - boolean
     *          - Flag that indicates if the page shown is the last page of the response
     *      - *lastPageNumber* - integer
     *          - The last page number
     *      - *firstOnPage* - integer
     *          - The index of the first item of the current page result
     *      - *lastOnPage* - integer
     *          - The index of the last item of the current page result
     *      - *itemsPerPage* - integer
     *          - The requested amount of items per result page
     *      - *entries* - 
     */
    public function getPimBarcodesDuplicates(): array
    {
        return $this->api("/rest/pim/barcodes/duplicates");
    }
                    
    /**
     * @description Gets one duplicated barcode. The ID must be specified.
     * @tag Pim
     * @return array
     *      - *page* - integer
     *          - Current page of the response
     *      - *totalsCount* - integer
     *          - The total number of entries in the response
     *      - *isLastPage* - boolean
     *          - Flag that indicates if the page shown is the last page of the response
     *      - *lastPageNumber* - integer
     *          - The last page number
     *      - *firstOnPage* - integer
     *          - The index of the first item of the current page result
     *      - *lastOnPage* - integer
     *          - The index of the last item of the current page result
     *      - *itemsPerPage* - integer
     *          - The requested amount of items per result page
     *      - *entries* - 
     */
    public function getPimBarcodesDuplicatesCount(): array
    {
        return $this->api("/rest/pim/barcodes/duplicates/count");
    }
                    
    /**
     * @description List barcode duplicate settings. Duplicate barcode 1 = warning 2 = error
     * @tag Pim
     * @return array
     */
    public function getPimBarcodesDuplicatesSettings(): array
    {
        return $this->api("/rest/pim/barcodes/duplicates/settings");
    }
                    
    /**
     * @description Searches the categories. Returns a paginated result.
     * @tag Pim
     * @param array $query
     *      - *with* - string - optional
     *          - Includes the specified information in the results. More than one parameter should be separated by commas. The following parameters are available:<ul><li> 'details' = The names of the category.</li><li> 'clients' = The clients of the category.</li><li> 'branch' = The branch of the category.</li><li> 'tagRelationship' = The tags linked with the category and their data.</li><li> 'elmarCategories' = The elmar categories of the category.</li></ub>
     *      - *ids* - string - optional
     *          - Filter restricts the result to categories with the specified IDs. More than one parameter should be separated by commas. Allowed comparators: 'eq', 'in', 'between', 'gte', 'lte', 'gt' and 'lt'.
     *      - *type* - string - optional
     *          - Filter restricts the result to categories with the specified type. Allowed comparators: 'eq', 'in' and 'not'.
     *      - *level* - int - optional
     *          - Filter restricts the result to categories with the specified level. Allowed comparators: 'eq', 'not', 'gte', 'lte', 'gt' and 'lt'.
     *      - *name* - string - optional
     *          - Filter restricts the result to categories with a category detail in the specified name. Allowed comparators: 'eq'.
     *      - *lang* - string - optional
     *          - Filter restricts the result to categories with a category detail in the specified lang. Allowed comparators: 'eq' and 'not'.
     *      - *parentCategoryId* - int - optional
     *          - Filter restricts the result to categories with the specified parent category ID. Allowed comparator: 'eq'.
     *      - *plentyId* - int - optional
     *          - Filter restricts the result to categories with the specified plenty ID. Allowed comparator: 'eq'.
     *      - *linklist* - boolean - optional
     *          - Filter restricts the result to categories with the specified linklist value. Allowed comparator: 'eq'.
     *      - *tagId* - string - optional
     *          - Filter restricts the result to categories with the specified tag id. Allowed comparator: 'eq', 'in' and 'not'.
     *      - *updatedAt* - string - optional
     *          - Filter restricts the result to categories which have been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead. Allowed comparator: 'eq'', 'gte', 'lte', 'gt' and 'lt'.
     *      - *sortBy* - string - optional
     *          - Filter sorts the result of categories. Append '_asc' or '_desc' to specify the sorting order. '_desc' is the default value if no other is specified. More than one parameter should be separated by commas. The following parameters are available:<ul><li>'id'</li><li>'position'</li><li>'name'</li><li>'level'</li><li>'parentCategoryId'</li><li>'updatedAt'</li></ul>
     * @return array
     *      - *page* - integer
     *          - Current page of the response
     *      - *totalsCount* - integer
     *          - The total number of entries in the response
     *      - *isLastPage* - boolean
     *          - Flag that indicates if the page shown is the last page of the response
     *      - *lastPageNumber* - integer
     *          - The last page number
     *      - *firstOnPage* - integer
     *          - The index of the first item of the current page result
     *      - *lastOnPage* - integer
     *          - The index of the last item of the current page result
     *      - *itemsPerPage* - integer
     *          - The requested amount of items per result page
     *      - *entries* - array
     *          - List of Category
     */
    public function getPimCategories(array $query = []): array
    {
        return $this->api(array_merge(["/rest/pim/categories"], $query));
    }
                    
    /**
     * @description Searches category branches. Returns a paginated result.
     * @tag Pim
     * @param array $query
     *      - *with* - string - optional
     *          - Includes the specified information in the results. More than one parameter should be separated by commas. The following parameters are available:<ul><li> 'category' = The category of the category branch.</li></ub>
     * @return array
     *      - *page* - integer
     *          - Current page of the response
     *      - *totalsCount* - integer
     *          - The total number of entries in the response
     *      - *isLastPage* - boolean
     *          - Flag that indicates if the page shown is the last page of the response
     *      - *lastPageNumber* - integer
     *          - The last page number
     *      - *firstOnPage* - integer
     *          - The index of the first item of the current page result
     *      - *lastOnPage* - integer
     *          - The index of the last item of the current page result
     *      - *itemsPerPage* - integer
     *          - The requested amount of items per result page
     *      - *entries* - array
     *          - List of CategoryBranch
     */
    public function getPimCategoriesBranches(array $query = []): array
    {
        return $this->api(array_merge(["/rest/pim/categories/branches"], $query));
    }
                    
    /**
     * @description Searches category clients. Returns a paginated result.
     * @tag Pim
     * @param array $query
     *      - *with* - string - optional
     *          - Includes the specified information in the results. More than one parameter should be separated by commas. The following parameters are available:<ul><li> 'category' = The category of the category client.</li></ub>
     *      - *categoryId* - string - optional
     *          - Filter restricts the result to category clients with the specified category ID. More than one parameter should be separated by commas. Allowed comparators: 'eq', 'in', 'between', 'gte', 'lte', 'gt' and 'lt'.
     *      - *plentyId* - int - optional
     *          - Filter restricts the result to category clients with the specified plenty ID. More than one parameter should be separated by commas. Allowed comparators: 'eq'.
     * @return array
     *      - *page* - integer
     *          - Current page of the response
     *      - *totalsCount* - integer
     *          - The total number of entries in the response
     *      - *isLastPage* - boolean
     *          - Flag that indicates if the page shown is the last page of the response
     *      - *lastPageNumber* - integer
     *          - The last page number
     *      - *firstOnPage* - integer
     *          - The index of the first item of the current page result
     *      - *lastOnPage* - integer
     *          - The index of the last item of the current page result
     *      - *itemsPerPage* - integer
     *          - The requested amount of items per result page
     *      - *entries* - array
     *          - List of CategoryClient
     */
    public function getPimCategoriesClients(array $query = []): array
    {
        return $this->api(array_merge(["/rest/pim/categories/clients"], $query));
    }
                    
    /**
     * @description Searches category details. Returns a paginated result.
     * @tag Pim
     * @param array $query
     *      - *with* - string - optional
     *          - Includes the specified information in the results. More than one parameter should be separated by commas. The following parameters are available:<ul><li> 'category' = The category of the category detail.</li></ub>
     *      - *categoryId* - string - optional
     *          - Filter restricts the result to category details with the specified category ID. More than one parameter should be separated by commas. Allowed comparators: 'eq', 'in', 'between', 'gte', 'lte', 'gt' and 'lt'.
     *      - *plentyId* - int - optional
     *          - Filter restricts the result to category details with the specified plenty ID. More than one parameter should be separated by commas. Allowed comparators: 'eq'.
     *      - *lang* - string - optional
     *          - Filter restricts the result to category details with the specified language. More than one parameter should be separated by commas. Allowed comparators: 'eq', 'in' and 'not'.
     *      - *name* - string - optional
     *          - Filter restricts the result to category details with the specified name. More than one parameter should be separated by commas. Allowed comparators: 'eq' and 'like'.
     *      - *nameUrl* - string - optional
     *          - Filter restricts the result to category details with the specified name url. More than one parameter should be separated by commas. Allowed comparators: 'eq' and 'like'.
     *      - *metaKeywords* - string - optional
     *          - Filter restricts the result to category details with the specified meta keywords. More than one parameter should be separated by commas. Allowed comparators: 'eq' and 'like'.
     *      - *position* - string - optional
     *          - Filter restricts the result to category details with the specified position. More than one parameter should be separated by commas. Allowed comparators: 'eq', 'in', 'gte', 'lte', 'gt' and 'lt'.
     * @return array
     *      - *page* - integer
     *          - Current page of the response
     *      - *totalsCount* - integer
     *          - The total number of entries in the response
     *      - *isLastPage* - boolean
     *          - Flag that indicates if the page shown is the last page of the response
     *      - *lastPageNumber* - integer
     *          - The last page number
     *      - *firstOnPage* - integer
     *          - The index of the first item of the current page result
     *      - *lastOnPage* - integer
     *          - The index of the last item of the current page result
     *      - *itemsPerPage* - integer
     *          - The requested amount of items per result page
     *      - *entries* - array
     *          - List of CategoryDetails
     */
    public function getPimCategoriesDetails(array $query = []): array
    {
        return $this->api(array_merge(["/rest/pim/categories/details"], $query));
    }
                    
    /**
     * @description Searches category properties. Returns a paginated result.
     * @tag Pim
     * @param array $query
     *      - *with* - string - optional
     *          - Includes the specified information in the results. More than one parameter should be separated by commas. The following parameters are available:<ul><li> 'category' = The category of the property.</li></ub>
     *      - *categoryId* - string - optional
     *          - Filter restricts the result to category properties with the specified category ID. More than one parameter should be separated by commas. Allowed comparators: 'eq', 'in', 'between', 'gte', 'lte', 'gt' and 'lt'.
     *      - *plentyId* - int - optional
     *          - Filter restricts the result to category properties with the specified plenty ID. More than one parameter should be separated by commas. Allowed comparators: 'eq'.
     *      - *value* - string - optional
     *          - Filter restricts the result to category properties with the specified value. More than one parameter should be separated by commas. Allowed comparators: 'eq'.
     * @return array
     *      - *page* - integer
     *          - Current page of the response
     *      - *totalsCount* - integer
     *          - The total number of entries in the response
     *      - *isLastPage* - boolean
     *          - Flag that indicates if the page shown is the last page of the response
     *      - *lastPageNumber* - integer
     *          - The last page number
     *      - *firstOnPage* - integer
     *          - The index of the first item of the current page result
     *      - *lastOnPage* - integer
     *          - The index of the last item of the current page result
     *      - *itemsPerPage* - integer
     *          - The requested amount of items per result page
     *      - *entries* - array
     *          - List of CategoryProperty
     */
    public function getPimCategoriesProperties(array $query = []): array
    {
        return $this->api(array_merge(["/rest/pim/categories/properties"], $query));
    }
                    
    /**
     * @description Gets one category. The ID must be specified.
     * @tag Pim
     * @param int $id 
     */
    public function getPimCategoryById(int $id): void
    {
        $this->api("/rest/pim/categories/{$id}");
    }
                    
    /**
     * @description Deletes a list of item serial numbers. Returns a collection
     * @tag Pim

     */
    public function deletePimItemSerialNumber(): void
    {
        $this->api("/rest/pim/item-serial-numbers", 'DELETE');
    }
                
    /**
     * @description Search for item serial numbers. Gets a paginated list.
     * @tag Pim
     * @return array
     *      - *page* - integer
     *          - Current page of the response
     *      - *totalsCount* - integer
     *          - The total number of entries in the response
     *      - *isLastPage* - boolean
     *          - Flag that indicates if the page shown is the last page of the response
     *      - *lastPageNumber* - integer
     *          - The last page number
     *      - *firstOnPage* - integer
     *          - The index of the first item of the current page result
     *      - *lastOnPage* - integer
     *          - The index of the last item of the current page result
     *      - *itemsPerPage* - integer
     *          - The requested amount of items per result page
     *      - *entries* - array
     *          - List of ItemSerialNumber
     */
    public function getPimItemSerialNumbers(): array
    {
        return $this->api("/rest/pim/item-serial-numbers");
    }
                
    /**
     * @description Creates a list of item serial numbers. Returns a collection
     * @tag Pim
     * @param array $data 
     */
    public function createPimItemSerialNumber(array $data): void
    {
        $this->api("/rest/pim/item-serial-numbers", 'POST', $data);
    }
                
    /**
     * @description Updates a list of item serial numbers. Returns a collection
     * @tag Pim
     * @param array $data 
     */
    public function updatePimItemSerialNumber(array $data): void
    {
        $this->api("/rest/pim/item-serial-numbers", 'PUT', $data);
    }
                    
    /**
     * @description List of all attributes for current item. Returns an array.
     * @tag Pim
     * @param int $id 
     * @return array
     */
    public function getPimItemsAttributesById(int $id): array
    {
        return $this->api("/rest/pim/items/{$id}/attributes");
    }
                    
    /**
     * @description List of all existing unit and attribute combinations for current item. Returns an array.
*
     * @tag Pim
     * @param int $id 
     * @return array
     */
    public function getPimItemsCombinationsById(int $id): array
    {
        return $this->api("/rest/pim/items/{$id}/combinations");
    }
                    
    /**
     * @description Deletes a list of sales prices.
     * @tag Pim
     * @param array $data 
     */
    public function deletePimSalesPrice(array $data): void
    {
        $this->api("/rest/pim/sales_prices", 'DELETE', $data);
    }
                
    /**
     * @description Searches for sales prices.
     * @tag Pim
     * @param array $query
     *      - *with* - string - optional
     *          - Includes the specified information in the results. More than one parameter should be separated by commas. The following parameters are available:<ul><li>accounts = The accounts of the sales price.</li><li>clients = The clients of the sales price.</li><li>countries = The countries of the sales price.</li><li>currencies = The currencies of the sales price.</li><li>customerClasses = The customer classes of the sales price.</li><li>names = The names of the sales price.</li><li>referrers = The referrer of the sales price.</li></ub>
     *      - *ids* - string - optional
     *          - Filter restricts the result to sales prices with the specified IDs. More than one parameter should be separated by commas. Allowed comparators: 'eq', 'in', 'between', 'gte', 'lte', 'gt' and 'lt'.
     *      - *type* - string - optional
     *          - Filter restricts the result to sales prices with the specified type. Allowed comparators: 'eq' and 'in'.
     *      - *customerClass* - int - optional
     *          - Filter restricts the result to sales prices with the specified customer class.
     *      - *currency* - int - optional
     *          - Filter restricts the result to sales prices with the specified currency.
     *      - *country* - int - optional
     *          - Filter restricts the result to sales prices with the specified country.
     *      - *name* - string - optional
     *          - Filter restricts the result to sales prices with the specified name.
     *      - *referrer* - int - optional
     *          - Filter restricts the result to sales prices with the specified referrer.
     *      - *plentyId* - int - optional
     *          - Filter restricts the result to sales prices with the specified plenty ID.
     *      - *updatedAt* - string - optional
     *          - Filter restricts the result to sales prices which have been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead. Allowed comparator: 'eq'', 'gte', 'lte', 'gt' and 'lt'.
     * @return array
     *      - *page* - integer
     *          - Current page of the response
     *      - *totalsCount* - integer
     *          - The total number of entries in the response
     *      - *isLastPage* - boolean
     *          - Flag that indicates if the page shown is the last page of the response
     *      - *lastPageNumber* - integer
     *          - The last page number
     *      - *firstOnPage* - integer
     *          - The index of the first item of the current page result
     *      - *lastOnPage* - integer
     *          - The index of the last item of the current page result
     *      - *itemsPerPage* - integer
     *          - The requested amount of items per result page
     *      - *entries* - array
     *          - List of SalesPrice
     */
    public function getPimSalesPrices(array $query = []): array
    {
        return $this->api(array_merge(["/rest/pim/sales_prices"], $query));
    }
                
    /**
     * @description Creates a list of sales prices.
     * @tag Pim
     * @param array $data 
     */
    public function createPimSalesPrice(array $data): void
    {
        $this->api("/rest/pim/sales_prices", 'POST', $data);
    }
                
    /**
     * @description Updates a list of sales prices.
     * @tag Pim
     * @param array $data 
     */
    public function updatePimSalesPrice(array $data): void
    {
        $this->api("/rest/pim/sales_prices", 'PUT', $data);
    }
                    
    /**
     * @description Gets one sales price. The ID must be specified.
     * @tag Pim
     * @param int $id 
     * @param array $query
     *      - *with* - string - optional
     *          - Includes the specified information in the results. More than one parameter should be separated by commas. The following parameters are available:<ul><li>accounts</li><li>clients</li><li>countries</li><li>currencies</li><li>customerClasses</li><li>names</li><li>referrers</li></ub>
     */
    public function getPimSalesPriceById(int $id, array $query = []): void
    {
        $this->api(array_merge(["/rest/pim/sales_prices/{$id}"], $query));
    }
                    
    /**
     * @description Deletes a list of variations.
     * @tag Pim
     * @param array $data 
     */
    public function deletePimVariation(array $data): void
    {
        $this->api("/rest/pim/variations", 'DELETE', $data);
    }
            
    /**
     * @description Lists variations including the in 'with' specified related data.
     * @tag Pim
     * @param array $query
     *      - *with* - string - optional
     *          - Includes the specified information in the results. More than one parameter should be separated by commas. The following parameters are available:<ul><li>'additionalSkus' = The additional skus of the variation.</li><li>'attributeValues' = The attribute values of the variation.</li><li>'attributeValues.attribute' = Includes attributeValues. The attribute data to the related attribute ID.</li><li>'attributeValues.attributeValue' = Includes attributeValues. The attribute value data to the related attribute value ID.</li><li>'barcodes' = The barcodes of the variation.</li><li>'barcodes.barcode' = Includes barcodes. The barcode data to the related barcode ID.</li><li>'base' = The variation base.</li><li>'base.item' = Includes base. The item data of the variation.</li><li>'base.itemSerialNumber' = Includes base. The item serial numbers of the variation.</li><li>'base.feedback' = Includes base. The feedback of the variation.</li><li>'base.characteristics' = Includes base. The characteristics of the variation.</li><li>'base.crossSelling' = Includes base. The cross selling items of the variation.</li><li>'base.texts' = Includes base. The texts of the variation.</li><li>'base.availability' = Includes base. The availability data related to the variation's availability ID.</li><li>'base.images' = Includes base. The images linked to the item.</li><li>'base.shippingProfiles' = Includes base. The shipping profiles linked to the item.</li><li>'base.stock' = Includes base. The stock of the variation.</li><li>'base.stockStorageLocations' = Includes base. The stock storage locations of the variation.</li><li>'bundleComponents' = The bundle components of the variation.</li><li>'categories' = The categories of the variation.</li><li>'categories.category' = Includes categories. The related category data for each category ID.</li><li>'categories.categoryBranch' = Includes categories. The related category branch data for each category ID.</li><li>'clients' = The clients of the variation.</li><li>'defaultCategories' = The default categories of the variation</li><li>'defaultCategories.category' = Includes defaultCategories. The category data to the related category ID.</li><li>'images' = The images of the variation</li><li>'images.image' = Includes images. The image data to the related image ID.</li><li>'markets' = The markets of the variation.</li><li>'marketIdentNumbers' = The market ident numbers of the variation</li><li>'salesPrices' = The sales prices of the variation.</li><li>'salesPrices.salesPrice' = Includes salesPrices. The sales price data to the related sales price ID.</li><li>'skus' = The skus of the variation.</li><li>'supplier' = The supplier of the variation.</li><li>'supplier.supplier' = Includes supplier. The contact data to the related supplier ID.</li><li>'timestamps' = The timetamps of the variation.</li><li>'warehouses' = The warehouses of the variation</li><li>'warehouses.warehouse' = Includes warehouses. The warehouse data to the related warehouse ID.</li><li>'unit' = The unit of the variation</li><li>'unit.unit' = Includes unit. The unit data of the related unit ID.</li><li>'tags' = The tags of the variation.</li><li>'tags.tag' = Includes tags. The tag data to the related tag ID.</li><li>'properties' = The properties of the variation.</li><li>'properties.property' = Includes properties. The property data to the related property ID.</li><li>'comments' = The comments of the variation.</li><li>'inheritance' = The inheritance of the variation.</li></ul>
     *      - *sortBy* - string - optional
     *          - Sorts the results. Append '_asc' or '_desc' to specify the sorting order. '_desc' is the default value if no other is specified. More than one parameter should be separated by commas. The following parameters are available:<ul><li>'id'</li><li>'itemId'</li><li>'isMain'</li><li>'position'</li><li>'availabilityId'</li><li>'createdAt'</li><li>'updatedAt'</li><li>'itemUpdatedAt'</li><li>'relatedUpdatedAt'</li></ul>
     *      - *groupBy* - string - optional
     *          - Groups the result. The following parameters are available:<ul><li>'itemId' = Groups the result by the item ID.</li><li>'itemAttributeValue' = Groups the result by the attribute with the flag 'isGroupable'.</li></ul>
     *      - *query* - string - optional
     *          - Filter restricts the list of results to variations matching the specified query
     *      - *ids* - string - optional
     *          - Filter restricts the list of results to variations with the specified IDs. More than one parameter should be separated by commas. If you use this filter no other filter will be considered. Limited to 500 ids
     *      - *itemId* - int - optional
     *          - Filter restricts the list of results to variations with the specified item ID. Limited to 100 ids
     *      - *itemIds* - string - optional
     *          - Filter restricts the list of results to variations with the specified item IDs. More than one parameter should be separated by commas.
     *      - *isActive* - boolean - optional
     *          - Filter restricts the list of results to variations which are active/inactive.
     *      - *isMain* - boolean - optional
     *          - Filter restricts the list of results to variations which are main/not main.
     *      - *isSalable* - boolean - optional
     *          - Filter restricts the list of results to variations which are salable.
     *      - *supplierId* - int - optional
     *          - Filter restricts the list of results to variations which have the given supplier ID.
     *      - *availabilityIds* - string - optional
     *          - Filter restricts the list of results to variations with the specified availability IDs. More than one parameter should be separated by commas.
     *      - *hasChildren* - boolean - optional
     *          - Filter restricts the list of results to variations which have children.
     *      - *hasActiveChildren* - boolean - optional
     *          - Filter restricts the list of results to variations which have active children.
     *      - *attributeId* - int - optional
     *          - Filter restricts the list of results to variations which have the specified attribute ID.
     *      - *anyAttributeId* - string - optional
     *          - Filter restricts the list of results to variations which have any of the specified attribute IDs. More than one parameter should be separated by commas.
     *      - *allAttributeIds* - string - optional
     *          - Filter restricts the list of results to variations which have all specified attribute IDs. More than one parameter should be separated by commas.
     *      - *attributeValueId* - int - optional
     *          - Filter restricts the list of results to variations which have the specified attribute value ID.
     *      - *anyAttributeValueId* - string - optional
     *          - Filter restricts the list of results to variations which have the any of the specified attribute value IDs. More than one parameter should be separated by commas.
     *      - *allAttributeValueIds* - string - optional
     *          - Filter restricts the list of results to variations which have all specified attribute value IDs. More than one parameter should be separated by commas.
     *      - *barcodeCode* - string - optional
     *          - Filter restricts the list of results to variations which have a barcode with the specified code.
     *      - *barcodeId* - int - optional
     *          - Filter restricts the list of results to variations which have a barcode with the specified ID.
     *      - *bundleType* - string - optional
     *          - Filter restricts the list of results to variations with the specified bundle type.
     *      - *categoryId* - int - optional
     *          - Filter restricts the list of results to variations which have the specified category ID.
     *      - *anyCategoryId* - string - optional
     *          - Filter restricts the list of results to variations which have any of the specified category IDs. More than one parameter should be separated by commas.
     *      - *allCategoryIds* - string - optional
     *          - Filter restricts the list of results to variations which have all specified category IDs. More than one parameter should be separated by commas.
     *      - *anyCharacteristicId* - string - optional
     *          - Filter restricts the list of results to variations which have any of the specified characteristic IDs.
     *      - *allCharacteristicIds* - string - optional
     *          - Filter restricts the list of results to variations which have all specified characteristic IDs.
     *      - *clientId* - int - optional
     *          - Filter restricts the list of results to variations which have the specified client ID.
     *      - *anyClientId* - string - optional
     *          - Filter restricts the list of results to variations which have any of the specified client IDs. More than one parameter should be separated by commas.
     *      - *allClientIds* - string - optional
     *          - Filter restricts the list of results to variations which have all specified client IDs. More than one parameter should be separated by commas.
     *      - *automaticClientVisibilities* - string - optional
     *          - Filter restricts the list of results to variations which have any of the specified automatic client visibilities. More than one parameter should be separated by commas.
     *      - *imageHasMarketId* - number - optional
     *          - Filter restricts the list of results to variations which have an image available for the specified market ID.
     *      - *flag1* - int - optional
     *          - Filter restricts the list of results to variations with the specified flag one.
     *      - *flag2* - int - optional
     *          - Filter restricts the list of results to variations with the specified flag two.
     *      - *manufacturerId* - int - optional
     *          - Filter restricts the list of results to variations with the specified manufacturer ID.
     *      - *anyManufacturerId* - string - optional
     *          - Filter restricts the list of results to variations with any of the specified manufacturer IDs.
     *      - *itemType* - string - optional
     *          - Filter restricts the list of results to variations which have the specified item type.
     *      - *marketId* - number - optional
     *          - Filter restricts the list of results to variations which have the specified market ID.
     *      - *anyMarketId* - string - optional
     *          - Filter restricts the list of results to variations which have any of the specified market IDs.
     *      - *referrerIds* - string - optional
     *          - Filter restricts the list of results to variations which have/not have any of the specified market IDs.
     *      - *allMarketIds* - string - optional
     *          - Filter restricts the list of results to variations which have all specified market IDs.
     *      - *priceBetween* - string - optional
     *          - Filter restricts the list of results to variations which have a sales price between the specified minimum and maximum value. Minimum and maximum value should be separated by a comma.
     *      - *priceBetweenById* - string - optional
     *          - Filter restricts the list of results to variations where the specified sales price is between the specified minimum and maximum value. Sales price ID, Minimum and maximum value should be separated by a comma.
     *      - *priceCalculationUuid* - string - optional
     *          - Filter restricts the list of results to variations with the specified price calculiation uuid.
     *      - *salesPriceIds* - string - optional
     *          - Filter restricts the list of results to variations which match specified sales price IDs criteria. More than one parameter should be separated by commas.
     *      - *anySalesPriceId* - string - optional
     *          - Filter restricts the list of results to variations which have any of the specified sales price IDs. More than one parameter should be separated by commas.
     *      - *propertySelectionId* - int - optional
     *          - Filter restricts the list of results to variations which have the specified property selection ID.
     *      - *anyPropertySelectionId* - string - optional
     *          - Filter restricts the list of results to variations which have any of the specified property selection IDs.
     *      - *allPropertySelectionIds* - string - optional
     *          - Filter restricts the list of results to variations which have all specified property selection IDs.
     *      - *hasNameInLanguage* - string - optional
     *          - Filter restricts the list of results to variations which have a name in the specified language.
     *      - *bundleComponentVariationId* - int - optional
     *          - Filter restricts the list of results to variations which have the specified bundle component variation ID.
     *      - *warehouseIds* - string - optional
     *          - Filter restricts the result to variations which meet the specified warehouse id criteria. Allowed operators are: 'eq', 'not', 'nin' and 'in'.
     *      - *netStock* - int - optional
     *          - Filter restricts the result to variations which meet the specified net stock criteria. Allowed operators are: 'eq', 'lt', 'lte', 'gt' and 'gte'.
     *      - *physicalStock* - int - optional
     *          - Filter restricts the result to variations which meet the specified physical stock criteria. Allowed operators are: 'eq', 'lt', 'lte', 'gt' and 'gte'.
     *      - *itemNames* - string - optional
     *          - Filter restricts the list of results to variations matching any name of the item.
     *      - *itemName1* - string - optional
     *          - Filter restricts the list of results to variations matching name 1 of the item
     *      - *itemName2* - string - optional
     *          - Filter restricts the list of results to variations matching name 2 of the item.
     *      - *itemName3* - string - optional
     *          - Filter restricts the list of results to variations matching name 3 of the item.
     *      - *number* - string - optional
     *          - Filter restricts the list of results to variations which matching the number of the variation.
     *      - *model* - string - optional
     *          - Filter restricts the list of results to variations which matching the model of the variation.
     *      - *supplierItemNumber* - string - optional
     *          - Filter restricts the list of results to variations which matching the supplier item number of the variation.
     *      - *lang* - string - optional
     *          - Specifies the language of the language-dependent filters
     *      - *createdAt* - string - optional
     *          - Filter restricts the list of results to variations which have been created in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *updatedAt* - string - optional
     *          - Filter restricts the list of results to variations which have been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *itemCreatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose item has been created in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *itemUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose item has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *availabilityUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose availablity has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *stockUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose stock has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *barcodeUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose barcodes has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *categoryUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose categories has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *clientUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose clients has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *marketUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose markets has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *propertyUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose properties has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *salesPriceUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose sales prices have been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *supplierUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose suppliers has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *tagUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose tags has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *warehouseUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose warehouse has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *page* - int - optional
     *          - The requested page of results. Default value is 1.
     *      - *itemsPerPage* - int - optional
     *          - The number of results per page. Maximum value is 250. Default value is 50.
     *      - *hasLowestPrice* - boolean - optional
     *          - Filter restricts the list of results to variations which has or has not lowest price.
     * @return Iterator
     *      - *page* - integer
     *          - Current page of the response
     *      - *totalsCount* - integer
     *          - The total number of entries in the response
     *      - *isLastPage* - boolean
     *          - Flag that indicates if the page shown is the last page of the response
     *      - *lastPageNumber* - integer
     *          - The last page number
     *      - *firstOnPage* - integer
     *          - The index of the first item of the current page result
     *      - *lastOnPage* - integer
     *          - The index of the last item of the current page result
     *      - *itemsPerPage* - integer
     *          - The requested amount of items per result page
     *      - *entries* - array
     *          - List of Variation
     */
    public function eachPimVariations(array $query = []): Iterator
    {
        return $this->eachInternal('getPimVariations', func_get_args());
    }
        
    /**
     * @description Lists variations including the in 'with' specified related data.
     * @tag Pim
     * @param array $query
     *      - *with* - string - optional
     *          - Includes the specified information in the results. More than one parameter should be separated by commas. The following parameters are available:<ul><li>'additionalSkus' = The additional skus of the variation.</li><li>'attributeValues' = The attribute values of the variation.</li><li>'attributeValues.attribute' = Includes attributeValues. The attribute data to the related attribute ID.</li><li>'attributeValues.attributeValue' = Includes attributeValues. The attribute value data to the related attribute value ID.</li><li>'barcodes' = The barcodes of the variation.</li><li>'barcodes.barcode' = Includes barcodes. The barcode data to the related barcode ID.</li><li>'base' = The variation base.</li><li>'base.item' = Includes base. The item data of the variation.</li><li>'base.itemSerialNumber' = Includes base. The item serial numbers of the variation.</li><li>'base.feedback' = Includes base. The feedback of the variation.</li><li>'base.characteristics' = Includes base. The characteristics of the variation.</li><li>'base.crossSelling' = Includes base. The cross selling items of the variation.</li><li>'base.texts' = Includes base. The texts of the variation.</li><li>'base.availability' = Includes base. The availability data related to the variation's availability ID.</li><li>'base.images' = Includes base. The images linked to the item.</li><li>'base.shippingProfiles' = Includes base. The shipping profiles linked to the item.</li><li>'base.stock' = Includes base. The stock of the variation.</li><li>'base.stockStorageLocations' = Includes base. The stock storage locations of the variation.</li><li>'bundleComponents' = The bundle components of the variation.</li><li>'categories' = The categories of the variation.</li><li>'categories.category' = Includes categories. The related category data for each category ID.</li><li>'categories.categoryBranch' = Includes categories. The related category branch data for each category ID.</li><li>'clients' = The clients of the variation.</li><li>'defaultCategories' = The default categories of the variation</li><li>'defaultCategories.category' = Includes defaultCategories. The category data to the related category ID.</li><li>'images' = The images of the variation</li><li>'images.image' = Includes images. The image data to the related image ID.</li><li>'markets' = The markets of the variation.</li><li>'marketIdentNumbers' = The market ident numbers of the variation</li><li>'salesPrices' = The sales prices of the variation.</li><li>'salesPrices.salesPrice' = Includes salesPrices. The sales price data to the related sales price ID.</li><li>'skus' = The skus of the variation.</li><li>'supplier' = The supplier of the variation.</li><li>'supplier.supplier' = Includes supplier. The contact data to the related supplier ID.</li><li>'timestamps' = The timetamps of the variation.</li><li>'warehouses' = The warehouses of the variation</li><li>'warehouses.warehouse' = Includes warehouses. The warehouse data to the related warehouse ID.</li><li>'unit' = The unit of the variation</li><li>'unit.unit' = Includes unit. The unit data of the related unit ID.</li><li>'tags' = The tags of the variation.</li><li>'tags.tag' = Includes tags. The tag data to the related tag ID.</li><li>'properties' = The properties of the variation.</li><li>'properties.property' = Includes properties. The property data to the related property ID.</li><li>'comments' = The comments of the variation.</li><li>'inheritance' = The inheritance of the variation.</li></ul>
     *      - *sortBy* - string - optional
     *          - Sorts the results. Append '_asc' or '_desc' to specify the sorting order. '_desc' is the default value if no other is specified. More than one parameter should be separated by commas. The following parameters are available:<ul><li>'id'</li><li>'itemId'</li><li>'isMain'</li><li>'position'</li><li>'availabilityId'</li><li>'createdAt'</li><li>'updatedAt'</li><li>'itemUpdatedAt'</li><li>'relatedUpdatedAt'</li></ul>
     *      - *groupBy* - string - optional
     *          - Groups the result. The following parameters are available:<ul><li>'itemId' = Groups the result by the item ID.</li><li>'itemAttributeValue' = Groups the result by the attribute with the flag 'isGroupable'.</li></ul>
     *      - *query* - string - optional
     *          - Filter restricts the list of results to variations matching the specified query
     *      - *ids* - string - optional
     *          - Filter restricts the list of results to variations with the specified IDs. More than one parameter should be separated by commas. If you use this filter no other filter will be considered. Limited to 500 ids
     *      - *itemId* - int - optional
     *          - Filter restricts the list of results to variations with the specified item ID. Limited to 100 ids
     *      - *itemIds* - string - optional
     *          - Filter restricts the list of results to variations with the specified item IDs. More than one parameter should be separated by commas.
     *      - *isActive* - boolean - optional
     *          - Filter restricts the list of results to variations which are active/inactive.
     *      - *isMain* - boolean - optional
     *          - Filter restricts the list of results to variations which are main/not main.
     *      - *isSalable* - boolean - optional
     *          - Filter restricts the list of results to variations which are salable.
     *      - *supplierId* - int - optional
     *          - Filter restricts the list of results to variations which have the given supplier ID.
     *      - *availabilityIds* - string - optional
     *          - Filter restricts the list of results to variations with the specified availability IDs. More than one parameter should be separated by commas.
     *      - *hasChildren* - boolean - optional
     *          - Filter restricts the list of results to variations which have children.
     *      - *hasActiveChildren* - boolean - optional
     *          - Filter restricts the list of results to variations which have active children.
     *      - *attributeId* - int - optional
     *          - Filter restricts the list of results to variations which have the specified attribute ID.
     *      - *anyAttributeId* - string - optional
     *          - Filter restricts the list of results to variations which have any of the specified attribute IDs. More than one parameter should be separated by commas.
     *      - *allAttributeIds* - string - optional
     *          - Filter restricts the list of results to variations which have all specified attribute IDs. More than one parameter should be separated by commas.
     *      - *attributeValueId* - int - optional
     *          - Filter restricts the list of results to variations which have the specified attribute value ID.
     *      - *anyAttributeValueId* - string - optional
     *          - Filter restricts the list of results to variations which have the any of the specified attribute value IDs. More than one parameter should be separated by commas.
     *      - *allAttributeValueIds* - string - optional
     *          - Filter restricts the list of results to variations which have all specified attribute value IDs. More than one parameter should be separated by commas.
     *      - *barcodeCode* - string - optional
     *          - Filter restricts the list of results to variations which have a barcode with the specified code.
     *      - *barcodeId* - int - optional
     *          - Filter restricts the list of results to variations which have a barcode with the specified ID.
     *      - *bundleType* - string - optional
     *          - Filter restricts the list of results to variations with the specified bundle type.
     *      - *categoryId* - int - optional
     *          - Filter restricts the list of results to variations which have the specified category ID.
     *      - *anyCategoryId* - string - optional
     *          - Filter restricts the list of results to variations which have any of the specified category IDs. More than one parameter should be separated by commas.
     *      - *allCategoryIds* - string - optional
     *          - Filter restricts the list of results to variations which have all specified category IDs. More than one parameter should be separated by commas.
     *      - *anyCharacteristicId* - string - optional
     *          - Filter restricts the list of results to variations which have any of the specified characteristic IDs.
     *      - *allCharacteristicIds* - string - optional
     *          - Filter restricts the list of results to variations which have all specified characteristic IDs.
     *      - *clientId* - int - optional
     *          - Filter restricts the list of results to variations which have the specified client ID.
     *      - *anyClientId* - string - optional
     *          - Filter restricts the list of results to variations which have any of the specified client IDs. More than one parameter should be separated by commas.
     *      - *allClientIds* - string - optional
     *          - Filter restricts the list of results to variations which have all specified client IDs. More than one parameter should be separated by commas.
     *      - *automaticClientVisibilities* - string - optional
     *          - Filter restricts the list of results to variations which have any of the specified automatic client visibilities. More than one parameter should be separated by commas.
     *      - *imageHasMarketId* - number - optional
     *          - Filter restricts the list of results to variations which have an image available for the specified market ID.
     *      - *flag1* - int - optional
     *          - Filter restricts the list of results to variations with the specified flag one.
     *      - *flag2* - int - optional
     *          - Filter restricts the list of results to variations with the specified flag two.
     *      - *manufacturerId* - int - optional
     *          - Filter restricts the list of results to variations with the specified manufacturer ID.
     *      - *anyManufacturerId* - string - optional
     *          - Filter restricts the list of results to variations with any of the specified manufacturer IDs.
     *      - *itemType* - string - optional
     *          - Filter restricts the list of results to variations which have the specified item type.
     *      - *marketId* - number - optional
     *          - Filter restricts the list of results to variations which have the specified market ID.
     *      - *anyMarketId* - string - optional
     *          - Filter restricts the list of results to variations which have any of the specified market IDs.
     *      - *referrerIds* - string - optional
     *          - Filter restricts the list of results to variations which have/not have any of the specified market IDs.
     *      - *allMarketIds* - string - optional
     *          - Filter restricts the list of results to variations which have all specified market IDs.
     *      - *priceBetween* - string - optional
     *          - Filter restricts the list of results to variations which have a sales price between the specified minimum and maximum value. Minimum and maximum value should be separated by a comma.
     *      - *priceBetweenById* - string - optional
     *          - Filter restricts the list of results to variations where the specified sales price is between the specified minimum and maximum value. Sales price ID, Minimum and maximum value should be separated by a comma.
     *      - *priceCalculationUuid* - string - optional
     *          - Filter restricts the list of results to variations with the specified price calculiation uuid.
     *      - *salesPriceIds* - string - optional
     *          - Filter restricts the list of results to variations which match specified sales price IDs criteria. More than one parameter should be separated by commas.
     *      - *anySalesPriceId* - string - optional
     *          - Filter restricts the list of results to variations which have any of the specified sales price IDs. More than one parameter should be separated by commas.
     *      - *propertySelectionId* - int - optional
     *          - Filter restricts the list of results to variations which have the specified property selection ID.
     *      - *anyPropertySelectionId* - string - optional
     *          - Filter restricts the list of results to variations which have any of the specified property selection IDs.
     *      - *allPropertySelectionIds* - string - optional
     *          - Filter restricts the list of results to variations which have all specified property selection IDs.
     *      - *hasNameInLanguage* - string - optional
     *          - Filter restricts the list of results to variations which have a name in the specified language.
     *      - *bundleComponentVariationId* - int - optional
     *          - Filter restricts the list of results to variations which have the specified bundle component variation ID.
     *      - *warehouseIds* - string - optional
     *          - Filter restricts the result to variations which meet the specified warehouse id criteria. Allowed operators are: 'eq', 'not', 'nin' and 'in'.
     *      - *netStock* - int - optional
     *          - Filter restricts the result to variations which meet the specified net stock criteria. Allowed operators are: 'eq', 'lt', 'lte', 'gt' and 'gte'.
     *      - *physicalStock* - int - optional
     *          - Filter restricts the result to variations which meet the specified physical stock criteria. Allowed operators are: 'eq', 'lt', 'lte', 'gt' and 'gte'.
     *      - *itemNames* - string - optional
     *          - Filter restricts the list of results to variations matching any name of the item.
     *      - *itemName1* - string - optional
     *          - Filter restricts the list of results to variations matching name 1 of the item
     *      - *itemName2* - string - optional
     *          - Filter restricts the list of results to variations matching name 2 of the item.
     *      - *itemName3* - string - optional
     *          - Filter restricts the list of results to variations matching name 3 of the item.
     *      - *number* - string - optional
     *          - Filter restricts the list of results to variations which matching the number of the variation.
     *      - *model* - string - optional
     *          - Filter restricts the list of results to variations which matching the model of the variation.
     *      - *supplierItemNumber* - string - optional
     *          - Filter restricts the list of results to variations which matching the supplier item number of the variation.
     *      - *lang* - string - optional
     *          - Specifies the language of the language-dependent filters
     *      - *createdAt* - string - optional
     *          - Filter restricts the list of results to variations which have been created in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *updatedAt* - string - optional
     *          - Filter restricts the list of results to variations which have been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *itemCreatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose item has been created in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *itemUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose item has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *availabilityUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose availablity has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *stockUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose stock has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *barcodeUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose barcodes has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *categoryUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose categories has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *clientUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose clients has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *marketUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose markets has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *propertyUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose properties has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *salesPriceUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose sales prices have been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *supplierUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose suppliers has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *tagUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose tags has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *warehouseUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose warehouse has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *page* - int - optional
     *          - The requested page of results. Default value is 1.
     *      - *itemsPerPage* - int - optional
     *          - The number of results per page. Maximum value is 250. Default value is 50.
     *      - *hasLowestPrice* - boolean - optional
     *          - Filter restricts the list of results to variations which has or has not lowest price.
     * @return Iterator
     *      - *page* - integer
     *          - Current page of the response
     *      - *totalsCount* - integer
     *          - The total number of entries in the response
     *      - *isLastPage* - boolean
     *          - Flag that indicates if the page shown is the last page of the response
     *      - *lastPageNumber* - integer
     *          - The last page number
     *      - *firstOnPage* - integer
     *          - The index of the first item of the current page result
     *      - *lastOnPage* - integer
     *          - The index of the last item of the current page result
     *      - *itemsPerPage* - integer
     *          - The requested amount of items per result page
     *      - *entries* - array
     *          - List of Variation
     */
    public function batchPimVariations(array $query = []): Iterator
    {
        return $this->batchInternal('getPimVariations', func_get_args());
    }
    
    /**
     * @description Lists variations including the in 'with' specified related data.
     * @tag Pim
     * @param array $query
     *      - *with* - string - optional
     *          - Includes the specified information in the results. More than one parameter should be separated by commas. The following parameters are available:<ul><li>'additionalSkus' = The additional skus of the variation.</li><li>'attributeValues' = The attribute values of the variation.</li><li>'attributeValues.attribute' = Includes attributeValues. The attribute data to the related attribute ID.</li><li>'attributeValues.attributeValue' = Includes attributeValues. The attribute value data to the related attribute value ID.</li><li>'barcodes' = The barcodes of the variation.</li><li>'barcodes.barcode' = Includes barcodes. The barcode data to the related barcode ID.</li><li>'base' = The variation base.</li><li>'base.item' = Includes base. The item data of the variation.</li><li>'base.itemSerialNumber' = Includes base. The item serial numbers of the variation.</li><li>'base.feedback' = Includes base. The feedback of the variation.</li><li>'base.characteristics' = Includes base. The characteristics of the variation.</li><li>'base.crossSelling' = Includes base. The cross selling items of the variation.</li><li>'base.texts' = Includes base. The texts of the variation.</li><li>'base.availability' = Includes base. The availability data related to the variation's availability ID.</li><li>'base.images' = Includes base. The images linked to the item.</li><li>'base.shippingProfiles' = Includes base. The shipping profiles linked to the item.</li><li>'base.stock' = Includes base. The stock of the variation.</li><li>'base.stockStorageLocations' = Includes base. The stock storage locations of the variation.</li><li>'bundleComponents' = The bundle components of the variation.</li><li>'categories' = The categories of the variation.</li><li>'categories.category' = Includes categories. The related category data for each category ID.</li><li>'categories.categoryBranch' = Includes categories. The related category branch data for each category ID.</li><li>'clients' = The clients of the variation.</li><li>'defaultCategories' = The default categories of the variation</li><li>'defaultCategories.category' = Includes defaultCategories. The category data to the related category ID.</li><li>'images' = The images of the variation</li><li>'images.image' = Includes images. The image data to the related image ID.</li><li>'markets' = The markets of the variation.</li><li>'marketIdentNumbers' = The market ident numbers of the variation</li><li>'salesPrices' = The sales prices of the variation.</li><li>'salesPrices.salesPrice' = Includes salesPrices. The sales price data to the related sales price ID.</li><li>'skus' = The skus of the variation.</li><li>'supplier' = The supplier of the variation.</li><li>'supplier.supplier' = Includes supplier. The contact data to the related supplier ID.</li><li>'timestamps' = The timetamps of the variation.</li><li>'warehouses' = The warehouses of the variation</li><li>'warehouses.warehouse' = Includes warehouses. The warehouse data to the related warehouse ID.</li><li>'unit' = The unit of the variation</li><li>'unit.unit' = Includes unit. The unit data of the related unit ID.</li><li>'tags' = The tags of the variation.</li><li>'tags.tag' = Includes tags. The tag data to the related tag ID.</li><li>'properties' = The properties of the variation.</li><li>'properties.property' = Includes properties. The property data to the related property ID.</li><li>'comments' = The comments of the variation.</li><li>'inheritance' = The inheritance of the variation.</li></ul>
     *      - *sortBy* - string - optional
     *          - Sorts the results. Append '_asc' or '_desc' to specify the sorting order. '_desc' is the default value if no other is specified. More than one parameter should be separated by commas. The following parameters are available:<ul><li>'id'</li><li>'itemId'</li><li>'isMain'</li><li>'position'</li><li>'availabilityId'</li><li>'createdAt'</li><li>'updatedAt'</li><li>'itemUpdatedAt'</li><li>'relatedUpdatedAt'</li></ul>
     *      - *groupBy* - string - optional
     *          - Groups the result. The following parameters are available:<ul><li>'itemId' = Groups the result by the item ID.</li><li>'itemAttributeValue' = Groups the result by the attribute with the flag 'isGroupable'.</li></ul>
     *      - *query* - string - optional
     *          - Filter restricts the list of results to variations matching the specified query
     *      - *ids* - string - optional
     *          - Filter restricts the list of results to variations with the specified IDs. More than one parameter should be separated by commas. If you use this filter no other filter will be considered. Limited to 500 ids
     *      - *itemId* - int - optional
     *          - Filter restricts the list of results to variations with the specified item ID. Limited to 100 ids
     *      - *itemIds* - string - optional
     *          - Filter restricts the list of results to variations with the specified item IDs. More than one parameter should be separated by commas.
     *      - *isActive* - boolean - optional
     *          - Filter restricts the list of results to variations which are active/inactive.
     *      - *isMain* - boolean - optional
     *          - Filter restricts the list of results to variations which are main/not main.
     *      - *isSalable* - boolean - optional
     *          - Filter restricts the list of results to variations which are salable.
     *      - *supplierId* - int - optional
     *          - Filter restricts the list of results to variations which have the given supplier ID.
     *      - *availabilityIds* - string - optional
     *          - Filter restricts the list of results to variations with the specified availability IDs. More than one parameter should be separated by commas.
     *      - *hasChildren* - boolean - optional
     *          - Filter restricts the list of results to variations which have children.
     *      - *hasActiveChildren* - boolean - optional
     *          - Filter restricts the list of results to variations which have active children.
     *      - *attributeId* - int - optional
     *          - Filter restricts the list of results to variations which have the specified attribute ID.
     *      - *anyAttributeId* - string - optional
     *          - Filter restricts the list of results to variations which have any of the specified attribute IDs. More than one parameter should be separated by commas.
     *      - *allAttributeIds* - string - optional
     *          - Filter restricts the list of results to variations which have all specified attribute IDs. More than one parameter should be separated by commas.
     *      - *attributeValueId* - int - optional
     *          - Filter restricts the list of results to variations which have the specified attribute value ID.
     *      - *anyAttributeValueId* - string - optional
     *          - Filter restricts the list of results to variations which have the any of the specified attribute value IDs. More than one parameter should be separated by commas.
     *      - *allAttributeValueIds* - string - optional
     *          - Filter restricts the list of results to variations which have all specified attribute value IDs. More than one parameter should be separated by commas.
     *      - *barcodeCode* - string - optional
     *          - Filter restricts the list of results to variations which have a barcode with the specified code.
     *      - *barcodeId* - int - optional
     *          - Filter restricts the list of results to variations which have a barcode with the specified ID.
     *      - *bundleType* - string - optional
     *          - Filter restricts the list of results to variations with the specified bundle type.
     *      - *categoryId* - int - optional
     *          - Filter restricts the list of results to variations which have the specified category ID.
     *      - *anyCategoryId* - string - optional
     *          - Filter restricts the list of results to variations which have any of the specified category IDs. More than one parameter should be separated by commas.
     *      - *allCategoryIds* - string - optional
     *          - Filter restricts the list of results to variations which have all specified category IDs. More than one parameter should be separated by commas.
     *      - *anyCharacteristicId* - string - optional
     *          - Filter restricts the list of results to variations which have any of the specified characteristic IDs.
     *      - *allCharacteristicIds* - string - optional
     *          - Filter restricts the list of results to variations which have all specified characteristic IDs.
     *      - *clientId* - int - optional
     *          - Filter restricts the list of results to variations which have the specified client ID.
     *      - *anyClientId* - string - optional
     *          - Filter restricts the list of results to variations which have any of the specified client IDs. More than one parameter should be separated by commas.
     *      - *allClientIds* - string - optional
     *          - Filter restricts the list of results to variations which have all specified client IDs. More than one parameter should be separated by commas.
     *      - *automaticClientVisibilities* - string - optional
     *          - Filter restricts the list of results to variations which have any of the specified automatic client visibilities. More than one parameter should be separated by commas.
     *      - *imageHasMarketId* - number - optional
     *          - Filter restricts the list of results to variations which have an image available for the specified market ID.
     *      - *flag1* - int - optional
     *          - Filter restricts the list of results to variations with the specified flag one.
     *      - *flag2* - int - optional
     *          - Filter restricts the list of results to variations with the specified flag two.
     *      - *manufacturerId* - int - optional
     *          - Filter restricts the list of results to variations with the specified manufacturer ID.
     *      - *anyManufacturerId* - string - optional
     *          - Filter restricts the list of results to variations with any of the specified manufacturer IDs.
     *      - *itemType* - string - optional
     *          - Filter restricts the list of results to variations which have the specified item type.
     *      - *marketId* - number - optional
     *          - Filter restricts the list of results to variations which have the specified market ID.
     *      - *anyMarketId* - string - optional
     *          - Filter restricts the list of results to variations which have any of the specified market IDs.
     *      - *referrerIds* - string - optional
     *          - Filter restricts the list of results to variations which have/not have any of the specified market IDs.
     *      - *allMarketIds* - string - optional
     *          - Filter restricts the list of results to variations which have all specified market IDs.
     *      - *priceBetween* - string - optional
     *          - Filter restricts the list of results to variations which have a sales price between the specified minimum and maximum value. Minimum and maximum value should be separated by a comma.
     *      - *priceBetweenById* - string - optional
     *          - Filter restricts the list of results to variations where the specified sales price is between the specified minimum and maximum value. Sales price ID, Minimum and maximum value should be separated by a comma.
     *      - *priceCalculationUuid* - string - optional
     *          - Filter restricts the list of results to variations with the specified price calculiation uuid.
     *      - *salesPriceIds* - string - optional
     *          - Filter restricts the list of results to variations which match specified sales price IDs criteria. More than one parameter should be separated by commas.
     *      - *anySalesPriceId* - string - optional
     *          - Filter restricts the list of results to variations which have any of the specified sales price IDs. More than one parameter should be separated by commas.
     *      - *propertySelectionId* - int - optional
     *          - Filter restricts the list of results to variations which have the specified property selection ID.
     *      - *anyPropertySelectionId* - string - optional
     *          - Filter restricts the list of results to variations which have any of the specified property selection IDs.
     *      - *allPropertySelectionIds* - string - optional
     *          - Filter restricts the list of results to variations which have all specified property selection IDs.
     *      - *hasNameInLanguage* - string - optional
     *          - Filter restricts the list of results to variations which have a name in the specified language.
     *      - *bundleComponentVariationId* - int - optional
     *          - Filter restricts the list of results to variations which have the specified bundle component variation ID.
     *      - *warehouseIds* - string - optional
     *          - Filter restricts the result to variations which meet the specified warehouse id criteria. Allowed operators are: 'eq', 'not', 'nin' and 'in'.
     *      - *netStock* - int - optional
     *          - Filter restricts the result to variations which meet the specified net stock criteria. Allowed operators are: 'eq', 'lt', 'lte', 'gt' and 'gte'.
     *      - *physicalStock* - int - optional
     *          - Filter restricts the result to variations which meet the specified physical stock criteria. Allowed operators are: 'eq', 'lt', 'lte', 'gt' and 'gte'.
     *      - *itemNames* - string - optional
     *          - Filter restricts the list of results to variations matching any name of the item.
     *      - *itemName1* - string - optional
     *          - Filter restricts the list of results to variations matching name 1 of the item
     *      - *itemName2* - string - optional
     *          - Filter restricts the list of results to variations matching name 2 of the item.
     *      - *itemName3* - string - optional
     *          - Filter restricts the list of results to variations matching name 3 of the item.
     *      - *number* - string - optional
     *          - Filter restricts the list of results to variations which matching the number of the variation.
     *      - *model* - string - optional
     *          - Filter restricts the list of results to variations which matching the model of the variation.
     *      - *supplierItemNumber* - string - optional
     *          - Filter restricts the list of results to variations which matching the supplier item number of the variation.
     *      - *lang* - string - optional
     *          - Specifies the language of the language-dependent filters
     *      - *createdAt* - string - optional
     *          - Filter restricts the list of results to variations which have been created in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *updatedAt* - string - optional
     *          - Filter restricts the list of results to variations which have been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *itemCreatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose item has been created in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *itemUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose item has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *availabilityUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose availablity has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *stockUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose stock has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *barcodeUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose barcodes has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *categoryUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose categories has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *clientUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose clients has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *marketUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose markets has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *propertyUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose properties has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *salesPriceUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose sales prices have been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *supplierUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose suppliers has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *tagUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose tags has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *warehouseUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose warehouse has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *page* - int - optional
     *          - The requested page of results. Default value is 1.
     *      - *itemsPerPage* - int - optional
     *          - The number of results per page. Maximum value is 250. Default value is 50.
     *      - *hasLowestPrice* - boolean - optional
     *          - Filter restricts the list of results to variations which has or has not lowest price.
     * @return array
     *      - *page* - integer
     *          - Current page of the response
     *      - *totalsCount* - integer
     *          - The total number of entries in the response
     *      - *isLastPage* - boolean
     *          - Flag that indicates if the page shown is the last page of the response
     *      - *lastPageNumber* - integer
     *          - The last page number
     *      - *firstOnPage* - integer
     *          - The index of the first item of the current page result
     *      - *lastOnPage* - integer
     *          - The index of the last item of the current page result
     *      - *itemsPerPage* - integer
     *          - The requested amount of items per result page
     *      - *entries* - array
     *          - List of Variation
     */
    public function getPimVariations(array $query = []): array
    {
        return $this->api(array_merge(["/rest/pim/variations"], $query));
    }
                
    /**
     * @description Creates a list of variations and their related data.
     * @tag Pim
     * @param array $data 
     */
    public function updatePimVariation(array $data): void
    {
        $this->api("/rest/pim/variations", 'PUT', $data);
    }
                    
    /**
     * @description Deletes a list of variation additional skus.
     * @tag Pim

     */
    public function deletePimVariationsAdditionalSkus(): void
    {
        $this->api("/rest/pim/variations/additional_skus", 'DELETE');
    }
                
    /**
     * @description Creates and updates a list of variation additional skus.
     * @tag Pim

     */
    public function updatePimVariationsAdditionalSkus(): void
    {
        $this->api("/rest/pim/variations/additional_skus", 'PUT');
    }
                    
    /**
     * @description Deletes a list of variation barcodes.
     * @tag Pim

     */
    public function deletePimVariationsBarcode(): void
    {
        $this->api("/rest/pim/variations/barcodes", 'DELETE');
    }
                
    /**
     * @description Creates and updates a list of variation barcodes.
     * @tag Pim

     */
    public function updatePimVariationsBarcode(): void
    {
        $this->api("/rest/pim/variations/barcodes", 'PUT');
    }
                    
    /**
     * @description Creates and updates a list of variations.
     * @tag Pim

     */
    public function updatePimVariationsBase(): void
    {
        $this->api("/rest/pim/variations/bases", 'PUT');
    }
                    
    /**
     * @description Deletes a list of variation bundle components.
     * @tag Pim

     */
    public function deletePimVariationsBundleComponent(): void
    {
        $this->api("/rest/pim/variations/bundle_components", 'DELETE');
    }
                
    /**
     * @description Creates and updates a list of variation bundle components.
     * @tag Pim

     */
    public function updatePimVariationsBundleComponent(): void
    {
        $this->api("/rest/pim/variations/bundle_components", 'PUT');
    }
                    
    /**
     * @description Deletes a list of variation categories.
     * @tag Pim

     */
    public function deletePimVariationsCategory(): void
    {
        $this->api("/rest/pim/variations/categories", 'DELETE');
    }
                
    /**
     * @description Creates and updates a list of variation categories.
     * @tag Pim

     */
    public function updatePimVariationsCategory(): void
    {
        $this->api("/rest/pim/variations/categories", 'PUT');
    }
                    
    /**
     * @description Deletes a list of variation clients.
     * @tag Pim

     */
    public function deletePimVariationsClient(): void
    {
        $this->api("/rest/pim/variations/clients", 'DELETE');
    }
                
    /**
     * @description Creates a list of variation clients.
     * @tag Pim

     */
    public function updatePimVariationsClient(): void
    {
        $this->api("/rest/pim/variations/clients", 'PUT');
    }
                    
    /**
     * @description Deletes a list of variation comments.
     * @tag Pim

     */
    public function deletePimVariationsComment(): void
    {
        $this->api("/rest/pim/variations/comments", 'DELETE');
    }
                
    /**
     * @description Creates and updates a list of variation comments.
     * @tag Pim

     */
    public function updatePimVariationsComment(): void
    {
        $this->api("/rest/pim/variations/comments", 'PUT');
    }
                    
    /**
     * @description Deletes a list of variation default categories.
     * @tag Pim

     */
    public function deletePimVariationsDefaultCategory(): void
    {
        $this->api("/rest/pim/variations/default_categories", 'DELETE');
    }
                
    /**
     * @description Creates and updates a list of variation default categories.
     * @tag Pim

     */
    public function updatePimVariationsDefaultCategory(): void
    {
        $this->api("/rest/pim/variations/default_categories", 'PUT');
    }
                    
    /**
     * @description Deletes a list of variation images.
     * @tag Pim

     */
    public function deletePimVariationsImage(): void
    {
        $this->api("/rest/pim/variations/images", 'DELETE');
    }
                
    /**
     * @description Creates a list of variation images.
     * @tag Pim

     */
    public function updatePimVariationsImage(): void
    {
        $this->api("/rest/pim/variations/images", 'PUT');
    }
                    
    /**
     * @description Deletes a list of variation market ident numbers.
     * @tag Pim

     */
    public function deletePimVariationsMarketIdentNumber(): void
    {
        $this->api("/rest/pim/variations/market_ident_numbers", 'DELETE');
    }
                
    /**
     * @description Creates and updates a list of variation market ident numbers.
     * @tag Pim

     */
    public function updatePimVariationsMarketIdentNumber(): void
    {
        $this->api("/rest/pim/variations/market_ident_numbers", 'PUT');
    }
                    
    /**
     * @description Deletes a list of variation markets.
     * @tag Pim

     */
    public function deletePimVariationsMarket(): void
    {
        $this->api("/rest/pim/variations/markets", 'DELETE');
    }
                
    /**
     * @description Creates a list of variation markets.
     * @tag Pim

     */
    public function updatePimVariationsMarket(): void
    {
        $this->api("/rest/pim/variations/markets", 'PUT');
    }
                    
    /**
     * @description Deletes a list of variation properties.
     * @tag Pim

     */
    public function deletePimVariationsProperty(): void
    {
        $this->api("/rest/pim/variations/properties", 'DELETE');
    }
                
    /**
     * @description Creates and updates a list of variation properties.
     * @tag Pim

     */
    public function updatePimVariationsProperty(): void
    {
        $this->api("/rest/pim/variations/properties", 'PUT');
    }
                    
    /**
     * @description Deletes a list of variation sales prices.
     * @tag Pim

     */
    public function deletePimVariationsSalesPrice(): void
    {
        $this->api("/rest/pim/variations/sales_prices", 'DELETE');
    }
                
    /**
     * @description Creates and updates a list of variation sales prices.
     * @tag Pim

     */
    public function updatePimVariationsSalesPrice(): void
    {
        $this->api("/rest/pim/variations/sales_prices", 'PUT');
    }
                    
    /**
     * @description Get all variations, with the specified data, scrolled by a cursor
     * @tag Pim
     * @param array $query
     *      - *with* - string - optional
     *          - Includes the specified information in the results. More than one parameter should be separated by commas. The following parameters are available:<ul><li>'additionalSkus' = The additional skus of the variation.</li><li>'attributeValues' = The attribute values of the variation.</li><li>'attributeValues.attribute'/b> = Includes attributeValues. The attribute data to the related attribute ID.</li><li>'attributeValues.attributeValue' = Includes attributeValues. The attribute value data to the related attribute value ID.</li><li>'barcodes' = The barcodes of the variation.</li><li>'barcodes.barcode' = Includes barcodes. The barcode data to the related barcode ID.</li><li>'base' = The variation base.</li><li>'base.item' = Includes base. The item data of the variation.</li><li>'base.itemSerialNumber' = Includes base. The item serial numbers of the variation.</li><li>'base.feedback' = Includes base. The feedback of the variation.</li><li>'base.characteristics' = Includes base. The characteristics of the variation.</li><li>'base.crossSelling' = Includes base. The cross selling items of the variation.</li><li>'base.texts' = Includes base. The texts of the variation.</li><li>'base.availability' = Includes base. The availability data related to the variation's availability ID.</li><li>'base.images' = Includes base. The images linked to the item.</li><li>'base.shippingProfiles' = Includes base. The shipping profiles linked to the item.</li><li>'base.stock' = Includes base. The stock of the variation.</li><li>'base.stockStorageLocations' = Includes base. The stock storage locations of the variation.</li><li>'bundleComponents' = The bundle components of the variation.</li><li>'categories' = The categories of the variation.</li><li>'categories.category' = Includes categories. The related category data for each category ID.</li><li>'categories.categoryBranch' = Includes categories. The related category branch data for each category ID.</li><li>'clients' = The clients of the variation.</li><li>'defaultCategories' = The default categories of the variation</li><li>'defaultCategories.category' = Includes defaultCategories. The category data to the related category ID.</li><li>'images' = The images of the variation</li><li>'images.image' = Includes images. The image data to the related image ID.</li><li>'markets' = The markets of the variation.</li><li>'marketIdentNumbers' = The market ident numbers of the variation</li><li>'salesPrices' = The sales prices of the variation.</li><li>'salesPrices.salesPrice' = Includes salesPrices. The sales price data to the related sales price ID.</li><li>'skus' = The skus of the variation.</li><li>'supplier' = The supplier of the variation.</li><li>'supplier.supplier' = Includes supplier. The contact data to the related supplier ID.</li><li>'timestamps' = The timetamps of the variation.</li><li>'warehouses' = The warehouses of the variation</li><li>'warehouses.warehouse' = Includes warehouses. The warehouse data to the related warehouse ID.</li><li>'unit' = The unit of the variation</li><li>'unit.unit' = Includes unit. The unit data of the related unit ID.</li><li>'tags' = The tags of the variation.</li><li>'tags.tag' = Includes tags. The tag data to the related tag ID.</li><li>'properties' = The properties of the variation.</li><li>'properties.property' = Includes properties. The property data to the related property ID.</li><li>'comments' = The comments of the variation.</li><li>'inheritance' = The inheritance of the variation.</li></ul>
     *      - *groupBy* - string - optional
     *          - Groups the result. The following parameters are available:<ul><li>'itemId' = Groups the result by the item ID.</li><li>'itemAttributeValue' = Groups the result by the attribute with the flag 'isGroupable'.</li></ul>
     *      - *query* - string - optional
     *          - Filter restricts the list of results to variations matching the specified query
     *      - *itemId* - int - optional
     *          - Filter restricts the list of results to variations with the specified item ID. Limited to 100 ids
     *      - *itemIds* - string - optional
     *          - Filter restricts the list of results to variations with the specified item IDs. More than one parameter should be separated by commas.
     *      - *isActive* - boolean - optional
     *          - Filter restricts the list of results to variations which are active/inactive.
     *      - *isMain* - boolean - optional
     *          - Filter restricts the list of results to variations which are main/not main.
     *      - *isSalable* - boolean - optional
     *          - Filter restricts the list of results to variations which are salable.
     *      - *supplierId* - int - optional
     *          - Filter restricts the list of results to variations which have the given supplier ID.
     *      - *availabilityIds* - string - optional
     *          - Filter restricts the list of results to variations with the specified availability IDs. More than one parameter should be separated by commas.
     *      - *hasChildren* - boolean - optional
     *          - Filter restricts the list of results to variations which have children.
     *      - *hasActiveChildren* - boolean - optional
     *          - Filter restricts the list of results to variations which have active children.
     *      - *attributeId* - int - optional
     *          - Filter restricts the list of results to variations which have the specified attribute ID.
     *      - *anyAttributeId* - string - optional
     *          - Filter restricts the list of results to variations which have any of the specified attribute IDs. More than one parameter should be separated by commas.
     *      - *allAttributeIds* - string - optional
     *          - Filter restricts the list of results to variations which have all specified attribute IDs. More than one parameter should be separated by commas.
     *      - *attributeValueId* - int - optional
     *          - Filter restricts the list of results to variations which have the specified attribute value ID.
     *      - *anyAttributeValueId* - string - optional
     *          - Filter restricts the list of results to variations which have the any of the specified attribute value IDs. More than one parameter should be separated by commas.
     *      - *allAttributeValueIds* - string - optional
     *          - Filter restricts the list of results to variations which have all specified attribute value IDs. More than one parameter should be separated by commas.
     *      - *hasBarcode* - boolean - optional
     *          - Filter restricts the list of results to variations which have at least one barcode (true) or have no barcodes (false).
     *      - *barcodeCode* - string - optional
     *          - Filter restricts the list of results to variations which have a barcode with the specified code.
     *      - *barcodeId* - int - optional
     *          - Filter restricts the list of results to variations which have a barcode with the specified ID.
     *      - *bundleType* - string - optional
     *          - Filter restricts the list of results to variations with the specified bundle type.
     *      - *categoryId* - int - optional
     *          - Filter restricts the list of results to variations which have the specified category ID.
     *      - *anyCategoryId* - string - optional
     *          - Filter restricts the list of results to variations which have any of the specified category IDs. More than one parameter should be separated by commas.
     *      - *allCategoryIds* - string - optional
     *          - Filter restricts the list of results to variations which have all specified category IDs. More than one parameter should be separated by commas.
     *      - *anyCharacteristicId* - string - optional
     *          - Filter restricts the list of results to variations which have any of the specified characteristic IDs.
     *      - *allCharacteristicIds* - string - optional
     *          - Filter restricts the list of results to variations which have all specified characteristic IDs.
     *      - *clientId* - int - optional
     *          - Filter restricts the list of results to variations which have the specified client ID.
     *      - *anyClientId* - string - optional
     *          - Filter restricts the list of results to variations which have any of the specified client IDs. More than one parameter should be separated by commas.
     *      - *allClientIds* - string - optional
     *          - Filter restricts the list of results to variations which have all specified client IDs. More than one parameter should be separated by commas.
     *      - *automaticClientVisibilities* - string - optional
     *          - Filter restricts the list of results to variations which have any of the specified automatic client visibilities. More than one parameter should be separated by commas.
     *      - *imageHasMarketId* - number - optional
     *          - Filter restricts the list of results to variations which have an image available for the specified market ID.
     *      - *flag1* - int - optional
     *          - Filter restricts the list of results to variations with the specified flag one.
     *      - *flag2* - int - optional
     *          - Filter restricts the list of results to variations with the specified flag two.
     *      - *manufacturerId* - int - optional
     *          - Filter restricts the list of results to variations with the specified manufacturer ID.
     *      - *anyManufacturerId* - string - optional
     *          - Filter restricts the list of results to variations with any of the specified manufacturer IDs.
     *      - *itemType* - string - optional
     *          - Filter restricts the list of results to variations which have the specified item type.
     *      - *marketId* - number - optional
     *          - Filter restricts the list of results to variations which have the specified market ID.
     *      - *anyMarketId* - string - optional
     *          - Filter restricts the list of results to variations which have any of the specified market IDs.
     *      - *referrerIds* - string - optional
     *          - Filter restricts the list of results to variations which have/not have any of the specified market IDs.
     *      - *allMarketIds* - string - optional
     *          - Filter restricts the list of results to variations which have all specified market IDs.
     *      - *priceBetween* - string - optional
     *          - Filter restricts the list of results to variations which have a sales price between the specified minimum and maximum value. Minimum and maximum value should be separated by a comma.
     *      - *priceBetweenById* - string - optional
     *          - Filter restricts the list of results to variations where the specified sales price is between the specified minimum and maximum value. Sales price ID, Minimum and maximum value should be separated by a comma.
     *      - *priceCalculationUuid* - string - optional
     *          - Filter restricts the list of results to variations with the specified price calculiation uuid.
     *      - *anySalesPriceId* - string - optional
     *          - Filter restricts the list of results to variations which have any of the specified sales price IDs. More than one parameter should be separated by commas.
     *      - *propertySelectionId* - int - optional
     *          - Filter restricts the list of results to variations which have the specified property selection ID.
     *      - *anyPropertySelectionId* - string - optional
     *          - Filter restricts the list of results to variations which have any of the specified property selection IDs.
     *      - *allPropertySelectionIds* - string - optional
     *          - Filter restricts the list of results to variations which have all specified property selection IDs.
     *      - *hasNameInLanguage* - string - optional
     *          - Filter restricts the list of results to variations which have a name in the specified language.
     *      - *bundleComponentVariationId* - int - optional
     *          - Filter restricts the list of results to variations which have the specified bundle component variation ID.
     *      - *itemNames* - string - optional
     *          - Filter restricts the list of results to variations matching any name of the item.
     *      - *itemName1* - string - optional
     *          - Filter restricts the list of results to variations matching name 1 of the item
     *      - *itemName2* - string - optional
     *          - Filter restricts the list of results to variations matching name 2 of the item.
     *      - *itemName3* - string - optional
     *          - Filter restricts the list of results to variations matching name 3 of the item.
     *      - *number* - string - optional
     *          - Filter restricts the list of results to variations which matching the number of the variation.
     *      - *model* - string - optional
     *          - Filter restricts the list of results to variations which matching the model of the variation.
     *      - *supplierItemNumber* - string - optional
     *          - Filter restricts the list of results to variations which matching the supplier item number of the variation.
     *      - *lang* - string - optional
     *          - Specifies the language of the language-dependent filters
     *      - *createdAt* - string - optional
     *          - Filter restricts the list of results to variations which have been created in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *updatedAt* - string - optional
     *          - Filter restricts the list of results to variations which have been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *itemCreatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose item has been created in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *itemUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose item has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *availabilityUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose availablity has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *stockUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose stock has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *barcodeUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose barcodes has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *categoryUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose categories has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *clientUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose clients has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *marketUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose markets has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *propertyUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose properties has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *supplierUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose suppliers has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *tagUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose tags has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *warehouseUpdatedAt* - string - optional
     *          - Filter restricts the list of results to variations whose warehouse has been updated in the specified time frame. The from and to parameter should be separated by a comma. If there is no to value, the current time is used instead.
     *      - *hasLowestPrice* - boolean - optional
     *          - Filter restricts the list of results to variations which has or has not lowest price.
     *      - *cursor* - string - optional
     *          - The cursor to get the next entries
     */
    public function getPimVariationsScroll(array $query = []): void
    {
        $this->api(array_merge(["/rest/pim/variations/scroll"], $query));
    }
                    
    /**
     * @description Deletes a list of variation skus.
     * @tag Pim

     */
    public function deletePimVariationsSkus(): void
    {
        $this->api("/rest/pim/variations/skus", 'DELETE');
    }
                
    /**
     * @description Creates and updates a list of variation skus.
     * @tag Pim

     */
    public function updatePimVariationsSkus(): void
    {
        $this->api("/rest/pim/variations/skus", 'PUT');
    }
                    
    /**
     * @description Deletes a list of variation supplier.
     * @tag Pim

     */
    public function deletePimVariationsSupplier(): void
    {
        $this->api("/rest/pim/variations/supplier", 'DELETE');
    }
                
    /**
     * @description Creates and updates a list of variation suppliers.
     * @tag Pim

     */
    public function updatePimVariationsSupplier(): void
    {
        $this->api("/rest/pim/variations/supplier", 'PUT');
    }
                    
    /**
     * @description Deletes a list of variation tags.
     * @tag Pim

     */
    public function deletePimVariationsTag(): void
    {
        $this->api("/rest/pim/variations/tags", 'DELETE');
    }
                
    /**
     * @description Creates a list of variation tags.
     * @tag Pim

     */
    public function updatePimVariationsTag(): void
    {
        $this->api("/rest/pim/variations/tags", 'PUT');
    }
                    
    /**
     * @description Deletes a list of variation warehouses.
     * @tag Pim

     */
    public function deletePimVariationsWarehouse(): void
    {
        $this->api("/rest/pim/variations/warehouses", 'DELETE');
    }
                
    /**
     * @description Creates and updates a list of variation warehouses.
     * @tag Pim

     */
    public function updatePimVariationsWarehouse(): void
    {
        $this->api("/rest/pim/variations/warehouses", 'PUT');
    }
    
}
