<?php

namespace lujie\amazon\sp\api;

use Yii;
use Iterator;

/**
* This class is autogenerated by the OpenAPI gii generator
* @description The Selling Partner API for Pricing helps you programmatically retrieve product pricing and offer information for Amazon Marketplace products.
*/
class ProductPricingV0 extends \lujie\amazon\sp\BaseAmazonSPClient
{

                
    /**
     * @description Returns pricing information for a seller's offer listings based on seller SKU or ASIN.

**Note:** The parameters associated with this operation may contain special characters that require URL encoding to call the API. To avoid errors with SKUs when encoding URLs, refer to [URL Encoding](https://developer-docs.amazon.com/sp-api/docs/url-encoding).

**Usage Plan:**

| Rate (requests per second) | Burst |
| ---- | ---- |
| 0.5 | 1 |

The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     * @tag productPricing
     * @param array $query
     *      - *MarketplaceId* - string - required
     *          - A marketplace identifier. Specifies the marketplace for which prices are returned.
     *      - *Asins* - array - optional
     *          - A list of up to twenty Amazon Standard Identification Number (ASIN) values used to identify items in the given marketplace.
     *      - *Skus* - array - optional
     *          - A list of up to twenty seller SKU values used to identify items in the given marketplace.
     *      - *ItemType* - string - required
     *          - Indicates whether ASIN values or seller SKU values are used to identify items. If you specify Asin, the information in the response will be dependent on the list of Asins you provide in the Asins parameter. If you specify Sku, the information in the response will be dependent on the list of Skus you provide in the Skus parameter.
     *      - *ItemCondition* - string - optional
     *          - Filters the offer listings based on item condition. Possible values: New, Used, Collectible, Refurbished, Club.
     *      - *OfferType* - string - optional
     *          - Indicates whether to request pricing information for the seller's B2C or B2B offers. Default is B2C.
     * @return array
     *      - *payload* - 
     *          - The payload for the getPricing and getCompetitivePricing operations.
     *      - *errors* - 
     *          - One or more unexpected errors occurred during the operation.
     */
    public function getPricing(array $query): array
    {
        return $this->api(array_merge(["/products/pricing/v0/price"], $query));
    }
                    
    /**
     * @description Returns competitive pricing information for a seller's offer listings based on seller SKU or ASIN.

**Note:** The parameters associated with this operation may contain special characters that require URL encoding to call the API. To avoid errors with SKUs when encoding URLs, refer to [URL Encoding](https://developer-docs.amazon.com/sp-api/docs/url-encoding).

**Usage Plan:**

| Rate (requests per second) | Burst |
| ---- | ---- |
| 0.5 | 1 |

The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     * @tag productPricing
     * @param array $query
     *      - *MarketplaceId* - string - required
     *          - A marketplace identifier. Specifies the marketplace for which prices are returned.
     *      - *Asins* - array - optional
     *          - A list of up to twenty Amazon Standard Identification Number (ASIN) values used to identify items in the given marketplace.
     *      - *Skus* - array - optional
     *          - A list of up to twenty seller SKU values used to identify items in the given marketplace.
     *      - *ItemType* - string - required
     *          - Indicates whether ASIN values or seller SKU values are used to identify items. If you specify Asin, the information in the response will be dependent on the list of Asins you provide in the Asins parameter. If you specify Sku, the information in the response will be dependent on the list of Skus you provide in the Skus parameter. Possible values: Asin, Sku.
     *      - *CustomerType* - string - optional
     *          - Indicates whether to request pricing information from the point of view of Consumer or Business buyers. Default is Consumer.
     * @return array
     *      - *payload* - 
     *          - The payload for the getPricing and getCompetitivePricing operations.
     *      - *errors* - 
     *          - One or more unexpected errors occurred during the operation.
     */
    public function getCompetitivePricing(array $query): array
    {
        return $this->api(array_merge(["/products/pricing/v0/competitivePrice"], $query));
    }
                    
    /**
     * @description Returns the lowest priced offers for a single SKU listing.

**Note:** The parameters associated with this operation may contain special characters that require URL encoding to call the API. To avoid errors with SKUs when encoding URLs, refer to [URL Encoding](https://developer-docs.amazon.com/sp-api/docs/url-encoding).

**Usage Plan:**

| Rate (requests per second) | Burst |
| ---- | ---- |
| 1 | 2 |

The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     * @tag productPricing
     * @param string $sellerSKU Identifies an item in the given marketplace. SellerSKU is qualified by the seller's SellerId, which is included with every operation that you submit.
     * @param array $query
     *      - *MarketplaceId* - string - required
     *          - A marketplace identifier. Specifies the marketplace for which prices are returned.
     *      - *ItemCondition* - string - required
     *          - Filters the offer listings based on item condition. Possible values: New, Used, Collectible, Refurbished, Club.
     *      - *CustomerType* - string - optional
     *          - Indicates whether to request Consumer or Business offers. Default is Consumer.
     * @return array
     *      - *payload* - 
     *          - The payload for the `getListingOffers` and `getItemOffers` operations.
     *      - *errors* - 
     *          - One or more unexpected errors occurred during the operation.
     */
    public function getListingOffers(string $sellerSKU, array $query): array
    {
        return $this->api(array_merge(["/products/pricing/v0/listings/{$sellerSKU}/offers"], $query));
    }
                    
    /**
     * @description Returns the lowest priced offers for a single item based on ASIN.

**Usage Plan:**

| Rate (requests per second) | Burst |
| ---- | ---- |
| 0.5 | 1 |

The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     * @tag productPricing
     * @param string $asin The Amazon Standard Identification Number (ASIN) of the item.
     * @param array $query
     *      - *MarketplaceId* - string - required
     *          - A marketplace identifier. Specifies the marketplace for which prices are returned.
     *      - *ItemCondition* - string - required
     *          - Filters the offer listings to be considered based on item condition. Possible values: New, Used, Collectible, Refurbished, Club.
     *      - *CustomerType* - string - optional
     *          - Indicates whether to request Consumer or Business offers. Default is Consumer.
     * @return array
     *      - *payload* - 
     *          - The payload for the `getListingOffers` and `getItemOffers` operations.
     *      - *errors* - 
     *          - One or more unexpected errors occurred during the operation.
     */
    public function getItemOffers(string $asin, array $query): array
    {
        return $this->api(array_merge(["/products/pricing/v0/items/{$asin}/offers"], $query));
    }
                    
    /**
     * @description Returns the lowest priced offers for a batch of items based on ASIN.

**Usage Plan:**

| Rate (requests per second) | Burst |
| ---- | ---- |
| 0.5 | 1 |

The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     * @tag productPricing
     * @param array $data 
     * @return array
     *      - *responses* - 
     */
    public function getItemOffersBatch(array $data): array
    {
        return $this->api("/batches/products/pricing/v0/itemOffers", 'POST', $data);
    }
                    
    /**
     * @description Returns the lowest priced offers for a batch of listings by SKU.

**Usage Plan:**

| Rate (requests per second) | Burst |
| ---- | ---- |
| 0.5 | 1 |

The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).
     * @tag productPricing
     * @param array $data 
     * @return array
     *      - *responses* - 
     */
    public function getListingOffersBatch(array $data): array
    {
        return $this->api("/batches/products/pricing/v0/listingOffers", 'POST', $data);
    }
    
}
