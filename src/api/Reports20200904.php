<?php

namespace lujie\amazon\sp\api;

use Yii;
use Iterator;

/**
* This class is autogenerated by the OpenAPI gii generator
* @description Effective **June 27, 2023**, the Selling Partner API for Reports v2020-09-04 will no longer be available and all calls to it will fail. Integrations that rely on the Reports API must migrate to [Reports v2021-06-30](https://developer-docs.amazon.com/sp-api/docs/reports-api-v2021-06-30-reference) to avoid service disruption.
*/
class Reports20200904 extends \lujie\amazon\sp\BaseAmazonSPClient
{

            
    /**
     * @description Effective **June 27, 2023**, the `getReports` operation will no longer be available in the Selling Partner API for Reports v2020-09-04 and all calls to it will fail. Integrations that rely on this operation should migrate to [Reports v2021-06-30](https://developer-docs.amazon.com/sp-api/docs/reports-api-v2021-06-30-reference) to avoid service disruption.
     * @tag reports
     * @param array $query
     *      - *reportTypes* - array - optional
     *          - A list of report types used to filter reports. When reportTypes is provided, the other filter parameters (processingStatuses, marketplaceIds, createdSince, createdUntil) and pageSize may also be provided. Either reportTypes or nextToken is required.
     *      - *processingStatuses* - array - optional
     *          - A list of processing statuses used to filter reports.
     *      - *marketplaceIds* - array - optional
     *          - A list of marketplace identifiers used to filter reports. The reports returned will match at least one of the marketplaces that you specify.
     *      - *pageSize* - integer - optional
     *          - The maximum number of reports to return in a single call.
     *      - *createdSince* - string - optional
     *          - The earliest report creation date and time for reports to include in the response, in ISO 8601 date time format. The default is 90 days ago. Reports are retained for a maximum of 90 days.
     *      - *createdUntil* - string - optional
     *          - The latest report creation date and time for reports to include in the response, in ISO 8601 date time format. The default is now.
     *      - *nextToken* - string - optional
     *          - A string token returned in the response to your previous request. nextToken is returned when the number of results exceeds the specified pageSize value. To get the next page of results, call the getReports operation and include this token as the only parameter. Specifying nextToken with any other parameters will cause the request to fail.
     * @return Iterator
     *      - *payload* - 
     *          - The payload for the getReports operation.
     *      - *nextToken* - string
     *          - Returned when the number of results exceeds pageSize. To get the next page of results, call getReports with this token as the only parameter.
     *      - *errors* - 
     */
    public function eachReports(array $query = []): Iterator
    {
        return $this->eachInternal('getReports', func_get_args());
    }
        
    /**
     * @description Effective **June 27, 2023**, the `getReports` operation will no longer be available in the Selling Partner API for Reports v2020-09-04 and all calls to it will fail. Integrations that rely on this operation should migrate to [Reports v2021-06-30](https://developer-docs.amazon.com/sp-api/docs/reports-api-v2021-06-30-reference) to avoid service disruption.
     * @tag reports
     * @param array $query
     *      - *reportTypes* - array - optional
     *          - A list of report types used to filter reports. When reportTypes is provided, the other filter parameters (processingStatuses, marketplaceIds, createdSince, createdUntil) and pageSize may also be provided. Either reportTypes or nextToken is required.
     *      - *processingStatuses* - array - optional
     *          - A list of processing statuses used to filter reports.
     *      - *marketplaceIds* - array - optional
     *          - A list of marketplace identifiers used to filter reports. The reports returned will match at least one of the marketplaces that you specify.
     *      - *pageSize* - integer - optional
     *          - The maximum number of reports to return in a single call.
     *      - *createdSince* - string - optional
     *          - The earliest report creation date and time for reports to include in the response, in ISO 8601 date time format. The default is 90 days ago. Reports are retained for a maximum of 90 days.
     *      - *createdUntil* - string - optional
     *          - The latest report creation date and time for reports to include in the response, in ISO 8601 date time format. The default is now.
     *      - *nextToken* - string - optional
     *          - A string token returned in the response to your previous request. nextToken is returned when the number of results exceeds the specified pageSize value. To get the next page of results, call the getReports operation and include this token as the only parameter. Specifying nextToken with any other parameters will cause the request to fail.
     * @return Iterator
     *      - *payload* - 
     *          - The payload for the getReports operation.
     *      - *nextToken* - string
     *          - Returned when the number of results exceeds pageSize. To get the next page of results, call getReports with this token as the only parameter.
     *      - *errors* - 
     */
    public function batchReports(array $query = []): Iterator
    {
        return $this->batchInternal('getReports', func_get_args());
    }
    
    /**
     * @description Effective **June 27, 2023**, the `getReports` operation will no longer be available in the Selling Partner API for Reports v2020-09-04 and all calls to it will fail. Integrations that rely on this operation should migrate to [Reports v2021-06-30](https://developer-docs.amazon.com/sp-api/docs/reports-api-v2021-06-30-reference) to avoid service disruption.
     * @tag reports
     * @param array $query
     *      - *reportTypes* - array - optional
     *          - A list of report types used to filter reports. When reportTypes is provided, the other filter parameters (processingStatuses, marketplaceIds, createdSince, createdUntil) and pageSize may also be provided. Either reportTypes or nextToken is required.
     *      - *processingStatuses* - array - optional
     *          - A list of processing statuses used to filter reports.
     *      - *marketplaceIds* - array - optional
     *          - A list of marketplace identifiers used to filter reports. The reports returned will match at least one of the marketplaces that you specify.
     *      - *pageSize* - integer - optional
     *          - The maximum number of reports to return in a single call.
     *      - *createdSince* - string - optional
     *          - The earliest report creation date and time for reports to include in the response, in ISO 8601 date time format. The default is 90 days ago. Reports are retained for a maximum of 90 days.
     *      - *createdUntil* - string - optional
     *          - The latest report creation date and time for reports to include in the response, in ISO 8601 date time format. The default is now.
     *      - *nextToken* - string - optional
     *          - A string token returned in the response to your previous request. nextToken is returned when the number of results exceeds the specified pageSize value. To get the next page of results, call the getReports operation and include this token as the only parameter. Specifying nextToken with any other parameters will cause the request to fail.
     * @return array
     *      - *payload* - 
     *          - The payload for the getReports operation.
     *      - *nextToken* - string
     *          - Returned when the number of results exceeds pageSize. To get the next page of results, call getReports with this token as the only parameter.
     *      - *errors* - 
     */
    public function getReports(array $query = []): array
    {
        return $this->api(array_merge(["/reports/2020-09-04/reports"], $query));
    }
                
    /**
     * @description Effective **June 27, 2023**, the `createReport` operation will no longer be available in the Selling Partner API for Reports v2020-09-04 and all calls to it will fail. Integrations that rely on this operation should migrate to [Reports v2021-06-30](https://developer-docs.amazon.com/sp-api/docs/reports-api-v2021-06-30-reference) to avoid service disruption.
     * @tag reports
     * @param array $data 
     * @return array
     *      - *payload* - 
     *          - The payload for the createReport operation.
     *      - *errors* - 
     */
    public function createReport(array $data): array
    {
        return $this->api("/reports/2020-09-04/reports", 'POST', $data);
    }
                    
    /**
     * @description Effective **June 27, 2023**, the `getReport` operation will no longer be available in the Selling Partner API for Reports v2020-09-04 and all calls to it will fail. Integrations that rely on this operation should migrate to [Reports v2021-06-30](https://developer-docs.amazon.com/sp-api/docs/reports-api-v2021-06-30-reference) to avoid service disruption.
     * @tag reports
     * @param string $reportId The identifier for the report. This identifier is unique only in combination with a seller ID.
     * @return array
     *      - *payload* - 
     *          - The payload for the getReport operation.
     *      - *errors* - 
     */
    public function getReport(string $reportId): array
    {
        return $this->api("/reports/2020-09-04/reports/{$reportId}");
    }
                
    /**
     * @description Effective **June 27, 2023**, the `cancelReport` operation will no longer be available in the Selling Partner API for Reports v2020-09-04 and all calls to it will fail. Integrations that rely on this operation should migrate to [Reports v2021-06-30](https://developer-docs.amazon.com/sp-api/docs/reports-api-v2021-06-30-reference) to avoid service disruption.
     * @tag reports
     * @param string $reportId The identifier for the report. This identifier is unique only in combination with a seller ID.
     * @return array
     *      - *errors* - 
     */
    public function cancelReport(string $reportId): array
    {
        return $this->api("/reports/2020-09-04/reports/{$reportId}", 'DELETE');
    }
                    
    /**
     * @description Effective **June 27, 2023**, the `getReportSchedules` operation will no longer be available in the Selling Partner API for Reports v2020-09-04 and all calls to it will fail. Integrations that rely on this operation should migrate to [Reports v2021-06-30](https://developer-docs.amazon.com/sp-api/docs/reports-api-v2021-06-30-reference) to avoid service disruption.
     * @tag reports
     * @param array $query
     *      - *reportTypes* - array - required
     *          - A list of report types used to filter report schedules.
     * @return array
     *      - *payload* - 
     *          - The payload for the getReportSchedules operation.
     *      - *errors* - 
     */
    public function getReportSchedules(array $query): array
    {
        return $this->api(array_merge(["/reports/2020-09-04/schedules"], $query));
    }
                
    /**
     * @description Effective **June 27, 2023**, the `createReportSchedule` operation will no longer be available in the Selling Partner API for Reports v2020-09-04 and all calls to it will fail. Integrations that rely on this operation should migrate to [Reports v2021-06-30](https://developer-docs.amazon.com/sp-api/docs/reports-api-v2021-06-30-reference) to avoid service disruption.
     * @tag reports
     * @param array $data 
     * @return array
     *      - *payload* - 
     *          - The payload for the createReportSchedule operation.
     *      - *errors* - 
     */
    public function createReportSchedule(array $data): array
    {
        return $this->api("/reports/2020-09-04/schedules", 'POST', $data);
    }
                    
    /**
     * @description Effective **June 27, 2023**, the `getReportSchedule` operation will no longer be available in the Selling Partner API for Reports v2020-09-04 and all calls to it will fail. Integrations that rely on this operation should migrate to [Reports v2021-06-30](https://developer-docs.amazon.com/sp-api/docs/reports-api-v2021-06-30-reference) to avoid service disruption.
     * @tag reports
     * @param string $reportScheduleId The identifier for the report schedule. This identifier is unique only in combination with a seller ID.
     * @return array
     *      - *payload* - 
     *          - The payload for the getReportSchedule operation.
     *      - *errors* - 
     */
    public function getReportSchedule(string $reportScheduleId): array
    {
        return $this->api("/reports/2020-09-04/schedules/{$reportScheduleId}");
    }
                
    /**
     * @description Effective **June 27, 2023**, the `cancelReportSchedule` operation will no longer be available in the Selling Partner API for Reports v2020-09-04 and all calls to it will fail. Integrations that rely on this operation should migrate to [Reports v2021-06-30](https://developer-docs.amazon.com/sp-api/docs/reports-api-v2021-06-30-reference) to avoid service disruption.
     * @tag reports
     * @param string $reportScheduleId The identifier for the report schedule. This identifier is unique only in combination with a seller ID.
     * @return array
     *      - *errors* - 
     */
    public function cancelReportSchedule(string $reportScheduleId): array
    {
        return $this->api("/reports/2020-09-04/schedules/{$reportScheduleId}", 'DELETE');
    }
                    
    /**
     * @description Effective **June 27, 2023**, the `getReportDocument` operation will no longer be available in the Selling Partner API for Reports v2020-09-04 and all calls to it will fail. Integrations that rely on this operation should migrate to [Reports v2021-06-30](https://developer-docs.amazon.com/sp-api/docs/reports-api-v2021-06-30-reference) to avoid service disruption.
     * @tag reports
     * @param string $reportDocumentId The identifier for the report document.
     * @return array
     *      - *payload* - 
     *      - *errors* - 
     */
    public function getReportDocument(string $reportDocumentId): array
    {
        return $this->api("/reports/2020-09-04/documents/{$reportDocumentId}");
    }
    
}
