<?php

namespace lujie\amazon\sp\api;

use Yii;
use Iterator;

/**
* This class is autogenerated by the OpenAPI gii generator
* @description The Amazon Shipping API is designed to support outbound shipping use cases both for orders originating on Amazon-owned marketplaces as well as external channels/marketplaces. With these APIs, you can request shipping rates, create shipments, cancel shipments, and track shipments.
*/
class ShippingV2 extends \lujie\amazon\sp\BaseAmazonSPClient
{

                
    /**
     * @description Returns the available shipping service offerings.

**Usage Plan:**

| Rate (requests per second) | Burst |
| ---- | ---- |
| 80 | 100 |

The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @tag shipping
     * @param array $data 
     * @return array
     *      - *payload* - 
     */
    public function getRates(array $data): array
    {
        return $this->api("/shipping/v2/shipments/rates", 'POST', $data);
    }
                        
    /**
     * @description Purchases the shipping service for a shipment using the best fit service offering. Returns purchase related details and documents.

**Usage Plan:**

| Rate (requests per second) | Burst |
| ---- | ---- |
| 80 | 100 |

The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @tag shipping
     * @param array $data 
     * @return array
     *      - *payload* - 
     */
    public function directPurchaseShipment(array $data): array
    {
        return $this->api("/shipping/v2/shipments/directPurchase", 'POST', $data);
    }
                        
    /**
     * @description Purchases a shipping service and returns purchase related details and documents.

Note: You must complete the purchase within 10 minutes of rate creation by the shipping service provider. If you make the request after the 10 minutes have expired, you will receive an error response with the error code equal to "TOKEN_EXPIRED". If you receive this error response, you must get the rates for the shipment again.

**Usage Plan:**

| Rate (requests per second) | Burst |
| ---- | ---- |
| 80 | 100 |

The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @tag shipping
     * @param array $data 
     * @return array
     *      - *payload* - 
     */
    public function purchaseShipment(array $data): array
    {
        return $this->api("/shipping/v2/shipments", 'POST', $data);
    }
                        
    /**
     * @description Purchases a shipping service identifier and returns purchase-related details and documents.

**Usage Plan:**

| Rate (requests per second) | Burst |
| ---- | ---- |
| 80 | 100 |

The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @tag shipping
     * @param array $data 
     * @return array
     *      - *payload* - 
     */
    public function oneClickShipment(array $data): array
    {
        return $this->api("/shipping/v2/oneClickShipment", 'POST', $data);
    }
                        
    /**
     * @description Returns tracking information for a purchased shipment.

**Usage Plan:**

| Rate (requests per second) | Burst |
| ---- | ---- |
| 80 | 100 |

The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @tag shipping
     * @param array $query
     *      - *trackingId* - string - required
     *          - A carrier-generated tracking identifier originally returned by the purchaseShipment operation.
     *      - *carrierId* - string - required
     *          - A carrier identifier originally returned by the getRates operation for the selected rate.
     * @return array
     *      - *payload* - 
     */
    public function getTracking(array $query): array
    {
        return $this->api(array_merge(["/shipping/v2/tracking"], $query));
    }
                        
    /**
     * @description Returns the shipping documents associated with a package in a shipment.

**Usage Plan:**

| Rate (requests per second) | Burst |
| ---- | ---- |
| 80 | 100 |

The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @tag shipping
     * @param string $shipmentId The shipment identifier originally returned by the purchaseShipment operation.
     * @param array $query
     *      - *packageClientReferenceId* - string - required
     *          - The package client reference identifier originally provided in the request body parameter for the getRates operation.
     *      - *format* - string - optional
     *          - The file format of the document. Must be one of the supported formats returned by the getRates operation.
     *      - *dpi* - number - optional
     *          - The resolution of the document (for example, 300 means 300 dots per inch). Must be one of the supported resolutions returned in the response to the getRates operation.
     * @return array
     *      - *payload* - 
     */
    public function getShipmentDocuments(string $shipmentId, array $query): array
    {
        return $this->api(array_merge(["/shipping/v2/shipments/{$shipmentId}/documents"], $query));
    }
                        
    /**
     * @description Cancels a purchased shipment. Returns an empty object if the shipment is successfully cancelled.

**Usage Plan:**

| Rate (requests per second) | Burst |
| ---- | ---- |
| 80 | 100 |

The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @tag shipping
     * @param string $shipmentId The shipment identifier originally returned by the purchaseShipment operation.
     * @return array
     *      - *payload* - 
     */
    public function cancelShipment(string $shipmentId): array
    {
        return $this->api("/shipping/v2/shipments/{$shipmentId}/cancel", 'PUT');
    }
                        
    /**
     * @description Returns the JSON schema to use for providing additional inputs when needed to purchase a shipping offering. Call the getAdditionalInputs operation when the response to a previous call to the getRates operation indicates that additional inputs are required for the rate (shipping offering) that you want to purchase.

**Usage Plan:**

| Rate (requests per second) | Burst |
| ---- | ---- |
| 80 | 100 |

The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @tag shipping
     * @param array $query
     *      - *requestToken* - string - required
     *          - The request token returned in the response to the getRates operation.
     *      - *rateId* - string - required
     *          - The rate identifier for the shipping offering (rate) returned in the response to the getRates operation.
     * @return array
     *      - *payload* - 
     */
    public function getAdditionalInputs(array $query): array
    {
        return $this->api(array_merge(["/shipping/v2/shipments/additionalInputs/schema"], $query));
    }
                        
    /**
     * @description This API will return a list of input schema required to register a shipper account with the carrier. 

**Usage Plan:**

| Rate (requests per second) | Burst |
| ---- | ---- |
| 80 | 100 |

The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @tag shipping
     * @return array
     *      - *linkableCarriersList* - 
     */
    public function getCarrierAccountFormInputs(): array
    {
        return $this->api("/shipping/v2/carrierAccountFormInputs");
    }
                        
    /**
     * @description This API will return Get all carrier accounts for a merchant. 

**Usage Plan:**

| Rate (requests per second) | Burst |
| ---- | ---- |
| 80 | 100 |

The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @tag shipping
     * @param array $data 
     * @return array
     *      - *activeAccounts* - 
     */
    public function getCarrierAccounts(array $data): array
    {
        return $this->api("/shipping/v2/carrierAccounts", 'PUT', $data);
    }
                        
    /**
     * @description This API associates/links the specified carrier account with the merchant. 

**Usage Plan:**

| Rate (requests per second) | Burst |
| ---- | ---- |
| 80 | 100 |

The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @tag shipping
     * @param string $carrierId The unique identifier associated with the carrier account.
     * @param array $data 
     * @return array
     *      - *registrationStatus* - 
     */
    public function linkCarrierAccount(string $carrierId, array $data): array
    {
        return $this->api("/shipping/v2/carrierAccounts/{$carrierId}", 'PUT', $data);
    }
                        
    /**
     * @description This API Unlink the specified carrier account with the merchant. 

**Usage Plan:**

| Rate (requests per second) | Burst |
| ---- | ---- |
| 80 | 100 |

The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @tag shipping
     * @param string $carrierId carrier Id to unlink with merchant.
     * @param array $data 
     * @return array
     *      - *isUnlinked* - boolean
     *          - Is Carrier unlinked from Merchant
     */
    public function unlinkCarrierAccount(string $carrierId, array $data): array
    {
        return $this->api("/shipping/v2/carrierAccounts/{$carrierId}/unlink", 'PUT', $data);
    }
                        
    /**
     * @description This API  Call to generate the collection form. 

**Usage Plan:**

| Rate (requests per second) | Burst |
| ---- | ---- |
| 80 | 100 |

The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @tag shipping
     * @param array $data 
     * @return array
     *      - *collectionsFormDocument* - 
     */
    public function generateCollectionForm(array $data): array
    {
        return $this->api("/shipping/v2/collectionForms", 'POST', $data);
    }
                        
    /**
     * @description This API Call to get the history of the previously generated collection forms. 

**Usage Plan:**

| Rate (requests per second) | Burst |
| ---- | ---- |
| 80 | 100 |

The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @tag shipping
     * @param array $data 
     * @return array
     *      - *collectionFormsHistoryRecordList* - 
     *      - *lastRefreshedDate* - string
     *          - Last Refereshed Date of collection
     */
    public function getCollectionFormHistory(array $data): array
    {
        return $this->api("/shipping/v2/collectionForms/history", 'PUT', $data);
    }
                        
    /**
     * @description This API Get all unmanifested carriers with shipment locations. Any locations which has unmanifested shipments
        with an eligible carrier for manifesting shall be returned. 

**Usage Plan:**

| Rate (requests per second) | Burst |
| ---- | ---- |
| 80 | 100 |

The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @tag shipping
     * @param array $data 
     * @return array
     *      - *unmanifestedCarrierInformationList* - 
     */
    public function getUnmanifestedShipments(array $data): array
    {
        return $this->api("/shipping/v2/unmanifestedShipments", 'PUT', $data);
    }
                        
    /**
     * @description This API reprint a collection form. 

**Usage Plan:**

| Rate (requests per second) | Burst |
| ---- | ---- |
| 80 | 100 |

The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @tag shipping
     * @param string $collectionFormId collection form Id to reprint a collection.
     * @return array
     *      - *collectionsFormDocument* - 
     */
    public function getCollectionForm(string $collectionFormId): array
    {
        return $this->api("/shipping/v2/collectionForms/{$collectionFormId}");
    }
                        
    /**
     * @description Returns a list of access points in proximity of input postal code.

**Usage Plan:**

| Rate (requests per second) | Burst |
| ---- | ---- |
| 80 | 100 |

The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @tag shipping
     * @param array $query
     *      - *accessPointTypes* - array - required
     *          - 
     *      - *countryCode* - string - required
     *          - 
     *      - *postalCode* - string - required
     *          - 
     * @return array
     *      - *payload* - 
     */
    public function getAccessPoints(array $query): array
    {
        return $this->api(array_merge(["/shipping/v2/accessPoints"], $query));
    }
        
}
