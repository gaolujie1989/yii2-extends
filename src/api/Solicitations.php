<?php

namespace lujie\amazon\sp\api;

use Yii;
use Iterator;

/**
* This class is autogenerated by the OpenAPI gii generator
* @description With the Solicitations API you can build applications that send non-critical solicitations to buyers. You can get a list of solicitation types that are available for an order that you specify, then call an operation that sends a solicitation to the buyer for that order. Buyers cannot respond to solicitations sent by this API, and these solicitations do not appear in the Messaging section of Seller Central or in the recipient's Message Center. The Solicitations API returns responses that are formed according to the <a href=https://tools.ietf.org/html/draft-kelly-json-hal-08>JSON Hypertext Application Language</a> (HAL) standard.
*/
class Solicitations extends \lujie\amazon\sp\BaseAmazonSPClient
{

                
    /**
     * @description Returns a list of solicitation types that are available for an order that you specify. A solicitation type is represented by an actions object, which contains a path and query parameter(s). You can use the path and parameter(s) to call an operation that sends a solicitation. Currently only the productReviewAndSellerFeedbackSolicitation solicitation type is available.

**Usage Plan:**

| Rate (requests per second) | Burst |
| ---- | ---- |
| 1 | 5 |

The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @tag solicitations
     * @param string $amazonOrderId An Amazon order identifier. This specifies the order for which you want a list of available solicitation types.
     * @param array $query
     *      - *marketplaceIds* - array - required
     *          - A marketplace identifier. This specifies the marketplace in which the order was placed. Only one marketplace can be specified.
     * @return array
     *      - *_links* - object
     *      - *_embedded* - object
     *      - *errors* - 
     */
    public function getSolicitationActionsForOrder(string $amazonOrderId, array $query): array
    {
        return $this->api(array_merge(["/solicitations/v1/orders/{$amazonOrderId}"], $query));
    }
                    
    /**
     * @description Sends a solicitation to a buyer asking for seller feedback and a product review for the specified order. Send only one productReviewAndSellerFeedback or free form proactive message per order.

**Usage Plan:**

| Rate (requests per second) | Burst |
| ---- | ---- |
| 1 | 5 |

The `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values than those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).
     * @tag solicitations
     * @param string $amazonOrderId An Amazon order identifier. This specifies the order for which a solicitation is sent.
     * @param array $query
     *      - *marketplaceIds* - array - required
     *          - A marketplace identifier. This specifies the marketplace in which the order was placed. Only one marketplace can be specified.
     * @return array
     *      - *errors* - 
     */
    public function createProductReviewAndSellerFeedbackSolicitation(string $amazonOrderId, array $query): array
    {
        return $this->api(array_merge(["/solicitations/v1/orders/{$amazonOrderId}/solicitations/productReviewAndSellerFeedback"], $query), 'POST');
    }
    
}
