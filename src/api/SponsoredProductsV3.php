<?php

namespace lujie\amazon\advertising\api;

use Yii;
use Iterator;

/**
* This class is autogenerated by the OpenAPI gii generator
* @description  
*/
class SponsoredProductsV3 extends \lujie\amazon\advertising\BaseAmazonAdvertisingClient
{

                
    /**
     * @description The <b> POST /sp/targets/bid/recommendations </b> endpoint returns recommended bids for each target given either A) new ad group (a list of ad ASINs) or B) existing ad group (a campaign ID and ad group ID). Please use the recommendationType field to specify if you want to use option A or option B. This API is currently available at marketplaces where SP is available. The API supports keyword, auto and product targets. The API will return a 422 response when an unsupported marketplace or target is provided. <h1> Version 5.0 </h1><h2> New Features </h2><ul><li> Version 5.0 introduces two new capabilities. First, advertisers will receive the estimated impressions for the suggested bid to help them understand the potential impact of adopting them. Second, advertisers will get a view of the estimated impressions for a range of bids (8 bids) for each target. </li><li> The second feature is default to be disabled. To enable it, user needs to set <b> includeAnalysis </b> as True in request body. </li><li> New features are currently available only for existing ad group requests in US marketplace. </li></ul><h1> Version 4.0 </h1><h2> New Features </h2><ul><li> Version 4.0 allows users to get theme-based bid recommendations for product targeting expressions, including PAT_ASIN, PAT_CATEGORY and PAT_CATEGORY_REFINEMENT. </li><li> Version 4.0 supports keyword, auto and product targets in all marketplaces. </li><li> Version 4.0 removes "impact metrics" when returning each bid suggestion. </li><li> Version 4.0 also allows users to get theme-based bid recommendations for keyword group targeting expressions with the type KEYWORD_GROUP. This new type is only available in US marketplace. </li></ul><br>

**Requires one of these permissions**:
["advertiser_campaign_edit","advertiser_campaign_view"]     * @tag Theme-based bid recommendations
     * @param array $data 
     * @return array
     *      - *bidRecommendations* - array
     */
    public function getThemeBasedBidRecommendationForAdGroup_v1(array $data): array
    {
        return $this->api("/sp/targets/bid/recommendations", 'POST', $data, ['content-type' => 'application/vnd.spthemebasedbidrecommendation.v4+json']);
    }
                    
    /**
     * @description The <b> POST /sp/targets/keywords/recommendations </b> endpoint returns recommended keyword targets given either A) a list of ad ASINs or B) a campaign ID and ad group ID. Please use the recommendationType field to specify if you want to use option A or option B. This endpoint will also return recommended bids along with each recommendation keyword target.<br><br> <b> Ranking </b> <br> The keyword recommendations will be ranked in descending order of clicks or impressions, depending on the <b>sortDimension</b> field provided by the user. You may also input your own keyword targets to be ranked alongside the keyword recommendations by using the <b>targets</b> array. <br><br> <b> Localization </b> <br> Use the <b> locale </b> field to get keywords in your specified locale. Supported marketplace to locale mappings can be found at the <a href='https://advertising.amazon.com/API/docs/en-us/localization/#/Keyword%20Localization'>POST /keywords/localize</a> endpoint. <h1> Version 5.0 </h1>  <h2> New Features </h2> Version 5.0 utilizes the new theme-based bid recommendations, which can be retrieved at the endpoint <b>/sp/targets/bid/recommendations</b>, to return improved bid recommendations for each keyword. Theme-based bid recommendations provide \\\"themes\\\" and \\\"impact metrics\\\" along with each bid suggestion to help you choose the right bid for your keyword target.<br><br><b>Themes</b><br> We now may return multiple bid suggestions for each keyword target. Each suggestion will have a theme to express the business objective of the bid. Available themes are: <ul> <li> CONVERSION_OPPORTUNITIES - The default theme which aims to maximize number of conversions. </li> <li> SPECIAL_DAYS - A theme available during high sales events such as Prime Day, to anticipate an increase in sales and competition.</li></ul><b>Impact Metrics</b><br>We have added impact metrics which provide insight on the number of clicks and conversions you will receive for targeting a keyword at a certain bid. <br><br><b>Bidding Strategy</b><br> You may now specify your bidding strategy in the KEYWORDS_BY_ASINS request to get bid suggestions tailored to your bidding strategy. For KEYWORDS_BY_ADGROUP requests, you will not specify a bidding strategy, because the bidding strategy of the ad group is used. The three bidding strategies are: <ul> <li> LEGACY_FOR_SALES - Dynamic bids (down only) </li> <li> AUTO_FOR_SALES - Dynamic bids (up and down) </li> <li> MANUAL - Fixed bids </li> </ul> <h3> Availability </h3> Version 5.0 is only available in the following marketplaces: US, CA, UK, DE, FR, ES, IN, JP. <h1> Version 4.0 </h1> <h2> New features </h2> Version 4.0 allows users to retrieve recommended keyword targets which are sorted in descending order of clicks or conversions. The default sort dimension, if not specified, ranks recommendations by our interal ranking mechanism. We have also added search term metrics. <b> Search term impression share </b> indicates the percentage share of all ad-attributed impressions you received on that keyword in the last 30 days. This metric helps advertisers identify potential opportunities based on their share on relevant keywords. <b> Search term impression rank </b> indicates your ranking among all advertisers for the keyword by ad impressions in a marketplace. It tells an advertiser how many advertisers had higher share of ad impressions. <i> Search term information is only available for keywords the advertiser targeted with ad impressions. </i> <h3> Availability </h3> Version 4.0 is available in all marketplaces.

**Requires one of these permissions**:
["advertiser_campaign_edit","advertiser_campaign_view"]     * @tag Keyword Targets
     * @param array $data 
     * @return array
     *      - *suggestedBid* - 
     *      - *translation* - string
     *          - The translation of keyword if a locale is passed in
     *      - *rank* - number
     *          - The keyword target rank
     */
    public function getRankedKeywordRecommendation(array $data): array
    {
        return $this->api("/sp/targets/keywords/recommendations", 'POST', $data, ['content-type' => 'application/vnd.spkeywordsrecommendation.v3+json']);
    }
                    
    /**
     * @description List keywords

**Requires one of these permissions**:
["advertiser_campaign_edit"]     * @tag Keywords
     * @param array $data 
     *      - *campaignIdFilter* - 
     *      - *stateFilter* - 
     *      - *maxResults* - integer
     *          - Number of records to include in the paginated response. Defaults to max page size for given API
     *      - *nextToken* - string
     *          - token value allowing to navigate to the next response page
     *      - *adGroupIdFilter* - 
     *      - *includeExtendedDataFields* - boolean
     *          - Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
     *      - *locale* - string
     *          - Restricts results to keywords associated with locale
     *      - *keywordTextFilter* - 
     *      - *keywordIdFilter* - 
     *      - *matchTypeFilter* - array
     *          - Only the keyword with match type that is in this list will be listed
     * @return array
     *      - *totalResults* - integer
     *          - The total number of entities
     *      - *keywords* - array
     *      - *nextToken* - string
     *          - token value allowing to navigate to the next response page
     */
    public function listSponsoredProductsKeywords(array $data): array
    {
        return $this->api("/sp/keywords/list", 'POST', $data, ['content-type' => 'application/vnd.spKeyword.v3+json']);
    }
                    
    /**
     * @description Delete negative keywords

**Requires one of these permissions**:
["advertiser_campaign_edit"]     * @tag Negative keywords
     * @param array $data 
     *      - *negativeKeywordIdFilter* - 
     * @return array
     *      - *negativeKeywords* - 
     */
    public function deleteSponsoredProductsNegativeKeywords(array $data): array
    {
        return $this->api("/sp/negativeKeywords/delete", 'POST', $data, ['content-type' => 'application/vnd.spNegativeKeyword.v3+json']);
    }
                    
    /**
     * @description Get number of targetable asins based on refinements provided by the user. Please use the GetTargetableCategories API or the GetCategoryRecommendationsForASINs API to retrieve the category ID. Please use the GetRefinementsByCategory API to retrieve refinements data for a category.

**Requires one of these permissions**:
["advertiser_campaign_edit","advertiser_campaign_view"]     * @tag Product Targeting
     * @param array $data 
     *      - *ageRanges* - 
     *      - *brands* - 
     *      - *genres* - 
     *      - *isPrimeShipping* - boolean
     *          - Indicates if products have prime shipping
     *      - *ratingRange* - 
     *      - *category* - string
     *          - The category node id. Please use the GetTargetableCategories API or GetCategoryRecommendationsForASINs API to retrieve category IDs.
     *      - *priceRange* - 
     * @return array
     *      - *asinCounts* - 
     */
    public function getTargetableASINCounts(array $data): array
    {
        return $this->api("/sp/targets/products/count", 'POST', $data, ['content-type' => 'application/vnd.spproducttargeting.v3+json']);
    }
                    
    /**
     * @description Returns all targetable categories. This API returns a large JSON string containing a tree of category nodes. Each category node has the fields - category id, category name, and child categories.

**Requires one of these permissions**:
["advertiser_campaign_edit","advertiser_campaign_view"]     * @tag Product Targeting
     * @param array $query
     *      - *locale* - string - optional
     *          - The locale to which the caller wishes to translate the targetable categories to. For example, if the caller wishes to receive the targetable categories in Simplified Chinese, the locale parameter should be set to zh_CN. If no locale is provided, the returned targetable categories will be in the default language of the marketplace.
     * @return array
     *      - *categoryTree* - string
     */
    public function getTargetableCategories(array $query = []): array
    {
        return $this->api(array_merge(["/sp/targets/categories"], $query));
    }
                    
    /**
     * @description 

**Requires one of these permissions**:
["advertiser_campaign_edit"]     * @tag Campaign Optimization Rules
     * @param array $data 
     *      - *recurrence* - 
     *      - *ruleAction* - 
     *      - *ruleCondition* - 
     *      - *ruleType* - 
     *      - *ruleName* - 
     *      - *campaignIds* - array
     *          - A list of campaign ids
     * @return array
     *      - *campaignOptimizationId* - 
     *      - *code* - string
     *          - An enumerated success or error code for machine use.
     *      - *details* - string
     *          - A human-readable description of the error, if unsuccessful
     */
    public function createOptimizationRule(array $data): array
    {
        return $this->api("/sp/rules/campaignOptimization", 'POST', $data, ['content-type' => 'application/vnd.optimizationrules.v1+json']);
    }
                
    /**
     * @description 

**Requires one of these permissions**:
["advertiser_campaign_edit"]     * @tag Campaign Optimization Rules
     * @param array $data 
     *      - *recurrence* - 
     *      - *ruleAction* - 
     *      - *campaignOptimizationId* - 
     *      - *ruleCondition* - 
     *      - *ruleType* - 
     *      - *ruleName* - 
     *      - *campaignIds* - array
     *          - A list of campaign ids
     * @return array
     *      - *campaignOptimizationId* - 
     *      - *code* - string
     *          - An enumerated success or error code for machine use.
     *      - *details* - string
     *          - A human-readable description of the error, if unsuccessful
     */
    public function updateOptimizationRule(array $data): array
    {
        return $this->api("/sp/rules/campaignOptimization", 'PUT', $data, ['content-type' => 'application/vnd.optimizationrules.v1+json']);
    }
                    
    /**
     * @description A maximum of 250 rules can be associated to a campaign. Note that the name of each rule associated to a campaign is required to be unique.

**Requires one of these permissions**:
["advertiser_campaign_edit"]     * @tag BudgetRules
     * @param number $campaignId The campaign identifier.
     * @param array $data 
     *      - *budgetRuleIds* - array
     *          - A list of budget rule identifiers.
     * @return array
     *      - *responses* - array
     */
    public function createAssociatedBudgetRulesForSPCampaigns(number $campaignId, array $data): array
    {
        return $this->api("/sp/campaigns/{$campaignId}/budgetRules", 'POST', $data, ['content-type' => 'application/json']);
    }
                
    /**
     * @description 

**Authorized resource type**:
Global Ad Account ID, Profile ID

**Parameter name**:
Amazon-Ads-AccountId

**Parameter in**:
header

**Requires one of these permissions**:
["advertiser_campaign_edit","advertiser_campaign_view"]     * @tag BudgetRules
     * @param number $campaignId The campaign identifier.
     * @return array
     *      - *associatedRules* - array
     *          - A list of associated budget rules.
     */
    public function listAssociatedBudgetRulesForSPCampaigns(number $campaignId): array
    {
        return $this->api("/sp/campaigns/{$campaignId}/budgetRules");
    }
                    
    /**
     * @description Returns up to 100 brands related to keyword input for negative targeting.

**Requires one of these permissions**:
["advertiser_campaign_edit","advertiser_campaign_view"]     * @tag Product Targeting
     * @param array $data 
     *      - *keyword* - string
     * @return array
     */
    public function searchBrands(array $data): array
    {
        return $this->api("/sp/negativeTargets/brands/search", 'POST', $data, ['content-type' => 'application/vnd.spproducttargeting.v3+json']);
    }
                    
    /**
     * @description Returns refinements according to category input.

**Requires one of these permissions**:
["advertiser_campaign_edit","advertiser_campaign_view"]     * @tag Product Targeting
     * @param string $categoryId The category ID. Please use the GetTargetableCategories API or the GetCategoriesForASINs API to retrieve categories IDs. This API does not check if the category is a valid category.
     * @param array $query
     *      - *locale* - string - optional
     *          - The locale to which the caller wishes to translate the refinements to. For example, if the caller wishes to receive the refinements in Simplified Chinese, the locale parameter should be set to zh_CN. If no locale is provided, the refinements will be in the default language of the marketplace.
     * @return array
     *      - *ageRanges* - 
     *      - *brands* - 
     *      - *genres* - 
     */
    public function getRefinementsForCategory(string $categoryId, array $query = []): array
    {
        return $this->api(array_merge(["/sp/targets/category/{$categoryId}/refinements"], $query));
    }
                    
    /**
     * @description 

**Requires one of these permissions**:
["advertiser_campaign_edit","advertiser_campaign_view"]     * @tag Campaign Optimization Rules
     * @param array $data 
     *      - *campaignIds* - array
     *          - A list of campaign ids
     * @return array
     *      - *CampaignOptimizationRecommendationsError* - array
     *          - List of errors that occured when generating campaign optimization notifications.
     *      - *CampaignOptimizationNotifications* - array
     *          - List of successful campaign optimization notifications for campaigns.
     */
    public function getRuleNotification(array $data): array
    {
        return $this->api("/sp/rules/campaignOptimization/state", 'POST', $data, ['content-type' => 'application/vnd.optimizationrules.v1+json']);
    }
                    
    /**
     * @description Returns the target promotion groups for an advertiser and / or adGroupId, and / or target
promotion group id.

**Requires one of these permissions**:
["advertiser_campaign_view"]     * @tag TargetPromotionGroups
     * @param array $data 
     *      - *maxResults* - integer
     *          - The maximum number of results requested.
     *      - *nextToken* - string
     *          - Token value allowing to navigate to the next or previous response page
     *      - *targetPromotionGroupIdFilter* - 
     *      - *adGroupIdFilter* - 
     * @return array
     *      - *totalResults* - integer
     *          - The total number of results available.
     *      - *nextToken* - string
     *          - To retrieve the next page of results, call the same operation and specify this token in the
    request. If the nextToken field is empty, there are no further results.
     *      - *targetPromotionGroups* - array
     */
    public function listTargetPromotionGroups(array $data): array
    {
        return $this->api("/sp/targetPromotionGroups/list", 'POST', $data, ['content-type' => 'application/vnd.sptargetpromotiongroup.v2+json']);
    }
                    
    /**
     * @description List product ads

**Requires one of these permissions**:
["advertiser_campaign_edit","advertiser_campaign_view"]     * @tag Product ads
     * @param array $data 
     *      - *campaignIdFilter* - 
     *      - *stateFilter* - 
     *      - *maxResults* - integer
     *          - Number of records to include in the paginated response. Defaults to max page size for given API
     *      - *nextToken* - string
     *          - token value allowing to navigate to the next response page
     *      - *adIdFilter* - 
     *      - *adGroupIdFilter* - 
     *      - *includeExtendedDataFields* - boolean
     *          - Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
     * @return array
     *      - *totalResults* - integer
     *          - The total number of entities
     *      - *nextToken* - string
     *          - token value allowing to navigate to the next response page
     *      - *productAds* - array
     */
    public function listSponsoredProductsProductAds(array $data): array
    {
        return $this->api("/sp/productAds/list", 'POST', $data, ['content-type' => 'application/vnd.spProductAd.v3+json']);
    }
                    
    /**
     * @description 

**Requires one of these permissions**:
["advertiser_campaign_edit"]     * @tag Optimization Rules
     * @param array $data 
     *      - *optimizationRules* - array
     * @return array
     *      - *code* - string
     *          - An enumerated error code for machine use.
     *      - *responses* - array
     */
    public function createOptimizationRules(array $data): array
    {
        return $this->api("/sp/rules/optimization", 'POST', $data, ['content-type' => 'application/vnd.spoptimizationrules.v1+json']);
    }
                
    /**
     * @description 

**Requires one of these permissions**:
["advertiser_campaign_edit"]     * @tag Optimization Rules
     * @param array $data 
     *      - *optimizationRules* - array
     * @return array
     *      - *code* - string
     *          - An enumerated error code for machine use.
     *      - *responses* - array
     */
    public function updateOptimizationRules(array $data): array
    {
        return $this->api("/sp/rules/optimization", 'PUT', $data, ['content-type' => 'application/vnd.spoptimizationrules.v1+json']);
    }
                    
    /**
     * @description Creates a target promotion group, by grouping the auto-targeting adGroupId
and manual-targeting adGroups, divided by keyword targeting adGroups, and product targeting adGroups.

**Requires one of these permissions**:
["advertiser_campaign_edit","advertiser_campaign_view"]     * @tag TargetPromotionGroups
     * @param array $data 
     *      - *adIds* - array
     *          - The list of adIds (optional) of the Ad Group of the Auto-Targeting campaign, that will be part of the Target Promotion Group. If this
    list is not provided, all the Product Ads under the Auto-Targeting Ad Group will be part of the Target Promotion Group.
     *      - *existingCampaignDetails* - array
     *          - List of existing manual campaign ad groups to be added in the Target Promotion Group. It must contain one keyword ad group, or one
    product ad group, or both. The request will fail if this field is provided alongside newCampaignDetails.
     *      - *targetPromotionGroupName* - string
     *          - The name of the target promotion group that will be created.
     *      - *adGroupId* - string
     *          - The adGroupId of the Ad Group of an Auto-Targeting campaign that will be part of the Target Promotion Group.
     *      - *newCampaignDetails* - array
     *          - List of new manual campaigns to be created as part of the Target Promotion Group. It must contain setting for the creation of one
    keyword ad group, or one product ad group, or both. The request will fail if this field is provided alongside existingCampaignDetails.
     *      - *addNegativeTargetToSourceAdGroup* - boolean
     *          - If selected, every promoted target will be added as a negative target to the source Auto-Targeting ad group. This stops the ad group from
    continuing to select targets that have already been promoted.
     * @return array
     *      - *targetPromotionGroup* - 
     */
    public function createTargetPromotionGroups(array $data): array
    {
        return $this->api("/sp/targetPromotionGroups", 'POST', $data, ['content-type' => 'application/vnd.sptargetpromotiongroup.v2+json']);
    }
                    
    /**
     * @description Creates keyword and/or product targets in the manual adGroup that are part of the target promotion group

**Requires one of these permissions**:
["advertiser_campaign_edit","advertiser_campaign_view"]     * @tag TargetPromotionGroups
     * @param array $data 
     *      - *targetPromotionGroupId* - string
     *          - The id of the target promotion group where the targets are being added.
     *      - *targets* - array
     *          - List of targets to be added to the target promotion group.
     * @return array
     *      - *success* - array
     *          - List of successfully created targets.
     *      - *errors* - array
     *          - List of targets that failed to create.
     */
    public function createTargetPromotionGroupTargets(array $data): array
    {
        return $this->api("/sp/targetPromotionGroups/targets", 'POST', $data, ['content-type' => 'application/vnd.sptargetpromotiongrouptarget.v1+json']);
    }
                    
    /**
     * @description List negative targeting clauses

**Requires one of these permissions**:
["advertiser_campaign_edit","advertiser_campaign_view"]     * @tag Negative targeting clauses
     * @param array $data 
     *      - *negativeTargetIdFilter* - 
     *      - *campaignIdFilter* - 
     *      - *stateFilter* - 
     *      - *maxResults* - integer
     *          - Number of records to include in the paginated response. Defaults to max page size for given API
     *      - *nextToken* - string
     *          - token value allowing to navigate to the next response page
     *      - *asinFilter* - 
     *      - *adGroupIdFilter* - 
     *      - *includeExtendedDataFields* - boolean
     *          - Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
     * @return array
     *      - *totalResults* - integer
     *          - The total number of entities
     *      - *nextToken* - string
     *          - token value allowing to navigate to the next response page
     *      - *negativeTargetingClauses* - array
     */
    public function listSponsoredProductsNegativeTargetingClauses(array $data): array
    {
        return $this->api("/sp/negativeTargets/list", 'POST', $data, ['content-type' => 'application/vnd.spNegativeTargetingClause.v3+json']);
    }
                    
    /**
     * @description This API (currently beta) recommends Keyword Group targets for a given list of Ad ASINs. Keyword Groups is a new control for Amazon Ads Sponsored Products keyword-based campaigns that enables advertisers to reach relevant audiences through a collection of keywords.

Once a Keyword Group specification is created, the performance of Keyword Groups will be available in the search terms report. Keyword Groups improves campaign performance by dynamically updating the keywords within a group through the campaign lifecycle and eliminates the need for advertisers to constantly curate new keywords. Additionally, Keyword Groups can be used alongside keywords within the same ad group.
     * @tag Keyword Group Targeting Recommendations
     * @param array $data 
     *      - *asins* - array
     *          - List of ASINs.
     *      - *nextToken* - string
     *          - If the last response included this field then there are more items to retrieve.
     * @return array
     *      - *nextToken* - string
     *          - If present then there is more data to retrieve. To retrieve, resend request with token.
     *      - *keywordGroups* - array
     *          - Keyword group recommendations for input list of ASINs.
     */
    public function getKeywordGroupRecommendations(array $data): array
    {
        return $this->api("/sp/targeting/recommendations/keywordGroups", 'POST', $data, ['content-type' => 'application/vnd.spkeywordgroupsrecommendations.v1.0+json']);
    }
                    
    /**
     * @description Create product ads

**Requires one of these permissions**:
["advertiser_campaign_edit"]     * @tag Product ads
     * @param array $data 
     *      - *productAds* - array
     *          - An array of ads.
     * @return array
     *      - *productAds* - 
     */
    public function createSponsoredProductsProductAds(array $data): array
    {
        return $this->api("/sp/productAds", 'POST', $data, ['content-type' => 'application/vnd.spProductAd.v3+json']);
    }
                
    /**
     * @description Update product ads

**Requires one of these permissions**:
["advertiser_campaign_edit"]     * @tag Product ads
     * @param array $data 
     *      - *productAds* - array
     *          - An array of ads with updated values.
     * @return array
     *      - *productAds* - 
     */
    public function updateSponsoredProductsProductAds(array $data): array
    {
        return $this->api("/sp/productAds", 'PUT', $data, ['content-type' => 'application/vnd.spProductAd.v3+json']);
    }
                    
    /**
     * @description 

**Requires one of these permissions**:
["advertiser_campaign_edit"]     * @tag BudgetRules
     * @param array $data 
     *      - *budgetRulesDetails* - array
     *          - A list of budget rule details.
     * @return array
     *      - *responses* - array
     */
    public function createBudgetRulesForSPCampaigns(array $data): array
    {
        return $this->api("/sp/budgetRules", 'POST', $data, ['content-type' => 'application/json']);
    }
            
    /**
     * @description 
     * @tag BudgetRules
     * @param array $query
     *      - *nextToken* - string - optional
     *          - To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
     *      - *pageSize* - number - required
     *          - Sets a limit on the number of results returned. Maximum limit of `pageSize` is 30.
     * @return Iterator
     *      - *budgetRulesForAdvertiserResponse* - array
     *          - A list of rules created by the advertiser.
     *      - *nextToken* - string
     *          - To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
     */
    public function eachSPBudgetRulesForAdvertiser(array $query): Iterator
    {
        return $this->eachInternal('getSPBudgetRulesForAdvertiser', func_get_args());
    }
        
    /**
     * @description 
     * @tag BudgetRules
     * @param array $query
     *      - *nextToken* - string - optional
     *          - To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
     *      - *pageSize* - number - required
     *          - Sets a limit on the number of results returned. Maximum limit of `pageSize` is 30.
     * @return Iterator
     *      - *budgetRulesForAdvertiserResponse* - array
     *          - A list of rules created by the advertiser.
     *      - *nextToken* - string
     *          - To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
     */
    public function batchSPBudgetRulesForAdvertiser(array $query): Iterator
    {
        return $this->batchInternal('getSPBudgetRulesForAdvertiser', func_get_args());
    }
    
    /**
     * @description 
     * @tag BudgetRules
     * @param array $query
     *      - *nextToken* - string - optional
     *          - To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
     *      - *pageSize* - number - required
     *          - Sets a limit on the number of results returned. Maximum limit of `pageSize` is 30.
     * @return array
     *      - *budgetRulesForAdvertiserResponse* - array
     *          - A list of rules created by the advertiser.
     *      - *nextToken* - string
     *          - To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
     */
    public function getSPBudgetRulesForAdvertiser(array $query): array
    {
        return $this->api(array_merge(["/sp/budgetRules"], $query));
    }
                
    /**
     * @description 

**Requires one of these permissions**:
["advertiser_campaign_edit"]     * @tag BudgetRules
     * @param array $data 
     *      - *budgetRulesDetails* - array
     *          - A list of budget rule details.
     * @return array
     *      - *responses* - array
     */
    public function updateBudgetRulesForSPCampaigns(array $data): array
    {
        return $this->api("/sp/budgetRules", 'PUT', $data, ['content-type' => 'application/json']);
    }
                    
    /**
     * @description Returns a list of category recommendations for the input list of ASINs. Use this API to discover relevant categories to target. To find ASINs, either use the Product Metadata API or browse the Amazon Retail Website. <br> <ul><li>Response can be requested in different versions with the help of accept header. Please review the response mediaTypes for more information.</li><ul>

**Requires one of these permissions**:
["advertiser_campaign_edit","advertiser_campaign_view"]     * @tag Product Targeting
     * @param array $data 
     *      - *asins* - array
     *          - List of input ASINs. This API does not check if the ASINs are valid ASINs.
     *      - *includeAncestor* - boolean
     *          - Enable this if you would like to retrieve categories which are ancestor nodes of the original recommended categories. This may increase the number of categories returned, but decrease the relevancy of those categories.
     * @param array $query
     *      - *locale* - string - optional
     *          - The locale to which the caller wishes to translate the list of category recommendations to. For example, if the caller wishes to receive a list of category recommendations in Simplified Chinese, the locale parameter should be set to zh_CN. If no locale is provided, the returned list of category recommendations will be in the default language of the marketplace.
     * @return array
     *      - *categories* - array
     *          - List of category recommendations
     */
    public function getCategoryRecommendationsForASINs(array $data, array $query = []): array
    {
        return $this->api(array_merge(["/sp/targets/categories/recommendations"], $query), 'POST', $data, ['content-type' => 'application/vnd.spproducttargeting.v3+json']);
    }
                    
    /**
     * @description Retrieves keyword and product targets of an auto-targeting campaign as recommendations for promoting to a manual-targeting campaign. The recommendations are based on performance heuristics of the targets.

**Requires one of these permissions**:
["advertiser_campaign_edit","advertiser_campaign_view"]     * @tag TargetPromotionGroups
     * @param array $data 
     *      - *campaignIdFilter* - 
     *      - *maxResults* - integer
     *          - Number of records to include in the paginated response. Defaults to 1000.
     *      - *nextToken* - string
     *          - Token for fetching the next page
     *      - *adIdFilter* - 
     *      - *adGroupIdFilter* - 
     * @return array
     *      - *totalResults* - integer
     *          - Total number of records available
     *      - *nextToken* - string
     *          - Token for fetching the next page
     *      - *targets* - array
     *          - List of optimized targets for the request, as recommended by Amazon heuristics
     */
    public function getTargetPromotionGroupsRecommendations(array $data): array
    {
        return $this->api("/sp/targetPromotionGroups/recommendations", 'POST', $data, ['content-type' => 'application/vnd.spTargetPromotionGroupsRecommendations.v1+json']);
    }
                    
    /**
     * @description Creates daily budget recommendation along with benchmark metrics when creating a new campaign.     * @tag Budget Recommendation New Campaigns
     * @param array $data 
     *      - *bidding* - 
     *      - *adGroups* - array
     *          - The ad group information for this new campaign.
     *      - *endDate* - string
     *          - The end date of the campaign in YYYYMMDD format.
     *      - *targetingType* - string
     *          - Specifies the targeting type.
     *      - *startDate* - string
     *          - The start date of the campaign in YYYYMMDD format.
     * @return array
     *      - *specialEvents* - array
     *          - A list of special events around the start and end date of the campaign.
     *      - *dailyBudget* - number
     *          - Recommended daily budget for the new campaign. Note: value -1 means we don’t have enough information to provide a recommendation.
     *      - *recommendationId* - string
     *          - Unique identifier for each recommendation.
     *      - *benchmark* - 
     */
    public function getBudgetRecommendation(array $data): array
    {
        return $this->api("/sp/campaigns/initialBudgetRecommendation", 'POST', $data, ['content-type' => 'application/vnd.spinitialbudgetrecommendation.v3.4+json']);
    }
                    
    /**
     * @description Delete campaign negative targeting clauses

**Requires one of these permissions**:
["advertiser_campaign_edit"]     * @tag Campaign negative targeting clauses
     * @param array $data 
     *      - *campaignNegativeTargetIdFilter* - 
     * @return array
     *      - *campaignNegativeTargetingClauses* - 
     */
    public function deleteSponsoredProductsCampaignNegativeTargetingClauses(array $data): array
    {
        return $this->api("/sp/campaignNegativeTargets/delete", 'POST', $data, ['content-type' => 'application/vnd.spCampaignNegativeTargetingClause.v3+json']);
    }
                    
    /**
     * @description Delete product ads

**Requires one of these permissions**:
["advertiser_campaign_edit"]     * @tag Product ads
     * @param array $data 
     *      - *adIdFilter* - 
     * @return array
     *      - *productAds* - 
     */
    public function deleteSponsoredProductsProductAds(array $data): array
    {
        return $this->api("/sp/productAds/delete", 'POST', $data, ['content-type' => 'application/vnd.spProductAd.v3+json']);
    }
                    
    /**
     * @description Returns brands recommended for negative targeting. Only available for Sellers and Vendors. These recommendations include your own brands because targeting your own brands usually results in lower performance than targeting competitors' brands.

**Requires one of these permissions**:
["advertiser_campaign_edit","advertiser_campaign_view"]     * @tag Product Targeting
     * @return array
     */
    public function getNegativeBrands(): array
    {
        return $this->api("/sp/negativeTargets/brands/recommendations");
    }
                    
    /**
     * @description Given a list of campaigns as input, this API provides the following metrics -  <br> <b>1. Recommended daily budget - </b> Estimated daily budget needed to keep the campaign in budget for the full 24-hour period in a day. Consider this daily budget to minimize your campaign's chances of running out of budget. <br> <b>2. Percent time in budget </b> - Actual average percentage of time the campaign was in budget between the start and end date specified in the response. Note: value -1 means we don’t have enough information to compute the campaign’s percent time in budget. <br> <b>3. Estimated missed impressions, clicks and sales </b> - These are the estimated range of additional impressions, clicks and sales the campaign might have generated between the start and end date specified in the response had it been in budget 100% of the time. These are estimates based on historical traffic and the campaign's past performance (e.g. impressions & clicks generated) but not guaranteed.

**Requires one of these permissions**:
["advertiser_campaign_edit","advertiser_campaign_view"]     * @tag Budget recommendations and missed opportunities
     * @param array $data 
     *      - *campaignIds* - array
     *          - List of campaigns.
     * @return array
     *      - *budgetRecommendationsSuccessResults* - array
     *          - List of successful budget recomendation for campagins.
     *      - *budgetRecommendationsErrorResults* - array
     *          - List of errors that occured when generating bduget recommendation.
     */
    public function getBudgetRecommendations(array $data): array
    {
        return $this->api("/sp/campaigns/budgetRecommendations", 'POST', $data, ['content-type' => 'application/vnd.budgetrecommendation.v3+json']);
    }
                    
    /**
     * @description Create negative targeting clauses

**Requires one of these permissions**:
["advertiser_campaign_edit"]     * @tag Negative targeting clauses
     * @param array $data 
     *      - *negativeTargetingClauses* - array
     *          - An array of negativeTargeting.
     * @return array
     *      - *negativeTargetingClauses* - 
     */
    public function createSponsoredProductsNegativeTargetingClauses(array $data): array
    {
        return $this->api("/sp/negativeTargets", 'POST', $data, ['content-type' => 'application/vnd.spNegativeTargetingClause.v3+json']);
    }
                
    /**
     * @description Update negative targeting clauses

**Requires one of these permissions**:
["advertiser_campaign_edit"]     * @tag Negative targeting clauses
     * @param array $data 
     *      - *negativeTargetingClauses* - array
     *          - An array of negativeTargeting with updated values.
     * @return array
     *      - *negativeTargetingClauses* - 
     */
    public function updateSponsoredProductsNegativeTargetingClauses(array $data): array
    {
        return $this->api("/sp/negativeTargets", 'PUT', $data, ['content-type' => 'application/vnd.spNegativeTargetingClause.v3+json']);
    }
                    
    /**
     * @description Create targeting clauses

**Requires one of these permissions**:
["advertiser_campaign_edit"]     * @tag Targeting clauses
     * @param array $data 
     *      - *targetingClauses* - array
     *          - An array of targetingClauses.
     * @return array
     *      - *targetingClauses* - 
     */
    public function createSponsoredProductsTargetingClauses(array $data): array
    {
        return $this->api("/sp/targets", 'POST', $data, ['content-type' => 'application/vnd.spTargetingClause.v3+json']);
    }
                
    /**
     * @description Update targeting clauses

**Requires one of these permissions**:
["advertiser_campaign_edit"]     * @tag Targeting clauses
     * @param array $data 
     *      - *targetingClauses* - array
     *          - An array of targetingClauses with updated values.
     * @return array
     *      - *targetingClauses* - 
     */
    public function updateSponsoredProductsTargetingClauses(array $data): array
    {
        return $this->api("/sp/targets", 'PUT', $data, ['content-type' => 'application/vnd.spTargetingClause.v3+json']);
    }
                    
    /**
     * @description A rule enables an automatic budget increase for a specified date range or for a special event. The response also includes a suggested budget increase for each special event.

**Requires one of these permissions**:
["advertiser_campaign_edit","advertiser_campaign_view"]     * @tag BudgetRulesRecommendation
     * @param array $data 
     * @return array
     *      - *recommendedBudgetRuleEvents* - array
     *          - A list of recommended special events with date range and suggested budget increase.
     */
    public function sPGetBudgetRulesRecommendation(array $data): array
    {
        return $this->api("/sp/campaigns/budgetRules/recommendations", 'POST', $data, ['content-type' => 'application/vnd.spbudgetrulesrecommendation.v3+json']);
    }
                    
    /**
     * @description Create campaign negative targeting clauses

**Requires one of these permissions**:
["advertiser_campaign_edit"]     * @tag Campaign negative targeting clauses
     * @param array $data 
     *      - *campaignNegativeTargetingClauses* - array
     *          - An array of Campaign Negative TargetingClauses.
     * @return array
     *      - *campaignNegativeTargetingClauses* - 
     */
    public function createSponsoredProductsCampaignNegativeTargetingClauses(array $data): array
    {
        return $this->api("/sp/campaignNegativeTargets", 'POST', $data, ['content-type' => 'application/vnd.spCampaignNegativeTargetingClause.v3+json']);
    }
                
    /**
     * @description Update campaign negative targeting clauses

**Requires one of these permissions**:
["advertiser_campaign_edit"]     * @tag Campaign negative targeting clauses
     * @param array $data 
     *      - *campaignNegativeTargetingClauses* - array
     *          - An array of Campaign Negative TargetingClauses with updated values.
     * @return array
     *      - *campaignNegativeTargetingClauses* - 
     */
    public function updateSponsoredProductsCampaignNegativeTargetingClauses(array $data): array
    {
        return $this->api("/sp/campaignNegativeTargets", 'PUT', $data, ['content-type' => 'application/vnd.spCampaignNegativeTargetingClause.v3+json']);
    }
                    
    /**
     * @description Create keywords

**Requires one of these permissions**:
["advertiser_campaign_edit"]     * @tag Keywords
     * @param array $data 
     *      - *keywords* - array
     *          - An array of keywords.
     * @return array
     *      - *keywords* - 
     */
    public function createSponsoredProductsKeywords(array $data): array
    {
        return $this->api("/sp/keywords", 'POST', $data, ['content-type' => 'application/vnd.spKeyword.v3+json']);
    }
                
    /**
     * @description Update keywords

**Requires one of these permissions**:
["advertiser_campaign_edit"]     * @tag Keywords
     * @param array $data 
     *      - *keywords* - array
     *          - An array of keywords with updated values.
     * @return array
     *      - *keywords* - 
     */
    public function updateSponsoredProductsKeywords(array $data): array
    {
        return $this->api("/sp/keywords", 'PUT', $data, ['content-type' => 'application/vnd.spKeyword.v3+json']);
    }
                    
    /**
     * @description List campaign negative targeting clauses

**Requires one of these permissions**:
["advertiser_campaign_edit","advertiser_campaign_view"]     * @tag Campaign negative targeting clauses
     * @param array $data 
     *      - *campaignIdFilter* - 
     *      - *campaignNegativeTargetIdFilter* - 
     *      - *stateFilter* - 
     *      - *maxResults* - integer
     *          - Number of records to include in the paginated response. Defaults to max page size for given API
     *      - *nextToken* - string
     *          - token value allowing to navigate to the next response page
     *      - *asinFilter* - 
     *      - *includeExtendedDataFields* - boolean
     *          - Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
     * @return array
     *      - *totalResults* - integer
     *          - The total number of entities
     *      - *nextToken* - string
     *          - token value allowing to navigate to the next response page
     *      - *campaignNegativeTargetingClauses* - array
     */
    public function listSponsoredProductsCampaignNegativeTargetingClauses(array $data): array
    {
        return $this->api("/sp/campaignNegativeTargets/list", 'POST', $data, ['content-type' => 'application/vnd.spCampaignNegativeTargetingClause.v3+json']);
    }
                    
    /**
     * @description Delete targeting clauses

**Requires one of these permissions**:
["advertiser_campaign_edit"]     * @tag Targeting clauses
     * @param array $data 
     *      - *targetIdFilter* - 
     * @return array
     *      - *targetingClauses* - 
     */
    public function deleteSponsoredProductsTargetingClauses(array $data): array
    {
        return $this->api("/sp/targets/delete", 'POST', $data, ['content-type' => 'application/vnd.spTargetingClause.v3+json']);
    }
                    
    /**
     * @description 

**Requires one of these permissions**:
["advertiser_campaign_edit","advertiser_campaign_view"]     * @tag Optimization Rules
     * @param array $data 
     *      - *nextToken* - string
     *      - *optimizationRuleFilter* - 
     *      - *pageSize* - number
     *      - *campaignFilter* - 
     * @return array
     *      - *code* - string
     *          - An enumerated error code for machine use.
     *      - *nextToken* - string
     *      - *optimizationRules* - array
     */
    public function searchOptimizationRules(array $data): array
    {
        return $this->api("/sp/rules/optimization/search", 'POST', $data, ['content-type' => 'application/vnd.spoptimizationrules.v1+json']);
    }
                    
    /**
     * @description Create campaigns

**Requires one of these permissions**:
["advertiser_campaign_edit"]     * @tag Campaigns
     * @param array $data 
     *      - *campaigns* - array
     *          - An array of campaigns.
     * @return array
     *      - *campaigns* - 
     */
    public function createSponsoredProductsCampaigns(array $data): array
    {
        return $this->api("/sp/campaigns", 'POST', $data, ['content-type' => 'application/vnd.spCampaign.v3+json']);
    }
                
    /**
     * @description Update campaigns

**Requires one of these permissions**:
["advertiser_campaign_edit"]     * @tag Campaigns
     * @param array $data 
     *      - *campaigns* - array
     *          - An array of campaigns with updated values. Note: targetingType cannot be updated
     * @return array
     *      - *campaigns* - 
     */
    public function updateSponsoredProductsCampaigns(array $data): array
    {
        return $this->api("/sp/campaigns", 'PUT', $data, ['content-type' => 'application/vnd.spCampaign.v3+json']);
    }
                    
    /**
     * @description List ad groups

**Requires one of these permissions**:
["advertiser_campaign_edit","advertiser_campaign_view"]     * @tag Ad groups
     * @param array $data 
     *      - *campaignIdFilter* - 
     *      - *stateFilter* - 
     *      - *maxResults* - integer
     *          - Number of records to include in the paginated response. Defaults to max page size for given API
     *      - *nextToken* - string
     *          - token value allowing to navigate to the next response page
     *      - *adGroupIdFilter* - 
     *      - *includeExtendedDataFields* - boolean
     *          - Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
     *      - *nameFilter* - 
     *      - *campaignTargetingTypeFilter* - 
     * @return array
     *      - *totalResults* - integer
     *          - The total number of entities
     *      - *adGroups* - array
     *      - *nextToken* - string
     *          - token value allowing to navigate to the next response page
     */
    public function listSponsoredProductsAdGroups(array $data): array
    {
        return $this->api("/sp/adGroups/list", 'POST', $data, ['content-type' => 'application/vnd.spAdGroup.v3+json']);
    }
                    
    /**
     * @description Delete ad groups

**Requires one of these permissions**:
["advertiser_campaign_edit"]     * @tag Ad groups
     * @param array $data 
     *      - *adGroupIdFilter* - 
     * @return array
     *      - *adGroups* - 
     */
    public function deleteSponsoredProductsAdGroups(array $data): array
    {
        return $this->api("/sp/adGroups/delete", 'POST', $data, ['content-type' => 'application/vnd.spAdGroup.v3+json']);
    }
                
    /**
     * @description Gets the top consolidated recommendations across bid, budget, targeting for SP campaigns given an advertiser profile id. The recommendations are refreshed everyday.

**Requires one of these permissions**:
["advertiser_campaign_view","advertiser_campaign_edit"]     * @tag Consolidated Recommendations
     * @param array $query
     *      - *nextToken* - string - optional
     *          - Optional. Token to retrieve subsequent page of results.
     *      - *maxResults* - string - optional
     *          - Optional. Limits the number of items to return in the response.
     * @return Iterator
     *      - *nextToken* - string
     *          - An identifier to fetch next set of campaign recommendations records in the result set if available. This will be null when at the end of result set.
     *      - *recommendations* - array
     *          - List of campaign recommendations.
     */
    public function eachCampaignRecommendations(array $query = []): Iterator
    {
        return $this->eachInternal('getCampaignRecommendations', func_get_args());
    }
        
    /**
     * @description Gets the top consolidated recommendations across bid, budget, targeting for SP campaigns given an advertiser profile id. The recommendations are refreshed everyday.

**Requires one of these permissions**:
["advertiser_campaign_view","advertiser_campaign_edit"]     * @tag Consolidated Recommendations
     * @param array $query
     *      - *nextToken* - string - optional
     *          - Optional. Token to retrieve subsequent page of results.
     *      - *maxResults* - string - optional
     *          - Optional. Limits the number of items to return in the response.
     * @return Iterator
     *      - *nextToken* - string
     *          - An identifier to fetch next set of campaign recommendations records in the result set if available. This will be null when at the end of result set.
     *      - *recommendations* - array
     *          - List of campaign recommendations.
     */
    public function batchCampaignRecommendations(array $query = []): Iterator
    {
        return $this->batchInternal('getCampaignRecommendations', func_get_args());
    }
    
    /**
     * @description Gets the top consolidated recommendations across bid, budget, targeting for SP campaigns given an advertiser profile id. The recommendations are refreshed everyday.

**Requires one of these permissions**:
["advertiser_campaign_view","advertiser_campaign_edit"]     * @tag Consolidated Recommendations
     * @param array $query
     *      - *nextToken* - string - optional
     *          - Optional. Token to retrieve subsequent page of results.
     *      - *maxResults* - string - optional
     *          - Optional. Limits the number of items to return in the response.
     * @return array
     *      - *nextToken* - string
     *          - An identifier to fetch next set of campaign recommendations records in the result set if available. This will be null when at the end of result set.
     *      - *recommendations* - array
     *          - List of campaign recommendations.
     */
    public function getCampaignRecommendations(array $query = []): array
    {
        return $this->api(array_merge(["/sp/campaign/recommendations"], $query));
    }
                    
    /**
     * @description Delete campaign negative keywords

**Requires one of these permissions**:
["advertiser_campaign_edit"]     * @tag Campaign negative keywords
     * @param array $data 
     *      - *campaignNegativeKeywordIdFilter* - 
     * @return array
     *      - *campaignNegativeKeywords* - 
     */
    public function deleteSponsoredProductsCampaignNegativeKeywords(array $data): array
    {
        return $this->api("/sp/campaignNegativeKeywords/delete", 'POST', $data, ['content-type' => 'application/vnd.spCampaignNegativeKeyword.v3+json']);
    }
                    
    /**
     * @description 

**Requires one of these permissions**:
["advertiser_campaign_edit"]     * @tag Optimization Rules
     * @param string $campaignId The sp campaign identifier.
     * @param array $data 
     *      - *optimizationRuleIds* - array
     *          - An array of rule identifiers.
     * @return array
     *      - *code* - string
     *          - An enumerated error code for machine use.
     *      - *responses* - array
     */
    public function associateOptimizationRulesToCampaign(string $campaignId, array $data): array
    {
        return $this->api("/sp/campaigns/{$campaignId}/optimizationRules", 'POST', $data, ['content-type' => 'application/vnd.spoptimizationrules.v1+json']);
    }
                    
    /**
     * @description List campaign negative keywords

**Requires one of these permissions**:
["advertiser_campaign_edit","advertiser_campaign_view"]     * @tag Campaign negative keywords
     * @param array $data 
     *      - *campaignIdFilter* - 
     *      - *campaignNegativeKeywordIdFilter* - 
     *      - *stateFilter* - 
     *      - *maxResults* - integer
     *          - Number of records to include in the paginated response. Defaults to max page size for given API
     *      - *nextToken* - string
     *          - token value allowing to navigate to the next response page
     *      - *includeExtendedDataFields* - boolean
     *          - Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
     *      - *campaignNegativeKeywordTextFilter* - 
     *      - *matchTypeFilter* - array
     *          - Restricts results to resources with the selected matchType
     * @return array
     *      - *totalResults* - integer
     *          - The total number of entities
     *      - *nextToken* - string
     *          - token value allowing to navigate to the next response page
     *      - *campaignNegativeKeywords* - array
     */
    public function listSponsoredProductsCampaignNegativeKeywords(array $data): array
    {
        return $this->api("/sp/campaignNegativeKeywords/list", 'POST', $data, ['content-type' => 'application/vnd.spCampaignNegativeKeyword.v3+json']);
    }
                    
    /**
     * @description Delete campaigns

**Requires one of these permissions**:
["advertiser_campaign_edit"]     * @tag Campaigns
     * @param array $data 
     *      - *campaignIdFilter* - 
     * @return array
     *      - *campaigns* - 
     */
    public function deleteSponsoredProductsCampaigns(array $data): array
    {
        return $this->api("/sp/campaigns/delete", 'POST', $data, ['content-type' => 'application/vnd.spCampaign.v3+json']);
    }
                    
    /**
     * @description List campaigns

**Requires one of these permissions**:
["advertiser_campaign_edit","advertiser_campaign_view"]     * @tag Campaigns
     * @param array $data 
     *      - *campaignIdFilter* - 
     *      - *portfolioIdFilter* - 
     *      - *stateFilter* - 
     *      - *maxResults* - integer
     *          - Number of records to include in the paginated response. Defaults to max page size for given API
     *      - *nextToken* - string
     *          - token value allowing to navigate to the next response page
     *      - *includeExtendedDataFields* - boolean
     *          - Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
     *      - *nameFilter* - 
     * @return array
     *      - *totalResults* - integer
     *          - The total number of entities
     *      - *campaigns* - array
     *      - *nextToken* - string
     *          - token value allowing to navigate to the next response page
     */
    public function listSponsoredProductsCampaigns(array $data): array
    {
        return $this->api("/sp/campaigns/list", 'POST', $data, ['content-type' => 'application/vnd.spCampaign.v3+json']);
    }
                
    /**
     * @description 
     * @tag BudgetRules
     * @param string $budgetRuleId The budget rule identifier.
     * @param array $query
     *      - *nextToken* - string - optional
     *          - To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
     *      - *pageSize* - number - required
     *          - Sets a limit on the number of results returned. Maximum limit of `pageSize` is 30.
     * @return Iterator
     *      - *associatedCampaigns* - array
     *          - A list of campaigns that are associated to this budget rule.
     *      - *nextToken* - string
     *          - To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
     */
    public function eachCampaignsAssociatedWithSPBudgetRule(string $budgetRuleId, array $query): Iterator
    {
        return $this->eachInternal('getCampaignsAssociatedWithSPBudgetRule', func_get_args());
    }
        
    /**
     * @description 
     * @tag BudgetRules
     * @param string $budgetRuleId The budget rule identifier.
     * @param array $query
     *      - *nextToken* - string - optional
     *          - To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
     *      - *pageSize* - number - required
     *          - Sets a limit on the number of results returned. Maximum limit of `pageSize` is 30.
     * @return Iterator
     *      - *associatedCampaigns* - array
     *          - A list of campaigns that are associated to this budget rule.
     *      - *nextToken* - string
     *          - To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
     */
    public function batchCampaignsAssociatedWithSPBudgetRule(string $budgetRuleId, array $query): Iterator
    {
        return $this->batchInternal('getCampaignsAssociatedWithSPBudgetRule', func_get_args());
    }
    
    /**
     * @description 
     * @tag BudgetRules
     * @param string $budgetRuleId The budget rule identifier.
     * @param array $query
     *      - *nextToken* - string - optional
     *          - To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
     *      - *pageSize* - number - required
     *          - Sets a limit on the number of results returned. Maximum limit of `pageSize` is 30.
     * @return array
     *      - *associatedCampaigns* - array
     *          - A list of campaigns that are associated to this budget rule.
     *      - *nextToken* - string
     *          - To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
     */
    public function getCampaignsAssociatedWithSPBudgetRule(string $budgetRuleId, array $query): array
    {
        return $this->api(array_merge(["/sp/budgetRules/{$budgetRuleId}/campaigns"], $query));
    }
                    
    /**
     * @description 

**Requires one of these permissions**:
["advertiser_campaign_edit"]     * @tag BudgetRules
     * @param number $campaignId The campaign identifier.
     * @param string $budgetRuleId The budget rule identifier.
     * @return array
     */
    public function disassociateAssociatedBudgetRuleForSPCampaigns(number $campaignId, string $budgetRuleId): array
    {
        return $this->api("/sp/campaigns/{$campaignId}/budgetRules/{$budgetRuleId}", 'DELETE');
    }
                    
    /**
     * @description Create ad groups

**Requires one of these permissions**:
["advertiser_campaign_edit"]     * @tag Ad groups
     * @param array $data 
     *      - *adGroups* - array
     *          - An array of adGroups.
     * @return array
     *      - *adGroups* - 
     */
    public function createSponsoredProductsAdGroups(array $data): array
    {
        return $this->api("/sp/adGroups", 'POST', $data, ['content-type' => 'application/vnd.spAdGroup.v3+json']);
    }
                
    /**
     * @description Update ad groups

**Requires one of these permissions**:
["advertiser_campaign_edit"]     * @tag Ad groups
     * @param array $data 
     *      - *adGroups* - array
     *          - An array of adGroups with updated values.
     * @return array
     *      - *adGroups* - 
     */
    public function updateSponsoredProductsAdGroups(array $data): array
    {
        return $this->api("/sp/adGroups", 'PUT', $data, ['content-type' => 'application/vnd.spAdGroup.v3+json']);
    }
                    
    /**
     * @description Given an advertised ASIN as input, this API returns suggested ASINs to target in a product targeting campaign. We use various methods to generate these suggestions. These include using historical performance of your ad, items that shoppers they frequently view and purchase together, etc. The suggested targets can be retrieved either as a single list, or grouped by ‘theme' – i.e. an accompanying context for why we recommend the items. You can pick the desired format using the Accepts header, please see the response mediaTypes for more information. </br>
<h4>Pagination Behavior</h4> The API supports cursor based pagination using encoded cursor values to return next set of records or previously served records. The <b>count</b> parameter in the request body will be used to determine the size of results when requesting the previous page or next page. If no value for <b>count</b> is passed in the request, a default value is assumed. Please refer the range and defaults for these values in the request schema under GetProductRecommendationsRequest. </br> <i><b>Note:</b> The clients should never cache pagination cursor values locally as these values will expire after a certain time period. However a cursor value can be reused to perform retries in case of failures as long as the value has not expired.
</br></br> <h4>Themes </h4> Themes provide additional context for why we are recommending a product as a target. See below for an overall list of themes currently available –  </br><b>- Top converting targets</b> – These ASINs generated conversions for the input ASIN in the past 30 days (e.g. your product appeared as an ad on the detail page of these items, and a shopper clicked and purchased your item). The suggested ASINs under this theme are sorted in decreasing order of sales generated for your promoted item. </br><b>- Similar items (frequently viewed together)</b> – Items that shoppers frequently view and click along with your advertised item during a shopping session.
</br><b>- Complements</b> – Items that are frequently purchased together as complements. For example, if you are promoting a tennis racquet, you may see tennis balls recommended under this theme.
</br><b>- Similar items with low ratings and reviews</b> – Subset of the ‘similar items’ theme containing items that are rated lower than 3 stars and/or with fewer than 5 reviews.
</br><b>- Other books read by your readers</b> – Items that shoppers frequently view and click along with your advertised item during a shopping session. </br></br><i><b>Note:</b> Availability of themes differs by input ASIN - some ASINs may not have all above themes available</i>
     * @tag Product Recommendation Service
     * @param array $data 
     *      - *cursor* - string
     *          - A optional cursor value that can be used to fetch next or previous set of records.
     *      - *adAsins* - array
     *          - List of input ASINs.
     *      - *count* - integer
     *          - Count of objects requested in the response. The count will be applied on the objects returned under `recommendations` array in response body.  <ul> <li>Requesting `application/vnd.spproductrecommendationresponse.themes.v3+json` mediatype applies the count on `ThemeRecommendation` objects.If no count value is passed a default of `5` is assumed. The API will return a maximum of `10` themes irrespective of how large the count is set. </li> <li>Requesting `application/vnd.spproductrecommendationresponse.asins.v3+json` mediatype applies count on the `ProductRecommendation` objects in response body.If no count value is passed a default of `100` is assumed. The API will return a maximum of `1000` recommendations irrespective of how large the count is set. </li> </ul> Please refer the response Schemas for more info.
     *      - *locale* - string
     *          - Theme names and descriptions will be provided in the language for your supported locale. Available options are en_US (U.S. English), en_GB (UK English), zh_CN (Chinese), es_ES (Spanish), jp_JP (Japanese), de_DE (German), fr_FR (French), it_IT(Italian). If locale is not provided or unsupported, the theme names and descriptions will be returned in U.S. English (en_US).
     * @return array
     *      - *nextCursor* - string
     *          - An identifier to fetch next set of `ThemeRecommendation` records in the result set if available. This will be null when at the end of result set.
     *      - *previousCursor* - string
     *          - Optional parameter that links to the previous result set served to the requester.
     *      - *recommendations* - array
     *          - An array of `ThemeRecommendation` objects
     */
    public function getProductRecommendations(array $data): array
    {
        return $this->api("/sp/targets/products/recommendations", 'POST', $data, ['content-type' => 'application/vnd.spproductrecommendation.v3+json']);
    }
                    
    /**
     * @description Delete negative targeting clauses

**Requires one of these permissions**:
["advertiser_campaign_edit"]     * @tag Negative targeting clauses
     * @param array $data 
     *      - *negativeTargetIdFilter* - 
     * @return array
     *      - *negativeTargetingClauses* - 
     */
    public function deleteSponsoredProductsNegativeTargetingClauses(array $data): array
    {
        return $this->api("/sp/negativeTargets/delete", 'POST', $data, ['content-type' => 'application/vnd.spNegativeTargetingClause.v3+json']);
    }
                    
    /**
     * @description The <b> POST /sp/targets/bid/recommendations </b> endpoint returns recommended bids for each target given either A) new ad group (a list of ad ASINs) or B) existing ad group (a campaign ID and ad group ID). Please use the recommendationType field to specify if you want to use option A or option B. This API is currently available at marketplaces where SP is available. The API supports keyword, auto and product targets. The API will return a 422 response when an unsupported marketplace or target is provided. <h1> Version 5.0 </h1><h2> New Features </h2><ul><li> Version 5.0 introduces two new capabilities. First, advertisers will receive the estimated impressions for the suggested bid to help them understand the potential impact of adopting them. Second, advertisers will get a view of the estimated impressions for a range of bids (8 bids) for each target. </li><li> The second feature is default to be disabled. To enable it, user needs to set <b> includeAnalysis </b> as True in request body. </li><li> New features are currently available only for existing ad group requests in US marketplace. </li></ul><h1> Version 4.0 </h1><h2> New Features </h2><ul><li> Version 4.0 allows users to get theme-based bid recommendations for product targeting expressions, including PAT_ASIN, PAT_CATEGORY and PAT_CATEGORY_REFINEMENT. </li><li> Version 4.0 supports keyword, auto and product targets in all marketplaces. </li><li> Version 4.0 removes "impact metrics" when returning each bid suggestion. </li><li> Version 4.0 also allows users to get theme-based bid recommendations for keyword group targeting expressions with the type KEYWORD_GROUP. This new type is only available in US marketplace. </li></ul><br>

**Authorized resource type**:
Global Ad Account ID

**Parameter name**:
Amazon-Ads-AccountId

**Parameter in**:
header

**Requires one of these permissions**:
["advertiser_campaign_edit","advertiser_campaign_view"]     * @tag Multi Country Theme-based bid recommendations
     * @param array $data 
     * @return array
     *      - *bidRecommendations* - array
     *      - *errors* - array
     *          - List of errors occurred while processing multi country request.
     */
    public function getMultiCountryThemeBasedBidRecommendationForAdGroup_v1(array $data): array
    {
        return $this->api("/sp/global/targets/bid/recommendations", 'POST', $data, ['content-type' => 'application/json']);
    }
                    
    /**
     * @description Delete keywords

**Requires one of these permissions**:
["advertiser_campaign_edit"]     * @tag Keywords
     * @param array $data 
     *      - *keywordIdFilter* - 
     * @return array
     *      - *keywords* - 
     */
    public function deleteSponsoredProductsKeywords(array $data): array
    {
        return $this->api("/sp/keywords/delete", 'POST', $data, ['content-type' => 'application/vnd.spKeyword.v3+json']);
    }
                    
    /**
     * @description 

**Requires one of these permissions**:
["advertiser_campaign_edit","advertiser_campaign_view"]     * @tag Campaign Optimization Rules
     * @param array $data 
     *      - *requirePerformanceMetrics* - boolean
     *          - If set to false, eligible campaigns without a recommendation for performanceMetrics are also provided in response.Check performanceMetricsExists response field to know if performanceMetrics is available for eligible campaign.
     *      - *campaignIds* - array
     *          - A list of campaign ids
     * @return array
     *      - *CampaignOptimizationRecommendations* - array
     *          - List of campaigns eligible for optimization rule.
     *      - *CampaignOptimizationRecommendationsError* - array
     *          - List of campaigns not eligible for optimization rule.
     */
    public function getOptimizationRuleEligibility(array $data): array
    {
        return $this->api("/sp/rules/campaignOptimization/eligibility", 'POST', $data, ['content-type' => 'application/vnd.optimizationrules.v1+json']);
    }
                    
    /**
     * @description 

**Authorized resource type**:
Global Ad Account ID, Profile ID

**Parameter name**:
Amazon-Ads-AccountId

**Parameter in**:
header

**Requires one of these permissions**:
["advertiser_campaign_edit","advertiser_campaign_view"]     * @tag BudgetRules
     * @param string $budgetRuleId The budget rule identifier.
     * @return array
     *      - *budgetRule* - 
     */
    public function getBudgetRuleByRuleIdForSPCampaigns(string $budgetRuleId): array
    {
        return $this->api("/sp/budgetRules/{$budgetRuleId}");
    }
                    
    /**
     * @description 

**Requires one of these permissions**:
["advertiser_campaign_edit","advertiser_campaign_view"]     * @tag Campaign Optimization Rules
     * @param string $campaignOptimizationId The sp campaign optimization rule identifier.
     * @return array
     *      - *CampaignOptimizationRule* - 
     */
    public function getCampaignOptimizationRule(string $campaignOptimizationId): array
    {
        return $this->api("/sp/rules/campaignOptimization/{$campaignOptimizationId}");
    }
                
    /**
     * @description 

**Requires one of these permissions**:
["advertiser_campaign_edit"]     * @tag Campaign Optimization Rules
     * @param string $campaignOptimizationId The sp campaign optimization rule identifier.
     * @return array
     *      - *campaignOptimizationId* - 
     *      - *code* - string
     *          - An enumerated success or error code for machine use.
     *      - *details* - string
     *          - A human-readable description of the error, if unsuccessful
     */
    public function deleteCampaignOptimizationRule(string $campaignOptimizationId): array
    {
        return $this->api("/sp/rules/campaignOptimization/{$campaignOptimizationId}", 'DELETE');
    }
                    
    /**
     * @description Create campaign negative keywords

**Requires one of these permissions**:
["advertiser_campaign_edit"]     * @tag Campaign negative keywords
     * @param array $data 
     *      - *campaignNegativeKeywords* - array
     *          - An array of campaignNegativeKeywords.
     * @return array
     *      - *campaignNegativeKeywords* - 
     */
    public function createSponsoredProductsCampaignNegativeKeywords(array $data): array
    {
        return $this->api("/sp/campaignNegativeKeywords", 'POST', $data, ['content-type' => 'application/vnd.spCampaignNegativeKeyword.v3+json']);
    }
                
    /**
     * @description Update campaign negative keywords

**Requires one of these permissions**:
["advertiser_campaign_edit"]     * @tag Campaign negative keywords
     * @param array $data 
     *      - *campaignNegativeKeywords* - array
     *          - An array of campaignNegativeKeywords with updated values.
     * @return array
     *      - *campaignNegativeKeywords* - 
     */
    public function updateSponsoredProductsCampaignNegativeKeywords(array $data): array
    {
        return $this->api("/sp/campaignNegativeKeywords", 'PUT', $data, ['content-type' => 'application/vnd.spCampaignNegativeKeyword.v3+json']);
    }
                    
    /**
     * @description Returns the targets created through target promotion groups for an advertiser and / or given target promotion group.

**Requires one of these permissions**:
["advertiser_campaign_view"]     * @tag TargetPromotionGroups
     * @param array $data 
     *      - *maxResults* - integer
     *          - The maximum number of results requested.
     *      - *nextToken* - string
     *          - Token value allowing to navigate to the next or previous response page
     *      - *targetPromotionGroupIdFilter* - 
     *      - *adGroupIdFilter* - 
     * @return array
     *      - *totalResults* - integer
     *          - The total number of results available.
     *      - *nextToken* - string
     *          - To retrieve the next page of results, call the same operation and specify this token in the
    request. If the nextToken field is empty, there are no further results.
     *      - *targets* - array
     */
    public function listTargetPromotionGroupTargets(array $data): array
    {
        return $this->api("/sp/targetPromotionGroups/targets/list", 'POST', $data, ['content-type' => 'application/vnd.sptargetpromotiongrouptarget.v1+json']);
    }
                    
    /**
     * @description List targeting clauses

**Requires one of these permissions**:
["advertiser_campaign_edit"]     * @tag Targeting clauses
     * @param array $data 
     *      - *campaignIdFilter* - 
     *      - *stateFilter* - 
     *      - *expressionTypeFilter* - 
     *      - *maxResults* - integer
     *          - Number of records to include in the paginated response. Defaults to max page size for given API
     *      - *nextToken* - string
     *          - token value allowing to navigate to the next response page
     *      - *targetIdFilter* - 
     *      - *asinFilter* - 
     *      - *adGroupIdFilter* - 
     *      - *includeExtendedDataFields* - boolean
     *          - Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
     * @return array
     *      - *totalResults* - integer
     *          - The total number of entities
     *      - *nextToken* - string
     *          - token value allowing to navigate to the next response page
     *      - *targetingClauses* - array
     */
    public function listSponsoredProductsTargetingClauses(array $data): array
    {
        return $this->api("/sp/targets/list", 'POST', $data, ['content-type' => 'application/vnd.spTargetingClause.v3+json']);
    }
                    
    /**
     * @description List negative keywords

**Requires one of these permissions**:
["advertiser_campaign_edit","advertiser_campaign_view"]     * @tag Negative keywords
     * @param array $data 
     *      - *campaignIdFilter* - 
     *      - *stateFilter* - 
     *      - *negativeKeywordTextFilter* - 
     *      - *maxResults* - integer
     *          - Number of records to include in the paginated response. Defaults to max page size for given API
     *      - *nextToken* - string
     *          - token value allowing to navigate to the next response page
     *      - *adGroupIdFilter* - 
     *      - *includeExtendedDataFields* - boolean
     *          - Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
     *      - *locale* - string
     *          - Restricts results to negativeKeywords that match the specified locale.
     *      - *negativeKeywordIdFilter* - 
     *      - *matchTypeFilter* - array
     *          - Only the negativeKeyword with the match type that is in this list will be listed
     * @return array
     *      - *negativeKeywords* - array
     *      - *totalResults* - integer
     *          - The total number of entities
     *      - *nextToken* - string
     *          - token value allowing to navigate to the next response page
     */
    public function listSponsoredProductsNegativeKeywords(array $data): array
    {
        return $this->api("/sp/negativeKeywords/list", 'POST', $data, ['content-type' => 'application/vnd.spNegativeKeyword.v3+json']);
    }
                    
    /**
     * @description The <b> POST /sp/global/targets/keywords/recommendations/list </b> endpoint returns recommended keyword targets for a list of countries given either A) a list of ad ASINs per target country or B) a global campaign ID and ad group ID. Please use the recommendationType field to specify if you want to use option A or option B. This endpoint will also return recommended bids along with each recommendation keyword target.<br><br> <b> CountryCodes</b> <br>Global API endpoint accepts <b>countryCodes</b> dictionary. Key is the 2-letter country code. Value is an object with two arrays <b>asins</b> and <b>targets</b>. Each country will be processed in parallel according to rules of <a href="https://advertising.amazon.com/API/docs/en-us/sponsored-products/3-0/openapi/prod#tag/Keyword-Targets:~:text=keywords/localize%20endpoint.-,Version%205.0,-New%20Features">version 5</a> recommendation API.<h3> Availability </h3> Global keyword recommendation API is available in all the marketplaces.     * @tag Keyword Targets
     * @param array $data 
     * @return array
     *      - *countryCodes* - object
     */
    public function getGlobalRankedKeywordRecommendation(array $data): array
    {
        return $this->api("/sp/global/targets/keywords/recommendations/list", 'POST', $data, ['content-type' => 'application/vnd.spkeywordsrecommendation.v5+json']);
    }
                    
    /**
     * @description Create negative keywords

**Requires one of these permissions**:
["advertiser_campaign_edit"]     * @tag Negative keywords
     * @param array $data 
     *      - *negativeKeywords* - array
     *          - An array of negativeKeywords.
     * @return array
     *      - *negativeKeywords* - 
     */
    public function createSponsoredProductsNegativeKeywords(array $data): array
    {
        return $this->api("/sp/negativeKeywords", 'POST', $data, ['content-type' => 'application/vnd.spNegativeKeyword.v3+json']);
    }
                
    /**
     * @description Update negative keywords

**Requires one of these permissions**:
["advertiser_campaign_edit"]     * @tag Negative keywords
     * @param array $data 
     *      - *negativeKeywords* - array
     *          - An array of negativeKeywords with updated values.
     * @return array
     *      - *negativeKeywords* - 
     */
    public function updateSponsoredProductsNegativeKeywords(array $data): array
    {
        return $this->api("/sp/negativeKeywords", 'PUT', $data, ['content-type' => 'application/vnd.spNegativeKeyword.v3+json']);
    }
                    
    /**
     * @description 

**Requires one of these permissions**:
["advertiser_campaign_edit","advertiser_campaign_view"]     * @tag Budget Usage
     * @param array $data 
     *      - *campaignIds* - array
     *          - A list of campaign IDs
     * @return array
     *      - *success* - array
     *          - List of budget usage percentages that were successfully pulled
     *      - *error* - array
     *          - List of budget usage percentages that failed to pull
     */
    public function spCampaignsBudgetUsage(array $data): array
    {
        return $this->api("/sp/campaigns/budget/usage", 'POST', $data, ['content-type' => 'application/vnd.spcampaignbudgetusage.v1+json']);
    }
                    
    /**
     * @description A rule enables an automatic budget increase for a specified date range or for a special event. The response includes the suggested date range for each special event.

**Requires one of these permissions**:
["advertiser_campaign_edit","advertiser_campaign_view"]     * @tag BudgetRulesRecommendation
     * @param array $data 
     * @return array
     *      - *groupedEvents* - array
     *          - A list of grouped events with date range.
     *      - *events* - array
     *          - A list of individual events with date range.
     */
    public function sPGetAllRuleEvents(array $data): array
    {
        return $this->api("/sp/v1/events", 'POST', $data, ['content-type' => 'application/json']);
    }
    
}
