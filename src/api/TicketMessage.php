<?php

namespace lujie\plentyMarkets\api;

use Yii;
use Iterator;

/**
* This class is autogenerated by the OpenAPI gii generator
* @description The plentymarkets REST API expands the functionality of the plentymarkets CMS and allows access to resources, i.e. data records, via unique URI paths
*/
class TicketMessage extends \lujie\plentyMarkets\BasePlentyMarketsRestClient
{

                
    /**
     * @description Gets a ticket message. The ID of the message must be specified.
     * @tag TicketMessage
     * @param int $messageId The ID of the ticket message to be returned
     * @return array
     *      - *id* - integer
     *          - The ID of the message
     *      - *ticketId* - integer
     *          - The ticket ID the message belongs to
     *      - *userId* - integer
     *          - The user of the message
     *      - *createdAt* - string
     *          - The time the ticket message was created as unix timestamp or carbon object
     *      - *text* - string
     *          - The content of the message
     *      - *type* - array
     *          - The type of the message. Two types are available:
<ul>
<li>message (visible for the customer)</li>
<li>comment (not visible for the customer)</li>
</ul>
     *      - *source* - array
     *          - The origin of the message. The following sources are available by default and cannot be deleted.
<ul>
<li>backend</li>
<li>frontend</li>
<li>ebay</li>
<li>email</li>
</ul>
     *      - *topicId* - integer
     *          - The ID of the topic the message is assigned to
     */
    public function getTicketsMessageByMessageId(int $messageId): array
    {
        return $this->api("/rest/tickets/messages/{$messageId}");
    }
                    
    /**
     * @description Lists all ticket messages. The ID of the ticket must be specified.
     * @tag TicketMessage
     * @param int $ticketId The ID of the ticket containing the messages
     * @return array
     */
    public function getTicketsMessagesByTicketId(int $ticketId): array
    {
        return $this->api("/rest/tickets/{$ticketId}/messages");
    }
                    
    /**
     * @description Lists all internal ticket messages. The ID of the ticket must be specified. When type = 'comment', the message is internal.
     * @tag TicketMessage
     * @param int $ticketId The ID of the ticket containing the messages
     * @return array
     */
    public function getTicketsMessagesCommentByTicketId(int $ticketId): array
    {
        return $this->api("/rest/tickets/{$ticketId}/messages/comment");
    }
                    
    /**
     * @description Lists all public ticket messages. The ID of the ticket must be specified. When type = 'message', the message is public.
     * @tag TicketMessage
     * @param int $ticketId The ID of the ticket containing the messages
     * @return array
     */
    public function getTicketsMessagesMessageByTicketId(int $ticketId): array
    {
        return $this->api("/rest/tickets/{$ticketId}/messages/message");
    }
    
}
