<?php

namespace lujie\plentyMarkets\api;

use Yii;
use Iterator;

/**
* This class is autogenerated by the OpenAPI gii generator
* @description The plentymarkets REST API expands the functionality of the plentymarkets CMS and allows access to resources, i.e. data records, via unique URI paths
*/
class User extends \lujie\plentyMarkets\BasePlentyMarketsRestClient
{

                
    /**
     * @description Get a user specified by userId.
     * @tag User
     * @param int $userId The UserId
     * @return array
     *      - *id* - integer
     *      - *user* - string
     *      - *realName* - string
     *      - *lang* - string
     *      - *ipLimit* - string
     *      - *ustatus* - boolean
     *      - *memberId* - integer
     *      - *timestamp* - string
     *      - *email* - string
     *      - *timezone* - string
     *      - *googleEmail* - string
     *      - *skype* - string
     *      - *ical* - string
     *      - *psConfig* - boolean
     *      - *psItem* - boolean
     *      - *psEbay* - boolean
     *      - *psStock* - boolean
     *      - *psCustomer* - boolean
     *      - *psOrder* - boolean
     *      - *psStats* - boolean
     *      - *psData* - boolean
     *      - *pcConfig* - boolean
     *      - *pcContent* - boolean
     *      - *pcNewsletter* - boolean
     *      - *pcLayout* - boolean
     *      - *pcDialog* - boolean
     *      - *pcStats* - boolean
     *      - *pcData* - boolean
     *      - *pcBlog* - boolean
     *      - *signature* - string
     *      - *color* - string
     *      - *eks* - boolean
     *      - *payments* - boolean
     *      - *acceptAgb* - integer
     *      - *api* - boolean
     *      - *image* - string
     *      - *delOrder* - boolean
     *      - *delArticle* - boolean
     *      - *delRecord* - boolean
     *      - *plentystat* - boolean
     *      - *plentyconnect* - boolean
     *      - *webspaceAccess* - boolean
     *      - *accessControlList* - string
     *      - *plentymarketsShippingOrderId* - boolean
     *      - *plentymarketsShippingItem* - boolean
     *      - *plentymarketsShippingAuto* - boolean
     *      - *plentymarketsShippingLabel* - boolean
     *      - *plentymarketsShippingConfig* - boolean
     *      - *warehouseId* - integer
     *      - *calendar* - boolean
     *      - *orderStatus* - string
     *      - *warehouseRepairId* - integer
     *      - *project* - boolean
     *      - *ticket* - boolean
     *      - *order* - boolean
     *      - *blog* - boolean
     *      - *lead* - boolean
     *      - *customer* - boolean
     *      - *totalVacationDays* - number
     *      - *roleId* - integer
     *      - *salutation* - string
     *      - *dataLang* - string
     *      - *disabled* - boolean
     *      - *scheduler* - boolean
     *      - *item* - boolean
     *      - *incomingItems* - boolean
     *      - *backendPluginSetId* - integer
     *          - The ID of the user's selected backend set
     */
    public function getBackendUserByUserId(int $userId): array
    {
        return $this->api("/rest/backend/user/{$userId}");
    }
                    
    /**
     * @description Get all users in an array.
     * @tag User
     * @return array
     */
    public function getBackendUsers(): array
    {
        return $this->api("/rest/backend/users");
    }
                    
    /**
     * @description Find all users having a name or username like the given one.
     * @tag User
     * @param string $name The name to search for
     * @return array
     */
    public function getBackendUsersSearchNameByName(string $name): array
    {
        return $this->api("/rest/backend/users/search_name/{$name}");
    }
                    
    /**
     * @description Get the backend plugin set for user
     * @tag User
     * @return array
     *      - *id* - integer
     *      - *hash* - string
     *      - *hasSuccessfulBuild* - boolean
     *      - *parentPluginSetId* - integer
     *      - *name* - string
     *      - *description* - string
     */
    public function getUserBackendPluginset(): array
    {
        return $this->api("/rest/user/backend_pluginset");
    }
                
    /**
     * @description Set the backend plugin set for user
     * @tag User

     */
    public function createUserBackendPluginset(): void
    {
        $this->api("/rest/user/backend_pluginset", 'POST');
    }
                    
    /**
     * @description Get all users with a secret value/pin.
     * @tag User

     */
    public function getUserPinUsers(): void
    {
        $this->api("/rest/user/pin_users");
    }
    
}
