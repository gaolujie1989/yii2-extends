{
  "info": {
    "description": "APIs that enable integrators to manage different aspects of billing for their account like Addresses, Taxes, Payments, Invoices etc..",
    "title": "Advertising Billing",
    "version": "3.0"
  },
  "paths": {
    "/billingProfileUsages/list": {
      "post": {
        "summary": "Lists the billing profiles linked to each country of global ads account.",
        "requestBody": {
          "description": "The request body to fetch billing profiles linked to each country of global ads account.",
          "content": {
            "application/vnd.billingProfileUsage.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/GetBillingProfileUsageRequest"
              }
            }
          },
          "required": true
        },
        "description": "Lists the billing profiles linked to each country of global ads account. You can further narrow down the search by providing the countries you want the billing profiles for.",
        "operationId": "GetBillingProfileUsages",
        "responses": {
          "200": {
            "description": "Linked billing profile(s) are successfully fetched.",
            "content": {
              "application/vnd.billingProfileUsage.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBillingProfileUsageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Operation failed because of invalid request payload.",
            "content": {
              "application/vnd.billingProfileUsage.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Operation failed because of unauthenticated access",
            "content": {
              "application/vnd.billingProfileUsage.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Operation failed because of internal error",
            "content": {
              "application/vnd.billingProfileUsage.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Ads-AccountId",
            "description": "The identifier of an account. Account can be a global advertising account.",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Manager-Account",
            "description": "The identifier of a manager account.",
            "required": false
          }
        ],
        "tags": [
          "Billing Profiles"
        ]
      }
    },
    "/billingProfiles/list": {
      "post": {
        "summary": "Fetches billing profiles present under the global account. ",
        "requestBody": {
          "description": "The request body to fetch one or more billing profile(s).",
          "content": {
            "application/vnd.billingProfile.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/GetBillingProfilesRequest"
              }
            }
          },
          "required": true
        },
        "description": "Fetches billing profiles present under the global account. You can limit the search results by providing filters like `defaultBillingProfileFilter` and `billingProfileIdFilter` in which case only results matching the filters will be returned. This is a Paginated API request and returns a paginationToken (`nextToken`) if more that `50` results match. You can customize the pageSize to be less than `50` by providing `maxResults` key in request.",
        "operationId": "GetBillingProfiles",
        "responses": {
          "200": {
            "description": "Billing profile(s) is(are) fetched.",
            "content": {
              "application/vnd.billingProfile.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBillingProfilesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Billing profile(s) couldn't be fetched because of invalid request payload.",
            "content": {
              "application/vnd.billingProfile.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Billing profile(s) couldn't be fetched because of unauthenticated access.",
            "content": {
              "application/vnd.billingProfile.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Billing profile(s) couldn't be fetched because of internal error.",
            "content": {
              "application/vnd.billingProfile.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Ads-AccountId",
            "description": "The identifier of an account. Account can be a global advertising account.",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Manager-Account",
            "description": "The identifier of a manager account.",
            "required": false
          }
        ],
        "tags": [
          "Billing Profiles"
        ]
      }
    },
    "/billingProfileUsages": {
      "post": {
        "summary": "API to link one or more countries with a billing profile. This association is known as 'applying' a billing profile.",
        "requestBody": {
          "description": "The request body accepts a list of billing profile identifiers and advertisers for association.",
          "content": {
            "application/vnd.billingProfileUsage.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/ApplyBillingProfileRequest"
              }
            }
          },
          "required": true
        },
        "description": "API to link one or more countries with a billing profile. The linked BillingProfile's billing informationwill be used for invoicing, taxes and other billing workflows. A single billing profile can be linked to multiple countries.",
        "operationId": "ApplyBillingProfile",
        "responses": {
          "400": {
            "description": "Billing profile(s) couldn't be applied because of invalid request payload.",
            "content": {
              "application/vnd.billingProfileUsage.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Billing profile(s) couldn't be applied because of unauthenticated access.",
            "content": {
              "application/vnd.billingProfileUsage.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Billing profile(s) couldn't be applied because of internal error.",
            "content": {
              "application/vnd.billingProfileUsage.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileErrorResponse"
                }
              }
            }
          },
          "207": {
            "description": "Some Billing profile(s) may have been applied. Response may contain partial success. More details on the successful/failed applications will be present in the response body",
            "content": {
              "application/vnd.billingProfileUsage.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplyBillingProfileResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Ads-AccountId",
            "description": "The identifier of an account. Account can be a global advertising account.",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Manager-Account",
            "description": "The identifier of a manager account.",
            "required": false
          }
        ],
        "tags": [
          "Billing Profiles"
        ]
      }
    },
    "/billingProfileAgreementContents/{billingProfileAgreementContentId}": {
      "get": {
        "summary": "API to fetch agreement contents related to billing profiles.",
        "description": "User needs to provide consent to certain agreements before creating a billing profile. This API provides a way for users to go through the agreement content.",
        "operationId": "GetBillingProfileAgreementContent",
        "responses": {
          "200": {
            "description": "Get opertation was successful. `content` contains the HTML content of the agreement requested",
            "content": {
              "application/vnd.billingProfileAgreement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileAgreementContentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Billing profile agreement couldn't be fetched because of unauthenticated access.",
            "content": {
              "application/vnd.billingProfileAgreement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Billing profile agreement couldn't be fetched because of internal error.",
            "content": {
              "application/vnd.billingProfileAgreement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Billing profile agreement couldn't be fetched because of unauthorized access.",
            "content": {
              "application/vnd.billingProfileAgreement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Billing profile agreement couldn't be fetched because content doesn't exist.",
            "content": {
              "application/vnd.billingProfileAgreement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Ads-AccountId",
            "description": "The identifier of an account. Account can be a global advertising account.",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Manager-Account",
            "description": "The identifier of a manager account.",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "billingProfileAgreementContentId",
            "description": "agreementId for which the content needs to be fetched. This is same as the `documentName` in create/update billing profiles request",
            "required": true
          },
          {
            "schema": {
              "default": "en_US",
              "type": "string"
            },
            "in": "query",
            "name": "languageOfPreference",
            "description": "This selection controls the language of preference (or `locale`) and the returned values of agreement content to match that language. Preferred locale can be chosen among the list of valid language codes. Check the table below for supported language code. <br/><br/><table border=1><caption> **Supported Locales Table** <\/caption><tr>    <th>Locale code<\/th>    <th>Language<\/th><\/tr><tr>    <td>en_US<\/td>    <td>English<\/td><\/tr><tr>    <td>ja_JP<\/td>    <td>Japanese<\/td><\/tr><tr>    <td>ar_SA<\/td>    <td>Arabic<\/td><\/tr><tr>    <td>de_DE<\/td>    <td>German<\/td><\/tr><tr>    <td>fr_FR<\/td>    <td>French<\/td><\/tr><tr>    <td>it_IT<\/td>    <td>Italian<\/td><\/tr><tr>    <td>es_MX<\/td>    <td>Spanish<\/td><\/tr><tr>    <td>nl_NL<\/td>    <td>Dutch<\/td><\/tr><tr>    <td>sv_SE<\/td>    <td>Swedish<\/td><\/tr><tr>    <td>pl_PL<\/td>    <td>Polish<\/td><\/tr><tr>    <td>tr_TR<\/td>    <td>Turkish<\/td><\/tr> <tr>    <td>pt_BR<\/td>    <td>Portuguese<\/td><\/tr> <\/table>",
            "required": false
          }
        ],
        "tags": [
          "Billing Profiles"
        ]
      }
    },
    "/billingStatements": {
      "post": {
        "summary": "API to request billing statement generation for an Advertising account.",
        "requestBody": {
          "description": "The request body accepts filters required for generation of the billing statement report.",
          "content": {
            "application/vnd.createbillingstatementsrequest.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBillingStatementRequest"
              }
            }
          },
          "required": true
        },
        "description": "Request to create billing statement for advertiser advertising in Sponsored Products/Brands/Display segment.",
        "operationId": "CreateBillingStatement",
        "responses": {
          "202": {
            "description": "Billing statement creation request accepted and request identifier is generated.",
            "content": {
              "application/vnd.createbillingstatementsrequest.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateBillingStatementResponse"
                },
                "example": {
                  "billingStatementRequestId": "dummy_billing_statement_request_id",
                  "details": "Billing statement creation request accepted"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request, caused due to invalid argument passed in the request.",
            "content": {
              "application/vnd.createbillingstatementsrequest.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingStatementErrorResponse"
                },
                "example": {
                  "code": "INVALID_ARGUMENT",
                  "billingStatementRequestId": "billing_statement_request_id",
                  "details": "startDate must be in yyyyMMdd format"
                }
              }
            }
          },
          "401": {
            "description": "**Unauthorized** - The request failed because the user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/vnd.createbillingstatementsrequest.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingStatementErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error, caused due to some internal error.",
            "content": {
              "application/vnd.createbillingstatementsrequest.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingStatementErrorResponse"
                },
                "example": {
                  "code": "INTERNAL_SERVER_ERROR",
                  "billingStatementRequestId": "billing_statement_request_id",
                  "details": "Internal failure. Please retry after sometime"
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden** - The request failed because the caller is not authorized to the requested account.",
            "content": {
              "application/vnd.createbillingstatementsrequest.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingStatementErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Account doesn't exists for which billing statement is requested.",
            "content": {
              "application/vnd.createbillingstatementsrequest.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingStatementErrorResponse"
                },
                "example": {
                  "code": "ACCOUNT_NOT_FOUND",
                  "billingStatementRequestId": "billing_statement_request_id",
                  "details": "Valid account does not exist for the given account Id"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Ads-AccountId",
            "description": "The identifier of a profile associated with the advertiser account. Used for authentication of Global Account.",
            "required": false
          }
        ],
        "tags": [
          "Billing Statements"
        ]
      }
    },
    "/billing/paymentProfiles": {
      "post": {
        "requestBody": {
          "description": "This API creates or updates payment profiles.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdPaymentsCreatePaymentProfileInput"
              }
            }
          },
          "required": true
        },
        "description": "Creates or updates payment profiles.",
        "operationId": "CreatePaymentProfiles",
        "responses": {
          "400": {
            "description": "The operation failed due to invalid client input.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdPaymentsError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdPaymentsError"
                }
              }
            }
          },
          "207": {
            "description": "Successful response of the operation.",
            "content": {
              "application/vnd.paymentprofiles.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AdPaymentsCreatePaymentProfilesOutput"
                }
              }
            }
          },
          "429": {
            "description": "The operation failed due to reaching the rate limit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdPaymentsError"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Ads-AccountId",
            "description": "The identifier of a profile associated with the advertiser account.",
            "required": true
          },
          {
            "$ref": "#/components/parameters/AdPaymentsClientHeader"
          },
          {
            "$ref": "#/components/parameters/AdPaymentsManagerAccountIdHeader"
          }
        ],
        "tags": [
          "Create Payment Profiles"
        ]
      }
    },
    "/billingProfiles": {
      "post": {
        "summary": "API to create one or more billing profile(s).",
        "requestBody": {
          "description": "The request body accepts a list of billing profiles to be created in batch.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBillingProfilesRequest"
              }
            }
          },
          "required": true
        },
        "description": "Creates one or more billing profiles. A Billing Profile contains billing information (address, taxes, agreements etc..) that will be used for invoicing and other billing workflows. Currently, Billing Profiles can only be created for a Global Sponsored Ads vendor account. Please note that you need to link (`POST /billingProfileUsages`) a billingProfile to a country for that billingInformation to be used for that country.",
        "operationId": "CreateBillingProfiles",
        "responses": {
          "400": {
            "description": "Billing profile(s) couldn't be created because of invalid request payload.",
            "content": {
              "application/vnd.billingProfile.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Billing profile(s) couldn't be created because of unauthenticated access.",
            "content": {
              "application/vnd.billingProfile.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Billing profile(s) couldn't be created because of internal error.",
            "content": {
              "application/vnd.billingProfile.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileErrorResponse"
                }
              }
            }
          },
          "207": {
            "description": "Updates one or more billing profiles under a global or manager account which can then be applied in Sponsored Products/Brands/Display segments. Please note that `isBillTo` and `billingParty` are immutable attributes and cannot be updated -- in this case, user can always create a new billing profile with same details but with different `isBillTo` and `billingParty` attribute values.",
            "content": {
              "application/vnd.billingProfile.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateOrUpdateBillingProfilesResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Ads-AccountId",
            "description": "The identifier of an account. Account can be a global advertising account.",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Manager-Account",
            "description": "The identifier of a manager account.",
            "required": false
          }
        ],
        "tags": [
          "Billing Profiles"
        ]
      },
      "put": {
        "summary": "API to update one or more billing profile(s).",
        "requestBody": {
          "description": "The request body accepts a list of billing profiles to be updated in batch.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBillingProfilesRequest"
              }
            }
          },
          "required": true
        },
        "description": "Updates one or more billing profiles under a global account Please note that `isBillTo` and `type` are immutable attributes and cannot be updated -- in this case, user can always create a new billing profile with same details but with different `isBillTo` and `type` attribute values.",
        "operationId": "UpdateBillingProfiles",
        "responses": {
          "400": {
            "description": "Billing profile(s) couldn't be updated because of invalid request payload.",
            "content": {
              "application/vnd.billingProfile.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Billing profile(s) couldn't be updated because of unauthenticated access.",
            "content": {
              "application/vnd.billingProfile.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Billing profile(s) couldn't be updated because of internal error.",
            "content": {
              "application/vnd.billingProfile.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileErrorResponse"
                }
              }
            }
          },
          "207": {
            "description": "Billing profile(s) is(are) updated. Response may contain partial success.",
            "content": {
              "application/vnd.billingProfile.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateOrUpdateBillingProfilesResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Ads-AccountId",
            "description": "The identifier of an account. Account can be a global advertising account.",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Manager-Account",
            "description": "The identifier of a manager account.",
            "required": false
          }
        ],
        "tags": [
          "Billing Profiles"
        ]
      }
    },
    "/invoiceSummaries/list": {
      "post": {
        "summary": "Lists the billing invoice summary(s) in a global ads account as per the search and aggregation parameters passed in the request",
        "requestBody": {
          "description": "Payload with filter, sort and aggregate key(s) to fetch list of billing invoice summary(s).",
          "content": {
            "application/vnd.billingInvoiceSummary.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/BillingInvoiceSummariesRequest"
              }
            }
          },
          "required": true
        },
        "description": "Lists the billing invoice summary(s) in a global ads account. You can further narrow down the search by providing filter(s) over country, status, paymentMethod with 'exact' and 'broad' match, search over invoice number & ro number and aggregation query(s) over the billing invoice summary(s)",
        "operationId": "GetBillingInvoiceSummaries",
        "responses": {
          "200": {
            "description": "Contains an object encapsulating either the aggregation result(s) or sorted & filtered billing invoice summary(s).",
            "content": {
              "application/vnd.billingInvoiceSummary.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingInvoiceSummariesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Operation failed because of invalid request payload.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Operation failed because of unauthenticated access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Operation failed because of internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Ads-AccountId",
            "description": "The identifier of an account. Account can be a global advertising account.",
            "required": true
          }
        ],
        "tags": [
          "Billing Invoice Summary(s)"
        ]
      }
    },
    "/billing/paymentMethods/list": {
      "post": {
        "description": "Retrieves eligible payment methods for a customer.",
        "operationId": "GetCustomerPaymentMethods",
        "responses": {
          "200": {
            "description": "Successful response of the operation.",
            "content": {
              "application/vnd.paymentmethods.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AdPaymentsGetCustomerPaymentMethodsOutput"
                }
              }
            }
          },
          "400": {
            "description": "The operation failed due to invalid client input.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdPaymentsError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdPaymentsError"
                }
              }
            }
          },
          "429": {
            "description": "The operation failed due to reaching the rate limit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdPaymentsError"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/AdPaymentsAccountIdHeader"
          },
          {
            "$ref": "#/components/parameters/AdPaymentsClientHeader"
          },
          {
            "$ref": "#/components/parameters/AdPaymentsProfileHeader"
          },
          {
            "$ref": "#/components/parameters/AdPaymentsManagerAccountIdHeader"
          },
          {
            "$ref": "#/components/parameters/AdPaymentsNextTokenQueryParam"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/AdPaymentsPaymentAgreementType"
            },
            "in": "query",
            "name": "criteriaType",
            "description": "Criteria Types to that can be used to filter the payment methods in the GET Payment methods API.",
            "required": true
          }
        ],
        "tags": [
          "Get Payment Methods"
        ]
      }
    },
    "/billing/invoices/pay": {
      "post": {
        "requestBody": {
          "description": "This API executes payment on one or multiple open invoices.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdPaymentsPayInvoicesInput"
              }
            }
          },
          "required": true
        },
        "description": "Executes payment on a set of or all of an advertisers open invoices.\n\n**Requires one of these permissions**:\n[\"adv_billing_edit\"]",
        "operationId": "PayInvoices",
        "responses": {
          "400": {
            "description": "The operation failed due to invalid client input.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdPaymentsError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdPaymentsError"
                }
              }
            }
          },
          "207": {
            "description": "Successful response of the operation.",
            "content": {
              "application/vnd.invoices.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AdPaymentsPayInvoicesOutput"
                }
              }
            }
          },
          "429": {
            "description": "The operation failed due to reaching the rate limit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdPaymentsError"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/AdPaymentsClientHeader"
          },
          {
            "$ref": "#/components/parameters/AdPaymentsProfileHeader"
          }
        ],
        "tags": [
          "Pay Invoices"
        ]
      }
    },
    "/billing/promotions/list": {
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.billingpromotions.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/ListBillingPromotionsRequestContent"
              }
            }
          },
          "required": true
        },
        "description": "This API retrieves BillingPromotions information for advertiser accounts. It enables users to query and analyze promotion consumption metrics across multiple invoices.\n\n**Requires one of these permissions**:\n[\"nemo_transactions_view, nemo_transactions_edit\"].",
        "operationId": "ListBillingPromotions",
        "responses": {
          "200": {
            "description": "ListBillingPromotions 200 response",
            "content": {
              "application/vnd.billingpromotions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ListBillingPromotionsResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "ValidationException 400 response",
            "content": {
              "application/vnd.billingpromotions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/vnd.billingpromotions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerException 500 response",
            "content": {
              "application/vnd.billingpromotions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/vnd.billingpromotions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/vnd.billingpromotions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "headers": {
              "Retry-After": {
                "schema": {
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended.",
                  "type": "number"
                },
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended."
              }
            },
            "description": "ThrottlingException 429 response",
            "content": {
              "application/vnd.billingpromotions.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingExceptionResponseContent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "description": "The identifier of an account. Account can be a global advertising account.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Ads-AccountId",
            "description": "The identifier of an account. Account can be a global advertising account."
          },
          {
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id profileId from the response to pass it as input.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id profileId from the response to pass it as input.",
            "required": false
          }
        ],
        "tags": [
          "Billing Promotions"
        ]
      }
    },
    "/billing/statuses": {
      "post": {
        "summary": "Get the billing status for a list of advertising accounts.",
        "requestBody": {
          "content": {
            "application/vnd.bulkgetbillingstatusrequestbody.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/bulkGetBillingStatusesRequestBody"
              }
            }
          },
          "required": true
        },
        "operationId": "bulkGetBillingStatus",
        "description": "Gets the current billing status associated for each advertising account.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"adv_billing_view\",\"adv_billing_edit\"]",
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/vnd.bulkgetbillingstatusresponse.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/bulkGetBillingStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.bulkgetbillingstatuserrorresponse.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/bulkGetBillingStatusErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Request failed because user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/vnd.bulkgetbillingstatuserrorresponse.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/bulkGetBillingStatusErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/vnd.bulkgetbillingstatuserrorresponse.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/bulkGetBillingStatusErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user does not have access to a specified resource,",
            "content": {
              "application/vnd.bulkgetbillingstatuserrorresponse.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/bulkGetBillingStatusErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested account was not found.",
            "content": {
              "application/vnd.bulkgetbillingstatuserrorresponse.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/bulkGetBillingStatusErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.bulkgetbillingstatuserrorresponse.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/bulkGetBillingStatusErrorResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Billing Status"
        ]
      }
    },
    "/invoices": {
      "get": {
        "summary": "Get invoices for advertiser",
        "operationId": "getAdvertiserInvoices",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/vnd.invoices.v1.1+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextCursor": {
                      "description": "This will be null when at the end of your result set.  This will be present even if the original query had a startIndex and count",
                      "type": "string"
                    },
                    "previousCursor": {
                      "description": "Optional parameter that links to the previous data set if relevant",
                      "type": "string"
                    },
                    "invoiceSummaries": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/invoiceSummary"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - Request failed because user is not authenticated or is not allowed to invoke the operation.",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {}
          },
          "403": {
            "description": "Forbidden - Request failed because user does not have access to a specified resource,",
            "content": {}
          },
          "404": {
            "description": "Not Found - Requested account was not found.",
            "content": {}
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {}
          }
        },
        "description": "\n\n**Requires one of these permissions**:\n[\"nemo_transactions_view\",\"nemo_transactions_edit\"]",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ISSUED",
                  "PAID_IN_PART",
                  "PAID_IN_FULL",
                  "WRITTEN_OFF"
                ]
              }
            },
            "in": "query",
            "explode": false,
            "name": "invoiceStatuses",
            "description": "* `ISSUED`: An invoice is issued when its charges are finalized and tax is computed on the total amount. \n* `PAID_IN_PART`: When a partial payment is received, the invoice status will change to paid in part.\n* `PAID_IN_PART`: One full payment has been received, the invoice will be paid in full.\n* `WRITTEN_OFF`: If an invoice is written off because of an error, the status will be updated to written off.\n",
            "style": "form"
          },
          {
            "schema": {},
            "in": "query",
            "name": "startDate",
            "description": "The starting date (inclusive) of the date range for filtering invoices. Please provide the date in ISO-8601 format, representing a UTC date with only the date portion (no time)."
          },
          {
            "schema": {},
            "in": "query",
            "name": "endDate",
            "description": "The ending date (inclusive) of the date range for filtering invoices. Please provide the date in ISO-8601 format, representing a UTC date with only the date portion (no time)."
          },
          {
            "schema": {
              "maximum": 100,
              "type": "integer",
              "minimum": 0
            },
            "in": "query",
            "name": "count",
            "description": "Number of records to include in the paged response. Defaults to 100. Cannot be combined with the cursor parameter."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "cursor",
            "description": "A cursor representing how far into a result set this query should begin. In the absence of a cursor the request will default to start index of 0 and page size of 100."
          }
        ],
        "tags": [
          "invoice"
        ]
      }
    },
    "/invoices/{invoiceId}": {
      "get": {
        "summary": "Get invoice data by invoice ID",
        "operationId": "getInvoice",
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/vnd.invoice.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/invoice"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized - Request failed because user is not authenticated or is not allowed to invoke the operation.",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {}
          },
          "403": {
            "description": "Forbidden - Request failed because user does not have access to a specified resource,",
            "content": {}
          },
          "404": {
            "description": "Not Found - Requested invoice was not found.",
            "content": {}
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {}
          }
        },
        "description": "\n\n**Requires one of these permissions**:\n[\"nemo_transactions_view\",\"nemo_transactions_edit\"]",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "invoiceId",
            "description": "ID of invoice to fetch",
            "required": true
          }
        ],
        "tags": [
          "invoice"
        ]
      }
    },
    "/billingStatements/{billingStatementRequestId}": {
      "get": {
        "summary": "API to fetch the latest status of Billing Statements creation request and billing statement download link if available.",
        "description": "API to fetch the latest status of Billing Statements creation request and billing statement download link if available.",
        "operationId": "GetBillingStatement",
        "responses": {
          "200": {
            "description": "Successful Operation.",
            "content": {
              "application/vnd.createbillingstatementsrequest.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetBillingStatementResponse"
                },
                "example": {
                  "reportStatus": "SUCCESS",
                  "details": "Billing Statement request generated successfully.",
                  "s3DownloadLink": "dummy_s3_preSigned_url"
                }
              }
            }
          },
          "401": {
            "description": "**Unauthorized** - The request failed because the user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/vnd.createbillingstatementsrequest.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingStatementErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "**Forbidden** - The request failed because the caller is not authorized to the requested account.",
            "content": {
              "application/vnd.createbillingstatementsrequest.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingStatementErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Billing Statement not found for the given billingStatementRequestId.",
            "content": {
              "application/vnd.createbillingstatementsrequest.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingStatementErrorResponse"
                },
                "example": {
                  "code": "NOT_FOUND",
                  "billingStatementRequestId": "billing_statement_request_id",
                  "details": "No billing statement request found with given billingStatementRequestId"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Ads-AccountId",
            "description": "The identifier of a profile associated with the advertiser account.",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "billingStatementRequestId",
            "description": "Billing Statement Request Id.",
            "required": true
          }
        ],
        "tags": [
          "Billing Statements"
        ]
      }
    },
    "/billing/paymentAgreements": {
      "post": {
        "requestBody": {
          "description": "This API creates or updates payment agreements.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdPaymentsCreatePaymentAgreementsInput"
              }
            }
          },
          "required": true
        },
        "description": "Creates or updates payment agreements.",
        "operationId": "CreatePaymentAgreements",
        "responses": {
          "400": {
            "description": "The operation failed due to invalid client input.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdPaymentsError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdPaymentsError"
                }
              }
            }
          },
          "207": {
            "description": "Successful response of the operation.",
            "content": {
              "application/vnd.paymentagreements.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AdPaymentsCreatePaymentAgreementsOutput"
                }
              }
            }
          },
          "429": {
            "description": "The operation failed due to reaching the rate limit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdPaymentsError"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/AdPaymentsClientHeader"
          },
          {
            "$ref": "#/components/parameters/AdPaymentsAccountIdHeader"
          },
          {
            "$ref": "#/components/parameters/AdPaymentsProfileHeader"
          },
          {
            "$ref": "#/components/parameters/AdPaymentsManagerAccountIdHeader"
          }
        ],
        "tags": [
          "Create Payment Agreement"
        ]
      }
    },
    "/billing/paymentAgreements/list": {
      "post": {
        "description": "Gets current payment agreement for a customer.",
        "operationId": "GetPaymentAgreements",
        "responses": {
          "200": {
            "description": "Successful response of the operation.",
            "content": {
              "application/vnd.paymentagreements.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AdPaymentsGetPaymentAgreementOutput"
                }
              }
            }
          },
          "400": {
            "description": "The operation failed due to invalid client input.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdPaymentsError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdPaymentsError"
                }
              }
            }
          },
          "429": {
            "description": "The operation failed due to reaching the rate limit.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdPaymentsError"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/AdPaymentsAccountIdHeader"
          },
          {
            "$ref": "#/components/parameters/AdPaymentsClientHeader"
          },
          {
            "$ref": "#/components/parameters/AdPaymentsProfileHeader"
          },
          {
            "$ref": "#/components/parameters/AdPaymentsManagerAccountIdHeader"
          },
          {
            "$ref": "#/components/parameters/AdPaymentsNextTokenQueryParam"
          },
          {
            "schema": {
              "$ref": "#/components/schemas/AdPaymentsPaymentAgreementType"
            },
            "in": "query",
            "name": "agreementType",
            "description": "The type of payment agreement to query for.",
            "required": true
          }
        ],
        "tags": [
          "Get Payment Agreements"
        ]
      }
    },
    "/billing/notifications": {
      "post": {
        "summary": "Get the billing notifications for a list advertising accounts.",
        "requestBody": {
          "content": {
            "application/vnd.billingnotifications.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/bulkGetBillingNotificationsRequestBody"
              }
            }
          },
          "required": true
        },
        "operationId": "bulkGetBillingNotifications",
        "description": "Gets an array of all currently valid billing notifications associated for each advertising account.",
        "responses": {
          "200": {
            "description": "Successful Request",
            "content": {
              "application/vnd.bulkgetbillingnotificationsresponse.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/bulkGetBillingNotificationsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.bulkgetbillingnotificationserrorresponse.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/bulkGetBillingNotificationsErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Request failed because user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/vnd.bulkgetbillingnotificationserrorresponse.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/bulkGetBillingNotificationsErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/vnd.bulkgetbillingnotificationserrorresponse.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/bulkGetBillingNotificationsErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user does not have access to a specified resource,",
            "content": {
              "application/vnd.bulkgetbillingnotificationserrorresponse.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/bulkGetBillingNotificationsErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested account was not found.",
            "content": {
              "application/vnd.bulkgetbillingnotificationserrorresponse.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/bulkGetBillingNotificationsErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.bulkgetbillingnotificationserrorresponse.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/bulkGetBillingNotificationsErrorResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/AdPaymentsAccountIdHeader"
          },
          {
            "$ref": "#/components/parameters/AdPaymentsClientHeader"
          }
        ],
        "tags": [
          "Billing Notifications"
        ]
      }
    },
    "/billing/documents/{documentId}": {
      "get": {
        "description": "Gets billing document(s) with id.",
        "operationId": "GetDocument",
        "responses": {
          "200": {
            "description": "GetDocument 200 response",
            "content": {
              "application/vnd.billingDocuments.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDocumentResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "ValidationException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "ResourceNotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceNotFoundExceptionResponseContent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "documentId",
            "required": true
          },
          {
            "schema": {
              "minItems": 1,
              "maxItems": 6,
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/DocType"
              }
            },
            "in": "query",
            "explode": true,
            "name": "docType",
            "style": "form",
            "required": true
          },
          {
            "schema": {
              "description": "Account identifier",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Ads-AccountId",
            "description": "Account identifier"
          },
          {
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          }
        ],
        "tags": [
          "Billing Documents"
        ]
      }
    }
  },
  "components": {
    "headers": {},
    "examples": {},
    "schemas": {
      "BillingSetupCreationFailureResult": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Error code for billing setup creation.",
            "type": "string"
          },
          "index": {
            "description": "Index of the item from original request, starting from 0.",
            "type": "number"
          },
          "message": {
            "description": "Error message for billing setup creation.",
            "type": "string"
          }
        }
      },
      "InvoiceGroupWithId": {
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "description": "User friendly name of the invoice group the client is attempting to create for easy identification.",
            "type": "string"
          },
          "billingProfileUsageId": {
            "minLength": 1,
            "description": "Denotes the billing party responsible for this invoice group.",
            "type": "string"
          },
          "invoiceGroupId": {
            "description": "Identifier of an invoice group.",
            "type": "string"
          }
        }
      },
      "AdPaymentsDeductFromPaymentPaymentMethod": {
        "description": "Represents DeductFromPayment payment method structure. DeductFromPayment is a type of payment method where spends are deducted from vendor balance of a particular vendor code.",
        "type": "object",
        "properties": {
          "vendorCodeBalance": {
            "$ref": "#/components/schemas/AdPaymentsCurrencyAmount"
          },
          "eligibleCountries": {
            "$ref": "#/components/schemas/AdPaymentsCountryCodeList"
          },
          "vendorCodeName": {
            "minLength": 1,
            "description": "The name of the vendor code this payment method represents.",
            "type": "string"
          },
          "countryCode": {
            "$ref": "#/components/schemas/AdPaymentsCountryCode"
          },
          "vendorGroupId": {
            "minLength": 1,
            "description": "The identifier of the vendor group that this vendor code belongs to.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/AdPaymentsPaymentMethodType"
          },
          "vendorCode": {
            "minLength": 1,
            "description": "A vendor code identifies a product being sold by a vendor on the retail website. When Amazon purchases products from a vendor, Amazon owes the vendor money which gets added to the vendor''s balance. An advertising account can then use this balance to pay for their advertising spends.",
            "type": "string"
          }
        },
        "required": [
          "type",
          "vendorCode",
          "vendorCodeName",
          "eligibleCountries"
        ]
      },
      "AdPaymentsCreditCardPaymentMethodList": {
        "minItems": 0,
        "maxItems": 100,
        "description": "A list of credit card payment methods.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AdPaymentsCreditCardPaymentMethod"
        }
      },
      "bulkGetBillingNotificationsRequestBody": {
        "description": "The properties needed to get the billing notifications for a set of advertisers.",
        "type": "object",
        "title": "Bulk Get Billing Notifications Request Body",
        "properties": {
          "advertiserMarketplaces": {
            "minItems": 1,
            "maxItems": 30,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/advertiserMarketplace"
            }
          },
          "locale": {
            "$ref": "#/components/schemas/locale"
          }
        }
      },
      "AssociationTarget": {
        "type": "object",
        "properties": {
          "entityType": {
            "$ref": "#/components/schemas/EntityType"
          },
          "countryCode": {
            "$ref": "#/components/schemas/CountryCode"
          },
          "entityId": {
            "description": "Entity identifiers to be associated to the invoice group.",
            "type": "string"
          }
        }
      },
      "UpdateAssociationSuccessResult": {
        "type": "object",
        "properties": {
          "invoiceGroupAssociationId": {
            "description": "InvoiceGroupAssociationId",
            "type": "string"
          },
          "index": {
            "description": "index of item from original request, starting from 0",
            "type": "number"
          }
        }
      },
      "UpdateBillingProfilesRequest": {
        "description": "Contains a list of one or more billing profiles to be updated.",
        "type": "object",
        "properties": {
          "billingProfiles": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateBillingProfile"
            }
          }
        }
      },
      "InvoiceGroupAssociation": {
        "type": "object",
        "properties": {
          "invoiceGroupId": {
            "description": "InvoiceGroupId to associate target(s) to.",
            "type": "string"
          },
          "target": {
            "$ref": "#/components/schemas/AssociationTarget"
          }
        }
      },
      "AccessDeniedExceptionResponseContent": {
        "description": "AccessDeniedException 403 response.",
        "type": "object",
        "properties": {
          "code": {
            "minLength": 1,
            "description": "Status code of the error.",
            "type": "string"
          },
          "message": {
            "minLength": 1,
            "description": "Human readable error message.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "GetInvoiceGroupAssociationResponseContent": {
        "type": "object",
        "properties": {
          "invoiceGroupAssociation": {
            "$ref": "#/components/schemas/InvoiceGroupAssociation"
          }
        }
      },
      "Status": {
        "description": "Status of export request.",
        "type": "string",
        "enum": [
          "QUEUED",
          "COMPLETED",
          "FAILED"
        ]
      },
      "AdPaymentsPayByInvoicePaymentMethodList": {
        "minItems": 0,
        "maxItems": 100,
        "description": "A list of pay by invoice payment methods.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AdPaymentsPayByInvoicePaymentMethod"
        }
      },
      "AssociateInvoiceProfilesRequestContent": {
        "description": "Represents the request model for associating/un-associating from an invoice profile",
        "type": "object",
        "properties": {
          "invoiceProfileAssociations": {
            "minItems": 1,
            "maxItems": 50,
            "description": "Invoice profile associations to be created.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssociateInvoiceProfileRequest"
            }
          }
        }
      },
      "ListBillingPromotionsRequestContent": {
        "type": "object",
        "properties": {
          "promotionIdFilter": {
            "$ref": "#/components/schemas/BillingPromotionIdFilter"
          },
          "includePromotionConsumption": {
            "description": "Should response include consumption details.",
            "type": "boolean"
          },
          "endDateTimeFilter": {
            "$ref": "#/components/schemas/DateTimeFilter"
          },
          "linkedEntityFilter": {
            "$ref": "#/components/schemas/BillingPromotionsLinkedEntityFilter"
          },
          "nextToken": {
            "description": "The token is used to fetch the next page of results if they exist.",
            "type": "string"
          },
          "maxResults": {
            "description": "This is the maximum number of promotions to return in a single page of results.",
            "maximum": 25,
            "type": "number",
            "minimum": 1
          },
          "availableDateTimeFilter": {
            "$ref": "#/components/schemas/DateTimeFilter"
          },
          "promotionTypeFilter": {
            "$ref": "#/components/schemas/BillingPromotionsTypeFilter"
          },
          "startDateTimeFilter": {
            "$ref": "#/components/schemas/DateTimeFilter"
          }
        },
        "required": [
          "linkedEntityFilter"
        ]
      },
      "AdPaymentsCreateDFPConsentRequestInput": {
        "description": "Represent CreateDFPConsentRequest API Input Structure.",
        "type": "object",
        "properties": {
          "communicationAddress": {
            "$ref": "#/components/schemas/AdPaymentsCommunicationAddress"
          },
          "idempotenceId": {
            "$ref": "#/components/schemas/AdPaymentsIdempotenceId"
          },
          "accounts": {
            "$ref": "#/components/schemas/AdPaymentsAccountList"
          }
        },
        "required": [
          "idempotenceId"
        ]
      },
      "InvoiceGroupCreationFailureResult": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Error code of invoice group creation",
            "type": "string"
          },
          "index": {
            "description": "index of item from original request, starting from 0",
            "type": "number"
          },
          "message": {
            "description": "Error message of invoice group creation",
            "type": "string"
          }
        }
      },
      "AdPaymentsGetPaymentMethodsOutput": {
        "description": "Represents GetPaymentMethods API Response Structure.",
        "type": "object",
        "properties": {
          "dfpPaymentMethods": {
            "minItems": 0,
            "maxItems": 100,
            "description": "Represents the list of DFPPaymentMethod structure.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdPaymentsDFPPaymentMethod"
            }
          },
          "nextToken": {
            "$ref": "#/components/schemas/AdPaymentsNextToken"
          }
        },
        "required": [
          "dfpPaymentMethods"
        ]
      },
      "BillingCurrency": {
        "description": "Currency of promotion amount.",
        "type": "string",
        "enum": [
          "USD",
          "CAD",
          "MXN",
          "BRL",
          "COP",
          "CLP",
          "GBP",
          "EUR",
          "AED",
          "SAR",
          "TRY",
          "SEK",
          "EGP",
          "PLN",
          "ZAR",
          "NGN",
          "INR",
          "JPY",
          "AUD",
          "SGD"
        ]
      },
      "adProgram": {
        "description": "Sponsored Ads only. This field indicates the ad type (such as Sponsored Products, Sponsored Brands or Sponsored Display).\n",
        "title": "Program Name",
        "type": "string",
        "enum": [
          "SPONSORED PRODUCT",
          "SPONSORED BRANDS",
          "SPONSORED DISPLAY",
          "SPONSORED DISPLAY FOR FIRE TV",
          "CREATOR CONNECTIONS",
          "AMAZON LIVE"
        ]
      },
      "CreateBillingStatementRequest": {
        "type": "object",
        "properties": {
          "countryCodes": {
            "minItems": 0,
            "maxItems": 30,
            "description": "List of countries for which billing statements are to be fetched. If no country codes are passed in the request, the statement will be generated for all the advertising countries by default.",
            "type": "array",
            "items": {
              "type": "string",
              "$ref": "#/components/schemas/CountryCode"
            }
          },
          "endDate": {
            "pattern": "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})/",
            "format": "date",
            "description": "End date of the invoice summary period for a report in the format YYYY-MM-DD.",
            "type": "string",
            "example": "2022-09-10"
          },
          "format": {
            "x-amazon-advertising-package": "AdvertisingBillingApiService",
            "default": "CSV",
            "description": "Format of the file, such as, for billing statements, etc.",
            "type": "string",
            "enum": [
              "CSV"
            ]
          },
          "locale": {
            "x-amazon-advertising-package": "AdvertisingBillingApiService",
            "description": "Preferred locale can be chosen among the list of valid language codes. Check the table below for supported language code. <br/><br/><table border=1><caption> **Supported Locales Table** <\/caption><tr>    <th>Locale code<\/th>    <th>Language<\/th><\/tr><tr>    <td>en_US<\/td>    <td>English<\/td><\/tr><tr>    <td>ja_JP<\/td>    <td>Japanese<\/td><\/tr><tr>    <td>ar_SA<\/td>    <td>Arabic<\/td><\/tr><tr>    <td>de_DE<\/td>    <td>German<\/td><\/tr><tr>    <td>fr_FR<\/td>    <td>French<\/td><\/tr><tr>    <td>it_IT<\/td>    <td>Italian<\/td><\/tr><tr>    <td>es_MX<\/td>    <td>Spanish<\/td><\/tr><tr>    <td>nl_NL<\/td>    <td>Dutch<\/td><\/tr><tr>    <td>sv_SE<\/td>    <td>Swedish<\/td><\/tr><tr>    <td>pl_PL<\/td>    <td>Polish<\/td><\/tr><tr>    <td>tr_TR<\/td>    <td>Turkish<\/td><\/tr> <tr>    <td>pt_BR<\/td>    <td>Portuguese<\/td><\/tr> <\/table>",
            "type": "string"
          },
          "startDate": {
            "pattern": "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2})/",
            "format": "date",
            "description": "Start date of the invoice summary period for a report in the format YYYY-MM-DD.",
            "type": "string",
            "example": "2022-09-10"
          }
        },
        "required": [
          "locale",
          "startDate",
          "endDate"
        ]
      },
      "AdPaymentsPaymentProfile": {
        "description": "Represents a list of payment methods and the scope of advertisers able to access them.",
        "type": "object",
        "properties": {
          "paymentProfileId": {
            "minLength": 1,
            "description": "The ID associated to this payment profile.",
            "type": "string"
          },
          "paymentMethods": {
            "$ref": "#/components/schemas/AdPaymentsPaymentMethodList"
          },
          "eligibleEntities": {
            "$ref": "#/components/schemas/AdPaymentsEntityMarketplaceList"
          },
          "defaultFor": {
            "$ref": "#/components/schemas/AdPaymentsEntityMarketplaceList"
          }
        }
      },
      "bulkGetBillingStatusErrorCodes": {
        "type": "string",
        "title": "Bulk Get Billing Status Error Codes",
        "enum": [
          "BAD_REQUEST",
          "NOT_FOUND",
          "NOT_AUTHORIZED",
          "INTERNAL_ERROR"
        ]
      },
      "billingNotificationImpact": {
        "type": "string",
        "title": "Billing Notification Impact",
        "enum": [
          "CAMPAIGNS_SUSPENDED",
          "NO_IMPACT"
        ]
      },
      "ResourceNotFoundExceptionResponseContent": {
        "description": "Request references a resource which does not exist.",
        "type": "object",
        "properties": {
          "code": {
            "minLength": 1,
            "description": "Error Code.",
            "type": "string"
          },
          "message": {
            "minLength": 1,
            "description": "Human readable response message.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "InvoiceProfileAssociationSuccessResult": {
        "type": "object",
        "properties": {
          "invoiceProfileAssociationId": {
            "description": "Id of the invoice profile association",
            "type": "string"
          },
          "index": {
            "description": "Index of the item from original request, starting from 0",
            "type": "number"
          }
        }
      },
      "AdPaymentsDirectDebitPaymentMethod": {
        "description": "Represents Direct Debit payment method structure.",
        "type": "object",
        "properties": {
          "eligibleCountries": {
            "$ref": "#/components/schemas/AdPaymentsCountryCodeList"
          },
          "instrumentId": {
            "minLength": 1,
            "description": "Identifies a direct debit payment method.",
            "type": "string"
          },
          "tail": {
            "description": "The last four digits of the bank account number.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/AdPaymentsPaymentMethodType"
          }
        },
        "required": [
          "type",
          "instrumentId",
          "tail",
          "eligibleCountries"
        ]
      },
      "InvoiceProfileAssociationAction": {
        "type": "string",
        "enum": [
          "ASSOCIATE",
          "UNASSOCIATE"
        ]
      },
      "bulkGetBillingStatusSuccess": {
        "type": "object",
        "title": "Bulk Get Billing Status Success",
        "required": [
          "advertiserMarketplace",
          "index",
          "billingStatus"
        ],
        "properties": {
          "advertiserMarketplace": {
            "$ref": "#/components/schemas/advertiserMarketplace"
          },
          "index": {
            "format": "int32",
            "type": "integer"
          },
          "billingStatus": {
            "$ref": "#/components/schemas/billingStatus"
          }
        }
      },
      "invoiceLine": {
        "title": "Invoice Line",
        "type": "object",
        "required": [
          "cost",
          "costEventCount",
          "costEventType",
          "costPerUnit",
          "name",
          "priceType"
        ],
        "properties": {
          "campaignTags": {
            "description": "Campaign tags in the form of string key-value pairs.",
            "additionalProperties": {
              "description": "The key-value pair for the campaign tag.",
              "type": "string"
            },
            "title": "Campaign Tags",
            "type": "object"
          },
          "costEventType": {
            "description": "Type of event charged (clicks or impressions)",
            "title": "Cost Event Type",
            "type": "string",
            "enum": [
              "CLICKS",
              "IMPRESSIONS"
            ]
          },
          "commissionRate": {
            "title": "Commission Rate",
            "type": "number"
          },
          "fees": {
            "description": "Charges can include different fees (see feeType below).\n",
            "title": "Fees",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fee"
            }
          },
          "cost": {
            "$ref": "#/components/schemas/currencyAmount"
          },
          "campaignId": {
            "format": "int64",
            "title": "Campaign ID",
            "type": "integer"
          },
          "priceType": {
            "description": "Metric used for performance measurement.",
            "title": "Price Type",
            "type": "string",
            "enum": [
              "CPC",
              "CPM"
            ]
          },
          "supplyCost": {
            "$ref": "#/components/schemas/currencyAmount"
          },
          "portfolioId": {
            "format": "int64",
            "description": "Sponsored Ads only. This identifier maps to one of the portfolios listed in the portfolios section.\n",
            "title": "Portfolio ID",
            "type": "integer"
          },
          "costPerEventType": {
            "description": "Ad spends cost (Cost exclusive of adjustments/promotions/fees/etc) per unit (thousand impressions/clicks).\n",
            "title": "Cost Per Event Type",
            "type": "number"
          },
          "programName": {
            "$ref": "#/components/schemas/adProgram"
          },
          "costEventCount": {
            "format": "int64",
            "description": "Number of clicks/impressions charged",
            "title": "Event Count",
            "type": "integer"
          },
          "purchaseOrderNumber": {
            "title": "DSP only. Campaign-level purchase order number.",
            "type": "string"
          },
          "name": {
            "title": "Invoice Line Name",
            "type": "string"
          },
          "campaignName": {
            "title": "Campaign Name",
            "type": "string"
          },
          "promotionAmount": {
            "$ref": "#/components/schemas/currencyAmount"
          },
          "costPerUnit": {
            "title": "Cost per Unit",
            "type": "number"
          },
          "commissionAmount": {
            "$ref": "#/components/schemas/currencyAmount"
          }
        }
      },
      "AdPaymentsAccountType": {
        "description": "Account Type.",
        "type": "string",
        "enum": [
          "VENDOR_ACCOUNT"
        ]
      },
      "DocType": {
        "description": "Supported type of billing document to be specified through query parameter. \nPrepayment Receipts do not share the same documentId as the other DocTypes and must be requested separately.",
        "type": "string",
        "enum": [
          "INVOICE",
          "CREDIT_MEMO",
          "GIS_INVOICE",
          "GIS_CREDIT_MEMO",
          "PAYMENT_COMPLEMENT",
          "PREPAYMENT_RECEIPT"
        ]
      },
      "email": {
        "title": "Email",
        "type": "object",
        "required": [
          "displayName",
          "emailAddress"
        ],
        "properties": {
          "emailAddress": {
            "title": "Email Address",
            "type": "string"
          },
          "displayName": {
            "description": "Customer name used in email communication.\n",
            "title": "Display Name",
            "type": "string"
          }
        }
      },
      "governmentInvoiceInformation": {
        "description": "Government invoice data is provided in marketplaces (such as Italy or India) that require a government-assigned invoice ID. This object contains this identifier, along with the type of transaction (which will always be a debit in the case of an invoice) and presigned url link to download e-invoice document with expiry time of 45 sec.\n",
        "title": "Government Invoice Information",
        "type": "object",
        "properties": {
          "transactionType": {
            "type": "string",
            "enum": [
              "DEBIT",
              "CREDIT"
            ]
          },
          "countryCode": {
            "$ref": "#/components/schemas/countryCode"
          },
          "governmentDocumentS3Link": {
            "description": "PreSigned URL to grant time-limited download access for govt invoice pdf",
            "type": "string"
          },
          "governmentXmlDocumentS3Link": {
            "description": "PreSigned URL to grant time-limited download access for govt invoice XML",
            "type": "string"
          },
          "governmentInvoiceId": {
            "description": "Government generated ID",
            "type": "string"
          }
        }
      },
      "address": {
        "title": "Address",
        "type": "object",
        "required": [
          "addressLine1",
          "addressLine2",
          "addressLine3",
          "city",
          "companyName",
          "countryCode",
          "postalCode",
          "stateOrRegion"
        ],
        "properties": {
          "stateOrRegion": {
            "title": "State Or Region",
            "type": "string"
          },
          "attentionName": {
            "title": "Company Name",
            "type": "string"
          },
          "city": {
            "title": "City",
            "type": "string"
          },
          "countryCode": {
            "$ref": "#/components/schemas/countryCode"
          },
          "companyName": {
            "title": "Company Name",
            "type": "string"
          },
          "postalCode": {
            "title": "Postal Code",
            "type": "string"
          },
          "addressLine1": {
            "title": "Address Line 1",
            "type": "string"
          },
          "addressLine2": {
            "title": "Address Line 2",
            "type": "string"
          },
          "addressLine3": {
            "title": "Address Line 3",
            "type": "string"
          }
        }
      },
      "AdPaymentsGrantor": {
        "description": "Represents AdPaymentsGrantor structure who grants the payment method consent. It contains the amazon customer Id of the user who is granting the consent.",
        "type": "object",
        "properties": {
          "grantorUserId": {
            "minLength": 1,
            "description": "This is the amazon customer id of the entity that is granting the DFP consent to the advertiser.",
            "type": "string"
          },
          "communicationAddress": {
            "$ref": "#/components/schemas/AdPaymentsCommunicationAddress"
          }
        }
      },
      "AdPaymentsApproveDFPConsentRequestInput": {
        "description": "Represents ApproveDFPConsentRequest Input Structure.",
        "type": "object",
        "properties": {
          "consentedAccounts": {
            "$ref": "#/components/schemas/AdPaymentsAccountList"
          },
          "action": {
            "$ref": "#/components/schemas/AdPaymentsApprovalAction"
          }
        },
        "required": [
          "consentedAccounts",
          "action"
        ]
      },
      "AssociationFailureResult": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Error code of association",
            "type": "string"
          },
          "index": {
            "description": "index of item from original request, starting from 0",
            "type": "number"
          },
          "message": {
            "description": "Error message of association",
            "type": "string"
          }
        }
      },
      "CreateInvoiceGroupsResponseContent": {
        "description": "Represent CreateInvoiceGroup API Response Structure",
        "type": "object",
        "properties": {
          "success": {
            "minItems": 0,
            "maxItems": 50,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceGroupCreationSuccessResult"
            }
          },
          "error": {
            "minItems": 0,
            "maxItems": 50,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceGroupCreationFailureResult"
            }
          }
        }
      },
      "ErrorResponse": {
        "description": "Contains the machine-readable error code and human-readable details.",
        "type": "object",
        "properties": {
          "errorMessage": {
            "description": "A human-readable description of the response.",
            "type": "string"
          },
          "errorCode": {
            "description": "The code describing the error reason.",
            "type": "string"
          }
        }
      },
      "bulkGetBillingNotificationsResponse": {
        "type": "object",
        "title": "Bulk Get Billing Notifications Response",
        "required": [
          "success",
          "error"
        ],
        "properties": {
          "success": {
            "minItems": 0,
            "maxItems": 30,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/bulkGetBillingNotificationsSuccess"
            }
          },
          "error": {
            "minItems": 0,
            "maxItems": 30,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/bulkGetBillingNotificationsError"
            }
          }
        }
      },
      "GetBillingProfileUsageRequest": {
        "description": "The request body to fetch billing profiles linked to each country of global ads account.",
        "type": "object",
        "properties": {
          "expandBillingProfile": {
            "default": "false",
            "description": "By default only the billingProfileId linked to the country will be returned. Choose `true` if you would like to see the content of the billing profiles linked to a country",
            "type": "boolean"
          },
          "nextToken": {
            "description": "Offset to fetch next page with list of billing profile usage(s).",
            "type": "string"
          },
          "maxResults": {
            "default": "100",
            "format": "int64",
            "description": "Max results / billing profile usage(s) to be shown in a single page.",
            "type": "integer"
          },
          "filters": {
            "description": "Filter object to be used to fetch list of billing profile usage(s).",
            "type": "object",
            "properties": {
              "advertiserFilter": {
                "minItems": 0,
                "maxItems": 1,
                "description": "Indicates list of advertiser identifiers(s) for which billing profile(s) needs to be fetched.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MarketplaceAdvertiser"
                }
              }
            }
          },
          "expandFallbackBillingProfile": {
            "default": "false",
            "description": "Choose `true` if you would like to see the information currently being used for billing for this marketplace. Useful when the billingProfileUsage status is not `OK` and the billing information coundn't be propagated for that country. If set to `true`, `fallbackBillingProfiles` attribute will be returned.",
            "type": "boolean"
          }
        }
      },
      "AdPaymentsPayInvoicesInput": {
        "description": "Represents the input to the pay invoices API.",
        "type": "object",
        "properties": {
          "idempotenceId": {
            "$ref": "#/components/schemas/AdPaymentsIdempotenceId"
          },
          "reasonLocale": {
            "$ref": "#/components/schemas/AdPaymentsLocale"
          },
          "paymentAgreementId": {
            "$ref": "#/components/schemas/AdPaymentsPaymentAgreementId"
          }
        },
        "required": [
          "idempotenceId"
        ]
      },
      "billingStatusCode": {
        "type": "string",
        "title": "Billing Status Code",
        "enum": [
          "ACCOUNT_BILLING_ISSUE",
          "INVALID_PAYMENT_REGISTRATION",
          "PAYMENT_METHOD_EXPIRED",
          "PAYMENT_METHOD_VERIFICATION_FAILED",
          "PENDING_BILLING_REGISTRATION",
          "PENDING_PAYMENT_REGISTRATION",
          "PENDING_TAX_REGISTRATION",
          "STORED_VALUE_BALANCE_TOO_LOW",
          "RESERVE_ORDER_BALANCE_TOO_LOW",
          "VALID_BILLING_STATUS"
        ]
      },
      "currencyCode": {
        "description": "The currency used for all monetary values for entities under this profile\n|Region|`countryCode`|Country Name|`currencyCode`|\n|-|-|-|-|\n|NA|US|United States|USD|\n|NA|CA|Canada|CAD|\n|NA|MX|Mexico|MXN|\n|NA|BR|Brazil|BRL|\n|EU|UK|United Kingdom|GBP|\n|EU|DE|Germany|EUR|\n|EU|FR|France|EUR|\n|EU|ES|Spain|EUR|\n|EU|IT|Italy|EUR|\n|EU|NL|Netherlands|EUR|\n|EU|AE|United Arab Emirates|AED|\n|EU|SA|Saudi Arabia|SAR|\n|EU|TR|Turkey|TRY|\n|EU|SE|Sweden|SEK|\n|EU|EG|Egypt|EGP|\n|EU|PL|Poland|PLN|\n|IN|IN|India|INR|\n|FE|JP|Japan|JPY|\n|FE|SG|Singapore|SGD|\n|FE|AU|Australia|AUD|",
        "type": "string",
        "enum": [
          "USD",
          "CAD",
          "MXN",
          "BRL",
          "GBP",
          "EUR",
          "AED",
          "SAR",
          "INR",
          "JPY",
          "AUD",
          "SGD",
          "TRY",
          "SEK",
          "EGP",
          "PLN"
        ]
      },
      "GetBillingPromotionResponse": {
        "type": "object",
        "properties": {
          "remainingAmount": {
            "$ref": "#/components/schemas/BillingAmount"
          },
          "promotionType": {
            "$ref": "#/components/schemas/BillingPromotionType"
          },
          "startDateTime": {
            "format": "date-time",
            "description": "Start date and time (inclusive) of promotion in UTC ISO 8601.",
            "type": "string"
          },
          "name": {
            "description": "Name of the promotion.",
            "type": "string"
          },
          "limit": {
            "$ref": "#/components/schemas/BillingPromotionLimit"
          },
          "isVoided": {
            "description": "is promotion voided.",
            "type": "boolean"
          },
          "linkedEntity": {
            "$ref": "#/components/schemas/BillingPromotionLinkedEntity"
          },
          "endDateTime": {
            "format": "date-time",
            "description": "End date and time (inclusive) of promotion in UTC ISO 8601.",
            "type": "string"
          },
          "promotionConsumption": {
            "minItems": 0,
            "maxItems": 50,
            "description": "Details of the promotion consumption. This is provided if includePromotionConsumption is set to true.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillingPromotionConsumption"
            }
          },
          "promotionId": {
            "description": "id of promotion.",
            "type": "string"
          },
          "consumedAmount": {
            "$ref": "#/components/schemas/BillingAmount"
          }
        }
      },
      "bulkGetBillingNotificationsSuccess": {
        "type": "object",
        "title": "Bulk Get Billing Notifications Map",
        "required": [
          "index",
          "billingNotifications"
        ],
        "properties": {
          "billingNotifications": {
            "minItems": 0,
            "maxItems": 30,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/billingNotification"
            }
          },
          "advertiserMarketplace": {
            "$ref": "#/components/schemas/advertiserMarketplace"
          },
          "index": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "contactInfo": {
        "title": "Contact Info",
        "type": "object",
        "required": [
          "address",
          "email"
        ],
        "properties": {
          "address": {
            "$ref": "#/components/schemas/address"
          },
          "email": {
            "$ref": "#/components/schemas/email"
          }
        }
      },
      "BillingPromotionType": {
        "description": "Type of the promotion.",
        "type": "string",
        "enum": [
          "ADHOC",
          "SIGNUP",
          "PROMO_CODE"
        ]
      },
      "bulkGetBillingStatusesRequestBody": {
        "description": "The properties needed to get the billing statuses for a set of advertisers.",
        "type": "object",
        "title": "Bulk Get Billing Statuses Request Body",
        "required": [
          "advertiserMarketplaces"
        ],
        "properties": {
          "advertiserMarketplaces": {
            "minItems": 1,
            "maxItems": 30,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/advertiserMarketplace"
            }
          },
          "locale": {
            "$ref": "#/components/schemas/locale"
          }
        }
      },
      "AdPaymentsCreatePaymentAgreementsOutput": {
        "description": "Represent the output of the create payment agreement API.",
        "type": "object",
        "properties": {
          "success": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdPaymentsBulkCreationResult"
            }
          },
          "error": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdPaymentsBulkCreationResult"
            }
          }
        },
        "required": [
          "success",
          "error"
        ]
      },
      "billingAggregation": {
        "type": "object",
        "properties": {
          "billingAggregationResourcePath": {
            "description": "The resource path to suffix to the base URL endpoints to retrieve the corresponding billing aggregation entity, such as a specific campaign or all active campaigns under DSP Rodeo Advertiser. An example URL after suffixing will be 'https://advertising-api.amazon.com/dsp/orders/123'. The base URL endpoints for the different regions and marketplaces can be found in the Amazon Advertising API Reference Portal.",
            "type": "string",
            "example": "/dsp/orders/123"
          },
          "billingLevel": {
            "$ref": "#/components/schemas/billingLevel"
          },
          "billingAggregationId": {
            "description": "An identifier that helps associate this invoice with specific billing entities, such as campaigns or rodeo advertiser accounts.",
            "type": "string",
            "example": "123"
          }
        }
      },
      "AvailableDocumentResponse": {
        "type": "object",
        "properties": {
          "fileName": {
            "type": "string"
          },
          "docType": {
            "$ref": "#/components/schemas/DocType"
          },
          "storagePath": {
            "type": "string"
          },
          "contentType": {
            "type": "string"
          }
        }
      },
      "StatusCode": {
        "description": "Identifies the standard http response code.",
        "type": "string",
        "enum": [
          "200",
          "400",
          "403",
          "404",
          "500"
        ]
      },
      "BillingProfile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseBillingProfile"
          },
          {
            "type": "object",
            "properties": {
              "billingParty": {
                "description": "Choose `AGENCY` if you are an agency representing an advertiser. Choose `BRAND_OWNER` if you are advertising for your product's sales.",
                "type": "string"
              },
              "billingProfileId": {
                "description": "Billing profile identifier which will be used to identify a billing profile. This identifier will NOT affect billing process.",
                "type": "string"
              },
              "isBillTo": {
                "description": "Whether the billingProfile created should be used for invoicing, taxation and other billing workflows. If the `billTo=false` is setthe `billingName` of that profile is used to determine the 'Advertiser Name' shown to consumers.To ensure accuracy of the information shown on the store, we request that you review the \u2018Advertiser Name\u2019 and \u2018Payer Name\u2019 in our ad systems and update them if required",
                "type": "boolean"
              }
            },
            "required": [
              "billingParty",
              "billingProfileId",
              "isBillTo"
            ]
          }
        ],
        "description": "Billing profile object which contains details regarding address, tax, etc.",
        "type": "object"
      },
      "BillingInvoiceSummary": {
        "description": "Object encapsulating billing invoice summary information",
        "type": "string",
        "properties": {
          "amountDue": {
            "description": "Object identifies the amount due along with currency code for the invoice",
            "type": "object",
            "$ref": "#/components/schemas/CurrencyAmount"
          },
          "country": {
            "description": "Object encapsulating billing invoice country information",
            "type": "object",
            "properties": {
              "code": {
                "description": "Country code for the invoice",
                "type": "string"
              },
              "value": {
                "description": "Country name for the invoice",
                "type": "string"
              }
            }
          },
          "issuedDate": {
            "format": "date",
            "description": "Invoice issued date in ISO-8601 format, representing a UTC date with only the date portion (no time)",
            "type": "string"
          },
          "reserveOrderNumber": {
            "description": "Reserve Order Number",
            "type": "string"
          },
          "ePaymentStatus": {
            "description": "Object encapsulating e-payment status for the invoice",
            "type": "string",
            "properties": {
              "code": {
                "description": "e-payment status code for the invoice",
                "type": "string"
              },
              "value": {
                "description": "e-payment status for the invoice",
                "type": "string"
              }
            }
          },
          "dueDate": {
            "format": "date",
            "description": "Invoice due date in ISO-8601 format, representing a UTC date with only the date portion (no time)",
            "type": "string"
          },
          "refundDetails": {
            "description": "Object encapsulating the invoice refund information",
            "type": "object",
            "properties": {
              "reason": {
                "description": "Refund reason of the invoice",
                "type": "string"
              },
              "amount": {
                "description": "Object identifies the refunded amount along with currency code for the invoice",
                "type": "object",
                "$ref": "#/components/schemas/CurrencyAmount"
              },
              "status": {
                "description": "Refund status of the invoice",
                "type": "string"
              }
            }
          },
          "statusDecorator": {
            "description": "Object encapsulating billing invoice summary status decorator information",
            "type": "string",
            "properties": {
              "code": {
                "description": "Invoice summary status decorator code",
                "type": "string"
              },
              "value": {
                "description": "Invoice summary status decorator",
                "type": "string"
              }
            }
          },
          "id": {
            "description": "Billing Document Number",
            "type": "string"
          },
          "remainingAmountDue": {
            "description": "Object identifies the remaining amount due along with currency code for the invoice",
            "type": "object",
            "$ref": "#/components/schemas/CurrencyAmount"
          },
          "paymentMethodType": {
            "description": "Object encapsulating payment method type against which invoice is issued",
            "type": "string",
            "properties": {
              "code": {
                "description": "Payment method type for the invoice code",
                "type": "string"
              },
              "value": {
                "description": "Payment method type for the invoice",
                "type": "string"
              }
            }
          },
          "status": {
            "description": "Object encapsulating billing invoice summary status information",
            "type": "string",
            "properties": {
              "code": {
                "description": "Invoice summary status code",
                "type": "string"
              },
              "description": {
                "description": "Invoice summary status description",
                "type": "string"
              },
              "value": {
                "description": "Invoice summary status",
                "type": "string"
              }
            }
          }
        }
      },
      "InternalServerExceptionResponseContent": {
        "description": "Thrown when service encounters unexpected error during processing of request.",
        "type": "object",
        "properties": {
          "code": {
            "minLength": 1,
            "description": "Error Code.",
            "type": "string"
          },
          "message": {
            "minLength": 1,
            "description": "Human readable response message.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "BillingPromotionIdFilter": {
        "description": "Filter entities by promotionIds.",
        "type": "object",
        "properties": {
          "include": {
            "minItems": 1,
            "maxItems": 10,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "include"
        ]
      },
      "BillingSummaryPaymentMethod": {
        "description": "Identifies the payment method details.",
        "title": "PaymentMethod",
        "type": "object",
        "properties": {
          "cardTail": {
            "type": "string"
          },
          "cardExpiryYear": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/BillingSummaryPaymentMethodType"
          },
          "vendorGroup": {
            "type": "string"
          },
          "cardBrand": {
            "type": "string"
          },
          "cardExpiryMonth": {
            "type": "string"
          },
          "accountTail": {
            "type": "string"
          },
          "vendorCode": {
            "type": "string"
          }
        },
        "required": [
          "type"
        ]
      },
      "AdPaymentsDFPPaymentMethod": {
        "description": "Represents DeductFromPayment payment method structure. DeductFromPayment is a type of payment method where spends are deducted from vendor balance of a particular vendor code.",
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "description": "Name of the vendor code.",
            "type": "string"
          },
          "vendorGroupId": {
            "minLength": 1,
            "description": "Id of the vendor group.",
            "type": "string"
          },
          "vendorCode": {
            "minLength": 1,
            "description": "A vendor code identifies a product being sold by a vendor on the retail website. When Amazon purchases products from a vendor, Amazon owes the vendor money which gets added to the vendor's balance. An advertising account can then use this balance to pay for their advertising spends.",
            "type": "string"
          }
        },
        "required": [
          "name",
          "vendorCode"
        ]
      },
      "billingNotificationNames": {
        "type": "string",
        "title": "Billing Notification Names",
        "enum": [
          "ACCOUNT_ERROR",
          "BAD_DEBT_SUSPENSION",
          "BILLING_PROFILE_INVALID_TAX",
          "BILLING_PROFILE_INVALID_PERMISSION",
          "BILLING_PROFILE_INVALID_DSA_INFO",
          "BILLING_PROFILE_ERROR",
          "BILLING_ADDRESS_REGISTRATION_NOT_FOUND",
          "CNPJ_VERIFICATION_IN_PROGRESS",
          "CREDIT_CARD_CHARGE_DISPUTE_CAUSED_SUSPENSION",
          "CREDIT_CARD_EXPIRED",
          "CREDIT_CARD_EXPIRES_SOON",
          "CREDIT_CARD_PAYMENT_FAILURE_CAUSED_SUSPENSION",
          "CREDIT_CARD_VERIFICATION_FAILURE_CAUSED_SUSPENSION",
          "CREDIT_CARD_VERIFICATION_FAILURE",
          "CREDIT_CARD_VERIFICATION_PENDING",
          "CREDIT_CARD_WITH_VERIFICATION_PAYMENT_FAILURE_CAUSED_SUSPENSION",
          "CREDIT_CARD_WITH_VERIFICATION_PAYMENT_FAILURE",
          "CREDIT_CARD_WITH_VERIFICATION_PENDING_CAUSED_SUSPENSION",
          "CREDIT_CARD_WITH_VERIFICATION_SUSPENSION_WITH_PAYMENT_IN_PROGRESS",
          "DEDUCT_FROM_PROCEEDS_PAYMENT_FAILURE_CAUSED_SUSPENSION",
          "DEDUCT_FROM_PROCEEDS_WITH_CREDIT_CARD_FALLBACK_PAYMENT_FAILURE_CAUSED_SUSPENSION",
          "DEDUCT_FROM_PROCEEDS_WITH_CREDIT_LIMIT_ELIGIBLE",
          "DEDUCT_FROM_PROCEEDS_WITH_MONTHLY_INVOICE_ELIGIBLE",
          "INACTIVE_SELLER_ACCOUNT_CAUSED_SUSPENSION",
          "INVALID_PAYMENT_REGISTRATION",
          "PAY_BY_INVOICE_OVERDUE_PAYMENT_CAUSED_SUSPENSION",
          "PAY_BY_INVOICE_OVERDUE_PAYMENT_PENDING_SUSPENSION",
          "PAY_BY_INVOICE_OVERDUE_PAYMENT",
          "PAY_BY_INVOICE_UPCOMING_PAYMENT",
          "PENDING_PAYMENT_REGISTRATION",
          "DIRECT_DEBIT_PAYMENT_PENDING",
          "PENDING_VALID_CNPJ_REGISTRATION",
          "POLICY_VIOLATIONS",
          "STORED_VALUE_AUTO_RELOAD_PAYMENT_FAILURE",
          "SELLER_ACCOUNT_INSUFFICIENT_AVAILABLE_BALANCE_CAUSED_SUSPENSION",
          "SELLER_ACCOUNT_INSUFFICIENT_GROSS_BALANCE_CAUSED_SUSPENSION",
          "SELLER_ACCOUNT_PAYMENT_FAILURE_CAUSED_SUSPENSION",
          "SELLER_ACCOUNT_WITH_CREDIT_CARD_FALLBACK_PAYMENT_FAILURE_CAUSED_SUSPENSION",
          "TAX_ID_VALIDATION_IN_PROGRESS",
          "TAX_ID_VALIDATION_REJECTED",
          "DPS_VERIFICATION_PENDING",
          "DPS_DENIED_PARTY",
          "CREDIT_CARD_ALLOWED_AMOUNT_FAILURE",
          "CREDIT_CARD_AUTH_EXPIRED_FAILURE",
          "CREDIT_CARD_AUTHENTICATION_FAILURE",
          "CREDIT_CARD_AUTHORIZATION_FAILURE",
          "CREDIT_CARD_VOLUME_FAILURE",
          "CREDIT_CARD_TRANSACTION_SIZE_FAILURE",
          "CREDIT_CARD_GENERIC_FAILURE",
          "CREDIT_CARD_INELIGIBLE_CARD",
          "CREDIT_CARD_INELIGIBLE_SHARED_CARD",
          "CREDIT_CARD_INSUF_BAL",
          "CREDIT_CARD_INTERNAL_FAILURE",
          "CREDIT_CARD_INVALID_ADDRESS_FAILURE",
          "CREDIT_CARD_INVALID_ACCOUNT_FAILURE",
          "CREDIT_CARD_INVALID_BANK_HOLDER_FAILURE",
          "CREDIT_CARD_INVALID_CARD_FAILURE",
          "CREDIT_CARD_INVALID_DETAILS",
          "CREDIT_CARD_ISSUE_WITH_CARD",
          "CREDIT_CARD_LOCKED_CARD",
          "CREDIT_CARD_MFA_EXPIRED_FAILURE",
          "CREDIT_CARD_CLOSED_FAILURE",
          "PREPAY_INSUFFICIENT_BALANCE",
          "RO_INSUFFICIENT_BALANCE",
          "SELLER_ACCOUNT_MISSING_BACKUP",
          "SELLER_ACCOUNT_BALANCE_LOW",
          "SELLER_ACCOUNT_BALANCE_RESERVED",
          "AUTHOR_REGISTRATION_NOT_FOUND",
          "MERCH_ON_DEMAND_REGISTRATION_NOT_FOUND",
          "SUSPICIOUS_ACTIVITY",
          "ACCOUNT_ERROR_IN_SELLER"
        ],
        "example": "CREDIT_CARD_EXPIRED"
      },
      "InvoiceProfileAssociationFailureResult": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Error code for invoice profile association.",
            "type": "string"
          },
          "index": {
            "description": "Index of the item from original request, starting from 0.",
            "type": "number"
          },
          "message": {
            "description": "Error message for invoice profile association.",
            "type": "string"
          }
        }
      },
      "billingNotificationSeverity": {
        "type": "string",
        "title": "Billing Notification Severity",
        "enum": [
          "ALERT",
          "WARNING",
          "INFO"
        ]
      },
      "AdPaymentsCreatePaymentProfileInput": {
        "description": "Represents the input of the create payment profiles API.",
        "type": "object",
        "properties": {
          "paymentProfiles": {
            "$ref": "#/components/schemas/AdPaymentsPaymentProfileList"
          }
        },
        "required": [
          "paymentProfiles"
        ]
      },
      "AdPaymentsCurrencyCode": {
        "description": "Enum defining different currency codes.",
        "type": "string",
        "enum": [
          "COP",
          "CLP",
          "BRL",
          "CAD",
          "MXN",
          "USD",
          "AED",
          "EUR",
          "EGP",
          "INR",
          "PLN",
          "SAR",
          "SEK",
          "TRY",
          "GBP",
          "AUD",
          "JPY",
          "SGD",
          "NGN",
          "ZAR"
        ]
      },
      "BillingPromotionsTypeFilter": {
        "description": "Filter entities by the types of the promotions.",
        "type": "object",
        "properties": {
          "include": {
            "minItems": 1,
            "maxItems": 10,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillingPromotionType"
            }
          }
        },
        "required": [
          "include"
        ]
      },
      "paymentMethod": {
        "type": "string",
        "enum": [
          "CREDIT_CARD",
          "ELECTRONIC_FUNDS_TRANSFER",
          "DEDUCT_FROM_PAYMENT",
          "UNIFIED_BILLING",
          "DIRECT_DEBIT",
          "PREPAY"
        ]
      },
      "adjustment": {
        "title": "Adjustment",
        "type": "object",
        "required": [
          "accountingDate",
          "amount"
        ],
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/currencyAmount"
          },
          "accountingDate": {
            "$ref": "#/components/schemas/date"
          },
          "fees": {
            "description": "Charges can include different fees (see feeType below).\n",
            "title": "Fees",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fee"
            }
          },
          "comments": {
            "title": "Comments",
            "type": "string"
          },
          "portfolioId": {
            "format": "int64",
            "description": "Sponsored Ads only. This identifier maps to one of the portfolios listed in the portfolios section.\n",
            "title": "Portfolio ID",
            "type": "integer"
          }
        }
      },
      "AdPaymentsGetPaymentAgreementOutput": {
        "description": "Represent the output of the get payment agreements API.",
        "type": "object",
        "properties": {
          "nextToken": {
            "$ref": "#/components/schemas/AdPaymentsNextToken"
          },
          "paymentAgreements": {
            "$ref": "#/components/schemas/AdPaymentsPaymentAgreementList"
          }
        },
        "required": [
          "paymentAgreements"
        ]
      },
      "bulkGetBillingStatusError": {
        "type": "object",
        "title": "Bulk Get Billing Status Error",
        "required": [
          "advertiserId",
          "index"
        ],
        "properties": {
          "advertiserMarketplace": {
            "$ref": "#/components/schemas/advertiserMarketplace"
          },
          "index": {
            "format": "int32",
            "type": "integer"
          },
          "errorCode": {
            "$ref": "#/components/schemas/bulkGetBillingStatusErrorCodes"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "documentType": {
        "title": "Document Type",
        "type": "string",
        "enum": [
          "INVOICE",
          "CREDIT_NOTE"
        ]
      },
      "GetBillingSummariesResponse": {
        "description": "Billing summaries for all associated accounts.",
        "type": "object",
        "properties": {
          "billingSummaries": {
            "minItems": 1,
            "maxItems": 10,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillingSummary"
            }
          }
        },
        "required": [
          "billingSummaries"
        ]
      },
      "AssociationSuccessResult": {
        "type": "object",
        "properties": {
          "invoiceGroupAssociationId": {
            "description": "InvoiceGroupAssociationId",
            "type": "string"
          },
          "index": {
            "description": "index of item from original request, starting from 0",
            "type": "number"
          }
        }
      },
      "BillingCountryCode": {
        "description": "Enum defining country codes.",
        "type": "string",
        "enum": [
          "US",
          "CA",
          "MX",
          "BR",
          "CO",
          "CL",
          "GB",
          "DE",
          "FR",
          "ES",
          "IT",
          "AE",
          "SA",
          "NL",
          "TR",
          "SE",
          "EG",
          "PL",
          "BE",
          "ZA",
          "NG",
          "IR",
          "IN",
          "IE",
          "JP",
          "AU",
          "SG"
        ]
      },
      "locale": {
        "type": "string",
        "title": "Locale",
        "enum": [
          "ar_AE",
          "bn_IN",
          "cs_CZ",
          "de_DE",
          "en_AE",
          "en_AU",
          "en_CA",
          "en_GB",
          "en_IN",
          "en_NG",
          "en_SG",
          "en_US",
          "en_ZA",
          "es_CL",
          "es_CO",
          "es_ES",
          "es_MX",
          "es_US",
          "fr_BE",
          "fr_CA",
          "fr_FR",
          "he_IL",
          "hi_IN",
          "it_IT",
          "ja_JP",
          "ko_KR",
          "ml_IN",
          "mr_IN",
          "nl_BE",
          "nl_NL",
          "pl_PL",
          "pt_BR",
          "pt_PT",
          "sv_SE",
          "ta_IN",
          "te_IN",
          "tr_TR",
          "zh_CN",
          "zh_TW"
        ],
        "example": "en_US"
      },
      "bulkGetBillingNotificationsErrorResponse": {
        "type": "object",
        "title": "Bulk Get Billing Notifications Error Response",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "AdPaymentsCommunicationAddressType": {
        "description": "Enum defining different types of communication address.",
        "type": "string",
        "enum": [
          "AMAZON_ADDRESS_ID"
        ]
      },
      "AdPaymentsNextToken": {
        "description": "To retrieve the next page of results, call the same operation and specify this token in the request. If the nextToken field is empty, there are no further results.",
        "type": "string"
      },
      "taxDetail": {
        "title": "Tax Detail",
        "type": "object",
        "required": [
          "taxBreakups",
          "taxCalculationDate"
        ],
        "properties": {
          "permanentAccountNumber": {
            "description": "**IN only** field that represents the tax account number of the billed entity entered on AMS portal.\n",
            "title": "Permanent Account Number",
            "type": "string"
          },
          "taxCalculationDate": {
            "$ref": "#/components/schemas/date"
          },
          "taxBreakups": {
            "description": "List of taxes applied on the transaction for this invoice.",
            "title": "TaxBreakups",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/taxBreakup"
            }
          }
        }
      },
      "AdPaymentsGetEligibleAccountsForConsentOutput": {
        "type": "object",
        "properties": {
          "nextToken": {
            "$ref": "#/components/schemas/AdPaymentsNextToken"
          },
          "accounts": {
            "$ref": "#/components/schemas/AdPaymentsAccountList"
          }
        },
        "required": [
          "accounts"
        ]
      },
      "CreateInvoiceGroupAssociationsResponseContent": {
        "description": "Represent CreateInvoiceGroupAssociations API Response Structure",
        "type": "object",
        "properties": {
          "success": {
            "minItems": 0,
            "maxItems": 50,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssociationSuccessResult"
            }
          },
          "error": {
            "minItems": 0,
            "maxItems": 50,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssociationFailureResult"
            }
          }
        }
      },
      "BillingProfileErrorResponse": {
        "description": "Contains the machine-readable error code and human-readable details.",
        "type": "object",
        "properties": {
          "code": {
            "description": "The code describing the error reason.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        }
      },
      "BillingSummaryAccountManagerType": {
        "description": "Identifies the account manager type of an associated account.",
        "title": "AccountManagerType",
        "type": "string",
        "enum": [
          "ADVERTISER",
          "AGENCY"
        ]
      },
      "CreateBillingProfilesRequest": {
        "description": "Contains a list of one or more billing profiles to be created.",
        "type": "object",
        "properties": {
          "billingProfiles": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateBillingProfile"
            }
          }
        },
        "required": [
          "billingProfiles"
        ]
      },
      "bulkGetBillingNotificationsErrorCodes": {
        "type": "string",
        "title": "Bulk Get Billing Notifications Error Codes",
        "enum": [
          "BAD_REQUEST",
          "NOT_FOUND",
          "NOT_AUTHORIZED",
          "INTERNAL_ERROR"
        ]
      },
      "InvoiceProfileAssociationTarget": {
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "description": "Id of the target",
            "type": "string"
          }
        }
      },
      "AdPaymentsCreatePaymentProfilesOutput": {
        "description": "Represent the output of the create payment profiles API.",
        "type": "object",
        "properties": {
          "success": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdPaymentsBulkCreationResult"
            }
          },
          "error": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdPaymentsBulkCreationResult"
            }
          }
        },
        "required": [
          "success",
          "error"
        ]
      },
      "AdPaymentsDirectDebitPaymentMethodList": {
        "minItems": 0,
        "maxItems": 100,
        "description": "A list of direct debit payment methods.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AdPaymentsDirectDebitPaymentMethod"
        }
      },
      "BillingPromotionConsumption": {
        "description": "Details of the promotion consumption. This is provided if includePromotionConsumption is set to true.",
        "type": "object",
        "properties": {
          "invoiceId": {
            "type": "string"
          },
          "invoiceAmount": {
            "$ref": "#/components/schemas/BillingAmount"
          },
          "promotionAmount": {
            "$ref": "#/components/schemas/BillingAmount"
          }
        },
        "required": [
          "promotionAmount"
        ]
      },
      "advertiserMarketplace": {
        "type": "object",
        "title": "Advertiser Marketplace",
        "required": [
          "advertiserId",
          "marketplaceId"
        ],
        "properties": {
          "marketplaceId": {
            "type": "string",
            "example": "A2NODRKZP88ZB9"
          },
          "advertiserType": {
            "$ref": "#/components/schemas/advertiserTypes"
          },
          "advertiserId": {
            "type": "string",
            "example": "A123C5343OPX47"
          }
        }
      },
      "portfolios": {
        "description": "Sponsored Ads only. This is a list of portfolios with their name, ID and the total cost of the campaign(s) they contain. This totalAmount corresponds to the sum of the invoice lines tagged with the ID of this portfolio.\n",
        "title": "Portfolios",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/portfolio"
        }
      },
      "AdPaymentsGetDFPConsentRequestByAdvertiserIdOutput": {
        "type": "object",
        "properties": {
          "nextToken": {
            "$ref": "#/components/schemas/AdPaymentsNextToken"
          },
          "consentRequests": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdPaymentsConsentRequest"
            }
          }
        },
        "required": [
          "code",
          "dfpConsentRequests"
        ]
      },
      "AdPaymentsEntityMarketplaceList": {
        "minItems": 0,
        "maxItems": 100,
        "description": "A list of uniquely identifiable advertising entities.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AdPaymentsEntityMarketplace"
        }
      },
      "thirdPartyContactInformation": {
        "description": "Additional contacts. This field is used in cases such as Loi Sapin in France where both advertiser and agency addresses need to be provided.\n",
        "title": "Third Party Contact Info",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/contactInfo"
        }
      },
      "AutoAssociate": {
        "type": "string",
        "enum": [
          "ACCOUNTS_BILLED_TO_MA"
        ]
      },
      "promotion": {
        "title": "Promotion",
        "type": "object",
        "required": [
          "amount",
          "description",
          "lastConsumedDate"
        ],
        "properties": {
          "lastConsumedDate": {
            "$ref": "#/components/schemas/date"
          },
          "amount": {
            "$ref": "#/components/schemas/currencyAmount"
          },
          "description": {
            "title": "Description",
            "type": "string"
          }
        }
      },
      "AdPaymentsEntityType": {
        "description": "Enum defining different advertiser types.",
        "type": "string",
        "enum": [
          "VENDOR",
          "SELLER",
          "DSP_ADVERTISING_ACCOUNT",
          "AGENCY",
          "GLOBAL_ACCOUNT",
          "MANAGER_ACCOUNT"
        ]
      },
      "Account": {
        "description": "Identifies an associated account to be used for filtering.",
        "type": "object",
        "properties": {
          "marketplaceId": {
            "type": "string"
          },
          "accountId": {
            "description": "For account type SELLER and VENDOR this identifies the Entity ID and for account type DSP_ADVERTISING_ACCOUNT this identifies the DSP Advertiser ID",
            "type": "string"
          },
          "accountType": {
            "$ref": "#/components/schemas/AccountType"
          }
        },
        "required": [
          "accountId",
          "accountType",
          "marketplaceId"
        ]
      },
      "UpdateInvoiceGroupAssociationsRequestContent": {
        "description": "Represent CreateInvoiceGroupAssociations API Request Structure",
        "type": "object",
        "properties": {
          "invoiceGroupAssociations": {
            "minItems": 1,
            "maxItems": 50,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceGroupAssociationWithId"
            }
          }
        }
      },
      "ListBillingPromotionsResponseContent": {
        "type": "object",
        "properties": {
          "promotions": {
            "minItems": 0,
            "maxItems": 25,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GetBillingPromotionResponse"
            }
          },
          "nextToken": {
            "description": "The token is used to fetch the next page of results if they exist.",
            "type": "string"
          },
          "maxResults": {
            "description": "This is the maximum number of promotions to return in a single page of results.",
            "maximum": 25,
            "type": "number",
            "minimum": 1
          }
        }
      },
      "CreateBillingSetupsRequestContent": {
        "description": "Represents the request model for CreateBillingSetups API",
        "type": "object",
        "properties": {
          "billingSetups": {
            "minItems": 1,
            "maxItems": 50,
            "description": "Billing setups to be created.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillingSetupRequest"
            }
          }
        }
      },
      "AdPaymentsEntityMarketplace": {
        "description": "Represents an advertiser and marketplace combination.",
        "type": "object",
        "properties": {
          "countryCode": {
            "$ref": "#/components/schemas/AdPaymentsCountryCode"
          },
          "entityType": {
            "$ref": "#/components/schemas/AdPaymentsEntityType"
          },
          "entityId": {
            "minLength": 1,
            "description": "The identifier of the entity.",
            "type": "string"
          }
        },
        "required": [
          "entityType",
          "entityId"
        ]
      },
      "DocumentCollection": {
        "type": "object",
        "properties": {
          "docTypes": {
            "minItems": 1,
            "maxItems": 6,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocType"
            }
          },
          "documentId": {
            "description": "For all invoices and their derived assets, please provide the invoice document number, identical to current getInvoice Public API,\n    available through invoice PDF, emails and console. For IN Prepayment Receipts, please use the numeric transactionCfId on the receipt PDF.",
            "type": "string"
          }
        },
        "required": [
          "docTypes"
        ]
      },
      "AdPaymentsCountryCodeList": {
        "minItems": 0,
        "description": "A list of country codes.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AdPaymentsCountryCode"
        }
      },
      "PaymentMethods": {
        "description": "Identifies the active payment methods of an associated account.",
        "type": "object",
        "properties": {
          "default": {
            "$ref": "#/components/schemas/BillingSummaryPaymentMethod"
          },
          "backups": {
            "minItems": 1,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillingSummaryPaymentMethod"
            }
          }
        },
        "required": [
          "default"
        ]
      },
      "ValidationExceptionResponseContent": {
        "description": "The input fails to satisfy the constraints specified by an Advertising API service.",
        "type": "object",
        "properties": {
          "code": {
            "minLength": 1,
            "description": "Error Code.",
            "type": "string"
          },
          "message": {
            "minLength": 1,
            "description": "Human readable response message.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "AdPaymentsPaymentMethodList": {
        "minItems": 1,
        "maxItems": 100,
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AdPaymentsPaymentMethod"
        }
      },
      "AdPaymentsError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "details": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "details"
        ]
      },
      "BillingInvoiceSummariesRequest": {
        "description": "Payload with filter, sort and aggregate key(s) to fetch list of billing invoice summary(s).",
        "type": "object",
        "properties": {
          "invoiceNumberFilter": {
            "description": "Object encapsulating the invoice number search information",
            "type": "object",
            "properties": {
              "include": {
                "minItems": 0,
                "maxItems": 30,
                "description": "List of invoice number(s) to filter from the list of billing invoice summary(s).",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "invoiceIssuedDateRangeFilter": {
            "description": "Object encapsulating issued date range information",
            "type": "object",
            "properties": {
              "endDate": {
                "format": "date",
                "description": "The ending issued date (inclusive) of the date range for filtering invoices. Please provide the date in ISO-8601 format, representing a UTC date with only the date portion (no time).",
                "type": "string"
              },
              "startDate": {
                "format": "date",
                "description": "The starting issued date (inclusive) of the date range for filtering invoices. Please provide the date in ISO-8601 format, representing a UTC date with only the date portion (no time).",
                "type": "string"
              }
            }
          },
          "countryValueFilter": {
            "description": "Object encapsulating the country filtering information",
            "type": "object",
            "properties": {
              "include": {
                "minItems": 0,
                "maxItems": 30,
                "description": "List of country value(s) to filter from the list of billing invoice summary(s).",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "queryTermMatchType": {
                "description": "Defines how would the string resource field be matched with the query term in filter.",
                "type": "string"
              }
            }
          },
          "maxResults": {
            "default": "100",
            "format": "int64",
            "description": "Max results / billing invoice summary(s) to be shown in a single page.",
            "type": "integer"
          },
          "nextToken": {
            "description": "Offset to fetch next page with list of billing invoice summary(s).",
            "type": "string"
          },
          "paymentMethodTypeValueFilter": {
            "description": "Object encapsulating the payment method type filtering information against which invoice is issued",
            "type": "object",
            "properties": {
              "include": {
                "minItems": 0,
                "maxItems": 10,
                "description": "List of payment method type value(s) to filter from the list of billing invoice summary(s).",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "queryTermMatchType": {
                "description": "Defines how would the string resource field be matched with the query term in filter.",
                "type": "string"
              }
            }
          },
          "aggregation": {
            "description": "Object encapsulating the aggregation query information",
            "type": "object",
            "properties": {
              "groupBy": {
                "description": "Aggregation bucket for the billing invoice summary(s)",
                "type": "string"
              },
              "attribute": {
                "description": "Aggregation attribute for the billing invoice summary(s)",
                "type": "string"
              },
              "operation": {
                "description": "Aggregate operation for the billing invoice summary(s)",
                "type": "string"
              }
            }
          },
          "statusValueFilter": {
            "description": "Object encapsulating the invoice status filtering information",
            "type": "object",
            "properties": {
              "include": {
                "minItems": 0,
                "maxItems": 10,
                "description": "List of invoice status value(s) to filter from the list of billing invoice summary(s).",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "queryTermMatchType": {
                "description": "Defines how would the string resource field be matched with the query term in filter.",
                "type": "string"
              }
            }
          },
          "sort": {
            "description": "Object encapsulating the sort operation information",
            "type": "object",
            "properties": {
              "attribute": {
                "description": "Sort key or attribute for the list of billing invoice summary(s)",
                "type": "string"
              },
              "direction": {
                "description": "Sort order(ascending or descending) for list of billing invoice summary(s)",
                "type": "string"
              }
            }
          },
          "reserveOrderNumberFilter": {
            "description": "Object encapsulating the reserve order number search information",
            "type": "object",
            "properties": {
              "include": {
                "minItems": 0,
                "maxItems": 30,
                "description": "List of reserve order number(s) to filter from the list of billing invoice summary(s).",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "invoiceDueDateRangeFilter": {
            "description": "Object encapsulating due date range information",
            "type": "object",
            "properties": {
              "endDate": {
                "format": "date",
                "description": "The ending due date (inclusive) of the date range for filtering invoices. Please provide the date in ISO-8601 format, representing a UTC date with only the date portion (no time).",
                "type": "string"
              },
              "startDate": {
                "format": "date",
                "description": "The starting due date (inclusive) of the date range for filtering invoices. Please provide the date in ISO-8601 format, representing a UTC date with only the date portion (no time).",
                "type": "string"
              }
            }
          }
        }
      },
      "paymentDetail": {
        "title": "Payment Detail",
        "type": "object",
        "required": [
          "amount",
          "receivedDate",
          "status"
        ],
        "properties": {
          "amount": {
            "$ref": "#/components/schemas/currencyAmount"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/paymentMethod"
          },
          "receivedDate": {
            "$ref": "#/components/schemas/date"
          },
          "status": {
            "type": "string",
            "enum": [
              "PENDING",
              "BOUNCED",
              "VOIDED",
              "SUCCESSFUL"
            ]
          }
        }
      },
      "invoiceLines": {
        "description": "Line items for this invoice. For Sponsored Ads, this will be a per-campaign breakdown of charges. For DSP, this will be the line items for the campaign getting invoiced.",
        "title": "Invoice Lines",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/invoiceLine"
        }
      },
      "InvoiceProfile": {
        "type": "object",
        "properties": {
          "invoicingLevel": {
            "$ref": "#/components/schemas/InvoicingLevel"
          },
          "autoAssociate": {
            "$ref": "#/components/schemas/AutoAssociate"
          }
        },
        "required": [
          "invoicingLevel"
        ]
      },
      "BillingPromotionLimit": {
        "description": "Explains promotion's criteria to stop consumption after reaching promotionAmount.",
        "type": "object",
        "properties": {
          "promotionAmount": {
            "$ref": "#/components/schemas/BillingAmount"
          }
        },
        "required": [
          "promotionAmount"
        ]
      },
      "CreateBillingSetupsResponseContent": {
        "description": "Represents the response model for CreateBillingSetups API",
        "type": "object",
        "properties": {
          "success": {
            "minItems": 0,
            "maxItems": 50,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillingSetupCreationSuccessResult"
            }
          },
          "error": {
            "minItems": 0,
            "maxItems": 50,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillingSetupCreationFailureResult"
            }
          }
        }
      },
      "payment": {
        "title": "Payment",
        "type": "object",
        "required": [
          "amount",
          "id",
          "paymentMethod",
          "status"
        ],
        "properties": {
          "nextPaymentAttemptDate": {
            "$ref": "#/components/schemas/date"
          },
          "reason": {
            "description": "Provides additional details and reason for the payment status",
            "type": "string"
          },
          "amount": {
            "$ref": "#/components/schemas/currencyAmount"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/paymentMethod"
          },
          "currentPaymentAttemptDate": {
            "$ref": "#/components/schemas/date"
          },
          "id": {
            "format": "int64",
            "type": "integer"
          },
          "lastPaymentAttemptDate": {
            "$ref": "#/components/schemas/date"
          },
          "refundedAmount": {
            "$ref": "#/components/schemas/currencyAmount"
          },
          "status": {
            "type": "string",
            "enum": [
              "PROCESSING",
              "SUCCEEDED",
              "FAILED",
              "VERIFICATION_REQUIRED",
              "REFUNDED",
              "VOIDED"
            ]
          }
        }
      },
      "BillingInvoiceSummaryCurrencyAmount": {
        "description": "Object identifies the amount along with currency code.",
        "type": "object",
        "properties": {
          "value": {
            "format": "double",
            "description": "Numerical value of the currency amount",
            "type": "number"
          },
          "currencyCode": {
            "description": "Currency code corresponding to the currency amount's value",
            "type": "string"
          }
        },
        "required": [
          "value",
          "currencyCode"
        ]
      },
      "AdPaymentsApproveDFPConsentRequestOutput": {
        "description": "Represent ApproveDFPConsentRequest API Output Structure.",
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/AdPaymentsStatusCode"
          },
          "approvalId": {
            "description": "Identifier of DFPConsentRequest approval.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "approvalId"
        ]
      },
      "CreateBillingStatementResponse": {
        "type": "object",
        "properties": {
          "billingStatementRequestId": {
            "description": "Billing statement request identifier.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        }
      },
      "AdPaymentsCriteriaType": {
        "description": "Criteria Types to get payment methods. Registered payment method are the one that are already registered with Advertising payments to use for automatic bill payments.",
        "type": "string",
        "enum": [
          "ELIGIBLE",
          "REGISTERED"
        ]
      },
      "BillingSetupRequest": {
        "type": "object",
        "properties": {
          "invoiceProfileId": {
            "minLength": 1,
            "description": "Denotes the id of the invoice profile to be used in the billing setup. This should be provided to use an\n                    existing invoice profile in this billing setup. To create a new invoice profile instead for this billing setup, set the invoice profile attribute.",
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "description": "User friendly name that can be given to the billing setup.",
            "type": "string"
          },
          "invoiceProfile": {
            "$ref": "#/components/schemas/InvoiceProfile"
          },
          "countries": {
            "description": "Countries where this billing should be applied. If not provided, the billing setup will be applied globally.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CountryCode"
            }
          }
        }
      },
      "AdPaymentsCreditCardPaymentMethod": {
        "description": "Represents Credit Card payment method structure.",
        "type": "object",
        "properties": {
          "expiryDetails": {
            "$ref": "#/components/schemas/AdPaymentsExpiryDetails"
          },
          "eligibleCountries": {
            "$ref": "#/components/schemas/AdPaymentsCountryCodeList"
          },
          "instrumentId": {
            "minLength": 1,
            "description": "Identifies a credit card payment method.",
            "type": "string"
          },
          "tail": {
            "description": "The last four digits of the credit card number.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/AdPaymentsPaymentMethodType"
          },
          "brand": {
            "minLength": 1,
            "description": "The processor used to execute payments on the card, such as Visa, MasterCard, etc. Only valued for credit card payment methods.",
            "type": "string"
          }
        },
        "required": [
          "type",
          "instrumentId",
          "brand",
          "tail",
          "expiryDetails",
          "eligibleCountries"
        ]
      },
      "BillingSummaryStatus": {
        "description": "Identifies the response code for individual billing summary response.",
        "type": "object",
        "properties": {
          "reason": {
            "type": "string"
          },
          "code": {
            "$ref": "#/components/schemas/StatusCode"
          }
        },
        "required": [
          "code",
          "reason"
        ]
      },
      "GetInvoiceGroupsResponseContent": {
        "type": "object",
        "properties": {
          "invoiceGroups": {
            "minItems": 0,
            "maxItems": 50,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceGroup"
            }
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          }
        }
      },
      "AdPaymentsGetDFPConsentRequestsOutput": {
        "type": "object",
        "properties": {
          "consentRequest": {
            "$ref": "#/components/schemas/AdPaymentsConsentRequest"
          }
        }
      },
      "BillingSetupCreationSuccessResult": {
        "type": "object",
        "properties": {
          "countriesFailed": {
            "$ref": "#/components/schemas/BillingSetupCountriesApplicationFailure"
          },
          "invoiceProfileId": {
            "description": "Id of the invoice profile, if a new invoice profile was created for this setup",
            "type": "string"
          },
          "billingSetupId": {
            "description": "Id of the billing setup",
            "type": "string"
          },
          "index": {
            "description": "Index of the item from original request, starting from 0",
            "type": "number"
          },
          "countriesApplied": {
            "description": "List of countries where the billing setup was successfully applied",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CountryCode"
            }
          }
        }
      },
      "BillingSummary": {
        "description": "Identifies the billing summary of an associated account.",
        "type": "object",
        "properties": {
          "marketplaceId": {
            "type": "string"
          },
          "accountId": {
            "type": "string"
          },
          "invoiceSummary": {
            "$ref": "#/components/schemas/InvoiceSummary"
          },
          "accountSubType": {
            "$ref": "#/components/schemas/AccountSubType"
          },
          "accountType": {
            "$ref": "#/components/schemas/AccountType"
          },
          "accountManagerType": {
            "$ref": "#/components/schemas/BillingSummaryAccountManagerType"
          },
          "paymentSettingsLink": {
            "type": "string"
          },
          "paymentMethods": {
            "$ref": "#/components/schemas/PaymentMethods"
          },
          "billingAddress": {
            "$ref": "#/components/schemas/BillingAddress"
          },
          "billingAccountRegistered": {
            "type": "boolean"
          },
          "responseStatus": {
            "$ref": "#/components/schemas/BillingSummaryStatus"
          },
          "paymentStatus": {
            "$ref": "#/components/schemas/PaymentStatus"
          }
        },
        "required": [
          "accountId",
          "accountType",
          "marketplaceId",
          "responseStatus"
        ]
      },
      "BillingInvoiceSummariesResponse": {
        "description": "Contains an object encapsulating either the aggregation result(s) or sorted & filtered billing invoice summary(s).",
        "type": "object",
        "properties": {
          "nextToken": {
            "description": "Offset to fetch next page with list of billing invoice summary(s).",
            "type": "string"
          },
          "aggregation": {
            "description": "Object encapsulating the aggregation query and result(s) information",
            "type": "object",
            "properties": {
              "invoiceSummaries": {
                "description": "List of object(s) encapsulating information of billing invoice summary(s).",
                "type": "array",
                "items": {
                  "type": "object",
                  "$ref": "#/components/schemas/BillingInvoiceSummary"
                }
              },
              "results": {
                "description": "Object encapsulating the aggregation result as per aggregation attribute, operation and bucket (or groupById) on the list of billing invoice summary(s).",
                "type": "array",
                "items": {
                  "description": "Object encapsulating the aggregation result as per aggregation attribute, operation and bucket (or groupById) on the list of billing invoice summary(s).",
                  "type": "object",
                  "properties": {
                    "groupId": {
                      "description": "Aggregation bucket key (or groupById) to which the specific aggregation result belongs.",
                      "type": "string"
                    },
                    "value": {
                      "format": "double",
                      "description": "Aggregate value over the aggregation bucket for a certain key on the aggregation attribute for the specified aggregation operation.",
                      "type": "number"
                    },
                    "currencyCode": {
                      "description": "Currency of the aggregate value over the aggregation bucket for a certain key on the aggregation attribute for the specified aggregation operation.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "GetInvoiceGroupResponseContent": {
        "type": "object",
        "properties": {
          "invoiceGroup": {
            "$ref": "#/components/schemas/InvoiceGroup"
          }
        }
      },
      "GetBillingProfileUsageResponse": {
        "description": "Contains billing profile usages: list of advertisers and applied billing profile.",
        "type": "object",
        "properties": {
          "billingProfileUsages": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillingProfileUsage"
            }
          },
          "nextToken": {
            "description": "Indicates the pagination token to be used to access next page.",
            "type": "string"
          },
          "maxResults": {
            "default": "100",
            "format": "int64",
            "description": "Max results / billing profile usage(s) to be shown in a single page.",
            "type": "integer"
          }
        }
      },
      "AdPaymentsAccount": {
        "description": "Represents the account structure that can be linked to an advertiser's payments account and used as a payment method. The account Id here will be the identifier that will represent a payee source from where a payment can be deducted.",
        "type": "object",
        "properties": {
          "accountId": {
            "minLength": 1,
            "type": "string"
          },
          "accountName": {
            "minLength": 1,
            "type": "string"
          },
          "accountType": {
            "$ref": "#/components/schemas/AdPaymentsAccountType"
          }
        },
        "required": [
          "accountId",
          "accountType"
        ]
      },
      "MarketplaceAdvertiser": {
        "description": "Represents one country inside a global account",
        "type": "object",
        "properties": {
          "countryCode": {
            "$ref": "#/components/schemas/CountryCode"
          }
        },
        "required": [
          "countryCode"
        ]
      },
      "CreateDocumentsExportRequestContent": {
        "type": "object",
        "properties": {
          "documentCollections": {
            "minItems": 1,
            "maxItems": 200,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentCollection"
            }
          },
          "format": {
            "$ref": "#/components/schemas/Format"
          }
        },
        "required": [
          "documentCollections"
        ]
      },
      "BillingAmount": {
        "type": "object",
        "properties": {
          "amount": {
            "format": "double",
            "description": "Monetary amount.",
            "type": "number"
          },
          "currencyCode": {
            "$ref": "#/components/schemas/BillingCurrency"
          }
        },
        "required": [
          "amount",
          "currencyCode"
        ]
      },
      "BillingEntityType": {
        "description": "Entity at which promotion has been created.",
        "type": "string",
        "enum": [
          "ADVERTISER_ACCOUNT"
        ]
      },
      "InvoiceGroup": {
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "description": "User friendly name of the invoice group the client is attempting to create for easy identification.",
            "type": "string"
          },
          "billingProfileUsageId": {
            "minLength": 1,
            "description": "Denotes the billing party responsible for this invoice group.",
            "type": "string"
          }
        }
      },
      "AdPaymentsStatusCode": {
        "minLength": 1,
        "description": "The HTTP status code of the response.",
        "type": "string"
      },
      "InvoiceGroupAssociationWithId": {
        "type": "object",
        "properties": {
          "invoiceGroupAssociationId": {
            "description": "Identifier of an invoice group association.",
            "type": "string"
          },
          "invoiceGroupId": {
            "description": "InvoiceGroupId to associate target(s) to.",
            "type": "string"
          },
          "target": {
            "$ref": "#/components/schemas/AssociationTarget"
          }
        }
      },
      "AssociateInvoiceProfilesResponseContent": {
        "description": "Represents the response model post associating/un-associating from an invoice profile",
        "type": "object",
        "properties": {
          "success": {
            "minItems": 0,
            "maxItems": 50,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceProfileAssociationSuccessResult"
            }
          },
          "error": {
            "minItems": 0,
            "maxItems": 50,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceProfileAssociationFailureResult"
            }
          }
        }
      },
      "AdPaymentsSellerPayablePaymentMethodList": {
        "minItems": 0,
        "maxItems": 100,
        "description": "A list of seller payable payment methods.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AdPaymentsSellerPayablePaymentMethod"
        }
      },
      "BillingStatementErrorResponse": {
        "type": "object",
        "properties": {
          "code": {
            "description": "The code describing the error reason.",
            "type": "string"
          },
          "billingStatementRequestId": {
            "description": "Billing statement request identifier.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        }
      },
      "payments": {
        "description": "List of payments made against the invoice.",
        "title": "Payments",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/payment"
        }
      },
      "AdPaymentsCreateDFPConsentRequestOutput": {
        "description": "Represent CreatePaymentMethodConsentRequest API Output Structure.",
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/AdPaymentsStatusCode"
          },
          "consentRequestId": {
            "minLength": 1,
            "description": "Identifier of Consent request.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "consentRequestId"
        ]
      },
      "InvoiceGroupCreationSuccessResult": {
        "type": "object",
        "properties": {
          "index": {
            "description": "index of item from original request, starting from 0",
            "type": "number"
          },
          "invoiceGroupId": {
            "description": "InvoiceGroupId",
            "type": "string"
          }
        }
      },
      "BillingAddress": {
        "description": "Identifies the physical billing address or address attributes of an associated account.",
        "type": "object",
        "properties": {
          "emails": {
            "minItems": 1,
            "maxItems": 100,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "stateOrRegion": {
            "type": "string",
            "maxLength": 100
          },
          "city": {
            "type": "string",
            "maxLength": 100
          },
          "companyName": {
            "type": "string",
            "maxLength": 100
          },
          "district": {
            "type": "string",
            "maxLength": 100
          },
          "postalCode": {
            "type": "string"
          },
          "addressLine1": {
            "type": "string",
            "maxLength": 100
          },
          "accountIdentifier": {
            "type": "string",
            "maxLength": 100
          },
          "addressLine2": {
            "type": "string",
            "maxLength": 100
          },
          "countryName": {
            "type": "string"
          },
          "advertiserName": {
            "type": "string",
            "maxLength": 100
          }
        },
        "required": [
          "advertiserName"
        ]
      },
      "UpdateInvoiceGroupAssociationsResponseContent": {
        "description": "Represent CreateInvoiceGroupAssociations API Response Structure",
        "type": "object",
        "properties": {
          "success": {
            "minItems": 0,
            "maxItems": 50,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateAssociationSuccessResult"
            }
          },
          "error": {
            "minItems": 0,
            "maxItems": 50,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateAssociationFailureResult"
            }
          }
        }
      },
      "bulkGetBillingStatusResponse": {
        "type": "object",
        "title": "Bulk Get Billing Status Response",
        "required": [
          "success",
          "error"
        ],
        "properties": {
          "success": {
            "minItems": 0,
            "maxItems": 30,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/bulkGetBillingStatusSuccess"
            }
          },
          "error": {
            "minItems": 0,
            "maxItems": 30,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/bulkGetBillingStatusError"
            }
          }
        }
      },
      "countryCode": {
        "description": "ISO 3611 country code",
        "type": "string"
      },
      "AdPaymentsBulkCreationResult": {
        "type": "object",
        "properties": {
          "reason": {
            "minLength": 1,
            "description": "A human readable reason giving more details regarding this result.",
            "type": "string"
          },
          "index": {
            "description": "The index of the item in the input list.",
            "type": "integer",
            "minimum": 0
          },
          "id": {
            "minLength": 1,
            "description": "The identifier of the resource that this result is referencing.",
            "type": "string"
          }
        },
        "required": [
          "id",
          "index"
        ]
      },
      "AdPaymentsPaymentResultList": {
        "minItems": 0,
        "maxItems": 100,
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AdPaymentsPaymentResult"
        }
      },
      "BillingProfileUsage": {
        "description": "This object contains billing profile(s) that is applied to a given country under a global account",
        "type": "object",
        "properties": {
          "advertiser": {
            "$ref": "#/components/schemas/MarketplaceAdvertiser"
          },
          "billingProfiles": {
            "minItems": 0,
            "maxItems": 2,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillingProfile"
            }
          },
          "billingProfileUsageId": {
            "description": "Billing profile usage unique identifier.",
            "type": "string"
          },
          "fallbackBillingProfiles": {
            "minItems": 0,
            "maxItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillingProfile"
            }
          },
          "status": {
            "$ref": "#/components/schemas/BillingProfileStatus"
          }
        }
      },
      "InvoiceSummary": {
        "description": "Identifies the invoice summary of an associated account.",
        "type": "object",
        "properties": {
          "unpaidInvoicesCount": {
            "format": "int64",
            "type": "integer"
          },
          "accumulatingCharges": {
            "minItems": 1,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyAmount"
            }
          },
          "amountDues": {
            "minItems": 1,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyAmount"
            }
          }
        },
        "required": [
          "unpaidInvoicesCount"
        ]
      },
      "GetDocumentResponseContent": {
        "type": "object",
        "properties": {
          "unavailableDocuments": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UnavailableDocumentResponse"
            }
          },
          "availableDocuments": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AvailableDocumentResponse"
            }
          }
        }
      },
      "AdPaymentsSellerPayablePaymentMethod": {
        "description": "Represents Seller Payable payment method structure. Seller Payable is a type of payment method where spends are deducted from the seller balance of a particular seller account.",
        "type": "object",
        "properties": {
          "eligibleCountries": {
            "$ref": "#/components/schemas/AdPaymentsCountryCodeList"
          },
          "countryCode": {
            "$ref": "#/components/schemas/AdPaymentsCountryCode"
          },
          "type": {
            "$ref": "#/components/schemas/AdPaymentsPaymentMethodType"
          },
          "sellerAccountId": {
            "minLength": 1,
            "description": "The seller account ID associated to this payment method",
            "type": "string"
          }
        },
        "required": [
          "type",
          "eligibleCountries"
        ]
      },
      "AdPaymentsConsentRequest": {
        "description": "This entity stores the information required by Ad Payments to help initiate a flow that collects consent and generates PaymentMethodConsent as its final output. As a part of it, Ad payments will run the workflow which will send email with consent approval page link and wait for the action to be taken by the consent grantor.",
        "type": "object",
        "properties": {
          "marketplaceId": {
            "minLength": 1,
            "type": "string"
          },
          "consentedAccounts": {
            "minItems": 0,
            "maxItems": 100,
            "description": "Represents the list of resources entity.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdPaymentsAccount"
            }
          },
          "consentRequestId": {
            "minLength": 1,
            "type": "string"
          },
          "requesterUserId": {
            "minLength": 1,
            "type": "string"
          },
          "entityId": {
            "minLength": 1,
            "type": "string"
          },
          "grantor": {
            "$ref": "#/components/schemas/AdPaymentsGrantor"
          },
          "status": {
            "$ref": "#/components/schemas/AdPaymentsConsentRequestStatus"
          }
        },
        "required": [
          "entityId",
          "grantor",
          "marketplaceId",
          "status"
        ]
      },
      "GetDocumentsExportResponseContent": {
        "type": "object",
        "properties": {
          "archiveStoragePath": {
            "description": "The availability of archive storage path depends on the selection of the export format.",
            "type": "string"
          },
          "documentCollections": {
            "minItems": 1,
            "maxItems": 200,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentCollectionResponse"
            }
          },
          "exportId": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          }
        }
      },
      "AdPaymentsGetCustomerPaymentMethodsOutput": {
        "description": "Represents the output of the get payment methods API.",
        "type": "object",
        "properties": {
          "creditCardPaymentMethods": {
            "$ref": "#/components/schemas/AdPaymentsCreditCardPaymentMethodList"
          },
          "nextToken": {
            "$ref": "#/components/schemas/AdPaymentsNextToken"
          },
          "deductFromPaymentPaymentMethods": {
            "$ref": "#/components/schemas/AdPaymentsDeductFromPaymentPaymentMethodList"
          },
          "payByInvoicePaymentMethods": {
            "$ref": "#/components/schemas/AdPaymentsPayByInvoicePaymentMethodList"
          },
          "sellerPayablePaymentMethods": {
            "$ref": "#/components/schemas/AdPaymentsSellerPayablePaymentMethodList"
          },
          "directDebitPaymentMethods": {
            "$ref": "#/components/schemas/AdPaymentsDirectDebitPaymentMethodList"
          }
        }
      },
      "GetBillingSummariesError": {
        "type": "object",
        "properties": {
          "code": {
            "description": "An enumerated error code for machine use.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "details"
        ]
      },
      "AdPaymentsApprovalAction": {
        "description": "Enum defining possible approval action that can be taken by the consent grantor.",
        "type": "string",
        "enum": [
          "APPROVE",
          "DENY"
        ]
      },
      "billingStatus": {
        "type": "object",
        "title": "Billing Status",
        "required": [
          "billingStatusCode",
          "message"
        ],
        "properties": {
          "billingStatusCode": {
            "$ref": "#/components/schemas/billingStatusCode"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "AdPaymentsConsentRequestStatus": {
        "description": "Enum defining possible statuses of the Consent request status.",
        "type": "string",
        "enum": [
          "APPROVED",
          "DENIED",
          "EXPIRED",
          "SUBMITTED",
          "AUTO_APPROVED"
        ]
      },
      "UpdateAssociationFailureResult": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Error code of association",
            "type": "string"
          },
          "index": {
            "description": "index of item from original request, starting from 0",
            "type": "number"
          },
          "message": {
            "description": "Error message of association",
            "type": "string"
          }
        }
      },
      "AdPaymentsCurrencyAmount": {
        "type": "object",
        "properties": {
          "amount": {
            "minLength": 1,
            "description": "A monetary amount.",
            "type": "number"
          },
          "currencyCode": {
            "$ref": "#/components/schemas/AdPaymentsCurrencyCode"
          }
        },
        "required": [
          "amount",
          "currencyCode"
        ]
      },
      "promotions": {
        "description": "List of promotions applied to the charges in this invoice.",
        "title": "Promotions",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/promotion"
        }
      },
      "AdPaymentsPaymentAgreementType": {
        "description": "Enum defining different Payment Agreement types.",
        "type": "string",
        "enum": [
          "PAY_NOW",
          "AUTO_PAY"
        ]
      },
      "AdPaymentsPaymentProfileList": {
        "minItems": 1,
        "maxItems": 100,
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AdPaymentsPaymentProfile"
        }
      },
      "bulkGetBillingStatusErrorResponse": {
        "type": "object",
        "title": "Bulk Get Billing Status Error Response",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "ApplyBillingProfileRequest": {
        "description": "Request with a list of advertisers to which a list of billing profiles needs to be applied.",
        "type": "object",
        "properties": {
          "billingProfileUsages": {
            "minItems": 0,
            "maxItems": 20,
            "description": "List of advertisers to which a list of billing profiles needs to be applied.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "advertiser": {
                  "$ref": "#/components/schemas/MarketplaceAdvertiser"
                },
                "billingProfileIds": {
                  "minItems": 1,
                  "maxItems": 2,
                  "description": "List of billing profile identifiers which needs to be associated with an advertiser.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "advertiser",
                "billingProfileIds"
              ]
            }
          }
        },
        "required": [
          "billingProfileUsages"
        ]
      },
      "GetBillingStatementResponse": {
        "type": "object",
        "properties": {
          "reportStatus": {
            "description": "The request status of the billing statement.",
            "type": "string",
            "enum": [
              "SUCCESS",
              "IN_PROGRESS",
              "FAILED"
            ]
          },
          "details": {
            "description": "The human-readable description of the response.",
            "type": "string"
          },
          "s3DownloadLink": {
            "description": "Download link of the billing statement file. Only when reportStatus is SUCCESS.",
            "type": "string"
          }
        }
      },
      "UpdateBillingProfile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseBillingProfile"
          },
          {
            "type": "object",
            "properties": {
              "billingProfileId": {
                "description": "Billing profile identifier which will be used to identify a billing profile. This identifier will NOT affect billing process.",
                "type": "string"
              }
            },
            "required": [
              "billingProfileId"
            ]
          }
        ],
        "description": "Object encapsulating information for updating a billing profile",
        "type": "object"
      },
      "GetBillingProfilesResponse": {
        "description": "Paginated list of billing profile(s) response.",
        "type": "object",
        "properties": {
          "billingProfiles": {
            "minItems": 0,
            "maxItems": 100,
            "description": "Indicates list of billing profile(s).",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillingProfile"
            }
          },
          "nextToken": {
            "description": "Offset to fetch next page with list of billing profile(s).",
            "type": "string"
          },
          "maxResults": {
            "default": "100",
            "format": "int64",
            "description": "Max results / billing profile(s) to be shown in a single page.",
            "type": "integer"
          }
        }
      },
      "AccountSubType": {
        "description": "Identifies the subtype of an associated account.",
        "type": "string",
        "enum": [
          "SELF_SERVICE",
          "MANAGED_SERVICE"
        ]
      },
      "CreateDocumentsExportResponseContent": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "exportId": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          }
        }
      },
      "Locale": {
        "description": "Preferred locale can be chosen among the list of valid language codes. Check the table below for supported language code. <br/><br/><table border=1><caption> **Supported Locales Table** <\/caption><tr>    <th>Locale code<\/th>    <th>Language<\/th><\/tr><tr>    <td>en_US<\/td>    <td>English<\/td><\/tr><tr>    <td>ja_JP<\/td>    <td>Japanese<\/td><\/tr><tr>    <td>ar_SA<\/td>    <td>Arabic<\/td><\/tr><tr>    <td>de_DE<\/td>    <td>German<\/td><\/tr><tr>    <td>fr_FR<\/td>    <td>French<\/td><\/tr><tr>    <td>it_IT<\/td>    <td>Italian<\/td><\/tr><tr>    <td>es_MX<\/td>    <td>Spanish<\/td><\/tr><tr>    <td>nl_NL<\/td>    <td>Dutch<\/td><\/tr><tr>    <td>sv_SE<\/td>    <td>Swedish<\/td><\/tr><tr>    <td>pl_PL<\/td>    <td>Polish<\/td><\/tr><tr>    <td>tr_TR<\/td>    <td>Turkish<\/td><\/tr> <tr>    <td>pt_BR<\/td>    <td>Portuguese<\/td><\/tr> <\/table>",
        "type": "string"
      },
      "date": {
        "description": "Date in YYYYMMDD format",
        "type": "string"
      },
      "InvoicingLevel": {
        "type": "string",
        "enum": [
          "MANAGER_ACCOUNT"
        ]
      },
      "fees": {
        "title": "Fees",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/fee"
        }
      },
      "adjustments": {
        "description": "List of adjustments (positive and negative) applied to this invoice.",
        "title": "Adjustments",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/adjustment"
        }
      },
      "AdPaymentsTarget": {
        "type": "object",
        "properties": {
          "agreementType": {
            "$ref": "#/components/schemas/AdPaymentsPaymentAgreementType"
          },
          "countryCode": {
            "$ref": "#/components/schemas/AdPaymentsCountryCode"
          },
          "entityType": {
            "$ref": "#/components/schemas/AdPaymentsEntityType"
          },
          "entityId": {
            "minLength": 1,
            "description": "The ID associated to the entity in this target.",
            "type": "string"
          }
        },
        "required": [
          "agreementType",
          "countryCode"
        ]
      },
      "DateTimeFilter": {
        "type": "object",
        "properties": {
          "startDateTime": {
            "format": "date-time",
            "description": "Start date and time (inclusive) of promotion in UTC ISO 8601.",
            "type": "string"
          },
          "endDateTime": {
            "format": "date-time",
            "description": "End date and time (inclusive) of promotion in UTC ISO 8601.",
            "type": "string"
          }
        }
      },
      "invoiceSummary": {
        "title": "Invoice Summary",
        "type": "object",
        "required": [
          "amountDue",
          "fromDate",
          "id",
          "invoiceDate",
          "remainingAmountDue",
          "status",
          "toDate"
        ],
        "properties": {
          "fees": {
            "description": "Regulatory Advertising Fees.\n",
            "title": "Fees",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fee"
            }
          },
          "paymentTermsDays": {
            "type": "integer"
          },
          "taxAmountDue": {
            "$ref": "#/components/schemas/currencyAmount"
          },
          "remainingTaxAmountDue": {
            "$ref": "#/components/schemas/currencyAmount"
          },
          "remainingFees": {
            "description": "Remaining Regulatory Advertising Fees.\n",
            "title": "Remaining Fees",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/fee"
            }
          },
          "toDate": {
            "$ref": "#/components/schemas/date"
          },
          "dueDate": {
            "$ref": "#/components/schemas/date"
          },
          "billingAggregation": {
            "$ref": "#/components/schemas/billingAggregation"
          },
          "invoiceDate": {
            "$ref": "#/components/schemas/date"
          },
          "remainingAmountDue": {
            "$ref": "#/components/schemas/currencyAmount"
          },
          "fromDate": {
            "$ref": "#/components/schemas/date"
          },
          "amountDue": {
            "$ref": "#/components/schemas/currencyAmount"
          },
          "taxRate": {
            "type": "number"
          },
          "purchaseOrderNumber": {
            "title": "Sponsored Ads only. Account-level purchase order number.",
            "type": "string"
          },
          "paymentTermsType": {
            "type": "string",
            "enum": [
              "EOM",
              "NET"
            ]
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/paymentMethod"
          },
          "id": {
            "title": "Invoice Id",
            "type": "string"
          },
          "downloadableDocuments": {
            "description": "List of downloadable documents associated with this invoice and accessible from the advertising console.\n",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/documentType"
            }
          },
          "status": {
            "$ref": "#/components/schemas/invoiceStatus"
          }
        }
      },
      "BillingPromotionLinkedEntity": {
        "type": "object",
        "properties": {
          "countryCode": {
            "$ref": "#/components/schemas/BillingCountryCode"
          },
          "id": {
            "minLength": 1,
            "description": "id of the Billing Entity of provided type.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/BillingEntityType"
          }
        }
      },
      "fee": {
        "title": "Fee",
        "type": "object",
        "required": [
          "cost",
          "feeType"
        ],
        "properties": {
          "cost": {
            "$ref": "#/components/schemas/currencyAmount"
          },
          "feeIdentifiers": {
            "description": "Identifiers describing attributes for different fee types.\n* countryCode: ISO 3611 country code for country specific Regulatory Advertising Fees.\n",
            "title": "Fee Identifiers",
            "type": "object",
            "properties": {
              "countryCode": {
                "$ref": "#/components/schemas/countryCode"
              }
            }
          },
          "feeType": {
            "description": "* `PLATFORM_FEE`: Billable fee set at the Rodeo Entity level by internal users which reflects the cost of using the Amazon DSP\n  * Supply Cost * Platform Fee %\n* `AGENCY_FEE`: Non-billable fee set at the Rodeo Order level by external users which reflects the fee that the agency is charging the end customer\n  * Total Cost * Agency Fee %\n* `AUDIENCE_FEE`: Billable fee automatically calculated at the Rodeo Line Item level when external users choose Amazon 1P data segments for campaign targeting\n  * Impressions with Audience Fees * Audience Fee (CPM)/1000\n* `3P_[AUTO_]NON_ABSORBED_FEE`: Billable fee automatically calculated at the Rodeo Line Item level when external users choose Automotive data segments and/or DMP data segments for campaign targeting\n  * Impressions * Billable 3p Fee / 1000\n* `REGULATORY_ADVERTISING_FEE`: Fees derive from ads serving in specific countries and/or for ads purchased from advertisers in specific countries during the period in which you are billed.\n* `OMNICHANNEL_METRICS_FEE`: Billable fee set at DSP order level by internal users, which reflects the cost of using Omnichannel metrics measurement\n  * Supply Cost * Omnichannel Metrics Fee %\n* `3P_PREBID_FEE`: Billable fee automatically calculated when external users choose third party prebid targeting products for supply quality filtering.\n  * Impressions with 3P Prebid Fees * 3P Prebid Fee (CPM)/1000 %\n* `REWARDED_ADS_COST`: Billable, non taxable cost calculated for the rewards distributed when external users choose Rewarded Ads creative template for campaign targeting\n",
            "type": "string",
            "enum": [
              "AUDIENCE_FEE",
              "3P_AUTO_NON_ABSORBED_FEE",
              "3P_NON_ABSORBED_FEE",
              "PLATFORM_FEE",
              "OMNICHANNEL_METRICS_FEE",
              "REGULATORY_ADVERTISING_FEE",
              "3P_PREBID_FEE",
              "REWARDED_ADS_COST"
            ]
          }
        }
      },
      "billingNotification": {
        "type": "object",
        "title": "Billing Notification",
        "required": [
          "notificationName",
          "priority",
          "severity",
          "impact",
          "title",
          "description"
        ],
        "properties": {
          "severity": {
            "$ref": "#/components/schemas/billingNotificationSeverity"
          },
          "paymentDueDate": {
            "format": "date-time",
            "type": "string"
          },
          "advertiserMarketplaces": {
            "minItems": 1,
            "maxItems": 30,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/advertiserMarketplace"
            }
          },
          "suspensionDate": {
            "format": "date-time",
            "type": "string"
          },
          "impact": {
            "$ref": "#/components/schemas/billingNotificationImpact"
          },
          "description": {
            "type": "string",
            "example": "The credit card associated with your billing account in 5 countries has expired. To continue advertising without interruption, update your credit card information in payment settings."
          },
          "priority": {
            "format": "int32",
            "type": "integer"
          },
          "title": {
            "type": "string",
            "example": "Your credit card has expired"
          },
          "notificationName": {
            "$ref": "#/components/schemas/billingNotificationNames"
          }
        }
      },
      "AdPaymentsCountryCode": {
        "description": "Enum defining country codes.",
        "type": "string",
        "enum": [
          "CL",
          "CO",
          "BR",
          "CA",
          "MX",
          "US",
          "AE",
          "BE",
          "DE",
          "EG",
          "ES",
          "FR",
          "IN",
          "IT",
          "NL",
          "PL",
          "SA",
          "SE",
          "TR",
          "UK",
          "AU",
          "JP",
          "SG",
          "NG",
          "ZA"
        ]
      },
      "GetBillingSummariesRequest": {
        "type": "object",
        "properties": {
          "accountFilter": {
            "minItems": 1,
            "maxItems": 10,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Account"
            }
          }
        },
        "required": [
          "accountFilter"
        ]
      },
      "portfolio": {
        "title": "Portfolio",
        "type": "object",
        "required": [
          "id",
          "name",
          "totalAmount"
        ],
        "properties": {
          "totalAmount": {
            "$ref": "#/components/schemas/currencyAmount"
          },
          "feeAmount": {
            "$ref": "#/components/schemas/currencyAmount"
          },
          "name": {
            "title": "Portfolio Name",
            "type": "string"
          },
          "id": {
            "title": "Portfolio ID",
            "type": "integer"
          }
        }
      },
      "AdPaymentsDeductFromPaymentPaymentMethodList": {
        "minItems": 0,
        "maxItems": 100,
        "description": "A list of deduct from payment payment methods.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AdPaymentsDeductFromPaymentPaymentMethod"
        }
      },
      "AdPaymentsIdempotenceId": {
        "minLength": 1,
        "description": "Idempotency Id that will be used as a identifier to ensure idempotency while creating /updating the given resource. Requests with same idempotency Id will be considered identical and processed in an idempotent manner.",
        "type": "string"
      },
      "PaymentStatus": {
        "description": "Identifies the payment status of an associated account.",
        "type": "string",
        "enum": [
          "PAID",
          "UNPAID",
          "FAILURE"
        ]
      },
      "BillingProfileAgreementContentResponse": {
        "type": "object",
        "properties": {
          "content": {
            "description": "An HTML document to be rendered and read. A consent needs to be provided against this content.",
            "type": "string"
          }
        }
      },
      "InvoiceGroupUpdateFailureResult": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Error code of invoice group update.",
            "type": "string"
          },
          "index": {
            "description": "index of item from original request, starting from 0.",
            "type": "number"
          },
          "message": {
            "description": "Error message of invoice group creation.",
            "type": "string"
          }
        }
      },
      "DocumentCollectionResponse": {
        "type": "object",
        "properties": {
          "unavailableDocuments": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UnavailableDocumentResponse"
            }
          },
          "documentId": {
            "type": "string"
          },
          "availableDocuments": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AvailableDocumentResponse"
            }
          }
        }
      },
      "AdPaymentsPaymentResult": {
        "description": "Represents the result of a payment execution.",
        "type": "object",
        "properties": {
          "reason": {
            "minLength": 1,
            "description": "A human-readable reason explaining the payment result.",
            "type": "string"
          },
          "invoiceCFID": {
            "minLength": 1,
            "description": "The customer facing ID of the invoice.",
            "type": "string"
          }
        },
        "required": [
          "invoiceCFID"
        ]
      },
      "CurrencyAmount": {
        "description": "Identifies the amount along with currency code.",
        "type": "object",
        "properties": {
          "amount": {
            "type": "number"
          },
          "currencyCode": {
            "type": "string"
          }
        },
        "required": [
          "amount",
          "currencyCode"
        ]
      },
      "BaseBillingProfile": {
        "description": "Billing profile object which contains details regarding address, tax, etc.",
        "type": "object",
        "properties": {
          "billingProfileName": {
            "description": "Name of a billing profile. This name will only be used to identify the billing profile and will not be used for billing. This is for the client to organize the billing profiles and doesn't affect the billing process.",
            "type": "string"
          },
          "isDefault": {
            "default": "false",
            "description": "Attribute to indicate if a billing profile is default or not under that global account. Once marked as default, for new countries this billing profile will get automatically applied, if all information provided are sufficient",
            "type": "boolean"
          },
          "address": {
            "description": "Address details to be used for a billing profile",
            "type": "object",
            "properties": {
              "stateOrRegion": {
                "type": "string",
                "maxLength": 50
              },
              "secondaryEmails": {
                "minItems": 0,
                "maxItems": 100,
                "type": "array",
                "items": {
                  "type": "string",
                  "maxLength": 64
                }
              },
              "city": {
                "type": "string",
                "maxLength": 50
              },
              "contactName": {
                "description": "Contact name for the billing profile which will also be printed on the invoice.",
                "type": "string",
                "maxLength": 50
              },
              "countryCode": {
                "type": "string"
              },
              "postalCode": {
                "type": "string",
                "maxLength": 20
              },
              "addressLine1": {
                "type": "string",
                "maxLength": 60
              },
              "addressLine2": {
                "type": "string",
                "maxLength": 60
              },
              "billingName": {
                "description": "The name of the person or organization who is going to recieve the invoice",
                "type": "string",
                "maxLength": 50
              },
              "addressLine3": {
                "type": "string",
                "maxLength": 60
              },
              "primaryEmail": {
                "type": "string"
              }
            },
            "required": [
              "contactName",
              "billingName",
              "addressLine1",
              "city",
              "countryCode",
              "primaryEmail"
            ]
          },
          "purchaseOrderNumber": {
            "description": "Number to track spend against the budgeted amounts.",
            "type": "string",
            "maxLength": 64
          },
          "displayInfo": {
            "description": "Object determines publicly displayed information about the advertiser",
            "type": "object",
            "properties": {
              "displayName": {
                "description": "Relevant for only authors. Required if author chooses displayNameField as DISPLAY_NAME.The value inside this field will be shown publicly.",
                "type": "string",
                "maxLength": 100
              },
              "displayNameField": {
                "description": "Determines the name field that will be displayed publicly.For non-authors, the default and only allowed value for this is BILLING_NAME. For author accounts, If BILLING_NAME is chosen then the value inside address.billingName will bedisplayed publicly. If DISPLAY_NAME is chosen then the value inside displayInfo.displayName will beshown publicly. You may choose to display \u201cAuthor\u201d as your displayName or you may provide an alternatename to display for your ads.",
                "type": "string",
                "enum": [
                  "BILLING_NAME",
                  "DISPLAY_NAME"
                ]
              }
            }
          },
          "taxes": {
            "minItems": 0,
            "maxItems": 10,
            "description": "List of tax-type and values.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "countryCode": {
                  "description": "Code of the country to which the tax value belongs to which would override the countryCode provided in the address.",
                  "type": "string"
                },
                "type": {
                  "description": "Type of tax. Check following table for supported tax types: <br/><br/><table border=1><caption> **Supported Tax Types** <\/caption><tr> <th>Tax Type<\/th>    <\/tr><tr>    <td>VAT<\/td>    <\/tr><tr>    <td>GST<\/td>    <\/tr><tr>    <td>RFC<\/td>    <\/tr><tr>    <td>SDI<\/td>    <\/tr><tr>    <td>PEC<\/td>    <\/tr><tr>    <td>CNPJ<\/td>    <\/tr><tr>    <td>TAX_OFFICE<\/td>    <\/tr><tr>    <td>TAX_REGIME<\/td>    <\/tr><\/table> <br/><br/> Check following table for supported values for TAX_REGIME: <br/><br/><table border=1><caption> **Supported Tax (for TAX_REGIME) Values** <\/caption><tr> <th>Value<\/th> <th>Description<\/th>    <\/tr><tr>    <td>601<\/td><td>General de Ley Personas Morales<\/td>    <\/tr><tr>    <td>603<\/td><td>Personas Morales con Fines no Lucrativos<\/td>    <\/tr><tr>    <td>605<\/td><td>Sueldos y Salarios e Ingresos Asimilados a Salarios<\/td>    <\/tr><tr>    <td>606<\/td><td>Arrendamiento<\/td>    <\/tr><tr>    <td>607<\/td><td>Régimen de Enajenación o Adquisición de Bienes<\/td>    <\/tr><tr>    <td>608<\/td><td>Demás ingresos<\/td>    <\/tr><tr>    <td>610<\/td><td>Residentes en el Extranjero sin Establecimiento Permanente en  México<\/td>    <\/tr><tr>    <td>611<\/td><td>Ingresos por Dividendos (socios y accionistas)<\/td>    <\/tr><tr>    <td>612<\/td><td>Personas Físicas con Actividades Empresariales y Profesionales<\/td>    <\/tr><tr>    <td>614<\/td><td>Ingresos por intereses<\/td>    <\/tr><tr>    <td>615<\/td><td>Régimen de los ingresos Ingresos por obtención de premios<\/td>    <\/tr><tr>    <td>616<\/td><td>Sin obligaciones fiscales<\/td>    <\/tr><tr>    <td>620<\/td><td>Sociedades Cooperativas de Producción que optan por diferir  sus ingresos<\/td>    <\/tr><tr>    <td>621<\/td><td>Incorporación Fiscal<\/td>    <\/tr><tr>    <td>622<\/td><td>Actividades Agrícolas, Ganaderas, Silvícolas y Pesqueras<\/td>    <\/tr><tr>    <td>623<\/td><td>Opcional para Grupos de Sociedades<\/td>    <\/tr><tr>    <td>624<\/td><td>Coordinados<\/td>    <\/tr><tr>    <td>625<\/td><td>Régimen de las Actividades Empresariales con ingresos a través  de Plataformas Tecnológicas<\/td>    <\/tr><tr>    <td>626<\/td><td>Régimen Simplificado de Confianza<\/td>    <\/tr><\/table>",
                  "type": "string"
                },
                "value": {
                  "description": "Value of the tax type. For example, VAT number for VAT tax type, etc.",
                  "type": "string"
                }
              },
              "required": [
                "type",
                "value"
              ]
            }
          },
          "agreements": {
            "description": "List of tax-type and corresponding details.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "documentName": {
                  "description": "Agreement document name against which consent needs to be provided. The content of the agreement can be checked by providing agreement name in `POST /billingProfileAgreementContents/{billingProfileAgreementContentId}` API. Check following table for supported values: <br/><br/><table border=1><caption> **Supported Agreement Document Names** <\/caption><tr>    <th>Agreement document name<\/th><th>Description<\/th><\/tr><tr>    <td>BILLING_PROFILE_TAX_AGREEMENT<\/td>    <td>Global tax agreement. Advertiser needs to consent to this if they provide taxes in the billing profile<\/td><\/tr><tr>    <td>BILLING_PROFILE_CANADIAN_NON_RESIDENCY_AGREEMENT<\/td>    <td>If advetiser is non-resident of canada and wants to advertise in canada without providing canada GST, they need to consent to this agreement<\/td><\/tr> <tr><td>BILLING_PROFILE_DSA_AGREEMENT<\/td><td>Relevant for Authors, If you choose to display your BILLING_NAME or any name other than \u201cAuthor\u201d then you must provide consent for BILLING_PROFILE_DSA_AGREEMENT.<\/td><\/tr> <\/table>",
                  "type": "string"
                },
                "consent": {
                  "default": "false",
                  "description": "Consent on the provided agreement document.",
                  "type": "boolean"
                },
                "locale": {
                  "$ref": "#/components/schemas/Locale"
                }
              },
              "required": [
                "documentName",
                "consent"
              ]
            }
          },
          "holdingCompany": {
            "description": "Type of holding company for agency billing profile. Agency Holding Companies are conglomerate entities that own multiple smaller advertising agencies. There are six holding companies, WPP, Omnicom, Publicis, Interpublic, Dentsu, and Havas. A holding company is provided if the billing party is an agency. If your agency is not associated with any of the above, choose NO_HOLDING_COMPANY Check following table for supported values: <br/><br/><table border=1><caption> **Supported Holding Company** <\/caption><tr>    <th>Holding Company<\/th>    <\/tr><tr>    <td>NO_HOLDING_COMPANY<\/td>    <\/tr><tr>    <td>WPP<\/td>    <\/tr><tr>    <td>OMNICOM<\/td>    <\/tr><tr>    <td>PUBLICIS_GROUPE<\/td>    <\/tr><tr>    <td>INTERPUBLIC<\/td>    <\/tr><tr>    <td>DENTSU<\/td>    <\/tr><tr>    <td>HAVAS<\/td>    <\/tr><\/table>",
            "type": "string"
          }
        },
        "required": [
          "billingProfileName",
          "address",
          "purchaseOrderNumber",
          "billingParty",
          "isBillTo"
        ]
      },
      "EntityType": {
        "type": "string",
        "enum": [
          "ADVERTISING_ACCOUNT"
        ]
      },
      "InvoiceGroupUpdateSuccessResult": {
        "type": "object",
        "properties": {
          "index": {
            "description": "index of item from original request, starting from 0.",
            "type": "number"
          },
          "invoiceGroupId": {
            "description": "InvoiceGroupId",
            "type": "string"
          }
        }
      },
      "AdPaymentsAccountList": {
        "minItems": 0,
        "maxItems": 100,
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AdPaymentsAccount"
        }
      },
      "BillingPromotionsLinkedEntityFilter": {
        "description": "Filter entities by target of the promotions.",
        "type": "object",
        "properties": {
          "include": {
            "minItems": 1,
            "maxItems": 20,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillingPromotionLinkedEntity"
            }
          }
        },
        "required": [
          "include"
        ]
      },
      "CreateOrUpdateBillingProfilesResponse": {
        "description": "Contains a list of one or more responses corresponding to each billing profile along with index.",
        "type": "object",
        "properties": {
          "billingProfiles": {
            "description": "Segregated list of success and error responses for each billing profile in request payload.",
            "type": "object",
            "properties": {
              "success": {
                "minItems": 0,
                "maxItems": 100,
                "description": "List of success responses for each billing profile in request payload.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "index": {
                      "format": "int64",
                      "description": "Indicates the index of billing profile in the list of request payload.",
                      "type": "integer"
                    },
                    "billingProfileId": {
                      "description": "Billing profile identifier corresponding to a billing profile in the list.",
                      "type": "string"
                    }
                  }
                }
              },
              "error": {
                "minItems": 0,
                "maxItems": 100,
                "description": "List of error responses for each billing profile in request payload.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "index": {
                      "format": "int64",
                      "description": "Indicates the index of a billing profile in request payload.",
                      "type": "integer"
                    },
                    "billingProfileId": {
                      "description": "Billing profile identifier corresponding to a billing profile in request payload.",
                      "type": "string"
                    },
                    "errors": {
                      "minItems": 0,
                      "maxItems": 200,
                      "description": "List of errors for a particular billing profile in request payload.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "AdPaymentsPaymentMethodType": {
        "description": "Enum defining different PaymentMethod.",
        "type": "string",
        "enum": [
          "DEDUCT_FOR_PAYMENT",
          "PAY_BY_INVOICE",
          "SELLER_PAYABLE",
          "DIRECT_DEBIT",
          "CREDIT_CARD"
        ]
      },
      "UpdateInvoiceGroupsResponseContent": {
        "description": "Represent UpdateInvoiceGroup API Response Structure",
        "type": "object",
        "properties": {
          "success": {
            "minItems": 0,
            "maxItems": 50,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceGroupUpdateSuccessResult"
            }
          },
          "error": {
            "minItems": 0,
            "maxItems": 50,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceGroupUpdateFailureResult"
            }
          }
        }
      },
      "AdPaymentsPayInvoicesOutput": {
        "description": "Represents the output of the pay invoices API.",
        "type": "object",
        "properties": {
          "success": {
            "$ref": "#/components/schemas/AdPaymentsPaymentResultList"
          },
          "failure": {
            "$ref": "#/components/schemas/AdPaymentsPaymentResultList"
          }
        },
        "required": [
          "success",
          "failure"
        ]
      },
      "UnauthorizedExceptionResponseContent": {
        "type": "object",
        "properties": {
          "code": {
            "minLength": 1,
            "description": "Error Code.",
            "type": "string"
          },
          "message": {
            "minLength": 1,
            "description": "Human readable response message.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "AdPaymentsPaymentAgreementId": {
        "minLength": 1,
        "description": "ID of a payment agreement that must belong to the customer. A one-time payment will be collected using the payment agreement's associated payment profile. If not provided, the latest payment agreement of the advertiser will be used to collect payments.",
        "type": "string"
      },
      "advertiserTypes": {
        "type": "string",
        "title": "Advertiser Types",
        "enum": [
          "VENDOR",
          "SELLER",
          "DSP_ADVERTISING_ACCOUNT",
          "AGENCY"
        ]
      },
      "AdPaymentsCommunicationAddress": {
        "description": "Captures the communication address details that Ads Billing will use to send the payment consent request.",
        "type": "object",
        "properties": {
          "addressType": {
            "$ref": "#/components/schemas/AdPaymentsCommunicationAddressType"
          },
          "addressId": {
            "minLength": 1,
            "description": "This is the Amazon address Id of the address that Billing will use to communicate. This can be generated by invoking Amazon's address service.",
            "type": "string"
          }
        }
      },
      "currencyAmount": {
        "title": "Currency Amount",
        "type": "object",
        "properties": {
          "amount": {
            "title": "Amount",
            "type": "number"
          },
          "currencyCode": {
            "$ref": "#/components/schemas/currencyCode"
          }
        }
      },
      "AdPaymentsExpiryDetails": {
        "description": "Indicates the month a payment method will expire.",
        "type": "object",
        "properties": {
          "month": {
            "description": "The month the payment method will expire.",
            "type": "integer"
          },
          "year": {
            "description": "The year the payment method will expire.",
            "type": "integer"
          }
        },
        "required": [
          "month",
          "year"
        ]
      },
      "AdPaymentsPaymentAgreementList": {
        "minItems": 0,
        "maxItems": 100,
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AdPaymentsPaymentAgreement"
        }
      },
      "taxBreakup": {
        "title": "Tax Breakup",
        "type": "object",
        "required": [
          "issuerJurisdiction",
          "issuerTaxInformation",
          "payerTaxInformation",
          "taxAmount",
          "taxName",
          "taxRate",
          "taxedJurisdictionName"
        ],
        "properties": {
          "payerJurisdiction": {
            "description": "Tax jurisdiction of payer (billed customer)\n",
            "title": "Issuer Jurisdiction",
            "type": "string"
          },
          "taxRate": {
            "title": "Tax Rate",
            "type": "number"
          },
          "issuerTaxInformation": {
            "title": "Issuer Tax Registration Info",
            "type": "object",
            "required": [
              "taxId"
            ],
            "properties": {
              "taxId": {
                "description": "Tax registration with government (Ex: VAT ID, GST ID)\n",
                "title": "Tax ID",
                "type": "string"
              }
            }
          },
          "thirdPartyTaxInformation": {
            "title": "Third Party Tax Registration Info",
            "type": "object",
            "required": [
              "taxId"
            ],
            "properties": {
              "taxId": {
                "description": "Tax registration with government (Ex: VAT ID, GST ID)\n",
                "title": "Tax ID",
                "type": "string"
              }
            }
          },
          "issuerJurisdiction": {
            "description": "Tax jurisdiction of issuer (Amazon billing entity)\n",
            "title": "Issuer Jurisdiction",
            "type": "string"
          },
          "payerTaxInformation": {
            "title": "Payer Tax Registration Info",
            "type": "object",
            "properties": {
              "taxId": {
                "description": "Tax registration with government (Ex: VAT ID, GST ID)\n",
                "title": "Tax ID",
                "type": "string"
              }
            }
          },
          "taxAmount": {
            "$ref": "#/components/schemas/currencyAmount"
          },
          "taxName": {
            "title": "Tax Name",
            "type": "string"
          },
          "taxedJurisdictionName": {
            "description": "Tax jurisdiction for which tax applies, this can be at the country, state or local level.\n",
            "title": "Taxed Jurisdiction Name",
            "type": "string"
          }
        }
      },
      "bulkGetBillingNotificationsError": {
        "type": "object",
        "title": "Bulk Get Billing Notifications Error",
        "required": [
          "index",
          "errorCode",
          "description"
        ],
        "properties": {
          "advertiserMarketplaces": {
            "minItems": 1,
            "maxItems": 30,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/advertiserMarketplace"
            }
          },
          "advertiserMarketplace": {
            "$ref": "#/components/schemas/advertiserMarketplace"
          },
          "index": {
            "format": "int32",
            "type": "integer"
          },
          "errorCode": {
            "$ref": "#/components/schemas/bulkGetBillingNotificationsErrorCodes"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "GetInvoiceGroupsRequestContent": {
        "type": "object",
        "properties": {
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          }
        }
      },
      "CreateInvoiceGroupAssociationsRequestContent": {
        "description": "Represent CreateInvoiceGroupAssociations API Request Structure",
        "type": "object",
        "properties": {
          "invoiceGroupAssociations": {
            "minItems": 1,
            "maxItems": 50,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceGroupAssociation"
            }
          }
        }
      },
      "AdPaymentsLocale": {
        "description": "Enum defining supported language locales.",
        "type": "string",
        "enum": [
          "ar_AE",
          "de_DE",
          "en_AU",
          "en_CA",
          "en_GB",
          "en_IN",
          "en_SG",
          "en_US",
          "es_CO",
          "es_ES",
          "es_MX",
          "es_US",
          "fr_CA",
          "fr_FR",
          "hi_IN",
          "it_IT",
          "ja_JP",
          "ko_KR",
          "nl_NL",
          "pl_PL",
          "pt_BR",
          "sv_SE",
          "ta_IN",
          "tr_TR",
          "zh_CN",
          "zh_TW",
          "vi_VN",
          "th_TH"
        ]
      },
      "Format": {
        "description": "The export results format.",
        "type": "string",
        "enum": [
          "JSON",
          "ZIP"
        ]
      },
      "billingLevel": {
        "description": "Configured on the Rodeo portal and only applicable to ADSP-SS, this flag reflects the basis on which campaigns are consolidated. Possible values include:\n- 'CAMPAIGN': Billing is based on individual campaigns. \n- 'ACCOUNT': Billing is based on the Rodeo DSP advertiser account.",
        "type": "string",
        "enum": [
          "CAMPAIGN",
          "ACCOUNT"
        ]
      },
      "BillingSummaryPaymentMethodType": {
        "description": "Type of the payment method",
        "type": "string",
        "enum": [
          "CREDIT_CARD",
          "ELECTRONIC_FUNDS_TRANSFER",
          "DEDUCT_FROM_PAYMENT",
          "DIRECT_DEBIT",
          "UNIFIED_BILLING"
        ]
      },
      "BillingProfileStatus": {
        "description": "Current Status of the link between the billing Profile and the country. The following table defines the statuses and their descriptions. <table><thead> <tr> <th>Status<\/th> <th>Description<\/th> <\/tr><\/thead><tbody> <tr> <td>OK<\/td> <td>There is no problem with the billing profile usage<\/td> <\/tr> <tr> <td>BILLING_PROFILE_INVALID_ADDRESS<\/td> <td>Billing profile usage has invalid address<\/td> <\/tr> <tr> <td>BILLING_PROFILE_INVALID_TAX<\/td> <td>Billing profile usage has invalid taxes<\/td> <\/tr> <tr> <td>BILLING_PROFILE_INVALID_PERMISSION<\/td> <td>User does not have the permission to view the billing profile<\/td> <\/tr> <tr> <td>BILLING_PROFILE_NOT_FOUND<\/td> <td>No billing profile was linked to this country<\/td> <\/tr> <tr> <td>BILLING_PROFILE_ERROR<\/td> <td>There is some other problem with the billing profile usage<\/td> <\/tr><\/tbody><\/table>",
        "type": "object",
        "properties": {
          "statusMessage": {
            "type": "string"
          },
          "statusCode": {
            "type": "string"
          }
        }
      },
      "CountryCode": {
        "type": "string",
        "enum": [
          "US",
          "CA",
          "MX",
          "BR",
          "CO",
          "CL",
          "UK",
          "FR",
          "DE",
          "IT",
          "ES",
          "SA",
          "NL",
          "AE",
          "TR",
          "SE",
          "EG",
          "PL",
          "BE",
          "ZA",
          "NG",
          "IN",
          "JP",
          "AU",
          "SG"
        ]
      },
      "AdPaymentsPaymentMethod": {
        "description": "Represents a payment method.",
        "type": "object",
        "properties": {
          "expiryDetails": {
            "$ref": "#/components/schemas/AdPaymentsExpiryDetails"
          },
          "vendorCodeBalance": {
            "$ref": "#/components/schemas/AdPaymentsCurrencyAmount"
          },
          "vendorCodeName": {
            "minLength": 1,
            "description": "The name of the vendor code this payment method represents.",
            "type": "string"
          },
          "countryCode": {
            "$ref": "#/components/schemas/AdPaymentsCountryCode"
          },
          "instrumentId": {
            "minLength": 1,
            "description": "Identifies a credit card or direct debit payment method.",
            "type": "string"
          },
          "tail": {
            "description": "The last four digits of a credit card or bank account number.",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/AdPaymentsPaymentMethodType"
          },
          "priority": {
            "description": "A numerical priority assigned to each payment method within a given profile, dictating the sequential order in which these payment methods are utilized during payment execution. Lower numerical values indicate higher priority, with the option possessing the lowest value being selected first.",
            "type": "integer"
          },
          "brand": {
            "minLength": 1,
            "description": "The processor used to execute payments on the card, such as Visa, MasterCard, etc. Only valued for credit card payment methods.",
            "type": "string"
          },
          "sellerAccountId": {
            "minLength": 1,
            "description": "The seller account ID associated to this payment method, only valued for seller payable payment methods.",
            "type": "string"
          },
          "vendorCode": {
            "minLength": 1,
            "description": "The vendor code associated to this payment method, only valued for deduct from payment payment methods.",
            "type": "string"
          }
        },
        "required": [
          "type",
          "priority"
        ]
      },
      "GetBillingProfilesRequest": {
        "description": "Payload to fetch list of billing profile(s).",
        "type": "object",
        "properties": {
          "nextToken": {
            "description": "Offset to fetch next page with list of billing profile(s).",
            "type": "string"
          },
          "maxResults": {
            "default": "100",
            "format": "int64",
            "description": "Max results / billing profile(s) to be shown in a single page.",
            "type": "integer"
          },
          "filters": {
            "description": "Filter object to be used to fetch list of billing profile(s).",
            "type": "object",
            "properties": {
              "billingProfileIdFilter": {
                "minItems": 0,
                "maxItems": 20,
                "description": "Indicates list of billing profile identifier(s) for which billing profile(s) needs to be fetched.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "defaultBillingProfileFilter": {
                "default": "false",
                "description": "Indicates if default billing profile needs to be fetched.",
                "type": "boolean"
              }
            }
          }
        }
      },
      "AdPaymentsPaymentAgreement": {
        "description": "Represents an agreement between two parties indicating what profile to use during payment execution.",
        "type": "object",
        "properties": {
          "paymentProfile": {
            "$ref": "#/components/schemas/AdPaymentsPaymentProfile"
          },
          "paymentAgreementId": {
            "minLength": 1,
            "description": "The ID associated to this payment agreement.",
            "type": "string"
          },
          "target": {
            "$ref": "#/components/schemas/AdPaymentsTarget"
          }
        },
        "required": [
          "paymentProfile",
          "target"
        ]
      },
      "BillingSetupCountriesApplicationFailure": {
        "additionalProperties": {
          "type": "string"
        },
        "type": "object"
      },
      "CreateBillingProfile": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseBillingProfile"
          },
          {
            "type": "object",
            "properties": {
              "billingParty": {
                "description": "Choose `AGENCY` if you are an agency representing an advertiser. Choose `BRAND_OWNER` if you are advertising for your product's sales",
                "type": "string"
              },
              "isBillTo": {
                "description": "Whether the billingProfile created should be used for invoicing, taxation and other billing workflows. If the `billTo=false` is setthe `billingName` of that profile is used to determine the 'Advertiser Name' shown to consumers.To ensure accuracy of the information shown on the store, we request that you review the \u2018Advertiser Name\u2019 and \u2018Payer Name\u2019 in our ad systems and update them if required",
                "type": "boolean"
              }
            },
            "required": [
              "billingParty",
              "isBillTo"
            ]
          }
        ],
        "description": "Object encapsulating information for creating a billing profile",
        "type": "object"
      },
      "AccountType": {
        "description": "Identifies the type of an associated account.",
        "type": "string",
        "enum": [
          "VENDOR",
          "SELLER",
          "DSP_ADVERTISING_ACCOUNT"
        ]
      },
      "AssociateInvoiceProfileRequest": {
        "type": "object",
        "properties": {
          "invoiceProfileId": {
            "minLength": 1,
            "description": "Id of the invoice profile to associate/un-associate to",
            "type": "string"
          },
          "action": {
            "$ref": "#/components/schemas/InvoiceProfileAssociationAction"
          },
          "target": {
            "$ref": "#/components/schemas/InvoiceProfileAssociationTarget"
          }
        },
        "required": [
          "invoiceProfileId",
          "target"
        ]
      },
      "UnavailableDocumentResponse": {
        "type": "object",
        "properties": {
          "reason": {
            "type": "string"
          },
          "fileName": {
            "type": "string"
          },
          "docType": {
            "$ref": "#/components/schemas/DocType"
          },
          "storagePath": {
            "type": "string"
          },
          "contentType": {
            "type": "string"
          }
        }
      },
      "ApplyBillingProfileResponse": {
        "description": "Contains a list of one or more responses corresponding to each advertiser and applied billing profile(s).",
        "type": "object",
        "properties": {
          "billingProfileUsages": {
            "description": "Segregated list of success and error responses for each country and applied billing profile(s).",
            "type": "object",
            "properties": {
              "success": {
                "minItems": 0,
                "maxItems": 30,
                "description": "Success responses for each country and applied billing profile(s).",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "advertiser": {
                      "$ref": "#/components/schemas/MarketplaceAdvertiser"
                    },
                    "billingProfileIds": {
                      "minItems": 1,
                      "maxItems": 2,
                      "description": "List of billing profile identifiers corresponding to billing profiles in request payload.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "index": {
                      "format": "int64",
                      "description": "Index corresponding to index of the apply operation in request",
                      "type": "integer"
                    }
                  }
                }
              },
              "error": {
                "minItems": 0,
                "maxItems": 30,
                "description": "Error responses for each country and applied billing profile.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "advertiser": {
                      "$ref": "#/components/schemas/MarketplaceAdvertiser"
                    },
                    "billingProfileIds": {
                      "minItems": 1,
                      "maxItems": 2,
                      "description": "List of billing profile identifiers corresponding to billing profiles in request payload.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "index": {
                      "format": "int64",
                      "description": "Index corresponding to index of the apply operation in request",
                      "type": "integer"
                    },
                    "errors": {
                      "minItems": 0,
                      "maxItems": 200,
                      "description": "Indicates the error occurred for a billing profile apply operation.",
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ErrorResponse"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "CreateInvoiceGroupsRequestContent": {
        "description": "Represent CreateInvoiceGroup API Request Structure.",
        "type": "object",
        "properties": {
          "invoiceGroups": {
            "minItems": 1,
            "maxItems": 50,
            "description": "Invoice Invoice Groups To be Created.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceGroup"
            }
          }
        }
      },
      "AdPaymentsCreatePaymentAgreementsInput": {
        "description": "Represents the input of the create payment agreement API.",
        "type": "object",
        "properties": {
          "paymentAgreements": {
            "$ref": "#/components/schemas/AdPaymentsPaymentAgreementList"
          }
        },
        "required": [
          "paymentAgreements"
        ]
      },
      "invoice": {
        "title": "Invoice",
        "type": "object",
        "required": [
          "adjustments",
          "invoiceLines",
          "invoiceSummary",
          "issuerContactInfo",
          "payerContactInfo",
          "payments",
          "portfolios",
          "promotions",
          "taxDetail",
          "thirdPartyContactInfo"
        ],
        "properties": {
          "promotions": {
            "$ref": "#/components/schemas/promotions"
          },
          "governmentInvoiceInformation": {
            "$ref": "#/components/schemas/governmentInvoiceInformation"
          },
          "payerContactInfo": {
            "$ref": "#/components/schemas/contactInfo"
          },
          "taxDetail": {
            "$ref": "#/components/schemas/taxDetail"
          },
          "adjustments": {
            "$ref": "#/components/schemas/adjustments"
          },
          "invoiceLines": {
            "$ref": "#/components/schemas/invoiceLines"
          },
          "invoiceSummary": {
            "$ref": "#/components/schemas/invoiceSummary"
          },
          "issuerContactInfo": {
            "$ref": "#/components/schemas/contactInfo"
          },
          "thirdPartyContactInfo": {
            "$ref": "#/components/schemas/thirdPartyContactInformation"
          },
          "payments": {
            "$ref": "#/components/schemas/payments"
          },
          "portfolios": {
            "$ref": "#/components/schemas/portfolios"
          }
        }
      },
      "UpdateInvoiceGroupsRequestContent": {
        "description": "Represent UpdateInvoiceGroup API Request Structure.",
        "type": "object",
        "properties": {
          "invoiceGroups": {
            "minItems": 1,
            "maxItems": 50,
            "description": "Invoice Invoice Groups To be updated.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceGroupWithId"
            }
          }
        }
      },
      "invoiceStatus": {
        "description": "* `ISSUED`: An invoice is issued when its charges are finalized and tax is computed on the total amount. \n* `PAID_IN_PART`: When a partial payment is received, the invoice status will change to paid in part.\n* `PAID_IN_PART`: One full payment has been received, the invoice will be paid in full.\n* `WRITTEN_OFF`: If an invoice is written off because of an error, the status will be updated to written off.\n",
        "title": "Invoice Status",
        "type": "string",
        "enum": [
          "ACCUMULATING",
          "PROCESSING",
          "ISSUED",
          "PAID_IN_PART",
          "PAID_IN_FULL",
          "WRITTEN_OFF"
        ]
      },
      "ThrottlingExceptionResponseContent": {
        "description": "Request was denied due to request throttling.",
        "type": "object",
        "properties": {
          "code": {
            "minLength": 1,
            "description": "Error Code.",
            "type": "string"
          },
          "message": {
            "minLength": 1,
            "description": "Human readable response message.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "AdPaymentsPayByInvoicePaymentMethod": {
        "description": "Represents Pay By Invoice payment method structure. Pay By Invoice is a type of payment method where the customer receives a physical invoice which they can pay via bank transfer.",
        "type": "object",
        "properties": {
          "eligibleCountries": {
            "$ref": "#/components/schemas/AdPaymentsCountryCodeList"
          },
          "type": {
            "$ref": "#/components/schemas/AdPaymentsPaymentMethodType"
          }
        },
        "required": [
          "type",
          "eligibleCountries"
        ]
      }
    },
    "requestBodies": {},
    "responses": {},
    "callbacks": {},
    "links": {},
    "securitySchemes": {
      "oauth2AuthorizationCode": {
        "flows": {
          "authorizationCode": {
            "tokenUrl": "https://api.amazon.com/auth/o2/token",
            "authorizationUrl": "https://www.amazon.com/ap/oa",
            "scopes": {
              "cpc_advertising:campaign_management": "Modify your advertising campaigns and access performance data"
            }
          }
        },
        "description": "Login with Amazon. For more information see [Login with Amazon authorization code grant](https://developer.amazon.com/docs/login-with-amazon/authorization-code-grant.html).",
        "type": "oauth2"
      },
      "bearerAuth": {
        "scheme": "bearer",
        "type": "http"
      }
    },
    "parameters": {
      "AdPaymentsManagerAccountIdHeader": {
        "schema": {
          "type": "string"
        },
        "in": "header",
        "name": "Amazon-Advertising-API-Manager-Account",
        "description": "The header used to pass the ID of a manager account.  Use `GET` method on the Manager Accounts resource to list the manager accounts associated with the access token passed in the HTTP Authorization header and choose `managerAccountId` from the response to pass it as input.",
        "required": false
      },
      "AdPaymentsProfileHeader": {
        "schema": {
          "type": "string"
        },
        "in": "header",
        "name": "Amazon-Advertising-API-Scope",
        "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
        "required": false
      },
      "AdPaymentsNextTokenQueryParam": {
        "schema": {
          "type": "string"
        },
        "in": "query",
        "name": "nextToken",
        "description": "To retrieve the next page of results, call the same operation and specify this token in the request. If the nextToken field is empty, there are no further results."
      },
      "AdPaymentsClientHeader": {
        "schema": {
          "type": "string"
        },
        "in": "header",
        "name": "Amazon-Advertising-API-ClientId",
        "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
        "required": true
      },
      "AdPaymentsAccountIdHeader": {
        "schema": {
          "type": "string"
        },
        "in": "header",
        "name": "Amazon-Ads-AccountId",
        "description": "The header used to pass global account associated with the advertiser account. Use `GET` method on the Global Ads Account resource to list the global ads account associated with the access token passed in the HTTP Authorization header and choose `AdvertisingAccountIdentifier` id from the response to pass it as input.",
        "required": false
      }
    }
  },
  "openapi": "3.0.1"
}
