{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "plentymarkets REST-API",
        "x-logo": {
            "url": "https://www.plentymarkets.eu/layout/plenty_responsive/img/plentymarkets-logo-claim.svg",
            "backgroundColor": "#FFFFFF"
        },
        "description": "The plentymarkets REST API expands the functionality of the plentymarkets CMS and allows access to resources, i.e. data records, via unique URI paths",
        "contact": {
            "name": "plentymarkets",
            "url": "https://forum.plentymarkets.com/c/rest-api"
        }
    },
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "host": "example.com",
    "basePath": "/",
    "tags": [
        {
            "name": "Account",
            "description": "Routes for Account",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/account"
            }
        },
        {
            "name": "Accounting",
            "description": "Routes for Accounting",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/accounting"
            }
        },
        {
            "name": "AddressDesign",
            "description": "Routes for AddressDesign",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/address_design"
            }
        },
        {
            "name": "AuditLog",
            "description": "Routes for AuditLog",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/audit_log"
            }
        },
        {
            "name": "Authentication",
            "description": "Routes for Authentication",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/authentication"
            }
        },
        {
            "name": "Authorization",
            "description": "Routes for Authorization",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/authorization"
            }
        },
        {
            "name": "BI",
            "description": "Routes for BI",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/b_i"
            }
        },
        {
            "name": "Basket",
            "description": "Routes for Basket",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/basket"
            }
        },
        {
            "name": "Batch",
            "description": "Routes for Batch",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/batch"
            }
        },
        {
            "name": "Blog",
            "description": "Routes for Blog",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/blog"
            }
        },
        {
            "name": "Board",
            "description": "Routes for Board",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/board"
            }
        },
        {
            "name": "Boards",
            "description": "Routes for Boards",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/boards"
            }
        },
        {
            "name": "Catalog",
            "description": "Routes for Catalog",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/catalog"
            }
        },
        {
            "name": "Category",
            "description": "Routes for Category",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/category"
            }
        },
        {
            "name": "Cloud",
            "description": "Routes for Cloud",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/cloud"
            }
        },
        {
            "name": "Comment",
            "description": "Routes for Comment",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/comment"
            }
        },
        {
            "name": "Configuration",
            "description": "Routes for Configuration",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/configuration"
            }
        },
        {
            "name": "Document",
            "description": "Routes for Document",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/document"
            }
        },
        {
            "name": "ElasticSync",
            "description": "Routes for ElasticSync",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/elastic_sync"
            }
        },
        {
            "name": "Export",
            "description": "Routes for Export",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/export"
            }
        },
        {
            "name": "ExportSettings",
            "description": "Routes for ExportSettings",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/export_settings"
            }
        },
        {
            "name": "Feedback",
            "description": "Routes for Feedback",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/feedback"
            }
        },
        {
            "name": "Fulfillment",
            "description": "Routes for Fulfillment",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/fulfillment"
            }
        },
        {
            "name": "Item",
            "description": "Routes for Item",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/item"
            }
        },
        {
            "name": "LegalInformation",
            "description": "Routes for LegalInformation",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/legal_information"
            }
        },
        {
            "name": "Listing",
            "description": "Routes for Listing",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/listing"
            }
        },
        {
            "name": "Log",
            "description": "Routes for Log",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/log"
            }
        },
        {
            "name": "MailTemplates",
            "description": "Routes for MailTemplates",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/mail_templates"
            }
        },
        {
            "name": "Market",
            "description": "Routes for Market",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/market"
            }
        },
        {
            "name": "Messenger",
            "description": "Routes for Messenger",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/messenger"
            }
        },
        {
            "name": "Newsletter",
            "description": "Routes for Newsletter",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/newsletter"
            }
        },
        {
            "name": "Order",
            "description": "Routes for Order",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/order"
            }
        },
        {
            "name": "OrderSummary",
            "description": "Routes for OrderSummary",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/order_summary"
            }
        },
        {
            "name": "Payment",
            "description": "Routes for Payment",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/payment"
            }
        },
        {
            "name": "Pim",
            "description": "Routes for Pim",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/pim"
            }
        },
        {
            "name": "PluginMultilingualism",
            "description": "Routes for PluginMultilingualism",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/plugin_multilingualism"
            }
        },
        {
            "name": "PluginSet",
            "description": "Routes for PluginSet",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/plugin_set"
            }
        },
        {
            "name": "Plugins",
            "description": "Routes for Plugins",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/plugins"
            }
        },
        {
            "name": "Property",
            "description": "Routes for Property",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/property"
            }
        },
        {
            "name": "Returns",
            "description": "Routes for Returns",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/returns"
            }
        },
        {
            "name": "ShopBuilder",
            "description": "Routes for ShopBuilder",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/shop_builder"
            }
        },
        {
            "name": "Stock",
            "description": "Routes for Stock",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/stock"
            }
        },
        {
            "name": "StockManagement",
            "description": "Routes for StockManagement",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/stock_management"
            }
        },
        {
            "name": "Sync",
            "description": "Routes for Sync",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/sync"
            }
        },
        {
            "name": "Tag",
            "description": "Routes for Tag",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/tag"
            }
        },
        {
            "name": "Ticket",
            "description": "Routes for Ticket",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/ticket"
            }
        },
        {
            "name": "TicketMessage",
            "description": "Routes for TicketMessage",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/ticket_message"
            }
        },
        {
            "name": "Todo",
            "description": "Routes for Todo",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/todo"
            }
        },
        {
            "name": "User",
            "description": "Routes for User",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/user"
            }
        },
        {
            "name": "Warehouse",
            "description": "Routes for Warehouse",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/warehouse"
            }
        },
        {
            "name": "Webstore",
            "description": "Routes for Webstore",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/webstore"
            }
        },
        {
            "name": "Wizard",
            "description": "Routes for Wizard",
            "externalDocs": {
                "description": "For the old documentation click here",
                "url": "https://developers.plentymarkets.com/rest-doc/wizard"
            }
        },
        {
            "name": "plentyMarketplace",
            "description": "Routes for plentyMarketplace"
        }
    ],
    "paths": {
        "/rest/catalogs/catalogs": {
            "get": {
                "summary": "Gets a list of Catalogs",
                "description": "Gets a paginated list of the Catalogs.",
                "tags": [
                    "Catalog"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "page": {
                                    "type": "integer",
                                    "description": "Current page of the response"
                                },
                                "totalsCount": {
                                    "type": "integer",
                                    "description": "The total number of entries in the response"
                                },
                                "isLastPage": {
                                    "type": "boolean",
                                    "description": "Flag that indicates if the page shown is the last page of the response"
                                },
                                "lastPageNumber": {
                                    "type": "integer",
                                    "description": "The last page number"
                                },
                                "firstOnPage": {
                                    "type": "integer",
                                    "description": "The index of the first item of the current page result"
                                },
                                "lastOnPage": {
                                    "type": "integer",
                                    "description": "The index of the last item of the current page result"
                                },
                                "itemsPerPage": {
                                    "type": "integer",
                                    "description": "The requested amount of items per result page"
                                },
                                "entries": {
                                    "items": []
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            },
            "post": {
                "summary": "Create Catalog",
                "description": "Creates a Catalog",
                "tags": [
                    "Catalog"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Catalog"
                        },
                        "examples": {
                            "application/json": {
                                "active": true,
                                "showMandatoryFields": false,
                                "id": "eb16976e-f2cb-3c26-bc1f-df7c613a262b",
                                "name": "Mustafa Borer",
                                "template": "1a3c9cd8-6210-34ad-bc2c-2f5fe6b83e53",
                                "data": {
                                    "0": 12,
                                    "1": 5,
                                    "2": 202,
                                    "customMappings": [],
                                    "mappings": [],
                                    "filters": []
                                },
                                "settings": {
                                    "csv": {
                                        "delimiter": "comma",
                                        "enclosure": "double",
                                        "headerRowIncluded": true
                                    },
                                    "format": {
                                        "fileName": "",
                                        "numberRange": ""
                                    },
                                    "url": {
                                        "webstore": null,
                                        "public": {
                                            "enabled": true,
                                            "useToken": false,
                                            "useHash": true,
                                            "token": ""
                                        },
                                        "private": {
                                            "useHash": true
                                        }
                                    },
                                    "notice": {
                                        "notification": {
                                            "enabled": true
                                        },
                                        "email": {
                                            "enabled": false
                                        }
                                    },
                                    "async": {
                                        "performance": false
                                    },
                                    "devcache": false,
                                    "bundle": {
                                        "enabled": true,
                                        "size": 3
                                    },
                                    "export": {
                                        "scheduleDays": [
                                            "monday",
                                            "tuesday",
                                            "wednesday",
                                            "thursday",
                                            "friday",
                                            "saturday",
                                            "sunday"
                                        ],
                                        "skipEmptyFiles": false
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            }
        },
        "/rest/catalogs/catalogs/activate/{id}": {
            "post": {
                "summary": "Activate or deactivate Catalog",
                "description": "Activates or deactivates a Catalog based on its ID.",
                "tags": [
                    "Catalog"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SimpleRestResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/catalogs/catalogs/archive": {
            "get": {
                "summary": "Get archive",
                "description": "Gets the list of archived Catalogs. An archived Catalog is a deleted Catalog.",
                "tags": [
                    "Catalog"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            }
        },
        "/rest/catalogs/catalogs/archive/{id}/restore": {
            "post": {
                "summary": "Restore archived Catalog",
                "description": "Restores an archived Catalog based on its ID. An archived Catalog is a deleted Catalog.",
                "tags": [
                    "Catalog"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Catalog"
                        },
                        "examples": {
                            "application/json": {
                                "active": true,
                                "showMandatoryFields": false,
                                "id": "7219a899-5326-3821-9a01-75fdad93daee",
                                "name": "Lelah Wyman MD",
                                "template": "f485e9be-207c-3aa8-8761-5dca6fb0df61",
                                "data": {
                                    "0": 115,
                                    "1": 93,
                                    "2": 176,
                                    "customMappings": [],
                                    "mappings": [],
                                    "filters": []
                                },
                                "settings": {
                                    "csv": {
                                        "delimiter": "comma",
                                        "enclosure": "double",
                                        "headerRowIncluded": true
                                    },
                                    "format": {
                                        "fileName": "",
                                        "numberRange": ""
                                    },
                                    "url": {
                                        "webstore": null,
                                        "public": {
                                            "enabled": true,
                                            "useToken": false,
                                            "useHash": true,
                                            "token": ""
                                        },
                                        "private": {
                                            "useHash": true
                                        }
                                    },
                                    "notice": {
                                        "notification": {
                                            "enabled": true
                                        },
                                        "email": {
                                            "enabled": false
                                        }
                                    },
                                    "async": {
                                        "performance": false
                                    },
                                    "devcache": false,
                                    "bundle": {
                                        "enabled": true,
                                        "size": 3
                                    },
                                    "export": {
                                        "scheduleDays": [
                                            "monday",
                                            "tuesday",
                                            "wednesday",
                                            "thursday",
                                            "friday",
                                            "saturday",
                                            "sunday"
                                        ],
                                        "skipEmptyFiles": false
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/catalogs/catalogs/copy": {
            "put": {
                "summary": "Copy Catalog",
                "description": "Copies one or multiple Catalogs.",
                "tags": [
                    "Catalog"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            }
        },
        "/rest/catalogs/catalogs/import": {
            "post": {
                "summary": "Import a catalog.",
                "description": "Imports the catalog. The catalog ID is required.",
                "tags": [
                    "Catalog"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Catalog"
                        },
                        "examples": {
                            "application/json": {
                                "active": false,
                                "showMandatoryFields": false,
                                "id": "31676456-7990-3e79-935b-a523d6876cfe",
                                "name": "Solon Waelchi",
                                "template": "3621a220-abe4-3842-96ba-fc7323334189",
                                "data": {
                                    "0": 12,
                                    "1": 152,
                                    "2": 216,
                                    "customMappings": [],
                                    "mappings": [],
                                    "filters": []
                                },
                                "settings": {
                                    "csv": {
                                        "delimiter": "comma",
                                        "enclosure": "double",
                                        "headerRowIncluded": true
                                    },
                                    "format": {
                                        "fileName": "",
                                        "numberRange": ""
                                    },
                                    "url": {
                                        "webstore": null,
                                        "public": {
                                            "enabled": true,
                                            "useToken": false,
                                            "useHash": true,
                                            "token": ""
                                        },
                                        "private": {
                                            "useHash": true
                                        }
                                    },
                                    "notice": {
                                        "notification": {
                                            "enabled": true
                                        },
                                        "email": {
                                            "enabled": false
                                        }
                                    },
                                    "async": {
                                        "performance": false
                                    },
                                    "devcache": false,
                                    "bundle": {
                                        "enabled": true,
                                        "size": 3
                                    },
                                    "export": {
                                        "scheduleDays": [
                                            "monday",
                                            "tuesday",
                                            "wednesday",
                                            "thursday",
                                            "friday",
                                            "saturday",
                                            "sunday"
                                        ],
                                        "skipEmptyFiles": false
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            }
        },
        "/rest/catalogs/catalogs/migrate": {
            "post": {
                "summary": "Migrate Catalogs",
                "description": "Migrates Catalogs from Dynamo DB to S3",
                "tags": [
                    "Catalog"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SimpleRestResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            }
        },
        "/rest/catalogs/catalogs/schedule/days": {
            "get": {
                "summary": "Return available schedule days list",
                "description": "Returns available schedules days list with key and translated value",
                "tags": [
                    "Catalog"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            }
        },
        "/rest/catalogs/catalogs/token": {
            "get": {
                "summary": "Generate token",
                "description": "Generates an alphanumeric token",
                "tags": [
                    "Catalog"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SimpleRestResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            }
        },
        "/rest/catalogs/catalogs/{catalogId}/copy": {
            "put": {
                "summary": "Copy Catalog format",
                "description": "Copies a Catalog format based on its ID.",
                "tags": [
                    "Catalog"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "catalogId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/catalogs/catalogs/{id}": {
            "delete": {
                "summary": "Delete Catalog",
                "description": "Deletes a Catalog based on its ID.",
                "tags": [
                    "Catalog"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/DeleteResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            },
            "get": {
                "summary": "Get Catalog",
                "description": "Gets a specific Catalog based on its ID.",
                "tags": [
                    "Catalog"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Catalog"
                        },
                        "examples": {
                            "application/json": {
                                "active": true,
                                "showMandatoryFields": true,
                                "id": "3eeab0e9-c5df-3b2b-afdc-01db7d892314",
                                "name": "Ms. Maudie Kemmer DDS",
                                "template": "6aea7c64-fbc1-3218-88a9-8e59a78d069b",
                                "data": {
                                    "0": 196,
                                    "1": 197,
                                    "2": 60,
                                    "customMappings": [],
                                    "mappings": [],
                                    "filters": []
                                },
                                "settings": {
                                    "csv": {
                                        "delimiter": "comma",
                                        "enclosure": "double",
                                        "headerRowIncluded": true
                                    },
                                    "format": {
                                        "fileName": "",
                                        "numberRange": ""
                                    },
                                    "url": {
                                        "webstore": null,
                                        "public": {
                                            "enabled": true,
                                            "useToken": false,
                                            "useHash": true,
                                            "token": ""
                                        },
                                        "private": {
                                            "useHash": true
                                        }
                                    },
                                    "notice": {
                                        "notification": {
                                            "enabled": true
                                        },
                                        "email": {
                                            "enabled": false
                                        }
                                    },
                                    "async": {
                                        "performance": false
                                    },
                                    "devcache": false,
                                    "bundle": {
                                        "enabled": true,
                                        "size": 3
                                    },
                                    "export": {
                                        "scheduleDays": [
                                            "monday",
                                            "tuesday",
                                            "wednesday",
                                            "thursday",
                                            "friday",
                                            "saturday",
                                            "sunday"
                                        ],
                                        "skipEmptyFiles": false
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            },
            "put": {
                "summary": "Update Catalog",
                "description": "Updates a Catalog based on its ID.",
                "tags": [
                    "Catalog"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Catalog"
                        },
                        "examples": {
                            "application/json": {
                                "active": true,
                                "showMandatoryFields": true,
                                "id": "a789516e-f8a4-37ea-a133-89c5f748c9b3",
                                "name": "Eriberto Grimes",
                                "template": "a45e0d02-d3ae-3b54-b205-8675585c4e52",
                                "data": {
                                    "0": 155,
                                    "1": 77,
                                    "2": 81,
                                    "customMappings": [],
                                    "mappings": [],
                                    "filters": []
                                },
                                "settings": {
                                    "csv": {
                                        "delimiter": "comma",
                                        "enclosure": "double",
                                        "headerRowIncluded": true
                                    },
                                    "format": {
                                        "fileName": "",
                                        "numberRange": ""
                                    },
                                    "url": {
                                        "webstore": null,
                                        "public": {
                                            "enabled": true,
                                            "useToken": false,
                                            "useHash": true,
                                            "token": ""
                                        },
                                        "private": {
                                            "useHash": true
                                        }
                                    },
                                    "notice": {
                                        "notification": {
                                            "enabled": true
                                        },
                                        "email": {
                                            "enabled": false
                                        }
                                    },
                                    "async": {
                                        "performance": false
                                    },
                                    "devcache": false,
                                    "bundle": {
                                        "enabled": true,
                                        "size": 3
                                    },
                                    "export": {
                                        "scheduleDays": [
                                            "monday",
                                            "tuesday",
                                            "wednesday",
                                            "thursday",
                                            "friday",
                                            "saturday",
                                            "sunday"
                                        ],
                                        "skipEmptyFiles": false
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/catalogs/catalogs/{id}/content": {
            "get": {
                "summary": "Get Catalog content",
                "description": "Gets the content of a Catalog based on its ID.",
                "tags": [
                    "Catalog"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            },
            "put": {
                "summary": "Update Catalog content",
                "description": "Updates the content of the Catalog.",
                "tags": [
                    "Catalog"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/catalogs/catalogs/{id}/export": {
            "get": {
                "summary": "Export a catalog.",
                "description": "Exports the catalog. The catalog ID is required.",
                "tags": [
                    "Catalog"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/mixed"
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/catalogs/catalogs/{id}/preview": {
            "get": {
                "summary": "Get preview catalog",
                "description": "Gets the preview for an export with a specific catalog",
                "tags": [
                    "Catalog"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Response"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/catalogs/catalogs/{id}/preview/vdi": {
            "get": {
                "summary": "Get preview VDI catalog",
                "description": "Gets the preview for an export with a specific VDI catalog",
                "tags": [
                    "Catalog"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/JsonResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/catalogs/catalogs/{id}/url/private": {
            "get": {
                "summary": "Build private download url",
                "description": "Builds the private download url with optional data\nThe data should use the same structure as the catalog options",
                "tags": [
                    "Catalog"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SimpleRestResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/catalogs/catalogs/{id}/url/public": {
            "get": {
                "summary": "Build public download url",
                "description": "Builds the public download url with optional data\nThe data should use the same structure as the catalog options",
                "tags": [
                    "Catalog"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SimpleRestResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/catalogs/catalogs/{id}/versions": {
            "get": {
                "summary": "Lists Catalog versions",
                "description": "Lists all versions of a specific Catalog, based on its ID.",
                "tags": [
                    "Catalog"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Collection"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/catalogs/catalogs/{id}/versions/{versionId}": {
            "get": {
                "summary": "Gets Catalog by version",
                "description": "Gets a specific catalog based on its ID and version.",
                "tags": [
                    "Catalog"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Catalog"
                        },
                        "examples": {
                            "application/json": {
                                "active": true,
                                "showMandatoryFields": false,
                                "id": "54493ee1-48af-35d1-9917-6975f232bad7",
                                "name": "Camden Torphy",
                                "template": "b57a0c27-4a21-325c-8276-7cb3a092556f",
                                "data": {
                                    "0": 191,
                                    "1": 58,
                                    "2": 82,
                                    "customMappings": [],
                                    "mappings": [],
                                    "filters": []
                                },
                                "settings": {
                                    "csv": {
                                        "delimiter": "comma",
                                        "enclosure": "double",
                                        "headerRowIncluded": true
                                    },
                                    "format": {
                                        "fileName": "",
                                        "numberRange": ""
                                    },
                                    "url": {
                                        "webstore": null,
                                        "public": {
                                            "enabled": true,
                                            "useToken": false,
                                            "useHash": true,
                                            "token": ""
                                        },
                                        "private": {
                                            "useHash": true
                                        }
                                    },
                                    "notice": {
                                        "notification": {
                                            "enabled": true
                                        },
                                        "email": {
                                            "enabled": false
                                        }
                                    },
                                    "async": {
                                        "performance": false
                                    },
                                    "devcache": false,
                                    "bundle": {
                                        "enabled": true,
                                        "size": 3
                                    },
                                    "export": {
                                        "scheduleDays": [
                                            "monday",
                                            "tuesday",
                                            "wednesday",
                                            "thursday",
                                            "friday",
                                            "saturday",
                                            "sunday"
                                        ],
                                        "skipEmptyFiles": false
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "versionId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/catalogs/catalogs/{id}/versions/{versionId}/restore": {
            "post": {
                "summary": "Restore version of Catalog",
                "description": "Restores a Catalog to a previous version.",
                "tags": [
                    "Catalog"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Catalog"
                        },
                        "examples": {
                            "application/json": {
                                "active": true,
                                "showMandatoryFields": false,
                                "id": "4a743dc6-da4e-31e1-bea8-6fbb97550d0b",
                                "name": "Mr. Theron Auer",
                                "template": "53248353-f92b-39d4-894f-2caf5b32e737",
                                "data": {
                                    "0": 93,
                                    "1": 198,
                                    "2": 213,
                                    "customMappings": [],
                                    "mappings": [],
                                    "filters": []
                                },
                                "settings": {
                                    "csv": {
                                        "delimiter": "comma",
                                        "enclosure": "double",
                                        "headerRowIncluded": true
                                    },
                                    "format": {
                                        "fileName": "",
                                        "numberRange": ""
                                    },
                                    "url": {
                                        "webstore": null,
                                        "public": {
                                            "enabled": true,
                                            "useToken": false,
                                            "useHash": true,
                                            "token": ""
                                        },
                                        "private": {
                                            "useHash": true
                                        }
                                    },
                                    "notice": {
                                        "notification": {
                                            "enabled": true
                                        },
                                        "email": {
                                            "enabled": false
                                        }
                                    },
                                    "async": {
                                        "performance": false
                                    },
                                    "devcache": false,
                                    "bundle": {
                                        "enabled": true,
                                        "size": 3
                                    },
                                    "export": {
                                        "scheduleDays": [
                                            "monday",
                                            "tuesday",
                                            "wednesday",
                                            "thursday",
                                            "friday",
                                            "saturday",
                                            "sunday"
                                        ],
                                        "skipEmptyFiles": false
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "versionId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/catalogs/connection/check/{protocol}": {
            "post": {
                "summary": "Check the connection to FTP, FTPS, SFTP",
                "description": "Checks connection to identify possible issues. Can handle FTP, FTPS, SFTP",
                "tags": [
                    "Catalog"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "protocol",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/catalogs/statuses": {
            "get": {
                "summary": "Get a list of Catalog statuses",
                "description": "Gets a list of Catalog statuses",
                "tags": [
                    "Catalog"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "page": {
                                    "type": "integer",
                                    "description": "Current page of the response"
                                },
                                "totalsCount": {
                                    "type": "integer",
                                    "description": "The total number of entries in the response"
                                },
                                "isLastPage": {
                                    "type": "boolean",
                                    "description": "Flag that indicates if the page shown is the last page of the response"
                                },
                                "lastPageNumber": {
                                    "type": "integer",
                                    "description": "The last page number"
                                },
                                "firstOnPage": {
                                    "type": "integer",
                                    "description": "The index of the first item of the current page result"
                                },
                                "lastOnPage": {
                                    "type": "integer",
                                    "description": "The index of the last item of the current page result"
                                },
                                "itemsPerPage": {
                                    "type": "integer",
                                    "description": "The requested amount of items per result page"
                                },
                                "entries": {
                                    "items": []
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                }
            }
        },
        "/rest/catalogs/statuses/{id}": {
            "get": {
                "summary": "Get Catalog status",
                "description": "Gets a specific Catalog status based on its ID.",
                "tags": [
                    "Catalog"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/JsonResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/catalogs/statuses/{id}/data": {
            "get": {
                "summary": "Get status data",
                "description": "Gets a status data. For testing purposes.",
                "tags": [
                    "Catalog"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/JsonResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/catalogs/statuses/{id}/histories": {
            "get": {
                "summary": "List status histories",
                "description": "Lists all status histories. For testing purposes.",
                "tags": [
                    "Catalog"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/JsonResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/catalogs/statuses/{id}/histories/{filename}": {
            "get": {
                "summary": "Get a single status history file",
                "description": "Gets a single status history file. For testing purposes.",
                "tags": [
                    "Catalog"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/JsonResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    },
                    {
                        "name": "filename",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/catalogs/statuses/{id}/logs": {
            "get": {
                "summary": "List status logs",
                "description": "Lists all status logs. For testing purposes.",
                "tags": [
                    "Catalog"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/JsonResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/catalogs/statuses/{id}/performances": {
            "get": {
                "summary": "List status performances",
                "description": "Lists all status performances. For testing purposes.",
                "tags": [
                    "Catalog"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/JsonResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        },
        "/rest/catalogs/statuses/{statusId}/cancel": {
            "post": {
                "summary": "Cancel export runs",
                "description": "Cancel export and live export runs.",
                "tags": [
                    "Catalog"
                ],
                "security": [
                    {
                        "oAuth2": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/JsonResponse"
                        }
                    },
                    "401": {
                        "description": "The resource owner or authorization server denied the request. - The request is missing a required parameter, includes an invalid parameter value, includes a parameter more than once, or is otherwise malformed. Check the \"access token\" parameter."
                    }
                },
                "parameters": [
                    {
                        "name": "statusId",
                        "type": "integer",
                        "required": true,
                        "description": "",
                        "format": "integer",
                        "in": "path"
                    }
                ]
            }
        }
    },
    "securityDefinitions": {
        "oAuth2": {
            "type": "oauth2",
            "description": "Authorization for Plentymarkets REST-API Routes",
            "flow": "accessCode",
            "authorizationUrl": "https://example.com/oauth/authorize",
            "tokenUrl": "https://example.com/oauth/token"
        }
    },
    "definitions": {
        "mixed": {
            "type": "object",
            "properties": []
        },
        "TokenData": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "The access token. Required for REST call authentication."
                },
                "tokenType": {
                    "type": "string",
                    "description": "The token type. The token type is Bearer."
                },
                "expiresIn": {
                    "type": "integer",
                    "description": "The expiration time in seconds that the access token is valid for"
                },
                "refreshToken": {
                    "type": "string",
                    "description": "The refresh token. Required for refreshing the access token."
                }
            }
        },
        "AccountingLocation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the accounting location"
                },
                "countryId": {
                    "type": "integer",
                    "description": "The ID of the country of the accounting location"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the accounting location"
                },
                "clientId": {
                    "type": "integer",
                    "description": "The ID of the client that the accounting location belongs to"
                },
                "plentyId": {
                    "type": "integer",
                    "description": "The plenty ID of the client that the accounting location belongs to"
                }
            }
        },
        "PostingAccounts": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": ""
                },
                "locationId": {
                    "type": "integer",
                    "description": ""
                },
                "type": {
                    "type": "string",
                    "description": ""
                },
                "position": {
                    "type": "integer",
                    "description": ""
                },
                "subtype": {
                    "type": "string",
                    "description": ""
                },
                "name": {
                    "type": "string",
                    "description": ""
                },
                "account": {
                    "type": "string",
                    "description": ""
                }
            }
        },
        "RevenueAccountLocationConfiguration": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the revenue account configuration"
                },
                "locationId": {
                    "type": "integer",
                    "description": "The ID of the accounting location that the configuration belongs to"
                },
                "accountEu": {
                    "type": "string",
                    "description": "The account used for revenues that are exempt from VAT and that were sold within the European Union"
                },
                "accountExport": {
                    "type": "string",
                    "description": "The account used for revenues that are exempt from VAT and that were sold to outside the European Union"
                }
            }
        },
        "RevenueAccountCountryConfiguration": {
            "type": "object",
            "properties": {
                "countryId": {
                    "type": "integer",
                    "description": "The ID of the country that the account configuration belongs to"
                },
                "revenueAccountLocationId": {
                    "type": "integer",
                    "description": "The ID configuration of the revenue account that these accounts are for."
                }
            }
        },
        "DebtorAccountConfiguration": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the debtor account configuration"
                },
                "locationId": {
                    "type": "integer",
                    "description": "The ID of the accounting location that the debtor account is associated with."
                },
                "mode": {
                    "type": "string",
                    "description": "The mode describes the criteria based on which pending amounts are assigned to a debtor account. The following modes are available:\n<ul>\n<li>character        = The debtor accounts are selected based on the first character of customer information. The information and the order of the information that will be used are defined with the sequence. There are 3 different sequences available.</li>\n<li>payment          = The debtor accounts are selected based on the payment method.</li>\n<li>country          = The debtor accounts are selected based on the country of delivery.</li>\n<li>country_payment  = The debtor accounts are selected based on two criteria. The first criteria is the country and if the country is same as the country of the accounting location then the payment method is used to select the deptor account.</li>\n</ul>"
                },
                "sequence": {
                    "type": "string",
                    "description": "The sequence defines the order in which customer information will be used for the debtor account assignment if the character made has been chosen. The following sequences are available:\n<ul>\n<li>FNV = stands for the sequence: company, lastname, firstname</li>\n<li>NVF = stands for the sequence: lastname, firstname, company</li>\n<li>NFV = stands for the sequence: lastname, company, firstname</li>\n</ul>"
                },
                "standard": {
                    "type": "string",
                    "description": "The standard debtor account that will be used if no matching debtor account can be found."
                },
                "save": {
                    "type": "boolean",
                    "description": "Flag that indicates if the debtor account shall be saved within the contact data."
                }
            }
        },
        "Collection": {
            "type": "object",
            "properties": []
        },
        "PostingKeyConfiguration": {
            "type": "object",
            "properties": {
                "locationId": {
                    "type": "integer",
                    "description": "The ID of the accounting location that the configuration belongs to"
                }
            }
        },
        "AccountingLocationSettings": {
            "type": "object",
            "properties": {
                "locationId": {
                    "type": "integer",
                    "description": "The ID of the accounting location"
                },
                "isInvoiceEUNet": {
                    "type": "boolean",
                    "description": "Is the invoice net for EU?"
                },
                "isInvoiceExportNet": {
                    "type": "boolean",
                    "description": "Is the invoice net for export?"
                },
                "showShippingVat": {
                    "type": "boolean",
                    "description": "Show the vat for shipping costs on the invoice?"
                },
                "isSmallBusiness": {
                    "type": "boolean",
                    "description": "Is it a small business?"
                },
                "numberOfDecimalPlaces": {
                    "type": "integer",
                    "description": "The number of decimal places for prices"
                },
                "roundTotalsOnly": {
                    "type": "boolean",
                    "description": "Do only round totals?"
                },
                "isReverseCharge": {
                    "type": "boolean",
                    "description": "Is the reverse charge method activated?"
                }
            }
        },
        "Account": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the account"
                },
                "number": {
                    "type": "string",
                    "description": "The number of the account"
                },
                "companyName": {
                    "type": "string",
                    "description": "The company name"
                },
                "taxIdNumber": {
                    "type": "string",
                    "description": "The ID of the tax number"
                },
                "valuta": {
                    "type": "integer",
                    "description": "The valuta date in days specified for the account"
                },
                "discountDays": {
                    "type": "integer",
                    "description": "The early payment discount period in days specified for the account"
                },
                "discountPercent": {
                    "type": "number",
                    "description": "The early payment discount in percent specified for the account"
                },
                "timeForPaymentAllowedDays": {
                    "type": "integer",
                    "description": "The payment due date in days specified for the account"
                },
                "salesRepresentativeContactId": {
                    "type": "integer",
                    "description": "The contact ID of the sales representative"
                },
                "userId": {
                    "type": "integer",
                    "description": "The ID of the account owner"
                },
                "deliveryTime": {
                    "type": "integer",
                    "description": "The delivery time for the supplier"
                },
                "dealerMinOrderValue": {
                    "type": "number",
                    "description": "The minimum order value for the supplier"
                },
                "supplierCurrency": {
                    "type": "string",
                    "description": "The currency used by a supplier"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the account was created as unix timestamp"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the account was last updated as unix timestamp"
                }
            }
        },
        "Address": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the address"
                },
                "gender": {
                    "type": "string",
                    "description": "The gender (\"female\", \"male\" or \"diverse\")"
                },
                "name1": {
                    "type": "string",
                    "description": "The name 1 field (defaults to: company name)"
                },
                "name2": {
                    "type": "string",
                    "description": "The name 2 field (defaults to: first name)"
                },
                "name3": {
                    "type": "string",
                    "description": "The name 3 field (defaults to: last name)"
                },
                "name4": {
                    "type": "string",
                    "description": "The name 4 field (defaults to: c/o)"
                },
                "address1": {
                    "type": "string",
                    "description": "The address 1 field (defaults to: street|'PACKSTATION'|'POSTFILIALE')"
                },
                "address2": {
                    "type": "string",
                    "description": "The address 2 field (defaults to: houseNumber|packstationNo)"
                },
                "address3": {
                    "type": "string",
                    "description": "The address 3 field (defaults to: additional)"
                },
                "address4": {
                    "type": "string",
                    "description": "The address 4 field is currently undefined and can be freely used."
                },
                "postalCode": {
                    "type": "string",
                    "description": "The postcode"
                },
                "town": {
                    "type": "string",
                    "description": "The town"
                },
                "countryId": {
                    "type": "integer",
                    "description": "The ID of the country"
                },
                "stateId": {
                    "type": "integer",
                    "description": "The ID of the state"
                },
                "readOnly": {
                    "type": "boolean",
                    "description": "Flag that indicates if the data record is read only"
                },
                "companyName": {
                    "type": "string",
                    "description": "The company name (alias for name1, <i>read only</i>)"
                },
                "firstName": {
                    "type": "string",
                    "description": "The first name (alias for name2, <i>read only</i>)"
                },
                "lastName": {
                    "type": "string",
                    "description": "The last name (alias for name3, <i>read only</i>)"
                },
                "careOf": {
                    "type": "string",
                    "description": "The c/o (alias for name4, <i>read only</i>)"
                },
                "street": {
                    "type": "string",
                    "description": "The street (alias for address1, <i>read only</i>)"
                },
                "houseNumber": {
                    "type": "string",
                    "description": "The house number (alias for address2, <i>read only</i>)"
                },
                "additional": {
                    "type": "string",
                    "description": "The additional address information (alias for address3, <i>read only</i>)"
                },
                "checkedAt": {
                    "type": "string",
                    "description": "The time the address was checked as unix timestamp"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the address was created as unix timestamp"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the address was last updated as unix timestamp"
                },
                "taxIdNumber": {
                    "type": "string",
                    "description": "The taxIdNumber option (alias for option with typeId 1, <i>read only</i>)"
                },
                "externalId": {
                    "type": "string",
                    "description": "The externalId option (alias for option with typeId 2, <i>read only</i>)"
                },
                "entryCertificate": {
                    "type": "boolean",
                    "description": "The entryCertificate option (alias for option with typeId 3, <i>read only</i>)"
                },
                "phone": {
                    "type": "string",
                    "description": "The phone option (alias for option with typeId 4, <i>read only</i>)"
                },
                "email": {
                    "type": "string",
                    "description": "The email option (alias for option with typeId 5, <i>read only</i>)"
                },
                "postident": {
                    "type": "string",
                    "description": "The PostIdent option (alias for option with typeId 6, <i>read only</i>)"
                },
                "personalNumber": {
                    "type": "string",
                    "description": "The personal number option (alias for option with typeId 7, <i>read only</i>)"
                },
                "fsk": {
                    "type": "string",
                    "description": "The age rating option (alias for option with typeId 8, <i>read only</i>)"
                },
                "birthday": {
                    "type": "string",
                    "description": "The birthday option (alias for option with typeId 9, <i>read only</i>)"
                },
                "title": {
                    "type": "string",
                    "description": "The title option (alias for option with typeId 11, <i>read only</i>)"
                },
                "sessionId": {
                    "type": "string",
                    "description": "The fronetnd session ID that was used when the address was created (alias for option with typeId 10, <i>read only</i>)"
                },
                "contactPerson": {
                    "type": "string",
                    "description": "The contact person option (alias for option with typeId 12, <i>read only</i>)"
                },
                "externalCustomerId": {
                    "type": "string",
                    "description": "The external customer ID option (alias for option with typeId 13, <i>read only</i>)"
                },
                "packstationNo": {
                    "type": "string",
                    "description": "The packstation number (alias for houseNumber and address2, <i>read only</i>)"
                },
                "isPackstation": {
                    "type": "boolean",
                    "description": "Flag that indicates if the address is a packstation"
                },
                "isPostfiliale": {
                    "type": "boolean",
                    "description": "Flag that indicates if the address is a postfiliale (post office)"
                }
            }
        },
        "AddressContactRelation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the address contact relation"
                },
                "contactId": {
                    "type": "integer",
                    "description": "The ID of the contact"
                },
                "typeId": {
                    "type": "integer",
                    "description": "The type ID of the address. Possible values:\n<ul>\n<li>Invoice address = 1</li>\n<li>Delivery address = 2</li>\n</ul>"
                },
                "addressId": {
                    "type": "integer",
                    "description": "The ID of the address"
                },
                "isPrimary": {
                    "type": "boolean",
                    "description": "Flag that indicates if the address is primary"
                }
            }
        },
        "AddressOptionType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the address option type. It is possible to define individual types. The following types are available by default:\n<ul>\n<li>1 = VAT number</li>\n<li>2 = External address ID</li>\n<li>3 = Entry certificate</li>\n<li>4 = Telephone</li>\n<li>5 = Email</li>\n<li>6 = Post number</li>\n<li>7 = Personal id</li>\n<li>8 = BBFC (age rating)</li>\n<li>9 = Birthday</li>\n<li>10 = Session ID</li>\n<li>11 = Title</li>\n<li>12 = Contact person</li>\n<li>13 = External customer ID</li>\n</ul>"
                },
                "position": {
                    "type": "integer",
                    "description": "The position for sorting"
                },
                "nonErasable": {
                    "type": "integer",
                    "description": "Flag that indicates if the type can be deleted"
                }
            }
        },
        "AddressOption": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the address option"
                },
                "addressId": {
                    "type": "integer",
                    "description": "The ID of the address"
                },
                "typeId": {
                    "type": "integer",
                    "description": "The ID of the address option type"
                },
                "value": {
                    "type": "string",
                    "description": "The option value"
                },
                "position": {
                    "type": "integer",
                    "description": "The position for sorting"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the option was created as unix timestamp"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the option was last updated as unix timestamp"
                }
            }
        },
        "AddressPosRelation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the address POS relation"
                },
                "posBaseId": {
                    "type": "string",
                    "description": "The ID of the POS base"
                },
                "addressId": {
                    "type": "string",
                    "description": "The ID of the address"
                },
                "typeId": {
                    "type": "integer",
                    "description": "The ID of the relation type"
                }
            }
        },
        "AddressRelationType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the address relation type. The following types are available by default and cannot be deleted:\n<ul>\n<li>1 = Billing address</li>\n<li>2 = Delivery address</li>\n<li>3 = Sender address</li>\n<li>4 = Return address</li>\n<li>5 = Client address</li>\n<li>6 = Contractor address</li>\n<li>7 = Warehouse address</li>\n<li>8 = POS address</li>\n</ul>"
                },
                "position": {
                    "type": "integer",
                    "description": "The position for sorting"
                },
                "nonErasable": {
                    "type": "integer",
                    "description": "Flag that indicates if the type can be deleted"
                }
            }
        },
        "AddressWarehouseRelation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the address warehouse relation"
                },
                "warehouseId": {
                    "type": "integer",
                    "description": "The ID of the warehouse"
                },
                "typeId": {
                    "type": "integer",
                    "description": "The ID of the type"
                },
                "addressId": {
                    "type": "integer",
                    "description": "The ID of the address"
                }
            }
        },
        "AccountContactRelation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the account contact relation"
                },
                "accountId": {
                    "type": "integer",
                    "description": "The ID of the foreign key account"
                },
                "contactId": {
                    "type": "integer",
                    "description": "The ID of the foreign key contact"
                }
            }
        },
        "Contact": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the contact"
                },
                "externalId": {
                    "type": "string",
                    "description": "The external ID of the contact"
                },
                "number": {
                    "type": "string",
                    "description": "The number of the contact (previous customer number)"
                },
                "typeId": {
                    "type": "integer",
                    "description": "The ID of the contact type"
                },
                "firstName": {
                    "type": "string",
                    "description": "The first name of the contact"
                },
                "lastName": {
                    "type": "string",
                    "description": "The last name of the contact"
                },
                "fullName": {
                    "type": "string",
                    "description": "The full name of the contact. A concatenation of first and last name."
                },
                "email": {
                    "type": "string",
                    "description": "The private email address of the contact"
                },
                "secondaryEmail": {
                    "type": "string",
                    "description": "The secondary private email address of the contact"
                },
                "gender": {
                    "type": "string",
                    "description": "The gender of the contact (\"female\", \"male\" or \"diverse\")"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the contact, e.g. a doctorate"
                },
                "formOfAddress": {
                    "type": "string",
                    "description": "The form of address for the contact"
                },
                "newsletterAllowanceAt": {
                    "type": "string",
                    "description": "The time the contact registered for the newsletter as unix timestamp"
                },
                "classId": {
                    "type": "integer",
                    "description": "The ID of the contact class"
                },
                "blocked": {
                    "type": "integer",
                    "description": "The blocked status of the contact. Contacts can be blocked for a specific client (store). Possible values:\n<ul>\n<li> 0 = not blocked</li>\n<li> 1 = blocked</li>\n</ul>"
                },
                "rating": {
                    "type": "integer",
                    "description": "The rating of the contact. This rating is for internal use only.\n5 red stars are for the worst and 5 yellow stars for the best rating. Possible values:\n<ul>\n<li>-5 = 5 red stars (worst rating)</li>\n<li>-4 = 4 red stars</li>\n<li>-3 = 3 red stars</li>\n<li>-2 = 2 red stars</li>\n<li>-1 = 1 red star</li>\n<li>0 = 5 grey stars, no rating saved for the contact</li>\n<li>1 = 1 yellow star</li>\n<li>2 = 2 yellow stars</li>\n<li>3 = 3 yellow stars</li>\n<li>4 = 4 yellow stars</li>\n<li>5 = 5 yellow stars (best rating)</li>\n</ul>"
                },
                "bookAccount": {
                    "type": "string",
                    "description": "The book account (debtor account) of the contact.\nAn additional, separate number that generally corresponds to the customer number or\nthe debtor number in your financial accounting."
                },
                "lang": {
                    "type": "string",
                    "description": "The language of the contact"
                },
                "referrerId": {
                    "type": "number",
                    "description": "The origin of the contact"
                },
                "plentyId": {
                    "type": "integer",
                    "description": "The client (store) that is assigned to the contact"
                },
                "userId": {
                    "type": "integer",
                    "description": "The owner ID of the contact"
                },
                "birthdayAt": {
                    "type": "string",
                    "description": "The date of birth of the contact"
                },
                "lastLoginAt": {
                    "type": "string",
                    "description": "The date of the last login of the contact"
                },
                "lastLoginAtTimestamp": {
                    "type": "string",
                    "description": "The date of the last login of the contact"
                },
                "lastOrderAt": {
                    "type": "string",
                    "description": "The date of the last order"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date the contact was created"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date the contact was last updated"
                },
                "privatePhone": {
                    "type": "string",
                    "description": "The private phone number of the contact"
                },
                "privateFax": {
                    "type": "string",
                    "description": "The private fax number of the contact"
                },
                "privateMobile": {
                    "type": "string",
                    "description": "The private mobile phone number of the contact"
                },
                "ebayName": {
                    "type": "string",
                    "description": "The eBay account name of the contact"
                },
                "paypalEmail": {
                    "type": "string",
                    "description": "The email address of the PayPal account of the contact"
                },
                "paypalPayerId": {
                    "type": "string",
                    "description": "The PayPal payer id of the contact"
                },
                "klarnaPersonalId": {
                    "type": "string",
                    "description": "The Klarna personal id of the contact"
                },
                "dhlPostIdent": {
                    "type": "string",
                    "description": "The DHL PostIdent of the contact"
                },
                "forumUsername": {
                    "type": "string",
                    "description": "The user name of the contact in the forum"
                },
                "forumGroupId": {
                    "type": "string",
                    "description": "The ID of the forum group that is assigned to the contact"
                },
                "singleAccess": {
                    "type": "string",
                    "description": "The access type of the contact"
                },
                "contactPerson": {
                    "type": "string",
                    "description": "The contact person of the contact"
                },
                "marketplacePartner": {
                    "type": "string",
                    "description": "The marketplace partner status of the contact"
                },
                "valuta": {
                    "type": "integer",
                    "description": "The foreign currency of the contact"
                },
                "discountDays": {
                    "type": "integer",
                    "description": "The early payment discount period in days specified for the account"
                },
                "discountPercent": {
                    "type": "number",
                    "description": "The early payment discount in percent specified for the account"
                },
                "timeForPaymentAllowedDays": {
                    "type": "integer",
                    "description": "The payment due date in days specified for the account"
                },
                "salesRepresentativeContactId": {
                    "type": "integer",
                    "description": "The salesRepresentative ID of the contact"
                },
                "anonymizeAt": {
                    "type": "string",
                    "description": "The date at which the contact will be anonymized."
                },
                "isLead": {
                    "type": "boolean",
                    "description": "Defines if contact is a lead."
                },
                "leadStatusKey": {
                    "type": "string",
                    "description": "The current lead status key"
                },
                "inLeadStatusSince": {
                    "type": "integer",
                    "description": "The number of days since the current lead status has been set"
                },
                "leadStatusUpdateAt": {
                    "type": "string",
                    "description": "DEPRECATED - See leadStatusUpdatedAt"
                },
                "position_id": {
                    "type": "integer",
                    "description": "The job position ID of the contact"
                }
            }
        },
        "ContactBank": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the bank account"
                },
                "contactId": {
                    "type": "integer",
                    "description": "The ID of the contact the bank account belongs to"
                },
                "orderId": {
                    "type": "integer",
                    "description": "The ID of the order the bank account belongs to"
                },
                "accountOwner": {
                    "type": "string",
                    "description": "The owner of the bank account"
                },
                "bankName": {
                    "type": "string",
                    "description": "The name of the bank"
                },
                "bankAddress": {
                    "type": "string",
                    "description": "The address of the bank"
                },
                "bankPostalCodeTown": {
                    "type": "string",
                    "description": "The postcode and town of the bank"
                },
                "bankCountry": {
                    "type": "string",
                    "description": "The country of the bank"
                },
                "iban": {
                    "type": "string",
                    "description": "The IBAN of the bank account"
                },
                "bic": {
                    "type": "string",
                    "description": "The BIC of the bank account"
                },
                "accountNumber": {
                    "type": "string",
                    "description": "The account number of the bank account"
                },
                "sortCode": {
                    "type": "string",
                    "description": "The sort code of the bank account"
                },
                "lastUpdateBy": {
                    "type": "string",
                    "description": "The source of the last change (possible values: `customer`, `backend`, `import`)"
                },
                "directDebitMandateAvailable": {
                    "type": "integer",
                    "description": "Flag that indicates if a direct debit mandate is available"
                },
                "directDebitMandateAt": {
                    "type": "string",
                    "description": "The time the direct debit mandate was created as unix timestamp"
                },
                "directDebitMethod": {
                    "type": "string",
                    "description": "The direct debit method (possible values: `sepaDirectDebit`, `sepaB2bDirectDebit`)"
                },
                "directDebitType": {
                    "type": "string",
                    "description": "The direct debit type (possible values: `first`, `next`)"
                },
                "paymentMethod": {
                    "type": "string",
                    "description": "The payment method (possible values: `recurrent`, `onOff`)"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the bank account was created as  unix timestamp"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the bank account was last updated as  unix timestamp"
                }
            }
        },
        "bool": {
            "type": "object",
            "properties": []
        },
        "string": {
            "type": "object",
            "properties": []
        },
        "ContactClass": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the contact class"
                },
                "name": {
                    "type": "string",
                    "description": ""
                },
                "priceColumn": {
                    "type": "integer",
                    "description": ""
                },
                "showPrice": {
                    "type": "integer",
                    "description": "Flag to display price in the online store as Gross(1) or Net(2)"
                },
                "discountType": {
                    "type": "integer",
                    "description": ""
                },
                "position": {
                    "type": "integer",
                    "description": ""
                },
                "pqsQuantity1": {
                    "type": "number",
                    "description": ""
                },
                "": {
                    "type": "number",
                    "description": "pqsDiscount10"
                },
                "pqsQuantity2": {
                    "type": "number",
                    "description": ""
                },
                "pqsQuantity3": {
                    "type": "number",
                    "description": ""
                },
                "pqsQuantity4": {
                    "type": "number",
                    "description": ""
                },
                "pqsQuantity5": {
                    "type": "number",
                    "description": ""
                },
                "pqsQuantity6": {
                    "type": "number",
                    "description": ""
                },
                "pqsQuantity7": {
                    "type": "number",
                    "description": ""
                },
                "pqsQuantity8": {
                    "type": "number",
                    "description": ""
                },
                "pqsQuantity9": {
                    "type": "number",
                    "description": ""
                },
                "pqsQuantity10": {
                    "type": "number",
                    "description": ""
                },
                "pnsQuantity1": {
                    "type": "number",
                    "description": ""
                },
                "pnsDiscount1": {
                    "type": "number",
                    "description": ""
                },
                "pnsQuantity2": {
                    "type": "number",
                    "description": ""
                },
                "pnsDiscount2": {
                    "type": "number",
                    "description": ""
                },
                "pnsQuantity3": {
                    "type": "number",
                    "description": ""
                },
                "pnsDiscount3": {
                    "type": "number",
                    "description": ""
                },
                "pnsQuantity4": {
                    "type": "number",
                    "description": ""
                },
                "pnsDiscount4": {
                    "type": "number",
                    "description": ""
                },
                "pnsQuantity5": {
                    "type": "number",
                    "description": ""
                },
                "pnsDiscount5": {
                    "type": "number",
                    "description": ""
                },
                "pmsMop": {
                    "type": "string",
                    "description": ""
                },
                "pmsDiscount": {
                    "type": "number",
                    "description": ""
                },
                "paqsDiscount": {
                    "type": "number",
                    "description": ""
                },
                "payableDueWithin": {
                    "type": "integer",
                    "description": ""
                },
                "minQuantity": {
                    "type": "integer",
                    "description": ""
                },
                "dontUseItemPriceRebates": {
                    "type": "integer",
                    "description": ""
                },
                "customerId": {
                    "type": "integer",
                    "description": ""
                },
                "allowedMops": {
                    "type": "string",
                    "description": "The list of allowed payment methods"
                },
                "pdwQuantity1": {
                    "type": "number",
                    "description": ""
                },
                "pdwDays1": {
                    "type": "integer",
                    "description": ""
                },
                "pdwQuantity2": {
                    "type": "number",
                    "description": ""
                },
                "pdwDays2": {
                    "type": "integer",
                    "description": ""
                },
                "pdwQuantity3": {
                    "type": "number",
                    "description": ""
                },
                "pdwDays3": {
                    "type": "integer",
                    "description": ""
                },
                "pdwQuantity4": {
                    "type": "number",
                    "description": ""
                },
                "pdwDays4": {
                    "type": "integer",
                    "description": ""
                },
                "pdwQuantity5": {
                    "type": "number",
                    "description": ""
                },
                "pdwDays5": {
                    "type": "integer",
                    "description": ""
                },
                "customerGroupsPaymentNotice": {
                    "type": "string",
                    "description": ""
                },
                "earlyPaymentDiscount": {
                    "type": "number",
                    "description": ""
                },
                "earlyPaymentDiscountDays": {
                    "type": "number",
                    "description": ""
                },
                "valuta": {
                    "type": "integer",
                    "description": ""
                },
                "manualDiscount": {
                    "type": "number",
                    "description": ""
                },
                "allowedMethodOfPaymentIdsList": {
                    "type": "array",
                    "items": [],
                    "description": ""
                }
            }
        },
        "ContactEvent": {
            "type": "object",
            "properties": {
                "eventId": {
                    "type": "integer",
                    "description": "The ID of the event"
                },
                "contactId": {
                    "type": "integer",
                    "description": "The ID of the contact this event belongs to"
                },
                "userId": {
                    "type": "integer",
                    "description": "The ID of the user this event belongs to"
                },
                "eventDuration": {
                    "type": "integer",
                    "description": "The duration of the event in seconds"
                },
                "eventType": {
                    "type": "string",
                    "description": "The type of the event. Possible values are call, ticket, email, meeting, webinar, development and design."
                },
                "orderRowId": {
                    "type": "integer",
                    "description": ""
                },
                "eventInfo": {
                    "type": "string",
                    "description": "Informational text about the event"
                },
                "billable": {
                    "type": "boolean",
                    "description": "Billable if set to 1"
                },
                "eventInsertedAt": {
                    "type": "string",
                    "description": "The date the event was created at as unix timestamp"
                },
                "eventBilledAt": {
                    "type": "string",
                    "description": "The date the event was billed at as unix timestamp"
                },
                "eventProvisionPaidAt": {
                    "type": "string",
                    "description": "The date the provision was paid at as unix timestamp"
                },
                "eventCreditValue": {
                    "type": "number",
                    "description": "The credit value of the event"
                }
            }
        },
        "ContactDepartment": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the contact department. It is possible to define individual departments. The following departments are available by default.\n<ul>\n<li>1 = Management</li>\n<li>2 = Purchasing Department</li>\n<li>3 = Sales Department</li>\n<li>4 = Research & Development Team</li>\n<li>5 = Production</li>\n<li>6 = Quality Assurance</li>\n<li>7 = Public Relations</li>\n<li>8 = Marketing Department</li>\n<li>9 = IT Department</li>\n<li>10 = EDP Team</li>\n<li>11 = Logistics</li>\n<li>12 = Warehousing Department</li>\n<li>13 = Export Department</li>\n<li>14 = Import Department</li>\n<li>15 = Customer Service</li>\n<li>16 = Technical Support Team</li>\n<li>17 = Human Resources</li>\n<li>18 = Accounting Department</li>\n<li>19 = Financial Department</li>\n<li>20 = Legal Department</li>\n<li>21 = Secretary's Office</li>\n</ul>"
                },
                "position": {
                    "type": "integer",
                    "description": "The position for sorting"
                }
            }
        },
        "ContactDepartmentName": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the contact department name"
                },
                "departmentId": {
                    "type": "integer",
                    "description": "The ID of the department"
                },
                "lang": {
                    "type": "string",
                    "description": "The language"
                },
                "name": {
                    "type": "string",
                    "description": "The name"
                }
            }
        },
        "SimpleRestResponse": {
            "type": "object",
            "properties": []
        },
        "ContactOptionSubType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the contact option sub-type. It is possible to define individual option sub-types. The following types are available by default and cannot be deleted.\n<ul>\n<li>1 = Work</li>\n<li>2 = Mobile private</li>\n<li>3 = Mobile work</li>\n<li>4 = Private</li>\n<li>5 = PayPal</li>\n<li>6 = Ebay</li>\n<li>7 = Amazon</li>\n<li>8 = Klarna</li>\n<li>9 = DHL</li>\n<li>10 = Forum</li>\n<li>11 = Guest</li>\n<li>12 = Contact person</li>\n<li>13 = Marketplace partner</li>\n<li>15 = User</li>\n</ul>"
                },
                "position": {
                    "type": "integer",
                    "description": "The position for sorting"
                },
                "nonErasable": {
                    "type": "integer",
                    "description": "Flag that indicates if the option sub-type can be deleted"
                }
            }
        },
        "ContactOptionType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the contact option type. It is possible to define individual option types. The following types are available by default and cannot be deleted.\n<ul>\n<li>1 = Telephone</li>\n<li>2 = Email</li>\n<li>3 = Telefax</li>\n<li>4 = Web page</li>\n<li>5 = Marketplace</li>\n<li>6 = Identification number</li>\n<li>7 = Payment</li>\n<li>8 = User name</li>\n<li>9 = Group</li>\n<li>10 = Access</li>\n<li>11 = Additional</li>\n<li>13 = Converted by</li>\n</ul>"
                },
                "position": {
                    "type": "integer",
                    "description": "The position for sorting"
                },
                "nonErasable": {
                    "type": "integer",
                    "description": "Flag that indicates if the option type can be deleted"
                }
            }
        },
        "ContactOption": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the contact option"
                },
                "contactId": {
                    "type": "integer",
                    "description": "The ID of the contact the option belongs to"
                },
                "typeId": {
                    "type": "integer",
                    "description": "The type ID of the contact option.\nIt is possible to define individual contact option types.\nThe following types are available by default and cannot be deleted:\n<ul>\n<li>1 = Telephone</li>\n<li>2 = Email</li>\n<li>3 = Telefax</li>\n<li>4 = Web page</li>\n<li>5 = Marketplace</li>\n<li>6 = Identification number</li>\n<li>7 = Payment</li>\n<li>8 = User name</li>\n<li>9 = Group</li>\n<li>10 = Access</li>\n<li>11 = Additional</li>\n<li>13 = Converted by</li>\n</ul>"
                },
                "subTypeId": {
                    "type": "integer",
                    "description": "The sub-type ID of the contact option.\nIt is possible to define individual contact option sub-types.\nThe following types are available by default and cannot be deleted:\n<ul>\n<li>1 = Work</li>\n<li>2 = Mobile private</li>\n<li>3 = Mobile work</li>\n<li>4 = Private</li>\n<li>5 = PayPal</li>\n<li>6 = Ebay</li>\n<li>7 = Amazon</li>\n<li>8 = Klarna</li>\n<li>9 = DHL</li>\n<li>10 = Forum</li>\n<li>11 = Guest</li>\n<li>12 = Contact person</li>\n<li>13 = Marketplace partner</li>\n<li>15 = User</li>\n</ul>"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the option. Depends on the type/sub-type."
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority for sorting"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the option was created as unix timestamp"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the option was last updated as unix timestamp"
                }
            }
        },
        "ContactPosition": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the contact position. It is possible to define individual contact positions. The following positions are available by default:\n<ul>\n<li>1 = Analyst</li>\n<li>2 = Director of Boards</li>\n<li>3 = CEO</li>\n<li>4 = Buyer</li>\n<li>5 = Purchasing Manager</li>\n<li>6 = CFO</li>\n<li>7 = Director General</li>\n<li>8 = Managing Director</li>\n<li>9 = Codirector</li>\n<li>10 = Commercial Agent</li>\n<li>11 = Assistant</li>\n<li>12 = Service Engineer</li>\n<li>13 = Warehouse Manager</li>\n<li>14 = Warehouse Worker</li>\n<li>15 = Senior Executive</li>\n<li>16 = Assistent</li>\n<li>17 = Purchasing Assistent</li>\n<li>18 = Software Developer</li>\n<li>19 = Sales Representative</li>\n<li>20 = Sales Manager</li>\n<li>21 = Export Sales Manager</li>\n<li>22 = Wholesale Distributing Manager</li>\n<li>23 = Secretary</li>\n<li>24 = Economist</li>\n<li>25 = Management Board</li>\n</ul>"
                },
                "position": {
                    "type": "integer",
                    "description": "The position for sorting"
                }
            }
        },
        "ContactPositionName": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the contact position name"
                },
                "positionId": {
                    "type": "integer",
                    "description": "The ID of the position"
                },
                "lang": {
                    "type": "string",
                    "description": "The language"
                },
                "name": {
                    "type": "string",
                    "description": "The name"
                }
            }
        },
        "ContactType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the contact type. It is possible to define individual contact types. The following types are available by default and cannot be deleted.\n<ul>\n<li>1 = Customer</li>\n<li>2 = Sales lead/Interested party</li>\n<li>3 = Sales representative</li>\n<li>4 = Supplier</li>\n<li>5 = Producer/Manufacturer</li>\n<li>6 = Partner</li>\n</ul>"
                },
                "position": {
                    "type": "integer",
                    "description": "The position for sorting"
                },
                "nonErasable": {
                    "type": "integer",
                    "description": "Flag that indicates if the type can be deleted"
                }
            }
        },
        "StorageObject": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": ""
                },
                "path": {
                    "type": "string",
                    "description": ""
                },
                "lastModified": {
                    "type": "string",
                    "description": ""
                },
                "metaData": {
                    "type": "array",
                    "items": [],
                    "description": ""
                },
                "eTag": {
                    "type": "string",
                    "description": ""
                },
                "size": {
                    "type": "integer",
                    "description": ""
                },
                "storageClass": {
                    "type": "string",
                    "description": ""
                },
                "body": {
                    "type": "string",
                    "description": ""
                },
                "contentType": {
                    "type": "string",
                    "description": ""
                },
                "contentLength": {
                    "type": "string",
                    "description": ""
                }
            }
        },
        "StorageObjectList": {
            "type": "object",
            "properties": {
                "isTruncated": {
                    "type": "boolean",
                    "description": ""
                },
                "nextContinuationToken": {
                    "type": "string",
                    "description": ""
                },
                "commonPrefixes": {
                    "type": "array",
                    "items": [],
                    "description": ""
                }
            }
        },
        "Job": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the job"
                },
                "position": {
                    "type": "integer",
                    "description": "The position ID"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date the contact was created"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date the contact was last updated"
                }
            }
        },
        "OrderSummary": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the order summary"
                },
                "addressId": {
                    "type": "integer",
                    "description": "The address ID of the order summary"
                },
                "contactId": {
                    "type": "integer",
                    "description": "The ID of the contact"
                },
                "unpaidOrdersCount": {
                    "type": "integer",
                    "description": "The number of unpaid orders"
                },
                "unpaidOrderTotalAmount": {
                    "type": "number",
                    "description": "The total amount of unpaid orders"
                },
                "orderCount": {
                    "type": "integer",
                    "description": "The number of all orders of the associated model"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the order summary was created as unix timestamp"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the order summary was last updated as unix timestamp"
                }
            }
        },
        "SimpleJsonResponse": {
            "type": "object",
            "properties": []
        },
        "SalesRepresentativeRegion": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the account contact sales representative relation"
                },
                "accountContactRelationId": {
                    "type": "integer",
                    "description": "The ID of the foreign key account contact relation"
                },
                "postalCodeArea": {
                    "type": "string",
                    "description": ""
                },
                "countryId": {
                    "type": "integer",
                    "description": ""
                }
            }
        },
        "AddressLayout": {
            "type": "object",
            "properties": {
                "isDefault": {
                    "type": "boolean",
                    "description": ""
                },
                "uuid": {
                    "type": "string",
                    "description": ""
                },
                "countries": {
                    "type": "array",
                    "items": [],
                    "description": "Class AddressLayout"
                }
            }
        },
        "Order": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the order"
                },
                "typeId": {
                    "type": "integer",
                    "description": "The ID of the order type\n                                                          It is possible to define individual order types. However,\n                                                          the following types are available by default:\n\n* 1 = Sales order\n* 2 = Delivery\n* 3 = Returns\n* 4 = Credit note\n* 5 = Warranty\n* 6 = Repair\n* 7 = Offer\n* 8 = Advance order\n* 9 = Multi-order\n* 10 = Multi credit note\n* 11 = Multi delivery\n* 12 = Reorder\n* 13 = Partial delivery\n* 14 = Subscription\n* 15 = Redistribution"
                },
                "statusId": {
                    "type": "number",
                    "description": "The ID of the order status"
                },
                "statusName": {
                    "type": "string",
                    "description": "The name for the status ID (read only)"
                },
                "ownerId": {
                    "type": "integer",
                    "description": "The user ID of the order's owner"
                },
                "referrerId": {
                    "type": "number",
                    "description": "The referrer ID of the order"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date that the order was created"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date that the order was updated last"
                },
                "plentyId": {
                    "type": "integer",
                    "description": "The plenty ID of the client that the order belongs to"
                },
                "locationId": {
                    "type": "integer",
                    "description": "The ID of the location that the order belongs to"
                },
                "roundTotalsOnly": {
                    "type": "boolean",
                    "description": "True means only the order's total amounts are rounded, false the order item price is rounded too. (read-only)"
                },
                "numberOfDecimals": {
                    "type": "integer",
                    "description": "The number of decimals this order was rounded with. (read-only)"
                },
                "lockStatus": {
                    "type": "string",
                    "description": "The lock status of the order. The following statuses are available:\n\n* unlocked\n* permanentlyLocked\n* reversibleLocked"
                },
                "isLocked": {
                    "type": "boolean",
                    "description": "True, if the order has the lock status \"unlocked\". False otherwise."
                },
                "hasTaxRelevantDocuments": {
                    "type": "boolean",
                    "description": ""
                },
                "hasDeliveryOrders": {
                    "type": "boolean",
                    "description": "Has the order delivery orders?"
                },
                "legacyOrderType": {
                    "type": "string",
                    "description": "The legacy order type as string"
                },
                "contactSenderId": {
                    "type": "integer",
                    "description": ""
                },
                "contactReceiverId": {
                    "type": "integer",
                    "description": ""
                },
                "warehouseSenderId": {
                    "type": "integer",
                    "description": ""
                },
                "warehouseReceiverId": {
                    "type": "integer",
                    "description": ""
                }
            }
        },
        "Archive": {
            "type": "object",
            "properties": {
                "file": {
                    "type": "string",
                    "description": "The file name of the archive"
                },
                "month": {
                    "type": "integer",
                    "description": "The month of the archive"
                },
                "year": {
                    "type": "integer",
                    "description": "The year of the archive"
                },
                "size": {
                    "type": "integer",
                    "description": "The size of the archive"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the file. Possible values are: accessible, restore_in_progress, archived"
                }
            }
        },
        "Response": {
            "type": "object",
            "properties": []
        },
        "EntityGroup": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The group name"
                }
            }
        },
        "SystemConfig": {
            "type": "object",
            "properties": {
                "archiveActive": {
                    "type": "boolean",
                    "description": "Is the Archive activated"
                }
            }
        },
        "JsonResponse": {
            "type": "object",
            "properties": []
        },
        "Availability": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of this availability"
                },
                "icon": {
                    "type": "string",
                    "description": "The icon of this availability"
                },
                "averageDays": {
                    "type": "integer",
                    "description": "The average delivery time in days for this availability"
                }
            }
        },
        "AvailabilityName": {
            "type": "object",
            "properties": {
                "availabilityId": {
                    "type": "integer",
                    "description": "The ID of the availability that the name belongs to"
                },
                "lang": {
                    "type": "string",
                    "description": "The <a href=\"https://developers.plentymarkets.com/rest-doc/introduction#languages\" target=\"_blank\">language code</a> of the availability name"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the item availability in the specified language"
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": ""
                },
                "user": {
                    "type": "string",
                    "description": ""
                },
                "realName": {
                    "type": "string",
                    "description": ""
                },
                "lang": {
                    "type": "string",
                    "description": ""
                },
                "ipLimit": {
                    "type": "string",
                    "description": ""
                },
                "ustatus": {
                    "type": "boolean",
                    "description": ""
                },
                "memberId": {
                    "type": "integer",
                    "description": ""
                },
                "timestamp": {
                    "type": "string",
                    "description": ""
                },
                "email": {
                    "type": "string",
                    "description": ""
                },
                "timezone": {
                    "type": "string",
                    "description": ""
                },
                "googleEmail": {
                    "type": "string",
                    "description": ""
                },
                "skype": {
                    "type": "string",
                    "description": ""
                },
                "ical": {
                    "type": "string",
                    "description": ""
                },
                "psConfig": {
                    "type": "boolean",
                    "description": ""
                },
                "psItem": {
                    "type": "boolean",
                    "description": ""
                },
                "psEbay": {
                    "type": "boolean",
                    "description": ""
                },
                "psStock": {
                    "type": "boolean",
                    "description": ""
                },
                "psCustomer": {
                    "type": "boolean",
                    "description": ""
                },
                "psOrder": {
                    "type": "boolean",
                    "description": ""
                },
                "psStats": {
                    "type": "boolean",
                    "description": ""
                },
                "psData": {
                    "type": "boolean",
                    "description": ""
                },
                "pcConfig": {
                    "type": "boolean",
                    "description": ""
                },
                "pcContent": {
                    "type": "boolean",
                    "description": ""
                },
                "pcNewsletter": {
                    "type": "boolean",
                    "description": ""
                },
                "pcLayout": {
                    "type": "boolean",
                    "description": ""
                },
                "pcDialog": {
                    "type": "boolean",
                    "description": ""
                },
                "pcStats": {
                    "type": "boolean",
                    "description": ""
                },
                "pcData": {
                    "type": "boolean",
                    "description": ""
                },
                "pcBlog": {
                    "type": "boolean",
                    "description": ""
                },
                "signature": {
                    "type": "string",
                    "description": ""
                },
                "color": {
                    "type": "string",
                    "description": ""
                },
                "eks": {
                    "type": "boolean",
                    "description": ""
                },
                "payments": {
                    "type": "boolean",
                    "description": ""
                },
                "acceptAgb": {
                    "type": "integer",
                    "description": ""
                },
                "api": {
                    "type": "boolean",
                    "description": ""
                },
                "image": {
                    "type": "string",
                    "description": ""
                },
                "delOrder": {
                    "type": "boolean",
                    "description": ""
                },
                "delArticle": {
                    "type": "boolean",
                    "description": ""
                },
                "delRecord": {
                    "type": "boolean",
                    "description": ""
                },
                "plentystat": {
                    "type": "boolean",
                    "description": ""
                },
                "plentyconnect": {
                    "type": "boolean",
                    "description": ""
                },
                "webspaceAccess": {
                    "type": "boolean",
                    "description": ""
                },
                "accessControlList": {
                    "type": "string",
                    "description": ""
                },
                "plentymarketsShippingOrderId": {
                    "type": "boolean",
                    "description": ""
                },
                "plentymarketsShippingItem": {
                    "type": "boolean",
                    "description": ""
                },
                "plentymarketsShippingAuto": {
                    "type": "boolean",
                    "description": ""
                },
                "plentymarketsShippingLabel": {
                    "type": "boolean",
                    "description": ""
                },
                "plentymarketsShippingConfig": {
                    "type": "boolean",
                    "description": ""
                },
                "warehouseId": {
                    "type": "integer",
                    "description": ""
                },
                "calendar": {
                    "type": "boolean",
                    "description": ""
                },
                "orderStatus": {
                    "type": "string",
                    "description": ""
                },
                "warehouseRepairId": {
                    "type": "integer",
                    "description": ""
                },
                "project": {
                    "type": "boolean",
                    "description": ""
                },
                "ticket": {
                    "type": "boolean",
                    "description": ""
                },
                "order": {
                    "type": "boolean",
                    "description": ""
                },
                "blog": {
                    "type": "boolean",
                    "description": ""
                },
                "lead": {
                    "type": "boolean",
                    "description": ""
                },
                "customer": {
                    "type": "boolean",
                    "description": ""
                },
                "totalVacationDays": {
                    "type": "number",
                    "description": ""
                },
                "roleId": {
                    "type": "integer",
                    "description": ""
                },
                "salutation": {
                    "type": "string",
                    "description": ""
                },
                "dataLang": {
                    "type": "string",
                    "description": ""
                },
                "disabled": {
                    "type": "boolean",
                    "description": ""
                },
                "scheduler": {
                    "type": "boolean",
                    "description": ""
                },
                "item": {
                    "type": "boolean",
                    "description": ""
                },
                "incomingItems": {
                    "type": "boolean",
                    "description": ""
                },
                "backendPluginSetId": {
                    "type": "integer",
                    "description": "The ID of the user's selected backend set"
                }
            }
        },
        "Basket": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the shopping cart. The ID increases by 1 when a new customer enters the online store and adds an item to the shopping cart."
                },
                "sessionId": {
                    "type": "string",
                    "description": "The ID of the current customer session"
                },
                "orderId": {
                    "type": "integer",
                    "description": "The ID of the order"
                },
                "customerId": {
                    "type": "integer",
                    "description": "The ID of the customer"
                },
                "customerInvoiceAddressId": {
                    "type": "integer",
                    "description": "The ID of the customer's invoice address"
                },
                "customerShippingAddressId": {
                    "type": "integer",
                    "description": "The ID of the customer's shipping address"
                },
                "currency": {
                    "type": "string",
                    "description": "The currency"
                },
                "referrerId": {
                    "type": "number",
                    "description": "The ID of the order referrer"
                },
                "shippingCountryId": {
                    "type": "integer",
                    "description": "The ID of the shipping country"
                },
                "methodOfPaymentId": {
                    "type": "integer",
                    "description": "The ID of the payment method"
                },
                "shippingProviderId": {
                    "type": "integer",
                    "description": "The ID of the shipping provider"
                },
                "shippingProfileId": {
                    "type": "integer",
                    "description": "The ID of the shipping profile"
                },
                "itemSum": {
                    "type": "number",
                    "description": "The gross value of items in the shopping cart"
                },
                "itemSumNet": {
                    "type": "number",
                    "description": "The net value of items in the shopping cart"
                },
                "basketAmount": {
                    "type": "number",
                    "description": "The total gross value of the shopping cart"
                },
                "basketAmountNet": {
                    "type": "number",
                    "description": "The total net value of the shopping cart"
                },
                "shippingAmount": {
                    "type": "number",
                    "description": "The gross shipping costs"
                },
                "shippingAmountNet": {
                    "type": "number",
                    "description": "The net shipping costs"
                },
                "paymentAmount": {
                    "type": "number",
                    "description": "The amount of the payment"
                },
                "couponCode": {
                    "type": "string",
                    "description": "The entered coupon code"
                },
                "couponDiscount": {
                    "type": "number",
                    "description": "The received discount due to the coupon code"
                },
                "shippingDeleteByCoupon": {
                    "type": "boolean",
                    "description": "Shows whether the shipping costs are subtracted due to a coupon code. Shopping carts that are free of shipping costs have the value true."
                },
                "basketRebate": {
                    "type": "number",
                    "description": "The discount to the shopping cart value. The discount can either be set as a discount scale for items, as a customer class discount or as a discount based on the payment method."
                },
                "basketRebateType": {
                    "type": "integer",
                    "description": "The discount type. The following types are available:\n<ul>\n    <li>Discount scale based on net value of items = 4</li>\n    <li>    Discount based on method of payment = 5</li>\n</ul>"
                },
                "maxFsk": {
                    "type": "integer",
                    "description": "The age rating"
                },
                "orderTimestamp": {
                    "type": "integer",
                    "description": "The timestamp of the order"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date that the shopping cart was created."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date that the shopping cart was updated last."
                }
            }
        },
        "BasketItem": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the item in the shopping cart"
                },
                "basketId": {
                    "type": "integer",
                    "description": "The ID of the shopping cart. The ID increases by 1 when a new customer enters the online store and adds an item to the shopping cart."
                },
                "sessionId": {
                    "type": "string",
                    "description": "The ID of the current customer session"
                },
                "orderRowId": {
                    "type": "integer",
                    "description": ""
                },
                "quantity": {
                    "type": "number",
                    "description": "The current quantity of the item"
                },
                "quantityOriginally": {
                    "type": "number",
                    "description": "The initial quantity of the item"
                },
                "itemId": {
                    "type": "integer",
                    "description": "The ID of the item"
                },
                "priceId": {
                    "type": "integer",
                    "description": "The ID of the item price"
                },
                "attributeValueSetId": {
                    "type": "integer",
                    "description": "The ID of the attribute value set"
                },
                "rebate": {
                    "type": "integer",
                    "description": "The discount on the item"
                },
                "vat": {
                    "type": "number",
                    "description": "The VAT"
                },
                "price": {
                    "type": "number",
                    "description": "The item price"
                },
                "givenPrice": {
                    "type": "number",
                    "description": "The given item price"
                },
                "givenVatId": {
                    "type": "integer",
                    "description": "The given vat id."
                },
                "useGivenPrice": {
                    "type": "boolean",
                    "description": "The flag to use the given values"
                },
                "inputWidth": {
                    "type": "integer",
                    "description": "The width of the item"
                },
                "inputLength": {
                    "type": "integer",
                    "description": "The length of the item"
                },
                "inputHeight": {
                    "type": "integer",
                    "description": "The height of the item"
                },
                "itemType": {
                    "type": "integer",
                    "description": "The item type"
                },
                "externalItemId": {
                    "type": "string",
                    "description": "The external variation ID"
                },
                "noEditByCustomer": {
                    "type": "boolean",
                    "description": "Shows whether the item was edited by the customer"
                },
                "costCenterId": {
                    "type": "integer",
                    "description": ""
                },
                "giftPackageForRowId": {
                    "type": "integer",
                    "description": ""
                },
                "position": {
                    "type": "integer",
                    "description": "The item position"
                },
                "size": {
                    "type": "string",
                    "description": "The item size"
                },
                "shippingProfileId": {
                    "type": "integer",
                    "description": "The ID of the shipping profile"
                },
                "referrerId": {
                    "type": "number",
                    "description": "The ID of the order referrer"
                },
                "deliveryDate": {
                    "type": "string",
                    "description": "The delivery date"
                },
                "categoryId": {
                    "type": "integer",
                    "description": "The ID of the item category"
                },
                "reservationDatetime": {
                    "type": "integer",
                    "description": ""
                },
                "variationId": {
                    "type": "integer",
                    "description": "The ID of the item variation"
                },
                "bundleVariationId": {
                    "type": "integer",
                    "description": "The ID of the item bundle type"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date that the shopping cart was created"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date that the shopping cart was updated last"
                },
                "attributeTotalMarkup": {
                    "type": "number",
                    "description": "attribute total markup"
                },
                "basketItemOrderParams": {
                    "type": "array",
                    "items": [],
                    "description": "Array of BasketItemParams"
                },
                "basketItemVariationProperties": {
                    "type": "array",
                    "items": [],
                    "description": "Array of BasketItemVariationProperties"
                }
            }
        },
        "KeyFigureConfig": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Id of this configuration"
                },
                "hash": {
                    "type": "string",
                    "description": "Hash value to check for updates and avoid duplicate key figures with the same filters"
                },
                "plentyId": {
                    "type": "integer",
                    "description": "The plentymarkets system id"
                },
                "plentyIdHash": {
                    "type": "string",
                    "description": "The plentymarkets system id hash"
                },
                "keyFigure": {
                    "type": "string",
                    "description": "Key figure identifier"
                },
                "keyFigureCaption": {
                    "type": "string",
                    "description": "Key figure caption"
                },
                "keyFigureName": {
                    "type": "string",
                    "description": "User defined name"
                },
                "direct": {
                    "type": "boolean",
                    "description": "This key figure triggers a direct calculation without saving the result"
                },
                "freeOfCharge": {
                    "type": "boolean",
                    "description": "Is this key figure free of charge"
                },
                "isGlobal": {
                    "type": "boolean",
                    "description": ""
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Time of last change"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Time of creation"
                },
                "externalId": {
                    "type": "string",
                    "description": "Identifier to assign the model"
                },
                "dimensions": {
                    "type": "array",
                    "items": [],
                    "description": "List of existing dimensions"
                },
                "dimensionValues": {
                    "type": "array",
                    "items": [],
                    "description": "List of dimension values"
                },
                "category": {
                    "type": "string",
                    "description": "The translated category text of the keyfigure"
                },
                "aggregateFunctions": {
                    "type": "array",
                    "items": [],
                    "description": "List of supported SQL aggregate functions"
                }
            }
        },
        "KeyFigure": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string",
                    "description": ""
                },
                "description": {
                    "type": "string",
                    "description": ""
                },
                "category": {
                    "type": "string",
                    "description": "Key figure category name"
                },
                "keyFigure": {
                    "type": "string",
                    "description": ""
                },
                "dataSeries": {
                    "type": "boolean",
                    "description": ""
                },
                "resultFields": {
                    "type": "array",
                    "items": [],
                    "description": ""
                },
                "primaryResultField": {
                    "type": "string",
                    "description": ""
                },
                "rawDataDeleteAble": {
                    "type": "boolean",
                    "description": "Raw data should be deleted from the data warehouse"
                },
                "freeOfCharge": {
                    "type": "boolean",
                    "description": "Is this key figure free of charge"
                },
                "rawDataColumns": {
                    "type": "array",
                    "items": [],
                    "description": ""
                },
                "resultExportColumns": {
                    "type": "array",
                    "items": [],
                    "description": ""
                },
                "calculation": {
                    "type": "array",
                    "items": [],
                    "description": ""
                },
                "dimensions": {
                    "type": "array",
                    "items": [],
                    "description": ""
                },
                "dataFilters": {
                    "type": "array",
                    "items": [],
                    "description": ""
                },
                "aggregateFunctions": {
                    "type": "array",
                    "items": [],
                    "description": "List of allowed sql aggregate functions. The user can select a value for the display of the calculation results."
                },
                "resultUnitsList": {
                    "type": "array",
                    "items": [],
                    "description": "List of possible result units. [ ['calculation' => 'exampleCalculation', 'unit' => 'exampleUnit'], [...] ]"
                }
            }
        },
        "int": {
            "type": "object",
            "properties": []
        },
        "KeyFigureResultSearchResponse": {
            "type": "object",
            "properties": []
        },
        "KeyFigureSearchRequest": {
            "type": "object",
            "properties": {
                "configId": {
                    "type": "string",
                    "description": "Filter that restricts the search result to key figure results of key figure configuration id. The id of the key figure configuration is mandatory and must be specified, if no value is passed for id."
                },
                "interval": {
                    "type": "string",
                    "description": "Time interval in which the result was calculated: day, week, month, quarter, year."
                },
                "dimension": {
                    "type": "string",
                    "description": "This field will be removed until 11.2020"
                },
                "dimensions": {
                    "type": "array",
                    "items": [],
                    "description": "Filter that restricts the search result to key figure results of one data group. The dimension must be specified."
                },
                "scaleBasis": {
                    "type": "string",
                    "description": "Filter restricts the list of results to items with a scale base time during the specified period. For the time interval day, a date or comma separated two dates (format: YYYYMMDD) can be specified. For the time interval week, several comma-separated days (YYYYMMDD) of different weeks can be specified. For the interval month, a comma separated list of months is expected e.g. 2020-01, 2020-02."
                },
                "resultId": {
                    "type": "boolean",
                    "description": "Return ID of key figure result"
                },
                "resultUnit": {
                    "type": "boolean",
                    "description": "Return unit of the primary result."
                },
                "target": {
                    "type": "boolean",
                    "description": "Return key figure target figure."
                },
                "groupByDimension": {
                    "type": "boolean",
                    "description": "Groups the results by dimension"
                },
                "aggregateFunction": {
                    "type": "string",
                    "description": "Define aggregate (group) function that will operate on key figure results. Default function: sum. Allowed values: sum, avg, count, max, min"
                },
                "itemsPerPage": {
                    "type": "integer",
                    "description": "Limits the number of results listed per page to a specific number. The number of variations to be listed per page must be specified. The default number of results is 12 and the maximum is 100."
                },
                "page": {
                    "type": "integer",
                    "description": "Number of the requested page, default value: 1"
                },
                "searchId": {
                    "type": "string",
                    "description": "Identification string to assign the result"
                },
                "calculatedAt": {
                    "type": "string",
                    "description": "Filter that restricts the search result to key figure results which have been calculated as of this date (format: YYYY-MM-DD HH:II:SS)"
                },
                "sortBy": {
                    "type": "array",
                    "items": [],
                    "description": "Sort the results options."
                },
                "displayZeroPrimaryValue": {
                    "type": "boolean",
                    "description": "Display zero results on the UI"
                }
            }
        },
        "RawDataSearchResult": {
            "type": "object",
            "properties": {
                "after": {
                    "type": "string",
                    "description": "The last evaluated key as base64, provide that as the starting point for the next query (pagination)."
                }
            }
        },
        "RawDataConfigs": {
            "type": "object",
            "properties": {
                "plentyIdHash": {
                    "type": "string",
                    "description": "The plentymarkets system id hash"
                }
            }
        },
        "BlogPost": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": ""
                },
                "plentyIdHash": {
                    "type": "string",
                    "description": ""
                },
                "data": {
                    "type": "string",
                    "description": ""
                }
            }
        },
        "Board": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the board"
                },
                "boardName": {
                    "type": "string",
                    "description": "The name of the board"
                },
                "columnsCount": {
                    "type": "integer",
                    "description": "The number of columns"
                },
                "tasksCount": {
                    "type": "integer",
                    "description": "The number of tasks"
                }
            }
        },
        "BoardColumn": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the board column"
                },
                "boardId": {
                    "type": "string",
                    "description": "The ID of the board"
                },
                "columnName": {
                    "type": "string",
                    "description": "The name of the column"
                },
                "position": {
                    "type": "integer",
                    "description": "The position"
                }
            }
        },
        "BoardTask": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the board task"
                },
                "taskName": {
                    "type": "string",
                    "description": "The name of the task"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the task"
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the task"
                },
                "columnId": {
                    "type": "string",
                    "description": "The ID of the column"
                },
                "boardId": {
                    "type": "string",
                    "description": "The ID of the board"
                }
            }
        },
        "BoardTaskReference": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the board task reference"
                },
                "taskId": {
                    "type": "string",
                    "description": "The ID of the task to create a reference for"
                },
                "referenceValue": {
                    "type": "string",
                    "description": "Reference type followed by foreign ID of the referenced object. Syntax: TYPE-ID Example: user-123456 Types: user,ticket,contact,order,item"
                }
            }
        },
        "Catalog": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": [],
                    "description": "Contains the mappings and template settings"
                },
                "settings": {
                    "type": "array",
                    "items": [],
                    "description": "Contains the settings"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the catalogue"
                },
                "template": {
                    "type": "string",
                    "description": "The id of the template that was used to create the catalogue"
                },
                "id": {
                    "type": "string",
                    "description": "The id of the catalogue"
                },
                "active": {
                    "type": "boolean",
                    "description": "Determines whether a catalogue can be exported"
                },
                "showMandatoryFields": {
                    "type": "boolean",
                    "description": "Determines if only the mandatory fields should be displayed in the catalogue UI"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The updated at date in W3C"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The created at date in W3C"
                }
            }
        },
        "DeleteResponse": {
            "type": "object",
            "properties": []
        },
        "Category": {
            "type": "object",
            "properties": []
        },
        "CategoryDetails": {
            "type": "object",
            "properties": {
                "categoryId": {
                    "type": "integer",
                    "description": "The unique ID of the category these category details belong to"
                },
                "plentyId": {
                    "type": "integer",
                    "description": "The unique plenty ID of the client (store) in which the category is visible. If a subcategory is linked to a client, its parent categories will be linked to this client as well."
                },
                "lang": {
                    "type": "string",
                    "description": "The <a href=\"https://developers.plentymarkets.com/rest-doc/introduction#languages\" target=\"_blank\">language</a> of the category"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the category. The same category name can be used more than once in different categories or on different category levels. However, category names must be unique within the same category or level."
                },
                "description": {
                    "type": "string",
                    "description": "The category text. The description is inserted into the online store using template variables."
                },
                "description2": {
                    "type": "string",
                    "description": "The category text 2. The description 2 is inserted into the online store using template variables."
                },
                "shortDescription": {
                    "type": "string",
                    "description": "The short description of the category. The short description can be inserted into the store's design using template variables."
                },
                "metaKeywords": {
                    "type": "string",
                    "description": "HTML meta keywords to tag the category for search engines. More than one keyword can be separated by commas."
                },
                "metaDescription": {
                    "type": "string",
                    "description": "The meta description of the category. This description is analysed by search engines and displayed in search results. This text should be treated as an advertising text to maximise click-through from search engine result pages. Current recommended limit is 156 characters."
                },
                "nameUrl": {
                    "type": "string",
                    "description": "The category name to be used for the category's URL. The same URL name can be used more than once in different categories or on different category levels. However, URL names must be unique within the same category or level. The URL name should not be changed once the category is indexed by search engines. If no URL name is specified, the name will automatically be used as the URL name when the category is created.<br />Important: Name should contain ASCII code only and no special characters. The following character strings may not be used as prefixes to URL names: a-, b-, c-, f-, fa-, p-, t-. These prefixes will be removed automatically. For instance, a-class will be changed to class automatically. However, the URL name aclass can be used for a category named A-class."
                },
                "metaTitle": {
                    "type": "string",
                    "description": "This will be displayed as the title of a tab in the web browser and as a search result in search engines. If this is left blank, the category name will be used as the title. Current recommended limit is 50 characters. Longer titles will be cut off."
                },
                "image": {
                    "type": "string",
                    "description": "The ID to the image1 of the category."
                },
                "image2": {
                    "type": "string",
                    "description": "The ID to the image2 of the category."
                },
                "imagePath": {
                    "type": "string",
                    "description": "The path to the image1 of the category."
                },
                "image2Path": {
                    "type": "string",
                    "description": "The path to the image2 of the category."
                },
                "previewUrl": {
                    "type": "string",
                    "description": "The category's URL."
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the category within a category level."
                },
                "itemListView": {
                    "type": "string",
                    "description": "The template the category is linked to for the category overview. The template determines what the category overview will look like for this category. This option is available for categories of the type <strong>Item</strong> only. Possible values: ItemViewCategoriesList, ItemViewCategoriesList2 to ItemViewCategoriesList10."
                },
                "singleItemView": {
                    "type": "string",
                    "description": "The template the category is linked to for the single item view. The template determines the appearance of the single item design for this category. This option is available for categories of the type <strong>Item</strong> only. Possible values: ItemViewSingleItem, ItemViewSingleItem2 to ItemViewSingleItem5."
                },
                "pageView": {
                    "type": "string",
                    "description": ""
                },
                "fulltext": {
                    "type": "boolean",
                    "description": "Flag that indicates if the complete category text, i.e. the complete description, will be searched.<ul><li>Y = Complete text will be searched.</li><li>N = Text will not be searched completely.</li></ul>"
                },
                "metaRobots": {
                    "type": "string",
                    "description": "Values from the meta element Robots are analyzed by Web crawlers. These values tell the crawler what it should do with the page and with the links on the page.<ul><li>all = Include this category in the search engine index and follow the links on the page.</li><li>index = Include in the search engine index.</li><li>nofollow = Do not follow the links on the page.</li><li>noindex = Do not include in the search engine index.</li><li>nofollow, noindex = Do not follow the links and do not include the category in the search engine index.</li></ul>"
                },
                "canonicalLink": {
                    "type": "string",
                    "description": "The URL of any category that contains the same content. This\nwill avoid duplicate content."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the category details were last updated"
                },
                "updatedBy": {
                    "type": "string",
                    "description": "The user who last updated the category details"
                }
            }
        },
        "CategoryClient": {
            "type": "object",
            "properties": {
                "plentyId": {
                    "type": "integer",
                    "description": "The unique plenty ID of the client (store) in which the category is visible. Several IDs can be separated by commas. If a subcategory is linked to a client, its parent categories will be linked to this client as well."
                }
            }
        },
        "CategoryProperty": {
            "type": "object",
            "properties": {
                "categoryId": {
                    "type": "integer",
                    "description": "The unique ID of the category"
                },
                "marketId": {
                    "type": "number",
                    "description": "The unique ID of the referrer"
                },
                "plentyId": {
                    "type": "integer",
                    "description": "The unique plenty ID of the client (store)"
                },
                "value": {
                    "type": "string",
                    "description": "The category of the referrer"
                }
            }
        },
        "Document": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the document"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the document. The following types are available:\n                           <ul>\n    <li>admin</li>\n    <li>blog</li>\n <li>category</li>\n <li>correction_document</li>\n <li>credit_note</li>\n    <li>credit_note_external</li>\n       <li>customer</li>\n <li>delivery_note</li>\n    <li>dunning_letter</li>\n       <li>ebics_hash</li>\n    <li>facet</li>\n    <li>invoice</li>\n    <li>invoice_external</li>\n                               <li>pos_invoice</li>\n                               <li>pos_invoice_cancellation</li>\n <li>item</li>\n <li>multi_credit_note</li>\n    <li>multi_invoice</li>\n       <li>offer</li>\n    <li>order_confirmation</li>\n       <li>pickup_delivery</li>\n    <li>receipt</li>\n                               <li>refund_reversal</li>\n    <li>reorder</li>\n    <li>repair_bill</li>\n    <li>return_note</li>\n       <li>reversal_document</li>\n       <li>settlement_report</li>\n    <li>success_confirmation</li>\n    <li>ticket</li>\n    <li>webshop</li>\n  <li>webshop_customer</li>\n    <li>z_report</li>\n    <li>shipping_label</li>\n    <li>shipping_export_label</li>\n    <li>returns_label</li>\n                               <li>reversal_dunning_letter</l>\n</ul>"
                },
                "number": {
                    "type": "integer",
                    "description": "The document number"
                },
                "numberWithPrefix": {
                    "type": "string",
                    "description": "The document number with prefix"
                },
                "path": {
                    "type": "string",
                    "description": "The path to the document"
                },
                "userId": {
                    "type": "integer",
                    "description": "The ID of the user"
                },
                "source": {
                    "type": "string",
                    "description": "The source where the document was generated. Possible sources are 'klarna', 'soap', 'admin', 'hitmeister', 'paypal' and 'rest'."
                },
                "displayDate": {
                    "type": "string",
                    "description": "The date displayed on the document"
                },
                "status": {
                    "type": "string",
                    "description": "The generation status of the document (\"pending\", \"faulty\" or \"done\""
                },
                "content": {
                    "type": "string",
                    "description": "The base64 encoded content of the document."
                }
            }
        },
        "StreamedResponse": {
            "type": "object",
            "properties": []
        },
        "CategoryTemplate": {
            "type": "object",
            "properties": {
                "categoryId": {
                    "type": "integer",
                    "description": "The unique ID of the category"
                },
                "plentyId": {
                    "type": "integer",
                    "description": "The unique plenty ID of the client (store)"
                },
                "lang": {
                    "type": "string",
                    "description": "The language of the template"
                },
                "content": {
                    "type": "string",
                    "description": "The content of the template"
                }
            }
        },
        "PaginationResponse": {
            "type": "object",
            "properties": []
        },
        "CategoryBranch": {
            "type": "object",
            "properties": {
                "categoryId": {
                    "type": "integer",
                    "description": "The ID of the category"
                },
                "category1Id": {
                    "type": "integer",
                    "description": "The ID of the category tree's 1st level. If 1st value is identical to category ID, category is of this level."
                },
                "category2Id": {
                    "type": "integer",
                    "description": "The ID of the category tree's 2nd level. If 2nd level value is identical to category ID, category is of this level. If 2nd level value is <strong>null</strong>, category is of a higher level."
                },
                "category3Id": {
                    "type": "integer",
                    "description": "The ID of the category tree's 3rd level. If 3rd level value is identical to category ID, category is of this level. If 2nd level value is <strong>null</strong>, category is of a higher level."
                },
                "category4Id": {
                    "type": "integer",
                    "description": "The ID of the category tree's 4th level. If 4th level value is identical to category ID, category is of this level. If 2nd level value is <strong>null</strong>, category is of a higher level."
                },
                "category5Id": {
                    "type": "integer",
                    "description": "The ID of the category tree's 5th level. If 5th level value is identical to category ID, category is of this level. If 2nd level value is <strong>null</strong>, category is of a higher level."
                },
                "category6Id": {
                    "type": "integer",
                    "description": "The ID of the category tree's 6th level. If 6th level value is identical to category ID, category is of this level. If 2nd level value is <strong>null</strong>, category is of a higher level."
                }
            }
        },
        "Comment": {
            "type": "object",
            "properties": []
        },
        "Conversation": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string",
                    "description": "The UUID of the conversation"
                },
                "shortId": {
                    "type": "string",
                    "description": "The Short ID of the Conversation"
                },
                "plentyIdHash": {
                    "type": "string",
                    "description": "The plentyIdHash"
                },
                "plentyId": {
                    "type": "integer",
                    "description": "The plentyId of the relation contact"
                },
                "inboxId": {
                    "type": "string",
                    "description": "The inboxId from the assistant"
                },
                "title": {
                    "type": "string",
                    "description": "The Title of the Conversation"
                },
                "tagIds": {
                    "type": "array",
                    "items": [],
                    "description": "Array of tag IDs"
                },
                "isClosed": {
                    "type": "boolean",
                    "description": "Boolean that indicates if the conversation is closed"
                },
                "isDeleted": {
                    "type": "boolean",
                    "description": "Boolean that indicates if the conversation is deleted"
                },
                "readBy": {
                    "type": "array",
                    "items": [],
                    "description": "Array of user ids (int)"
                },
                "": {
                    "type": "boolean",
                    "description": "validRelation Conversation has the relations validated"
                },
                "priorityId": {
                    "type": "string",
                    "description": "The Priority of the Conversation"
                },
                "typeId": {
                    "type": "integer",
                    "description": "ID of conversation type"
                },
                "typePosition": {
                    "type": "integer",
                    "description": "Sort order of conversation type"
                },
                "statusId": {
                    "type": "integer",
                    "description": "ID of conversation status"
                },
                "statusPosition": {
                    "type": "integer",
                    "description": "Sort order of conversation status"
                },
                "hasWhisperedMessages": {
                    "type": "boolean",
                    "description": "Flag that indicates if a conversation contains whispered messages"
                },
                "messagesTitles": {
                    "type": "array",
                    "items": [],
                    "description": "Array of all message titles"
                },
                "messagesBodies": {
                    "type": "array",
                    "items": [],
                    "description": "Array with all message bodies stripped of tags"
                },
                "messagesTags": {
                    "type": "array",
                    "items": [],
                    "description": "Array with all tag ID's from all messages"
                },
                "replyTo": {
                    "type": "array",
                    "items": [],
                    "description": ""
                },
                "messagesPaths": {
                    "type": "array",
                    "description": "Array with s3 messages paths"
                },
                "messagesIds": {
                    "type": "array",
                    "description": "Array with all messages UUID's"
                },
                "isMigratedToEs": {
                    "type": "integer",
                    "description": "Flag that indicates if the conversation is synced to ES (used during messenger migration to new structure)"
                },
                "isArchived": {
                    "type": "boolean",
                    "description": "Flag that indicates if the conversation is archived"
                },
                "conversationPreview": {
                    "type": "string",
                    "description": "Strip last the message from messagesBodies to 200 characters, used for preview."
                },
                "categoryId": {
                    "type": "integer",
                    "description": "Flag that indicates if the conversation is archived"
                },
                "linkedFolders": {
                    "type": "array",
                    "description": "List of linked folders"
                },
                "marketplacesMetadata": {
                    "type": "array",
                    "description": "marketplaces Meta data"
                }
            }
        },
        "ConversationCategory": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the type"
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the type (used in sorting)"
                },
                "userId": {
                    "type": "integer",
                    "description": "The user ID which performed the last update"
                },
                "icon": {
                    "type": "string",
                    "description": "The icon for messenger tab"
                },
                "iconType": {
                    "type": "string",
                    "description": "The icon type"
                },
                "isDeleted": {
                    "type": "boolean",
                    "description": "Flag that indicates if the type was deleted"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "Flag that indicates if the type is enabled"
                }
            }
        },
        "ConversationEvent": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": ""
                },
                "name": {
                    "type": "string",
                    "description": ""
                },
                "description": {
                    "type": "string",
                    "description": ""
                },
                "eventClass": {
                    "type": "string",
                    "description": ""
                },
                "isActive": {
                    "type": "boolean",
                    "description": ""
                },
                "userId": {
                    "type": "integer",
                    "description": ""
                },
                "updatedAt": {
                    "type": "string",
                    "description": ""
                },
                "executedAt": {
                    "type": "string",
                    "description": ""
                }
            }
        },
        "ConversationFolder": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string",
                    "description": "The UUID of the folder"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the folder"
                },
                "userId": {
                    "type": "integer",
                    "description": "The user ID which is the folder owner"
                }
            }
        },
        "ConversationRole": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": ""
                },
                "position": {
                    "type": "integer",
                    "description": ""
                },
                "userId": {
                    "type": "integer",
                    "description": ""
                },
                "isDeleted": {
                    "type": "boolean",
                    "description": ""
                }
            }
        },
        "ConversationStatus": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the status"
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the status (used in sorting)"
                },
                "userId": {
                    "type": "integer",
                    "description": "The suer ID which performed the last update"
                },
                "isDeleted": {
                    "type": "boolean",
                    "description": "Flag that indicates if the status was deleted"
                },
                "": {
                    "type": "string",
                    "description": "colour Color of the status background (example: #0084ff)"
                }
            }
        },
        "ConversationType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the type"
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the type (used in sorting)"
                },
                "userId": {
                    "type": "integer",
                    "description": "The suer ID which performed the last update"
                },
                "isDeleted": {
                    "type": "boolean",
                    "description": "Flag that indicates if the type was deleted"
                },
                "categoryId": {
                    "type": "boolean",
                    "description": "The ID of the parent category"
                }
            }
        },
        "DeleteLog": {
            "type": "object",
            "properties": {
                "referenceType": {
                    "type": "integer",
                    "description": "The type of the deleted record<ul><li>1 = Category</li><li>2 = Payment</li><li>3 = Order</li><li>4 = Customer</li><li>5 = Item</li><li>6 = Facet of the type Attribute</li><li>7 = Facet of the type Property</li><li>8 = Facet of the type Manufacturer</li><li>9 = Facet of the type Availability</li><li>10 = Unit</li><li>11 = Sales price</li><li>12 = Sales price link to variation</li><li>13 = Item variation</li></ul>13 = Order item</li></ul>"
                },
                "referenceValue": {
                    "type": "integer",
                    "description": "The ID of the deleted record"
                },
                "userRealName": {
                    "type": "string",
                    "description": "The real name of the user who deleted the record"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date and time that the record was deleted"
                },
                "userId": {
                    "type": "integer",
                    "description": "The ID of the user who deleted the record"
                }
            }
        },
        "StockIntakeDocumentGenerationPreview": {
            "type": "object",
            "properties": {
                "hash": {
                    "type": "string",
                    "description": ""
                },
                "content": {
                    "type": "string",
                    "description": ""
                },
                "status": {
                    "type": "integer",
                    "description": ""
                },
                "orderId": {
                    "type": "integer",
                    "description": ""
                }
            }
        },
        "DocumentGenerationPreview": {
            "type": "object",
            "properties": {
                "hash": {
                    "type": "string",
                    "description": ""
                },
                "content": {
                    "type": "string",
                    "description": ""
                },
                "status": {
                    "type": "integer",
                    "description": ""
                },
                "orderId": {
                    "type": "integer",
                    "description": ""
                }
            }
        },
        "DocumentGeneration": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": ""
                },
                "status": {
                    "type": "integer",
                    "description": ""
                }
            }
        },
        "ElasticSyncSync": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the elastic sync sync"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the elastic sync sync"
                },
                "syncType": {
                    "type": "string",
                    "description": "The type of the elastic sync sync"
                },
                "sourceType": {
                    "type": "string",
                    "description": "The source type of the elastic sync sync"
                },
                "sourceDataType": {
                    "type": "string",
                    "description": "The source data type of the elastic sync sync"
                }
            }
        },
        "ElasticSyncMappingFilter": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the elastic sync mapping filter"
                },
                "mappingId": {
                    "type": "integer",
                    "description": "The ID of the elastic sync mapping"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the elastic sync mapping filter"
                },
                "operator": {
                    "type": "string",
                    "description": "The operator of the elastic sync mapping filter"
                },
                "source": {
                    "type": "string",
                    "description": "The source of the elastic sync mapping filter"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the elastic sync mapping filter"
                }
            }
        },
        "ElasticSyncMappingRow": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the elastic sync mapping row"
                },
                "mappingId": {
                    "type": "integer",
                    "description": "The ID of the elastic sync mapping"
                },
                "targetModel": {
                    "type": "string",
                    "description": "The target model of the elastic sync mapping row"
                },
                "targetAttribute": {
                    "type": "string",
                    "description": "The target attribute of the elastic sync mapping row"
                },
                "active": {
                    "type": "boolean",
                    "description": "The state of the elastic sync mapping row"
                },
                "entityType": {
                    "type": "string",
                    "description": "The entity type of the elastic sync mapping row (array values: 'ownValue', 'ownAssignment', 'regularExpression', 'csvColumn')"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the elastic sync mapping row"
                },
                "settings": {
                    "type": "string",
                    "description": "The settings of the elastic sync mapping row"
                },
                "identifiers": {
                    "type": "string",
                    "description": "The identifiers of the elastic sync mapping row"
                }
            }
        },
        "ElasticSyncMapping": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the elastic sync mapping"
                },
                "syncId": {
                    "type": "integer",
                    "description": "The ID of the elastic sync sync"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the elastic sync mapping"
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the elastic sync mapping"
                },
                "active": {
                    "type": "boolean",
                    "description": "The state of the elastic sync mapping"
                }
            }
        },
        "ElasticSyncMatching": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the elastic sync matching"
                },
                "syncId": {
                    "type": "integer",
                    "description": "The ID of the elastic sync sync"
                },
                "target": {
                    "type": "string",
                    "description": "The target of the elastic sync matching"
                },
                "source": {
                    "type": "string",
                    "description": "The source of the elastic sync matching"
                },
                "additionalValue": {
                    "type": "string",
                    "description": "The additional value of the elastic sync matching"
                }
            }
        },
        "ElasticSyncOption": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the elastic sync option"
                },
                "syncId": {
                    "type": "integer",
                    "description": "The ID of the elastic sync sync"
                },
                "optionIdentifier": {
                    "type": "string",
                    "description": "The option identifier of the elastic sync option"
                },
                "key": {
                    "type": "string",
                    "description": "The key of the elastic sync option"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the elastic sync option"
                }
            }
        },
        "Export": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "export id"
                },
                "name": {
                    "type": "string",
                    "description": "export name"
                },
                "type": {
                    "type": "string",
                    "description": "export type"
                },
                "limit": {
                    "type": "integer",
                    "description": "maximum number of entries"
                },
                "createdAt": {
                    "type": "string",
                    "description": "created at date timestamp"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "last update date timestamp"
                },
                "formatKey": {
                    "type": "string",
                    "description": "the format key"
                },
                "outputType": {
                    "type": "string",
                    "description": "the output type"
                },
                "generateCache": {
                    "type": "integer",
                    "description": "if cache should be generated"
                }
            }
        },
        "Filter": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "filter id"
                },
                "createdAt": {
                    "type": "string",
                    "description": "created at date timestamp"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "last update date timestamp"
                },
                "exportId": {
                    "type": "integer",
                    "description": "depending export id"
                },
                "key": {
                    "type": "string",
                    "description": "filter key"
                },
                "value": {
                    "type": "string",
                    "description": "filter value"
                }
            }
        },
        "FormatSetting": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "format setting id"
                },
                "createdAt": {
                    "type": "string",
                    "description": "created at date timestamp"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "last update date timestamp"
                },
                "exportId": {
                    "type": "integer",
                    "description": "depending export id"
                },
                "key": {
                    "type": "string",
                    "description": "format setting key"
                },
                "value": {
                    "type": "string",
                    "description": "format setting value"
                }
            }
        },
        "OutputParam": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "output param id"
                },
                "createdAt": {
                    "type": "string",
                    "description": "created at date timestamp"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "last update date timestamp"
                },
                "exportId": {
                    "type": "integer",
                    "description": "depending export id"
                },
                "key": {
                    "type": "string",
                    "description": "output param key"
                },
                "value": {
                    "type": "string",
                    "description": "output param value"
                }
            }
        },
        "FeedbackComment": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the comment"
                },
                "message": {
                    "type": "string",
                    "description": "The message of the comment"
                },
                "isVisible": {
                    "type": "boolean",
                    "description": "If true, the comment is visible"
                }
            }
        },
        "Feedback": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the feedback"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the feedback"
                },
                "authorName": {
                    "type": "string",
                    "description": "The name of the feedback's author"
                },
                "isVisible": {
                    "type": "boolean",
                    "description": "If true, the feedback is visible"
                }
            }
        },
        "FeedbackRating": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the rating"
                },
                "ratingValue": {
                    "type": "string",
                    "description": "The value of the rating"
                },
                "isVisible": {
                    "type": "boolean",
                    "description": "If true, the rating is visible"
                }
            }
        },
        "PickingOrderItem": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": ""
                },
                "pickingOrderId": {
                    "type": "integer",
                    "description": ""
                },
                "orderItemId": {
                    "type": "integer",
                    "description": ""
                },
                "processState": {
                    "type": "string",
                    "description": ""
                },
                "processDate": {
                    "type": "string",
                    "description": ""
                },
                "processUserId": {
                    "type": "integer",
                    "description": ""
                },
                "comment": {
                    "type": "string",
                    "description": ""
                },
                "quantity": {
                    "type": "number",
                    "description": ""
                },
                "itemId": {
                    "type": "integer",
                    "description": ""
                },
                "holdingArea": {
                    "type": "integer",
                    "description": ""
                },
                "warehouseId": {
                    "type": "integer",
                    "description": ""
                },
                "orderIdList": {
                    "type": "string",
                    "description": ""
                }
            }
        },
        "PickingOrder": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": ""
                },
                "createdAt": {
                    "type": "string",
                    "description": ""
                },
                "processDate": {
                    "type": "string",
                    "description": ""
                },
                "doneDate": {
                    "type": "string",
                    "description": ""
                },
                "ownerId": {
                    "type": "integer",
                    "description": ""
                },
                "processUserId": {
                    "type": "integer",
                    "description": ""
                },
                "processState": {
                    "type": "string",
                    "description": ""
                },
                "webstoreId": {
                    "type": "integer",
                    "description": ""
                },
                "warehouseId": {
                    "type": "integer",
                    "description": ""
                },
                "comment": {
                    "type": "string",
                    "description": ""
                },
                "filterOptions": {
                    "type": "array",
                    "items": [],
                    "description": ""
                }
            }
        },
        "ItemSet": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The item ID of the item set. The ID must be unique."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the item set. The default language of the system is used."
                },
                "categories": {
                    "type": "array",
                    "items": [],
                    "description": "The array with categories of the item set. The category ID key  \"categoryId\" must be specified. Example for JSON Object:  \"categories\":[{\"categoryId\":\"34\"},{\"categoryId\":\"35\"}]}]"
                }
            }
        },
        "ItemSetComponent": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The item set component ID. The ID must be unique."
                },
                "setId": {
                    "type": "integer",
                    "description": "The item ID of the item set. The ID must be unique."
                },
                "itemId": {
                    "type": "integer",
                    "description": "The item ID of the set component"
                },
                "minimalOrderQuantity": {
                    "type": "number",
                    "description": "Minimum order quantity."
                },
                "maximumOrderQuantity": {
                    "type": "number",
                    "description": "Maximum order quantity."
                },
                "orderQuantityPossible": {
                    "type": "boolean",
                    "description": "Order quantities possible."
                }
            }
        },
        "ItemSetConfig": {
            "type": "object",
            "properties": {
                "setId": {
                    "type": "integer",
                    "description": "set id The item ID of the item set. The ID must be unique."
                },
                "rebate": {
                    "type": "number",
                    "description": "The discount in percent to be subtracted from the sum of the prices of the selected set components."
                }
            }
        },
        "Item": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the item. The ID must be unique."
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the item"
                },
                "itemType": {
                    "type": "string",
                    "description": "The type of the item. Because Set items are managed using a separate route,\nthis value is always Default."
                },
                "stockType": {
                    "type": "integer",
                    "description": "The stock type of the item. Possible values:\n<ul><li>0 = Stocked item (default)</li>\n    <li>1 = Production item</li>\n    <li>2 = Colli</li>\n    <li>3 = Special order item</li></ul>"
                },
                "storeSpecial": {
                    "type": "integer",
                    "description": "Option to present items more prominently in the online store.\n<ul><li>1 = Special offer</li><li>2 = New items</li><li>3 = Top items</li></ul>"
                },
                "ownerId": {
                    "type": "integer",
                    "description": "The plentymarkets user that is assigned as owner of this item."
                },
                "manufacturerId": {
                    "type": "integer",
                    "description": "The ID of the manufacturer of the item"
                },
                "producingCountryId": {
                    "type": "integer",
                    "description": "The ID of the country in which the item was manufactured."
                },
                "mainVariationId": {
                    "type": "integer",
                    "description": "The ID of the main variation of the item. The ID must be unique."
                },
                "revenueAccount": {
                    "type": "integer",
                    "description": "The revenue account the item is linked to.\nAn individual revenue account can be saved for each item in plentymarkets.\nIf this is not done, plentymarkets automatically determines a revenue account\nbased on the VAT rate."
                },
                "couponRestriction": {
                    "type": "integer",
                    "description": "Indicates if the item can be purchased using a promotional coupon.\n<ul><li>0 = Permitted</li>\n    <li>1 = Not permitted</li>\n    <li>2 = Purchasable with coupon only</li></ul>"
                },
                "condition": {
                    "type": "integer",
                    "description": "The condition of the item. Possible values:\n<ul><li>0 = New</li><li>1 = Used</li>\n    <li>2 = Boxed as new</li>\n    <li>3 = New with label</li>\n    <li>4 = Factory seconds</li></ul>"
                },
                "conditionApi": {
                    "type": "integer",
                    "description": "The condition of the item that is transferred to markets via API.\n<ul><li>0 = New</li>\n    <li>1 = Used but as new</li>\n    <li>2 = Used but very good</li>\n    <li>3 = Used but good</li>\n    <li>4 = Used but acceptable</li>\n    <li>5 = Factory seconds</li></ul>"
                },
                "createdAt": {
                    "type": "string",
                    "description": "Timestamp of the date and time the item was created."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Timestamp of the last date and time the item was updated."
                },
                "isSubscribable": {
                    "type": "boolean",
                    "description": "Flag that indicates if the item can be ordered as a subscription item.\nIf yes, the item can be ordered for delivery at regular intervals."
                },
                "isSerialNumber": {
                    "type": "boolean",
                    "description": "Flag that indicates if serial numbers are to be assigned to variations of this item\nto uniquely identify every item sold. Serial numbers ensure traceability of an item\nin case of errors or problems."
                },
                "isShippingPackage": {
                    "type": "boolean",
                    "description": "Flag that indicates if a shipping package is to be used for this item.\nIf yes and the variation's dimensions are entered in the <b>Settings</b> tab of a\nvariation, the correct shipping package is assigned automatically."
                },
                "amazonFbaPlatform": {
                    "type": "integer",
                    "description": "Indicates the platform used for Fulfilment by Amazon (FBA).\n<ul><li>0 = Do not use</li>\n    <li>1 = AMAZON EU (Europe)</li>\n    <li>2 = AMAZON FE (Far East)</li>\n    <li>3 = AMAZON NA (North America)</li></ul>"
                },
                "isShippableByAmazon": {
                    "type": "boolean",
                    "description": "Flag that indicates if the item can be shipped with Amazon Multi-Channel.\nAmazon Multi-Channel Fulfillment is a service for fulfilling orders from sales\nchannels other than Amazon platforms using inventory stored in the Amazon\nfulfillment center."
                },
                "amazonProductType": {
                    "type": "integer",
                    "description": "The Amazon product type of the item. List of IDs:\nhttps://www.plentymarkets.co.uk/manual/data-exchange/data-formats/item/"
                },
                "amazonFedas": {
                    "type": "string",
                    "description": "The FEDAS product classification key of the item."
                },
                "ebayPresetId": {
                    "type": "integer",
                    "description": "The eBay preset ID. This plentymarkets ID must be specified to save values for\n$ebayCategory, $ebayCategory2, $ebayStoreCategory and $ebayStoreCategory2."
                },
                "ebayCategory": {
                    "type": "integer",
                    "description": "The eBay category 1 of the item. This category is used when a new listing is created."
                },
                "ebayCategory2": {
                    "type": "integer",
                    "description": "The eBay category 2 of the item. This category is used when a new listing is created."
                },
                "ebayStoreCategory": {
                    "type": "integer",
                    "description": "The ID of the eBay store category 1 of the item.\nThis value is used for new listings."
                },
                "ebayStoreCategory2": {
                    "type": "integer",
                    "description": "The ID of the eBay store category 2 of the item.\nThis value is used for new listings."
                },
                "rakutenCategoryId": {
                    "type": "integer",
                    "description": "The ID of the Rakuten category of this item."
                },
                "flagOne": {
                    "type": "integer",
                    "description": "Flag 1 of the item. Flags can be used to organise and filter items.\nEach item can be assigned up to two flags. Possible values: 1 to 31, 0 = no flag"
                },
                "flagTwo": {
                    "type": "integer",
                    "description": "Flag 2 of the item. Flags can be used to organise and filter items.\nEach item can be assigned up to two flags. Possible values: 1 to 11, 0 = no flag"
                },
                "ageRestriction": {
                    "type": "integer",
                    "description": "The age customers must be to purchase the item.\nItems with an age rating of 18+ must be linked to a shipping profile for which the\nPostIdent option is activated.\n<ul><li>0 = None available</li>\n   <li>3 = Released for ages 3 and up</li>\n   <li>6 = Ages 6 and up</li>\n   <li>9 = Ages 9 and up</li>\n   <li>12 = Ages 12 and up</li>\n   <li>14 = Ages 14 and up</li>\n   <li>16 = Ages 16 and up</li>\n   <li>18 = Ages 18 and up</li>\n   <li>50 = Not marked</li>\n   <li>88 = Not required</li>\n   <li>99 = Unknown</li></ul>"
                },
                "feedback": {
                    "type": "integer",
                    "description": "The feedback, i.e. rating, that this item received.\nPossible values are 1 to 5 or 1 to 10 depending on the maximum rating setting.\nAn initial feedback can be saved for items. The saved value will then be displayed as the\ninitial feedback. Every time new feedback is submitted, the average value will be\nrecalculated automatically."
                },
                "free1": {
                    "type": "string",
                    "description": "The content of the free text field 1. This can be displayed in the online store or on eBay."
                },
                "free2": {
                    "type": "string",
                    "description": "The content of the free text field 2. This can be displayed in the online store or on eBay."
                },
                "free3": {
                    "type": "string",
                    "description": "The content of the free text field 3. This can be displayed in the online store or on eBay."
                },
                "free4": {
                    "type": "string",
                    "description": "The content of the free text field 4. This can be displayed in the online store or on eBay."
                },
                "free5": {
                    "type": "string",
                    "description": "The content of the free text field 5. This can be displayed in the online store or on eBay."
                },
                "free6": {
                    "type": "string",
                    "description": "The content of the free text field 6. This can be displayed in the online store or on eBay."
                },
                "free7": {
                    "type": "string",
                    "description": "The content of the free text field 7. This can be displayed in the online store or on eBay."
                },
                "free8": {
                    "type": "string",
                    "description": "The content of the free text field 8. This can be displayed in the online store or on eBay."
                },
                "free9": {
                    "type": "string",
                    "description": "The content of the free text field 9. This can be displayed in the online store or on eBay."
                },
                "free10": {
                    "type": "string",
                    "description": "The content of the free text field 10. This can be displayed in the online store or on eBay."
                },
                "free11": {
                    "type": "string",
                    "description": "The content of the free text field 11. This can be displayed in the online store or on eBay."
                },
                "free12": {
                    "type": "string",
                    "description": "The content of the free text field 12. This can be displayed in the online store or on eBay."
                },
                "free13": {
                    "type": "string",
                    "description": "The content of the free text field 13. This can be displayed in the online store or on eBay."
                },
                "free14": {
                    "type": "string",
                    "description": "The content of the free text field 14. This can be displayed in the online store or on eBay."
                },
                "free15": {
                    "type": "string",
                    "description": "The content of the free text field 15. This can be displayed in the online store or on eBay."
                },
                "free16": {
                    "type": "string",
                    "description": "The content of the free text field 16. This can be displayed in the online store or on eBay."
                },
                "free17": {
                    "type": "string",
                    "description": "The content of the free text field 17. This can be displayed in the online store or on eBay."
                },
                "free18": {
                    "type": "string",
                    "description": "The content of the free text field 18. This can be displayed in the online store or on eBay."
                },
                "free19": {
                    "type": "string",
                    "description": "The content of the free text field 19. This can be displayed in the online store or on eBay."
                },
                "free20": {
                    "type": "string",
                    "description": "The content of the free text field 20. This can be displayed in the online store or on eBay."
                },
                "maximumOrderQuantity": {
                    "type": "number",
                    "description": "The maximum order quantity of an item permitted per order.\nIf a maximum order quantity is specified, no more than this quantity of any\ncombination of the variations of the item can be ordered.\nDecimal values are possible to allow orders by weight or length.\nDefault value is 0. If value is 0, the maximum order quantity is unlimited."
                },
                "customsTariffNumber": {
                    "type": "string",
                    "description": "Deprecated: The customs tariff number of the item;\nusually a 11 digit code number based on the Harmonised System"
                }
            }
        },
        "ItemEbayTitle": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string",
                    "description": "The title."
                },
                "itemId": {
                    "type": "integer",
                    "description": "The unique ID of the item."
                },
                "id": {
                    "type": "integer",
                    "description": "The unique ID of the ebay title."
                }
            }
        },
        "ItemShippingProfiles": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique ID of the link between item and shipping profile"
                },
                "itemId": {
                    "type": "integer",
                    "description": "The unique ID of the item"
                },
                "profileId": {
                    "type": "integer",
                    "description": "The unique ID of the shipping profile"
                }
            }
        },
        "ItemProperty": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The id of the variation property value"
                },
                "itemId": {
                    "type": "integer",
                    "description": "The id of the variation"
                },
                "propertyId": {
                    "type": "integer",
                    "description": "The id of the property item"
                },
                "propertySelectionId": {
                    "type": "integer",
                    "description": "The id of the property selection"
                },
                "valueInt": {
                    "type": "integer",
                    "description": "The int value of the variation property value"
                },
                "valueFloat": {
                    "type": "number",
                    "description": "The float value of the variation property value"
                },
                "valueFile": {
                    "type": "string",
                    "description": "The file value of the variation property value"
                },
                "surcharge": {
                    "type": "number",
                    "description": "The surcharge of the variation property value"
                }
            }
        },
        "Variation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The id of the variation."
                },
                "elasticSearchSource": {
                    "type": "array",
                    "items": [],
                    "description": ""
                }
            }
        },
        "AttributeValueName": {
            "type": "object",
            "properties": {
                "valueId": {
                    "type": "integer",
                    "description": "The unique ID of the attribute value."
                },
                "lang": {
                    "type": "string",
                    "description": "The <a href=\"https://developers.plentymarkets.com/rest-doc/introduction#countries\" target=\"_blank\">language</a> of the attribute value."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the attribute value. This attribute value name is displayed in the online store."
                }
            }
        },
        "Attribute": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique ID of the attribute."
                },
                "backendName": {
                    "type": "string",
                    "description": "The back end name of the attribute. The name must be unique and must not contain commas, colons, semicolons or quotation marks. It is not visible in the plentymarkets front end."
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the attribute. Attributes are displayed in the attribute overview in ascending order by position."
                },
                "isSurchargePercental": {
                    "type": "boolean",
                    "description": "Flag that indicates if the surcharge is percental."
                },
                "isLinkableToImage": {
                    "type": "boolean",
                    "description": "Flag that indicates if an image can be linked to the attribute."
                },
                "amazonAttribute": {
                    "type": "string",
                    "description": "The attribute of the market Amazon that this attribute is liked to. To list variations on this market, attributes must be linked to one of the attributes specified by the market. Check documentation of the market for permitted values."
                },
                "fruugoAttribute": {
                    "type": "string",
                    "description": "The attribute of the market Fruugo that this attribute is linked to. To list variations on this market, attributes must be linked to one of the attributes specified by the market."
                },
                "pixmaniaAttribute": {
                    "type": "integer",
                    "description": "The attribute of the market PIXmania that this attribute is linked to. To list variations on this market, attributes must be linked to one of the attributes specified by the market. Check documentation of the market for permitted values."
                },
                "ottoAttribute": {
                    "type": "string",
                    "description": "The attribute of the market OTTO that this attribute is linked to. To list variations on this market, attributes must be linked to one of the attributes specified by the market."
                },
                "googleShoppingAttribute": {
                    "type": "string",
                    "description": "The attribute of the market Google Shopping that this attribute is linked to. To list variations on this market, attributes must be linked to one of the attributes specified by the market."
                },
                "neckermannAtEpAttribute": {
                    "type": "integer",
                    "description": "The component of the market neckermann AT EP that this attribute is linked to. To list variations on this market, attributes must be linked to one of the components specified by the market. Check documentation of the market for permitted values."
                },
                "typeOfSelectionInOnlineStore": {
                    "type": "string",
                    "description": "How customers can select the attribute in the front end of a client. To allow attribute selection by check mark, attribute availability must be checked on the client side."
                },
                "laRedouteAttribute": {
                    "type": "integer",
                    "description": "The attribute of the market La Redoute that this attribute is linked to. To list variations on this market, attributes must be linked to one of the attributes specified by the market. Check documentation of the market for permitted values."
                },
                "isGroupable": {
                    "type": "boolean",
                    "description": "Flag that indicates if the attribute can be grouped in item lists. If yes, variations with this attribute can be shown in the ItemViewCategoriesList template first. Other attributes are nested and can only be selected after this attribute has been selected."
                }
            }
        },
        "AttributeMap": {
            "type": "object",
            "properties": {
                "marketId": {
                    "type": "number",
                    "description": "The unique ID of the market."
                },
                "attributeId": {
                    "type": "integer",
                    "description": "The unique ID of the attribute."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the attribute map. The name must be unique and must not contain commas, colons, semicolons or quotation marks. It is not visible in the plentymarkets front end."
                },
                "marketInformation1": {
                    "type": "string",
                    "description": "The information regarding the marketplace."
                },
                "marketInformation2": {
                    "type": "string",
                    "description": "The information regarding the marketplace."
                }
            }
        },
        "AttributeValueMap": {
            "type": "object",
            "properties": {
                "marketId": {
                    "type": "number",
                    "description": "The unique ID of the market."
                },
                "attributeId": {
                    "type": "integer",
                    "description": "The unique ID of the attribute."
                },
                "attributeValueId": {
                    "type": "integer",
                    "description": "The unique ID of the attribute value."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the attribute value map. The name must be unique and must not contain commas, colons, semicolons or quotation marks. It is not visible in the plentymarkets front end."
                },
                "marketInformation1": {
                    "type": "string",
                    "description": "The information regarding the marketplace."
                },
                "marketInformation2": {
                    "type": "string",
                    "description": "The information regarding the marketplace."
                }
            }
        },
        "AttributeName": {
            "type": "object",
            "properties": {
                "attributeId": {
                    "type": "integer",
                    "description": "The id of the attribute."
                },
                "lang": {
                    "type": "string",
                    "description": "The <a href=\"https://developers.plentymarkets.com/rest-doc/introduction#countries\" target=\"_blank\">language</a> of the attribute."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the attribute. This attribute name is displayed in the online store."
                }
            }
        },
        "AttributeValueMarketName": {
            "type": "object",
            "properties": {
                "valueId": {
                    "type": "integer",
                    "description": "The unique ID of the attribute value."
                },
                "lang": {
                    "type": "string",
                    "description": "The <a href=\"https://developers.plentymarkets.com/rest-doc/introduction#countries\" target=\"_blank\">language</a> of the attribute value market."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the attribute value market."
                },
                "name2": {
                    "type": "string",
                    "description": "The name2 of the attribute value market."
                },
                "attributeId": {
                    "type": "integer",
                    "description": ""
                },
                "referenceType": {
                    "type": "string",
                    "description": ""
                }
            }
        },
        "AttributeValue": {
            "type": "object",
            "properties": []
        },
        "Barcode": {
            "type": "object",
            "properties": []
        },
        "BarcodeLinkReferrer": {
            "type": "object",
            "properties": {
                "barcodeId": {
                    "type": "integer",
                    "description": "The unique ID of the barcode"
                },
                "referrerId": {
                    "type": "number",
                    "description": "The unique ID of the referrer. To activate all referrers, the value <strong>-1</strong> must be specified. This value activates all referrers in the system by default, including any referrers added at a later stage."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the barcode was created."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the barcode was last updated."
                }
            }
        },
        "ItemListingCategory": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": ""
                },
                "name": {
                    "type": "string",
                    "description": ""
                },
                "fullName": {
                    "type": "string",
                    "description": ""
                },
                "parentId": {
                    "type": "integer",
                    "description": ""
                },
                "isLeaf": {
                    "type": "boolean",
                    "description": ""
                }
            }
        },
        "Manufacturer": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique ID of the manufacturer."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the manufacturer"
                },
                "externalName": {
                    "type": "string",
                    "description": "The external name of the manufacturer. The external name is used for the item export to external markets. If no external name is saved, the Name will be used. The external name will also be transferred to FINDOLOGIC and will be indexed for item searches."
                },
                "logo": {
                    "type": "string",
                    "description": "The URL of the manufacturer's logo"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the manufacturer's website"
                },
                "street": {
                    "type": "string",
                    "description": "The street of the manufacturer's address"
                },
                "houseNo": {
                    "type": "string",
                    "description": "The house number of the manufacturer's address"
                },
                "postcode": {
                    "type": "string",
                    "description": "The postal code of the manufacturer's address"
                },
                "town": {
                    "type": "string",
                    "description": "The town of the manufacturer's address"
                },
                "phoneNumber": {
                    "type": "string",
                    "description": "The phone number of the manufacturer"
                },
                "faxNumber": {
                    "type": "string",
                    "description": "The fax number of the manufacturer"
                },
                "email": {
                    "type": "string",
                    "description": "The email address of the manufacturer"
                },
                "countryId": {
                    "type": "integer",
                    "description": "The ID of the <a href=\"https://developers.plentymarkets.com/rest-doc/introduction#countries\" target=\"_blank\">country</a> in which the manufacturer is based; 0 = unknown."
                },
                "pixmaniaBrandId": {
                    "type": "integer",
                    "description": "The manufacturer's ID on the market Pixmania"
                },
                "neckermannAtEpBrandId": {
                    "type": "integer",
                    "description": "The manufacturer's ID on the market Neckermann Austria, Enterprise version"
                },
                "laRedouteBrandId": {
                    "type": "integer",
                    "description": "The manufacturer's ID on the market La Redoute"
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the manufacturer"
                },
                "comment": {
                    "type": "string",
                    "description": "Internal comments about the manufacturer (optional)"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the manufacturer information was last updated."
                },
                "responsibleName": {
                    "type": "string",
                    "description": "The name of the EU-Responsible person"
                },
                "responsibleStreet": {
                    "type": "string",
                    "description": "The street of the EU-Responsible person"
                },
                "responsibleHouseNo": {
                    "type": "string",
                    "description": "The house number of the EU-Responsible person"
                },
                "responsiblePostCode": {
                    "type": "string",
                    "description": "The postal code of the EU-Responsible person"
                },
                "responsibleTown": {
                    "type": "string",
                    "description": "The town of the EU-Responsible person"
                },
                "responsibleCountry": {
                    "type": "integer",
                    "description": "The country of the EU-Responsible person"
                },
                "responsibleEmail": {
                    "type": "string",
                    "description": "The email address of the EU-Responsible person"
                },
                "responsiblePhoneNo": {
                    "type": "string",
                    "description": "The phone number of the EU-Responsible person"
                }
            }
        },
        "ManufacturerCommission": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique ID of the manufacturer commission"
                },
                "manufacturerId": {
                    "type": "integer",
                    "description": "The unique ID of the manufacturer"
                },
                "plentyId": {
                    "type": "integer",
                    "description": "The unique ID of the client (store) that the commission applies to. The route /rest/webstores provides access to clients (stores)."
                },
                "referrerId": {
                    "type": "number",
                    "description": "The unique ID of the referrer that the commission applies to. The route /rest/orders/referrers provides access to referrers."
                },
                "commission": {
                    "type": "number",
                    "description": "The manufacturer commission value in percent"
                }
            }
        },
        "PackingUnit": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The id of the packing unit entry. Primary key auto-increment"
                },
                "unitId": {
                    "type": "integer",
                    "description": "The id of the packing unit as it was until now (from 0 to 39 without 33)"
                },
                "unitNameEN": {
                    "type": "string",
                    "description": "The name of the packing unit in English"
                },
                "unitNameDE": {
                    "type": "string",
                    "description": "The name of the packing unit in German"
                }
            }
        },
        "Property": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the property"
                },
                "cast": {
                    "type": "string",
                    "description": "The cast of the property (array values: 'empty','int','float','string','selection','text','html','date','file')"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the property (e.g. 'item' or 'contact')"
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the property"
                }
            }
        },
        "PropertyMarketReference": {
            "type": "object",
            "properties": {
                "propertyId": {
                    "type": "integer",
                    "description": "The unique ID of the property"
                },
                "componentId": {
                    "type": "integer",
                    "description": "The unique ID of the reference for the market"
                },
                "marketId": {
                    "type": "number",
                    "description": "The unique ID of the market"
                },
                "externalComponent": {
                    "type": "string",
                    "description": "The external reference of the property"
                }
            }
        },
        "PropertyName": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the property name"
                },
                "propertyId": {
                    "type": "integer",
                    "description": "The property ID of the property name"
                },
                "lang": {
                    "type": "string",
                    "description": "The language of the property name as ISO 639-1 language code, e.g. en for English"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the property name"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the property name"
                }
            }
        },
        "PropertySelection": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the property selection"
                },
                "propertyId": {
                    "type": "integer",
                    "description": "The property ID of the property selection"
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the property selection"
                }
            }
        },
        "PropertyGroup": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the property group"
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the property group"
                }
            }
        },
        "PropertyGroupName": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the property group name"
                },
                "groupId": {
                    "type": "integer",
                    "description": "The property group ID of the property group"
                },
                "lang": {
                    "type": "string",
                    "description": "The language of the property group name as ISO 639-1 language code, e.g. en for English"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the property group"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the property group"
                }
            }
        },
        "SalesPrice": {
            "type": "object",
            "properties": []
        },
        "SalesPriceName": {
            "type": "object",
            "properties": {
                "salesPriceId": {
                    "type": "integer",
                    "description": "The unique ID of the sales price"
                },
                "lang": {
                    "type": "string",
                    "description": "The <a href='https://developers.plentymarkets.com/rest-doc/introduction#languages' target='_blank'>language code</a> of the sales price name"
                },
                "nameInternal": {
                    "type": "string",
                    "description": "The internal name of the sales price. The internal name is used in the plentymarkets back end only."
                },
                "nameExternal": {
                    "type": "string",
                    "description": "The external name of the sales price. The external name is displayed in the online store and as such is visible for customers."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the name was created."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the name was last updated."
                }
            }
        },
        "SalesPriceCountry": {
            "type": "object",
            "properties": {
                "salesPriceId": {
                    "type": "integer",
                    "description": "The unique ID of the sales price"
                },
                "countryId": {
                    "type": "integer",
                    "description": "The unique ID of the <a href=\"https://developers.plentymarkets.com/rest-doc/introduction#countries\"  target=\"_blank\">country</a>"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the country was activated."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the relationship between country and sales price was last updated."
                }
            }
        },
        "SalesPriceCurrency": {
            "type": "object",
            "properties": {
                "salesPriceId": {
                    "type": "integer",
                    "description": "The unique ID of the sales price"
                },
                "currency": {
                    "type": "string",
                    "description": "The ISO code of the <a href=\"https://developers.plentymarkets.com/rest-doc/introduction#currencies\" target=\"_blank\">currency</a>; -1 = all currencies."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the currency was activated."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the relationship between currency and sales price was last updated."
                }
            }
        },
        "SalesPriceCustomerClass": {
            "type": "object",
            "properties": {
                "salesPriceId": {
                    "type": "integer",
                    "description": "The unique ID of the sales price"
                },
                "customerClassId": {
                    "type": "integer",
                    "description": "The unique ID of the customer class"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the customer class was activated."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the relationship between customer class and sales price was last updated."
                }
            }
        },
        "SalesPriceReferrer": {
            "type": "object",
            "properties": {
                "salesPriceId": {
                    "type": "integer",
                    "description": "The unique ID of the sales price"
                },
                "referrerId": {
                    "type": "number",
                    "description": "The unique ID of the referrer"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the referrer was activated."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the relationship between referrer and sales price was last updated."
                }
            }
        },
        "SalesPriceOnlineStore": {
            "type": "object",
            "properties": {
                "salesPriceId": {
                    "type": "integer",
                    "description": "The unique ID of the sales price"
                },
                "plentyId": {
                    "type": "integer",
                    "description": "The unique ID of the client (store)"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the client (store) was activated."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the relationship between the client (store) and the sales price was last updated."
                }
            }
        },
        "SalesPriceAccount": {
            "type": "object",
            "properties": {
                "salesPriceId": {
                    "type": "integer",
                    "description": "The unique ID of the sales price"
                },
                "referrerId": {
                    "type": "integer",
                    "description": "The ID of the referrer linked to the sales price"
                },
                "accountId": {
                    "type": "integer",
                    "description": "The ID of the referrer account linked to the sales price"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the referrer account was linked to the sales price."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the link was last updated."
                }
            }
        },
        "Unit": {
            "type": "object",
            "properties": []
        },
        "UnitName": {
            "type": "object",
            "properties": {
                "unitId": {
                    "type": "integer",
                    "description": "The unique ID of the unit"
                },
                "lang": {
                    "type": "string",
                    "description": "The <a href=\"https://developers.plentymarkets.com/rest-doc/introduction#languages\"  target=\"_blank\">language</a> of the unit name"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the unit"
                }
            }
        },
        "VariationBarcode": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "description": "The code of the variation's barcode. The combination of code and barcode ID must be unique."
                },
                "barcodeId": {
                    "type": "integer",
                    "description": "The unique ID of the barcode linked to the variation. The combination of code and barcode ID must be unique."
                },
                "variationId": {
                    "type": "integer",
                    "description": "The unique ID of the variation"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the variation's code was created."
                }
            }
        },
        "VariationSalesPrice": {
            "type": "object",
            "properties": {
                "variationId": {
                    "type": "integer",
                    "description": "The unique ID of the variation"
                },
                "salesPriceId": {
                    "type": "integer",
                    "description": "The unique ID of the sales price"
                },
                "price": {
                    "type": "number",
                    "description": "The price of the variation saved for this sales price"
                },
                "lowestPrice": {
                    "type": "number",
                    "description": "The lowest price of the variation saved for this sales price"
                },
                "lowestPriceCalculation": {
                    "type": "boolean",
                    "description": "Is the lowest price calculation active for this sales price"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the sales price was last updated."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the sales price was created."
                }
            }
        },
        "VariationCategory": {
            "type": "object",
            "properties": {
                "variationId": {
                    "type": "integer",
                    "description": "The unique ID of the variation"
                },
                "categoryId": {
                    "type": "integer",
                    "description": "The unique ID of the category"
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the category"
                },
                "isNeckermannPrimary": {
                    "type": "string",
                    "description": "Flag that indicates if the category is the primary category for the market Neckermann for this variation."
                }
            }
        },
        "VariationClient": {
            "type": "object",
            "properties": {
                "variationId": {
                    "type": "integer",
                    "description": "The unique ID of the variation"
                },
                "plentyId": {
                    "type": "integer",
                    "description": "The unique ID of the client (store)"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time at which the client (store) was linked to the variation."
                }
            }
        },
        "VariationMarket": {
            "type": "object",
            "properties": {
                "variationId": {
                    "type": "integer",
                    "description": "The unique ID of the variation"
                },
                "marketId": {
                    "type": "integer",
                    "description": "The unique ID of the market"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the link between the variation and the market was created."
                }
            }
        },
        "VariationDefaultCategory": {
            "type": "object",
            "properties": {
                "variationId": {
                    "type": "integer",
                    "description": "The unique ID of the variation"
                },
                "branchId": {
                    "type": "integer",
                    "description": "The unique ID of the category branch"
                },
                "plentyId": {
                    "type": "integer",
                    "description": "The unique plenty ID of the client (store)"
                },
                "manually": {
                    "type": "string",
                    "description": ""
                }
            }
        },
        "VariationSupplier": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique ID of the link between variation and supplier"
                },
                "variationId": {
                    "type": "integer",
                    "description": "The unique ID of the variation"
                },
                "supplierId": {
                    "type": "integer",
                    "description": "The unique ID of the supplier"
                },
                "purchasePrice": {
                    "type": "number",
                    "description": "The price at which the variation was purchased from this supplier."
                },
                "minimumPurchase": {
                    "type": "integer",
                    "description": "The minimum quantity of the variation that has to be ordered from the supplier. This value is also used as a quantity suggestion when creating reorders."
                },
                "itemNumber": {
                    "type": "string",
                    "description": "The external item number assigned to the variation by this supplier"
                },
                "lastPriceQuery": {
                    "type": "string",
                    "description": "The date of the last price query to this supplier. This helps to plan price negotiations."
                },
                "deliveryTimeInDays": {
                    "type": "integer",
                    "description": "The delivery time in days for the variation saved for this supplier"
                },
                "discount": {
                    "type": "number",
                    "description": "The discount in percent the supplier grants for the variation."
                },
                "isDiscountable": {
                    "type": "string",
                    "description": "Flag that indicates if the supplier's discount for this variation is active."
                },
                "packagingUnit": {
                    "type": "number",
                    "description": "The packaging unit of the supplier if it differs from the packaging unit settings in plentymarkets."
                },
                "lastUpdateTimestamp": {
                    "type": "string",
                    "description": "The time the supplier data was last updated"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the supplier data was created"
                },
                "currencyPurchasePrice": {
                    "type": "number",
                    "description": "The purchase price in the currency of the supplier"
                },
                "itemDescription": {
                    "type": "string",
                    "description": "The supplier item description"
                }
            }
        },
        "VariationWarehouse": {
            "type": "object",
            "properties": {
                "variationId": {
                    "type": "integer",
                    "description": "The unique ID of the variation"
                },
                "warehouseId": {
                    "type": "integer",
                    "description": "The unique ID of the warehouse"
                },
                "warehouseZoneId": {
                    "type": "integer",
                    "description": "The unique ID of the warehouse zone"
                },
                "storageLocationType": {
                    "type": "string",
                    "description": "The storage location type of the warehouse"
                },
                "reorderLevel": {
                    "type": "integer",
                    "description": "The reorder level for the variation in this warehouse"
                },
                "maximumStock": {
                    "type": "integer",
                    "description": "The maximum stock for the variation in this warehouse"
                },
                "stockTurnoverInDays": {
                    "type": "integer",
                    "description": "The stock turnover in days for the variation in this warehouse"
                },
                "storageLocation": {
                    "type": "integer",
                    "description": "The storage location of the variation in this warehouse"
                },
                "stockBuffer": {
                    "type": "integer",
                    "description": "The stock buffer for the variation in this warehouse"
                },
                "isBatch": {
                    "type": "boolean",
                    "description": "Is for warehouse and variation stock batch active"
                },
                "isBestBeforeDate": {
                    "type": "boolean",
                    "description": "Is for warehouse and variation stock best before date active"
                },
                "lastUpdateTimestamp": {
                    "type": "string",
                    "description": "The time the warehouse data was last updated."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the warehouse data was created."
                }
            }
        },
        "AttributeValueSet": {
            "type": "object",
            "properties": {
                "attributeValueSetId": {
                    "type": "integer",
                    "description": "The ID of the attribute value set"
                },
                "attributeId": {
                    "type": "integer",
                    "description": "The ID of the attribute"
                },
                "valueId": {
                    "type": "integer",
                    "description": "The ID of the attribute value"
                },
                "isLinkableToImage": {
                    "type": "integer",
                    "description": "Flag that indicates if an image can be linked to the attribute."
                }
            }
        },
        "UnitCombination": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The id of the unitCombination"
                },
                "unitId": {
                    "type": "integer",
                    "description": "The id of the unit"
                },
                "content": {
                    "type": "integer",
                    "description": "The content of the unit"
                }
            }
        },
        "VariationPropertyValueText": {
            "type": "object",
            "properties": {
                "valueId": {
                    "type": "integer",
                    "description": "The unique ID of the link between the variation and the property"
                },
                "lang": {
                    "type": "string",
                    "description": "The <a href=\"https://developers.plentymarkets.com/rest-doc/introduction#languages\" target=\"_blank\">language</a> of the property value text"
                },
                "value": {
                    "type": "string",
                    "description": "The text saved for the property of the type Text"
                }
            }
        },
        "ItemImage": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique ID of the image"
                },
                "itemId": {
                    "type": "integer",
                    "description": "The unique ID of the item the image is associated with"
                },
                "fileType": {
                    "type": "string",
                    "description": "The file format of the image. Possible file formats: jpg, jpeg, png, gif, svg"
                },
                "path": {
                    "type": "string",
                    "description": "The path under which the image is saved."
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the image. The position is used for sorting images in the online store."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the image was uploaded."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the image details were last updated."
                },
                "md5Checksum": {
                    "type": "string",
                    "description": "The MD5 hash value of the image file"
                },
                "md5ChecksumOriginal": {
                    "type": "string",
                    "description": "The MD5 hash value of the original image file"
                },
                "hasLinkedVariations": {
                    "type": "integer",
                    "description": "Indicates if the item is linked with variations. Returns 1 if at least one variation is linked with the image, otherwise 0."
                },
                "size": {
                    "type": "integer",
                    "description": "The size of the image in pixels"
                },
                "width": {
                    "type": "integer",
                    "description": "The width of the image in pixels"
                },
                "height": {
                    "type": "integer",
                    "description": "The height of the image in pixels"
                },
                "url": {
                    "type": "string",
                    "description": "The URL under which the image can be accessed after the upload."
                },
                "urlMiddle": {
                    "type": "string",
                    "description": "The URL that points to the  medium-sized version of the item image."
                },
                "urlPreview": {
                    "type": "string",
                    "description": "The URL that points to the  first preview version of the item image."
                },
                "urlSecondPreview": {
                    "type": "string",
                    "description": "The URL that points to the second preview version of the item image."
                }
            }
        },
        "ItemImageName": {
            "type": "object",
            "properties": {
                "imageId": {
                    "type": "integer",
                    "description": "The ID of the image. The ID must be unique."
                },
                "lang": {
                    "type": "string",
                    "description": "The language of the image name"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the image in the specified language"
                },
                "alternate": {
                    "type": "string",
                    "description": "The alternative name of the image in the specified language"
                }
            }
        },
        "ItemImageAvailability": {
            "type": "object",
            "properties": {
                "imageId": {
                    "type": "integer",
                    "description": "The ID of the image. The ID must be unique."
                },
                "type": {
                    "type": "string",
                    "description": "The type of referrer for which the image is available. Possible types: <ul><li>mandant = The image can be made available for clients (stores).</li><li>marketplace = The image can be made available for markets.</li><li>listing = The image can be made available for listings.</li></ul>"
                },
                "value": {
                    "type": "number",
                    "description": "For the type <b>mandant</b>, this is the plentyID of the client (store) for which the image is available. For the types <b>marketplace</b> and <b>listing</b>, this is the ID of the referrer for which the image is available. <ul><li><strong>-1.00</strong> = The image is available for all referrers of this type.</li></ul>"
                }
            }
        },
        "AttributeValueImage": {
            "type": "object",
            "properties": {
                "imageId": {
                    "type": "integer",
                    "description": "The unique ID of the image"
                },
                "itemId": {
                    "type": "integer",
                    "description": "The unique ID of the item"
                },
                "attributeId": {
                    "type": "integer",
                    "description": "The unique ID of the attribute"
                },
                "valueId": {
                    "type": "integer",
                    "description": "The unique ID of the attribute value"
                }
            }
        },
        "VariationImage": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique ID of the link between a variation and an image"
                },
                "itemId": {
                    "type": "integer",
                    "description": "The unique ID of the item"
                },
                "variationId": {
                    "type": "integer",
                    "description": "The unique ID of the variation"
                },
                "imageId": {
                    "type": "integer",
                    "description": "The unique ID of the image"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the image was linked to the variation."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the link between an image and a variation was last updated."
                }
            }
        },
        "ItemCrossSelling": {
            "type": "object",
            "properties": {
                "itemId": {
                    "type": "integer",
                    "description": "The unique ID of the item to which cross-selling items are linked"
                },
                "crossItemId": {
                    "type": "integer",
                    "description": "The unique ID of the cross-selling item that is linked to the item"
                },
                "relationship": {
                    "type": "string",
                    "description": "The cross-selling relationship between item and cross-selling item. Possible values:<ul><li>Accessory = The cross-selling item is an accessory of the item.</li><li>ReplacementPart = The cross-selling item is a replacement part for the item.</li><li>Similar = The cross-selling item is similar to the item.</li><li>Bundle = The cross-selling item is suitable to be sold as a bundle with the item.</li></ul>"
                },
                "isDynamic": {
                    "type": "boolean",
                    "description": "Flag that indicates if the cross-selling link was generated automatically."
                }
            }
        },
        "VariationDescription": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique ID of the description"
                },
                "itemId": {
                    "type": "integer",
                    "description": "The unique ID of the item that this description belongs to"
                },
                "lang": {
                    "type": "string",
                    "description": "The <a href=\"https://developers.plentymarkets.com/rest-doc/introduction#countries\" target=\"_blank\">language code</a> of the description"
                },
                "name": {
                    "type": "string",
                    "description": "The default name of the item. By default, this name is displayed in the online store. For Default items, this name is also used for markets. Character limit: max. 240 characters."
                },
                "title": {
                    "type": "string",
                    "description": "The html title for webshop of the item. By default, this title is displayed in the online store html. Character limit: max. 240 characters."
                },
                "name2": {
                    "type": "string",
                    "description": "Alternative item name that can be used e.g. for markets. Character limit: max. 240 characters."
                },
                "name3": {
                    "type": "string",
                    "description": "Alternative item name that can be used e.g. for markets. Character limit: max. 240 characters."
                },
                "previewDescription": {
                    "type": "string",
                    "description": "The preview text. The preview text is a short description that can be displayed in item lists."
                },
                "metaDescription": {
                    "type": "string",
                    "description": "The meta description of the item. This description is analysed by search engines and displayed in search results. This text should be treated as an advertising text to maximise click-through from search engine result pages. Current recommended limit is 156 characters."
                },
                "description": {
                    "type": "string",
                    "description": "The item description. This is a detailed description displayed in the item layout of the online store."
                },
                "technicalData": {
                    "type": "string",
                    "description": "The technical data for the item. To display the technical data in the online store, insert the template variable TechnicalData and an optional title into the template ItemViewSingleItem."
                },
                "urlPath": {
                    "type": "string",
                    "description": "The URL path of the item in the online store. By default, the URL path consists of the categories and the item name. The path will be assigned automatically by plentymarkets when the item is created and will be displayed as part of the URL when the item is selected in the online store."
                },
                "metaKeywords": {
                    "type": "string",
                    "description": "Meta keywords to tag the item for search engines. More than one keyword can be separated by commas."
                }
            }
        },
        "VariationMarketIdentNumber": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique ID of the market ident number (ASIN/ePID) of a variation"
                },
                "variationId": {
                    "type": "integer",
                    "description": "The unique ID of the variation"
                },
                "countryId": {
                    "type": "integer",
                    "description": "The country code of the market ident number (ASIN/ePID)"
                },
                "type": {
                    "type": "string",
                    "description": "The type of market ident number (ASIN/ePID)"
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the market ident number  (ASIN/ePID)"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the market ident number (ASIN/ePID)"
                }
            }
        },
        "VariationStock": {
            "type": "object",
            "properties": {
                "itemId": {
                    "type": "integer",
                    "description": "The ID of the item"
                },
                "variationId": {
                    "type": "integer",
                    "description": "The ID of the variation"
                },
                "warehouseId": {
                    "type": "integer",
                    "description": "The ID of the warehouse"
                },
                "reservedListing": {
                    "type": "number",
                    "description": "The quantity of a variation that is reserved for listings"
                },
                "reservedBundles": {
                    "type": "number",
                    "description": "The quantity of a variation that is reserved for item bundles"
                },
                "valueOfGoods": {
                    "type": "number",
                    "description": "The value of goods based on the physical stock"
                },
                "purchasePrice": {
                    "type": "number",
                    "description": "The purchase price of the variation stock"
                },
                "physicalStock": {
                    "type": "number",
                    "description": "The physical stock of the variation stock"
                },
                "reservedStock": {
                    "type": "number",
                    "description": "The reserved stock of the variation stock"
                },
                "netStock": {
                    "type": "number",
                    "description": "The net stock is the stock that can still be sold"
                },
                "reorderLevel": {
                    "type": "number",
                    "description": "The quantity of a variation that triggers a reorder"
                },
                "deltaReorderLevel": {
                    "type": "number",
                    "description": "The quantity of a variation that is required to reach the reorder level"
                }
            }
        },
        "VariationStockMovement": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the stock movement"
                },
                "itemId": {
                    "type": "integer",
                    "description": "The ID of the item"
                },
                "variationId": {
                    "type": "integer",
                    "description": "The ID of the variation"
                },
                "warehouseId": {
                    "type": "integer",
                    "description": "The ID of the warehouse"
                },
                "reasonString": {
                    "type": "string",
                    "description": "The reason string"
                },
                "attributeValues": {
                    "type": "string",
                    "description": "The attribute values of a variation"
                },
                "processRowId": {
                    "type": "integer",
                    "description": "The ID is either the actual ID of an order or of an incoming item data set. Whether it is an order ID or an incoming item data set ID depends on the processRowType."
                },
                "quantity": {
                    "type": "integer",
                    "description": "The quantity"
                },
                "reason": {
                    "type": "integer",
                    "description": "The reason for the movement"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date and time that the movement was created. This date is in W3C format."
                },
                "processRowType": {
                    "type": "integer",
                    "description": "The type of the stock movement\n<ul>\n    <li>1 = incoming item data set</li>\n    <li>2 = order</li>\n    <li>3 = deleted stock movement</li>\n    <li>4 = new stock intake</li>\n</ul>"
                },
                "bestBeforeDate": {
                    "type": "string",
                    "description": "The best before date for the movement"
                },
                "batch": {
                    "type": "string",
                    "description": "The batch for the movement"
                },
                "storageLocationName": {
                    "type": "string",
                    "description": "The name of the storage location"
                },
                "warehouseName": {
                    "type": "string",
                    "description": "The name of the warehouse"
                },
                "purchasePrice": {
                    "type": "integer",
                    "description": "The purchase price of a variation"
                },
                "userId": {
                    "type": "integer",
                    "description": "The id of the user. Can be null if the movement was not triggered by an user."
                }
            }
        },
        "StockStorageLocation": {
            "type": "object",
            "properties": {
                "itemId": {
                    "type": "integer",
                    "description": "The ID of the item"
                },
                "variationId": {
                    "type": "integer",
                    "description": "The ID of the variation"
                },
                "storageLocationId": {
                    "type": "integer",
                    "description": "The ID of the storage location."
                },
                "warehouseId": {
                    "type": "integer",
                    "description": "The ID of the warehouse that the storage location is in"
                },
                "quantity": {
                    "type": "number",
                    "description": "The quantity stored at the storage location"
                },
                "bestBeforeDate": {
                    "type": "string",
                    "description": "The best before date"
                },
                "batch": {
                    "type": "string",
                    "description": "The batch"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The day and time the stock was last updated"
                }
            }
        },
        "VariationAdditionalSku": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the additional sku"
                },
                "variationId": {
                    "type": "integer",
                    "description": "The ID of the variation."
                },
                "marketId": {
                    "type": "number",
                    "description": "The ID of the market reference."
                },
                "marketAccountId": {
                    "type": "integer",
                    "description": "The ID of the market account."
                },
                "sku": {
                    "type": "string",
                    "description": "The additional sku for this variation."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the SKU was created (YYYY-MM-DD HH:MM:SS)."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the SKU was updated (YYYY-MM-DD HH:MM:SS)."
                }
            }
        },
        "VariationBundle": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique ID of the link that marks a variation as a bundle component"
                },
                "variationId": {
                    "type": "integer",
                    "description": "The unique ID of the variation to which other variations are added to create a bundle"
                },
                "componentVariationId": {
                    "type": "integer",
                    "description": "The unique ID of the variation added as bundle component"
                },
                "componentQuantity": {
                    "type": "integer",
                    "description": "The quantity of the variation to be added as bundle component"
                },
                "lastUpdatedTimestamp": {
                    "type": "string",
                    "description": "The time the bundle was last updated."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the bundle was created."
                }
            }
        },
        "VariationPropertyValue": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The unique ID of the link between the variation and the property value"
                },
                "variationId": {
                    "type": "integer",
                    "description": "The unique ID of the variation"
                },
                "propertyId": {
                    "type": "integer",
                    "description": "The unique ID of the property"
                },
                "propertySelectionId": {
                    "type": "integer",
                    "description": "The unique ID of the property selection of the variation"
                },
                "valueInt": {
                    "type": "integer",
                    "description": "The int value of the property value of the variation"
                },
                "valueFloat": {
                    "type": "number",
                    "description": "The float value of the property value of the variation"
                },
                "valueFile": {
                    "type": "string",
                    "description": "The file value of the property value of the variation"
                },
                "surcharge": {
                    "type": "number",
                    "description": "The surcharge of the property value of the variation"
                }
            }
        },
        "VariationSku": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The row ID of the table plenty_item_variation_market_status"
                },
                "variationId": {
                    "type": "integer",
                    "description": "The ID of the variation"
                },
                "marketId": {
                    "type": "number",
                    "description": "The ID of the market"
                },
                "accountId": {
                    "type": "integer",
                    "description": "The ID of the market account"
                },
                "initialSku": {
                    "type": "string",
                    "description": "The initial SKU of the variation. The initial SKU cannot be modified even if the variation SKU is changed. However, it is possible to reset the variation SKU to the initial SKU."
                },
                "sku": {
                    "type": "string",
                    "description": "The SKU of the variation. The SKU is adjustable but may not exist twice for the combination of market Id and account Id."
                },
                "parentSku": {
                    "type": "string",
                    "description": "The Parent SKU of the variation. The Parent SKU is adjustable. The same Parent SKU value should be used on variations of same article."
                },
                "isActive": {
                    "type": "boolean",
                    "description": "Flag that indicates if the item is ready for export (currently not in use)."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the SKU was created (YYYY-MM-DD HH:MM:SS)."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the SKU was updated (YYYY-MM-DD HH:MM:SS)."
                },
                "exportedAt": {
                    "type": "string",
                    "description": "The time the variation was last exported (YYYY-MM-DD HH:MM:SS)."
                },
                "stockUpdatedAt": {
                    "type": "string",
                    "description": ""
                },
                "deletedAt": {
                    "type": "string",
                    "description": "The time the variation was deleted (YYYY-MM-DD HH:MM:SS)."
                },
                "status": {
                    "type": "string",
                    "description": "The status of the variation after the export. Possible entries are INACTIVE, ERROR, SENT and ACTIVE."
                },
                "additionalInformation": {
                    "type": "string",
                    "description": "The field that contains additional information."
                }
            }
        },
        "ImagesRelation": {
            "type": "object",
            "properties": []
        },
        "ItemImagesRelation": {
            "type": "object",
            "properties": []
        },
        "Tag": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the tag"
                },
                "name": {
                    "type": "string",
                    "description": "The backend name of the tag"
                },
                "color": {
                    "type": "string",
                    "description": "The color for the tag"
                }
            }
        },
        "PluginTranslation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the translation"
                },
                "pluginSetId": {
                    "type": "integer",
                    "description": "The ID of the plugin set"
                },
                "pluginName": {
                    "type": "string",
                    "description": "The name of the plugin"
                },
                "languageCode": {
                    "type": "string",
                    "description": "The code of the language"
                },
                "fileName": {
                    "type": "string",
                    "description": "The file of the key"
                },
                "key": {
                    "type": "string",
                    "description": "The translation key"
                },
                "value": {
                    "type": "string",
                    "description": "The translation value"
                }
            }
        },
        "LegalInformation": {
            "type": "object",
            "properties": {
                "plentyId": {
                    "type": "integer",
                    "description": "The unique identifier of the plenty client"
                },
                "lang": {
                    "type": "string",
                    "description": "The language of the legal information text"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the legal information text. The types available are:\n<ul>\n<li>TermsConditions</li>\n<li>CancellationRights</li>\n<li>PrivacyPolicy</li>\n<li>LegalDisclosure</li>\n<li>WithdrawalForm</li>\n</ul>"
                },
                "plainText": {
                    "type": "string",
                    "description": "The text value of the legal information text"
                },
                "htmlText": {
                    "type": "string",
                    "description": "The html value of the legal information text"
                }
            }
        },
        "Listing": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the listing."
                },
                "itemId": {
                    "type": "integer",
                    "description": "The ID of the item."
                },
                "typeId": {
                    "type": "integer",
                    "description": "The ID of the listing type. Possible types are:\n<ul>\n    <li>1 = Auction</li>\n    <li>2 = Fixed</li>\n    <li>3 = Shop item</li>\n</ul>"
                },
                "stockDependenceTypeId": {
                    "type": "integer",
                    "description": "The ID of the listing stock dependence. Possible stock dependence types are:\n<ul>\n    <li>1 = Unlimited with sync</li>\n    <li>2 = Limited with reservation</li>\n    <li>3 = Limited without reservation</li>\n    <li>4 = Unlimited without sync</li>\n</ul>"
                },
                "unitCombinationId": {
                    "type": "integer",
                    "description": "The ID of the unit combination."
                }
            }
        },
        "LayoutTemplate": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the layout template."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the layout template."
                },
                "css": {
                    "type": "string",
                    "description": "The css of the layout template."
                },
                "htmlStructure": {
                    "type": "string",
                    "description": "The html structure of the layout template."
                },
                "mainFrame": {
                    "type": "string",
                    "description": "The main frame of the layout template."
                },
                "additionalContent": {
                    "type": "array",
                    "items": [],
                    "description": "The additional content of the layout template."
                },
                "appendixType": {
                    "type": "string",
                    "description": "The appendix type of the layout template."
                }
            }
        },
        "ListingMarket": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the listing market."
                },
                "listingId": {
                    "type": "integer",
                    "description": "The listing ID of the current listing market."
                },
                "variationId": {
                    "type": "integer",
                    "description": "The variation ID for this listing market."
                },
                "referrerId": {
                    "type": "integer",
                    "description": "The ID of the referrer."
                },
                "credentialsId": {
                    "type": "integer",
                    "description": "The credentials ID that this listing market belongs to."
                },
                "directoryId": {
                    "type": "integer",
                    "description": "The directory ID of the listing market."
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Indicates if the listing market is enabled."
                },
                "duration": {
                    "type": "string",
                    "description": "The duration of the listing market."
                },
                "verified": {
                    "type": "string",
                    "description": "Indicates if the listing market has been verified. Possible values are: 'succeeded', 'failed', 'unknown'."
                },
                "quantity": {
                    "type": "integer",
                    "description": "The quantity set for this listing market."
                },
                "allVariations": {
                    "type": "boolean",
                    "description": "Indicates if all variations should be included."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date that the listing was created."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date that the listing was last updated."
                }
            }
        },
        "ListingMarketHistory": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The listing market history ID."
                },
                "listingMarketId": {
                    "type": "integer",
                    "description": "The listing market ID of the current listing market history."
                },
                "referrerId": {
                    "type": "integer",
                    "description": "The referrer ID."
                },
                "externalId": {
                    "type": "string",
                    "description": "The external ID of the listing market history."
                },
                "statusId": {
                    "type": "integer",
                    "description": "The status ID of the current listing market history. The following properties are available:\n<ul>\n<li>1 = Active</li>\n<li>2 = Ended</li>\n<li>3 = Relisted</li>\n<li>4 = Hidden</li>\n</ul>"
                },
                "quantity": {
                    "type": "integer",
                    "description": "The quantity available for sale on the marketplace."
                },
                "quantitySold": {
                    "type": "integer",
                    "description": "The quantity sold currently on the marketplace."
                },
                "quantitySoldDelta": {
                    "type": "integer",
                    "description": "The difference between the sold quantity and orders imported for this listing market history."
                },
                "quantityRemain": {
                    "type": "integer",
                    "description": "The quantity remaining on the marketplace."
                },
                "price": {
                    "type": "number",
                    "description": "The price offered for this listing market. @see ListingMarketHistoryVariation if the listing market history contains variations."
                },
                "currency": {
                    "type": "string",
                    "description": "The currency for the price of this listing market."
                },
                "sku": {
                    "type": "string",
                    "description": "The stock keeping unit of this listing market history."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date that the entry was created."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date that the entry was updated last."
                },
                "hasStockReservationForEbay": {
                    "type": "boolean",
                    "description": "The flag which indicates if we have an active stock reservations for this listing"
                }
            }
        },
        "ListingMarketDirectory": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the listing market directory."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the listing market directory."
                },
                "parentId": {
                    "type": "integer",
                    "description": "The parent ID of the listing market directory."
                },
                "level": {
                    "type": "integer",
                    "description": "The level of the directory."
                }
            }
        },
        "ListingMarketInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The listing market info ID."
                },
                "listingMarketId": {
                    "type": "integer",
                    "description": "The listing market ID that the current information belongs to."
                },
                "type": {
                    "type": "string",
                    "description": "The information type. Possible values: 'warning', 'error', 'info'."
                },
                "code": {
                    "type": "integer",
                    "description": "The information code."
                },
                "message": {
                    "type": "string",
                    "description": "The information message."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date that the listing market info was created."
                }
            }
        },
        "ListingMarketItemSpecific": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the item specific."
                },
                "listingMarketId": {
                    "type": "integer",
                    "description": "The LMID which belongs to the item specific ID."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the item specific."
                },
                "value": {
                    "type": "string",
                    "description": "The value of the item specific."
                }
            }
        },
        "ListingMarketText": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the listing market text."
                },
                "listingMarketId": {
                    "type": "integer",
                    "description": "The ID of the listing market the text belongs to."
                },
                "lang": {
                    "type": "string",
                    "description": "The language of the listing market text. Available values: 'de', 'en', 'fr', 'it', 'es', 'tr', 'nl', 'pl', 'nn', 'da', 'se', 'cz', 'ru', 'sk', 'cn', 'vn', 'pt', 'bg', 'ro'."
                },
                "title": {
                    "type": "string",
                    "description": "The title of the listing market text."
                },
                "subtitle": {
                    "type": "string",
                    "description": "The subtitle of the listing market text."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the listing market text."
                }
            }
        },
        "OptionTemplate": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the option template."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the option template."
                },
                "listing": {
                    "type": "array",
                    "items": [],
                    "description": "The listing options of the option template."
                },
                "listingMarket": {
                    "type": "array",
                    "items": [],
                    "description": "The listing market options of the option template."
                },
                "marketOptions": {
                    "type": "array",
                    "items": [],
                    "description": "The market options of the option template."
                }
            }
        },
        "ShippingProfile": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The listing shipping profile ID."
                },
                "name": {
                    "type": "string",
                    "description": "The listing shipping profile name."
                },
                "credentialsId": {
                    "type": "integer",
                    "description": "The credentials ID that this listing shipping profile belongs to."
                },
                "referrerId": {
                    "type": "integer",
                    "description": "The referrer ID."
                },
                "createdBy": {
                    "type": "string",
                    "description": "Who created the shipping profile. Possible values: 'migration','customer','external'."
                },
                "isDefault": {
                    "type": "boolean",
                    "description": "Tells if the current listing shipping profile is set as default."
                },
                "extendedData": {
                    "type": "array",
                    "items": [],
                    "description": "Extended data that defines the current shipping profile."
                }
            }
        },
        "StockDependenceType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the listing stock dependence type."
                },
                "isErasable": {
                    "type": "integer",
                    "description": "Flag that indicates if the type can be deleted."
                },
                "position": {
                    "type": "integer",
                    "description": "The position for sorting."
                }
            }
        },
        "ListingType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the listing type."
                },
                "isErasable": {
                    "type": "integer",
                    "description": "Flag that indicates if the type can be deleted."
                },
                "position": {
                    "type": "integer",
                    "description": "The position for sorting."
                }
            }
        },
        "Log": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the log entry"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date when the log entry was created"
                },
                "integration": {
                    "type": "string",
                    "description": "The integration key used for the log entry. Used as a first level allocation."
                },
                "identifier": {
                    "type": "string",
                    "description": "The identifier used for the log entry. Used as a second level allocation."
                },
                "code": {
                    "type": "string",
                    "description": "The code for this current log entry. For log entries with level \"debug\", \"info\", \"notice\", \"warning\" and \"report\" this needs to have an translation in order to be stored."
                },
                "referenceType": {
                    "type": "string",
                    "description": "Deprecated field, see the <code>references</code> field instead."
                },
                "referenceValue": {
                    "type": "string",
                    "description": "Deprecated field, see the <code>references</code> field instead."
                },
                "level": {
                    "type": "string",
                    "description": "The level this current log entry belongs to. Notice! When storing log entries with level \"report\" the entries will actually be stored as level \"info\". The difference between \"report\" and \"info\" is that log entries with level \"report\" do not need prior activation."
                },
                "additionalInfo": {
                    "type": "string",
                    "description": "Additional information that need to also be stored. Can be an int, string or object."
                },
                "callerFunction": {
                    "type": "string",
                    "description": ""
                },
                "callerLine": {
                    "type": "integer",
                    "description": ""
                },
                "references": {
                    "type": "array",
                    "items": [],
                    "description": "All the reference types and values correlated with this log entry."
                }
            }
        },
        "Credentials": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the credentials."
                },
                "environment": {
                    "type": "string",
                    "description": "The environment for the credentials. Possible values: sandbox, production"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the credentials. Possible values: active, inactive, pending"
                },
                "data": {
                    "type": "array",
                    "items": [],
                    "description": "The data of the credentials."
                },
                "market": {
                    "type": "string",
                    "description": "The market for the current credentials."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date that the credentials was created."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date that the credentials was updated last."
                }
            }
        },
        "FulfillmentPolicy": {
            "type": "object",
            "properties": {
                "fulfillmentPolicyId": {
                    "type": "string",
                    "description": "The ID of the fulfillment policy."
                },
                "description": {
                    "type": "string",
                    "description": "An optional seller-defined description of the fulfillment policy."
                },
                "freightShipping": {
                    "type": "boolean",
                    "description": "Set this value to true to indicate the seller offers freight shipping."
                },
                "globalShipping": {
                    "type": "boolean",
                    "description": "If this value is set to true, it indicates the seller has opted-in to the eBay Global Shipping Program and that they use that service for thier internation shipments."
                },
                "localPickup": {
                    "type": "boolean",
                    "description": "If this value is set to true, it indicates the seller offers local pickup of their items."
                },
                "marketplaceId": {
                    "type": "string",
                    "description": "The ID of the eBay marketplace to which this fulfillment policy applies. If this value is not specified, value defaults to the seller's eBay registration site."
                },
                "name": {
                    "type": "string",
                    "description": "A user-defined name for this fulfillment policy. Names must be unique for policies assigned to the same marketplace."
                },
                "pickupDropOff": {
                    "type": "boolean",
                    "description": "If this value is set to true, it indicates the seller offers the \"Click and Collect\" feature."
                }
            }
        },
        "ItemSpecific": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "A recommended Item Specific name."
                },
                "minValues": {
                    "type": "integer",
                    "description": "Minimum number of values that you can specify for this Item Specific."
                },
                "maxValues": {
                    "type": "integer",
                    "description": "Maximum number of values that you can specify for this Item Specific."
                },
                "selectionMode": {
                    "type": "string",
                    "description": "Controls whether you can specify your own name and value in listing requests, or if you need to use a name and/or value that eBay has defined."
                },
                "valueType": {
                    "type": "string",
                    "description": "The data type (e.g., date) that eBay expects the value to adhere to in listing requests. Only returned if the data type is not Text. In some cases, more details about the data type are returned in the `valueFormat` field."
                },
                "valueFormat": {
                    "type": "string",
                    "description": "The format of the data type (e.g., date format) that eBay expects the item specific's value to adhere to in listing requests. A data type identified by the `valueType` field may have different representations, and `valueFormat` specifies the precise format that is required."
                },
                "helpText": {
                    "type": "string",
                    "description": "Help-text defines the purpose of the Item Specific. The help text will be shown only when it is available for the particular Item Specific."
                },
                "helpUrl": {
                    "type": "string",
                    "description": "A page on the eBay Web site with context-specific help tips that provide useful information about this Item Specific. Only returned when an applicable page is available in the system."
                },
                "variationPicture": {
                    "type": "string",
                    "description": "Indicates whether the name (e.g., Color) can (or must) be used to classify the variation pictures"
                },
                "variationSpecifics": {
                    "type": "string",
                    "description": "Indicates whether the recommended name/value pair can be used as variation attributes in a fixed-price listing call. For example, a given category could disable a name like Brand in variation specifics (if Brand is only allowed in the item specifics at the Item level). The same category could enable a name like Size for variation specifics (in addition to recommending it for item specifics). If not returned, then the name/value can be used for both variation specifics and item specifics."
                },
                "values": {
                    "type": "array",
                    "items": [],
                    "description": "The available values."
                }
            }
        },
        "Marketplace": {
            "type": "object",
            "properties": {
                "siteId": {
                    "type": "integer",
                    "description": "The ID of the site exactly as eBay specifies it in the docs. This value is/was used in the old eBay SOAP APIs"
                },
                "marketplaceId": {
                    "type": "string",
                    "description": "The ID of the marketplace exactly as eBay specifies it in the docs. This value is used in the new eBay REST APIs. Eg. `EBAY_DE` or `EBAY-DE`"
                },
                "marketId": {
                    "type": "integer",
                    "description": "System-Listing wide internal ID for the listing marketplace. This id occurs only in correlation with the listing DB tables."
                },
                "referrerId": {
                    "type": "number",
                    "description": "System wide internal ID for the marketplace. Use this instead of `marketId` whenever possible!"
                },
                "shortcut": {
                    "type": "string",
                    "description": "The marketplace shortcut name."
                },
                "currency": {
                    "type": "string",
                    "description": "The currency used for the marketplace"
                }
            }
        },
        "Fitment": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The id of the fitment."
                },
                "marketId": {
                    "type": "integer",
                    "description": "The id of the market the fitment belongs to."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the fitment."
                },
                "categoryId": {
                    "type": "integer",
                    "description": "The id of the category the fitment belongs to."
                }
            }
        },
        "FitmentItem": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The id of the item that belongs to the fitment."
                },
                "fitmentId": {
                    "type": "integer",
                    "description": "The id of the fitment."
                }
            }
        },
        "PaymentPolicy": {
            "type": "object",
            "properties": {
                "paymentPolicyId": {
                    "type": "string",
                    "description": "The ID of the payment policy."
                },
                "description": {
                    "type": "string",
                    "description": "An optional seller-defined description of the payment policy. (Max length: 250)"
                },
                "immediatePay": {
                    "type": "boolean",
                    "description": "Indicate if the payment is due upon receipt or not. (eBay generates a receipt when the buyer agrees to purchase an item)"
                },
                "marketplaceId": {
                    "type": "string",
                    "description": "The ID of the eBay marketplace to which this return policy applies. If this value is not specified, value defaults to the seller's eBay registration site."
                },
                "name": {
                    "type": "string",
                    "description": "A user-defined name for this payment policy. Names must be unique for policies assigned to the same marketplace. (Max length: 64)"
                },
                "paymentInstructions": {
                    "type": "string",
                    "description": "Allows the seller to give payment instructions to the buyer. These instructions appear on the eBay View Item and Checkout pages."
                }
            }
        },
        "ReturnPolicy": {
            "type": "object",
            "properties": {
                "returnPolicyId": {
                    "type": "string",
                    "description": "The ID of the return policy."
                },
                "description": {
                    "type": "string",
                    "description": "An optional seller-defined description of the return policy."
                },
                "extendedHolidayReturnsOffered": {
                    "type": "boolean",
                    "description": "If this value is set to true, it indicates the seller offers an Extended Holiday Returns policy for their listings."
                },
                "marketplaceId": {
                    "type": "string",
                    "description": "The ID of the eBay marketplace to which this return policy applies. If this value is not specified, value defaults to the seller's eBay registration site."
                },
                "name": {
                    "type": "string",
                    "description": "A user-defined name for this fulfillment policy. Names must be unique for policies assigned to the same marketplace."
                },
                "refundMethod": {
                    "type": "string",
                    "description": "Indicates the method the seller uses to compensate the buyer for returned items. The return method specified applies only to remorse returns. Available options: `MERCHANDISE_CREDIT`, `MONEY_BACK`."
                },
                "restockingFeePercentage": {
                    "type": "string",
                    "description": "Sellers who accept returns should include this field if they charge buyers a restocking fee when items are returned."
                },
                "returnInstruction": {
                    "type": "string",
                    "description": "This optional free-form string field lets the seller provide a detailed explanation of the return policy."
                },
                "returnInstructions": {
                    "type": "string",
                    "description": "This optional free-form string field lets the seller provide a detailed explanation of the return policy."
                },
                "returnMethod": {
                    "type": "string",
                    "description": "This field indicates the method in which the seller handles non-money back return requests for remorse returns. Sellers can specify they either exchange or replace items. Available options: `EXCHANGE`, `REPLACEMENT`."
                },
                "returnsAccepted": {
                    "type": "boolean",
                    "description": "Set this value to true to indicate the seller accepts returns."
                },
                "returnShippingCostPayer": {
                    "type": "string",
                    "description": "The seller uses this value to specify whether the buyer or the seller is responsible for paying return shipping charges. The field can be set to either `BUYER` or `SELLER`."
                }
            }
        },
        "Transaction": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the transaction."
                },
                "orderId": {
                    "type": "integer",
                    "description": "The ID of the plentymarkets order."
                },
                "market": {
                    "type": "string",
                    "description": "The market. Possible values are: 'ebay', 'hood', 'ricardo'"
                },
                "externalListingId": {
                    "type": "string",
                    "description": "The ID of the external listing."
                },
                "credentialsId": {
                    "type": "string",
                    "description": "The ID of the credentials."
                },
                "buyerUserId": {
                    "type": "string",
                    "description": "The ID of the ebay buyer."
                },
                "feedback": {
                    "type": "integer",
                    "description": "The feedback."
                },
                "transactionId": {
                    "type": "string",
                    "description": "The ID of the ebay transaction."
                },
                "endTime": {
                    "type": "string",
                    "description": "The date that the item was bought."
                },
                "quantity": {
                    "type": "integer",
                    "description": "The purchased quantity."
                },
                "title": {
                    "type": "string",
                    "description": "The title of the purchased item."
                },
                "price": {
                    "type": "number",
                    "description": "The price of the transaction."
                },
                "shippingAddressCountry": {
                    "type": "string",
                    "description": "The shipping address country."
                },
                "referrerId": {
                    "type": "integer",
                    "description": "The ID of the order referrer."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date that the transaction was created."
                },
                "notification": {
                    "type": "integer",
                    "description": "Flag that indicates if the transaction import was by notification."
                },
                "orderRowId": {
                    "type": "integer",
                    "description": "The ID of the order row."
                },
                "sku": {
                    "type": "string",
                    "description": "The SKU."
                },
                "lastUpdate": {
                    "type": "integer",
                    "description": "The date that the transaction was last updated."
                },
                "externalOrderId": {
                    "type": "string",
                    "description": "The ID of the external order."
                },
                "externalReferenceNo": {
                    "type": "string",
                    "description": "The external reference number."
                },
                "cancelId": {
                    "type": "string",
                    "description": "The ID of the cancellation."
                },
                "isEbayPlus": {
                    "type": "string",
                    "description": "The transaction is ebay plus. Possible values are: 'YES', 'NO'."
                },
                "isClickAndCollect": {
                    "type": "string",
                    "description": "The transaction is click and collect. Possible values are: 'YES', 'NO'."
                },
                "extendedOrderId": {
                    "type": "string",
                    "description": "The extended order ID of eBay."
                },
                "importStatus": {
                    "type": "string",
                    "description": "The current status of the order. Possible values are: 'NEW', 'IN_PROGRESS' and 'DONE'. Default is 'NEW'."
                }
            }
        },
        "Settings": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the market settings."
                },
                "marketplaceId": {
                    "type": "integer",
                    "description": "The ID of the marketplace."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the current market settings. Possible values are: attribute, attributeValue, property, category, shipping."
                },
                "settings": {
                    "type": "array",
                    "items": [],
                    "description": "The market settings for the current marketplace."
                }
            }
        },
        "Message": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string",
                    "description": "The UUID5 identifier of the message"
                },
                "plentyIdHash": {
                    "type": "string",
                    "description": "The plenty ID hash"
                },
                "parentUuid": {
                    "type": "string",
                    "description": "The UUID5 of the parent message"
                },
                "conversationId": {
                    "type": "string",
                    "description": "The UUID5 of the conversation"
                },
                "whispered": {
                    "type": "boolean",
                    "description": "Whether the message is whispered (not visible for the contact/order linked to the message) or not"
                },
                "tags": {
                    "type": "array",
                    "items": [],
                    "description": "An array with tag IDs assigned to the message"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the message"
                },
                "preview": {
                    "type": "string",
                    "description": "The first two lines of the message without any markup"
                },
                "message": {
                    "type": "string",
                    "description": "The content of the message"
                },
                "plainMessage": {
                    "type": "string",
                    "description": "The content of the message as plain text"
                },
                "attachedFilesCount": {
                    "type": "integer",
                    "description": "The amount of attached files (readonly)"
                },
                "doneAt": {
                    "type": "string",
                    "description": "The date the messages was set to done"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The creation date of the message"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date of the last update of the message"
                },
                "deletedAt": {
                    "type": "string",
                    "description": "The date the message was deleted"
                },
                "deletedBy": {
                    "type": "integer",
                    "description": "The ID of the user who deleted the message"
                },
                "categoryId": {
                    "type": "integer",
                    "description": "The categoryID of the message/conversation"
                },
                "typeId": {
                    "type": "integer",
                    "description": "The typeID of the conversation"
                },
                "typePosition": {
                    "type": "integer",
                    "description": "The typePosition of the typeID"
                },
                "statusId": {
                    "type": "integer",
                    "description": "The statusID of the conversation"
                },
                "statusPosition": {
                    "type": "integer",
                    "description": "The statusPosition of statusID"
                }
            }
        },
        "MessageTo": {
            "type": "object",
            "properties": {
                "user": {
                    "type": "array",
                    "items": [],
                    "description": "An array with user IDs of users receiving the message"
                },
                "role": {
                    "type": "array",
                    "items": [],
                    "description": "An array with user role IDs of user roles receiving the message"
                },
                "email": {
                    "type": "array",
                    "items": [],
                    "description": "An array with emails receiving the message"
                },
                "allUsers": {
                    "type": "boolean",
                    "description": "Flag indicating that all system users receive the message"
                },
                "contacts": {
                    "type": "array",
                    "items": [],
                    "description": "A snapshot of the contacts from conversation->conversationRecipients"
                },
                "orders": {
                    "type": "array",
                    "items": [],
                    "description": "A snapshot of the orders from conversation->conversationRecipients"
                },
                "emails": {
                    "type": "array",
                    "items": [],
                    "description": "A snapshot of the emails from conversation->conversationRecipients"
                }
            }
        },
        "MessageLinkedTo": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The type of the link (one of {@link MessageTypesService::LINKED_TO_TYPE_MESSAGE},\n{@link MessageTypesService::LINKED_TO_TYPE_ORDER}, {@link MessageTypesService::LINKED_TO_TYPE_CONTACT}\nand {@link MessageTypesService::LINKED_TO_TYPE_PAYMENT})"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the link. For type {@link MessageTypesService::LINKED_TO_TYPE_MESSAGE} it is a string (uuid5)\nand an integer otherwise."
                },
                "typeId": {
                    "type": "string",
                    "description": "This can be the ID of a sub-type (e.g. the order subTypeId). (optional)"
                }
            }
        },
        "MessageMetaData": {
            "type": "object",
            "properties": {
                "readBy": {
                    "type": "array",
                    "items": [],
                    "description": "The array of users"
                },
                "plentyId": {
                    "type": "integer",
                    "description": "the plenty id of the related contact"
                }
            }
        },
        "MessageFrom": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The type of the from instance (one of {@link MessageTypesService::FROM_TYPE_USER},\n{@link MessageTypesService::FROM_TYPE_CONTACT} and {@link MessageTypesService::FROM_TYPE_EMAIL})"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the instance. For type {@link MessageTypesService::FROM_TYPE_EMAIL} it is a string (the email)\nand the id of the user or the contact otherwise."
                },
                "name": {
                    "type": "string",
                    "description": "An optional name for the instance, e.g. the real name for type {@link MessageTypesService::FROM_TYPE_EMAIL}"
                }
            }
        },
        "MessageReferrer": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "description": "The type of the from instance (one of {@link MessageTypesService::REFERRER_TYPE_SYSTEM},\n{@link MessageTypesService::REFERRER_TYPE_BACKEND}, {@link MessageTypesService::REFERRER_TYPE_REST},\n{@link MessageTypesService::REFERRER_TYPE_EMAIL} and {@link MessageTypesService::REFERRER_TYPE_PLUGIN})"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the instance. It is an integer (the user id) for type\n{@link MessageTypesService::REFERRER_TYPE_SYSTEM}, {@link MessageTypesService::REFERRER_TYPE_EMAIL}, {@link MessageTypesService::REFERRER_TYPE_BACKEND}\nand {@link MessageTypesService::REFERRER_TYPE_REST} and a string (the plugin name) for type\n{@link MessageTypesService::REFERRER_TYPE_PLUGIN}."
                },
                "name": {
                    "type": "string",
                    "description": "An optional name for the instance. For type {@link MessageTypesService::REFERRER_TYPE_PLUGIN} it is\nthe plugin namespace, the user name otherwise."
                }
            }
        },
        "Attachment": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The file name of the attachment"
                },
                "message": {
                    "type": "string",
                    "description": "The UUID of the message the attachment belongs to"
                },
                "size": {
                    "type": "integer",
                    "description": "The size of the attachment in bytes"
                },
                "contentType": {
                    "type": "string",
                    "description": "The content type fo the attachment"
                },
                "content": {
                    "type": "string",
                    "description": "The content of the attachment"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The createdAt date of the attachment"
                }
            }
        },
        "EbayAccount": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The id of the messenger ebay settings account"
                },
                "ebayAccountId": {
                    "type": "integer",
                    "description": "The id of the ebay account"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the ebay account"
                },
                "isEnabled": {
                    "type": "boolean",
                    "description": "The status of the messenger ebay settings account"
                },
                "isDeleted": {
                    "type": "boolean",
                    "description": "The deleted status of the messenger ebay settings account"
                }
            }
        },
        "ConversationSettings": {
            "type": "object",
            "properties": []
        },
        "Entry": {
            "type": "object",
            "properties": {
                "subject": {
                    "type": "string",
                    "description": "The subject of the newsletter entry"
                },
                "body": {
                    "type": "string",
                    "description": "The body of the newsletter entry"
                },
                "kind": {
                    "type": "string",
                    "description": "The type of the newsletter entry"
                }
            }
        },
        "Folder": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the newsletter folder"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the newsletter folder"
                },
                "isDeletable": {
                    "type": "boolean",
                    "description": "Flag that indicates if the newsletter folder can be deleted. The folders 'Customers' and 'Interested parties' are available by default and cannot be deleted."
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the newsletter folder"
                },
                "isSelectable": {
                    "type": "boolean",
                    "description": "Flag that indicates if the newsletter folder can be selected by customers in the online store. If this is allowed, the folder will be displayed in the My account area of the online store. Customers will then be able to subscribe to the newsletters that are included in this folder."
                }
            }
        },
        "Recipient": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the newsletter recipient"
                },
                "folderId": {
                    "type": "integer",
                    "description": "The ID of the newsletter folder"
                },
                "contactId": {
                    "type": "integer",
                    "description": "The ID of the contact"
                },
                "firstName": {
                    "type": "string",
                    "description": "The first name of the recipient"
                },
                "lastName": {
                    "type": "string",
                    "description": "The last name of the recipient"
                },
                "email": {
                    "type": "string",
                    "description": "The email address of the recipient"
                },
                "gender": {
                    "type": "string",
                    "description": "The gender of the recipient"
                },
                "birthday": {
                    "type": "string",
                    "description": "The birthday of the recipient"
                },
                "timestamp": {
                    "type": "integer",
                    "description": "The timestamp when the newsletter email was sent to the recipient"
                },
                "templateLang": {
                    "type": "string",
                    "description": "The language of the newsletter email template"
                },
                "confirmedTimestamp": {
                    "type": "integer",
                    "description": "The timestamp when the recipient confirmed the newsletter subscription"
                },
                "confirmAuthString": {
                    "type": "string",
                    "description": "The key that is automatically generated by the system. This key recognises the user regardless whether the user is logged in to the system and will then set the confirmation timestamp."
                },
                "confirmationURL": {
                    "type": "string",
                    "description": "The url with which the customer has confirmed the newsletter"
                }
            }
        },
        "AddressOrderRelation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the address order relation"
                },
                "orderId": {
                    "type": "integer",
                    "description": "The ID of the order"
                },
                "typeId": {
                    "type": "integer",
                    "description": "The ID of the address type\n<ul>\n     <li>Billing address = 1</li>\n     <li>Delivery address = 2</li>\n     <li>Sender address = 3</li>\n     <li>Return address = 4</li>\n     <li>Client address = 5</li>\n     <li>Contractor address = 6</li>\n     <li>Warehouse address = 7</li>\n </ul>"
                },
                "addressId": {
                    "type": "integer",
                    "description": "The ID of the address"
                }
            }
        },
        "CouponCampaign": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of a coupon campaign"
                },
                "externalId": {
                    "type": "string",
                    "description": "DEPRECATED! The external ID of a coupon campaign"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the coupon campaign"
                },
                "variable": {
                    "type": "integer",
                    "description": "The variable to display coupon codes in emails. There are only 10 variables available. A variable may only be used for one campaign. The variable names follow this pattern: CouponCode + Number e.g. CouponCode1."
                },
                "isPermittedForExternalReferrers": {
                    "type": "boolean",
                    "description": "Flag that indicates whether or not coupons can be redeemed if a customer enters the online store from an external referrer.\n<ul><li>TRUE = The coupon can be redeemed if the customer enters the online store from an external referrer\u2028</li>\n<li>FALSE = The coupon can not be redeemed</li></ul>"
                },
                "includeShipping": {
                    "type": "boolean",
                    "description": "The discount also applies to shipping costs. The property will be only be set if the discount type fixed is set."
                },
                "unusedCodesCount": {
                    "type": "integer",
                    "description": "The number of codes that have been redeemed"
                },
                "usedCodesCount": {
                    "type": "integer",
                    "description": "The number of codes that have not been redeemed"
                },
                "endsAt": {
                    "type": "string",
                    "description": "The date that the campaign ends"
                },
                "startsAt": {
                    "type": "string",
                    "description": "The date that the campaign starts"
                },
                "minOrderValue": {
                    "type": "number",
                    "description": "The minimum order value that needs to be reached for the coupon to be redeemed. If the value is not reached the coupon will not be redeemed."
                },
                "codeDurationWeeks": {
                    "type": "integer",
                    "description": "The number of weeks that codes of this campaign can be redeemed after they have been generated."
                },
                "codeAssignment": {
                    "type": "string",
                    "description": "The code assignment is only relevant for vouchers. Codes can either be generated every time a voucher is bought or a code from a previously created list of codes can be used. The three options available are generate, use_existing and only_use_existing.\n<ul><li>generate = a new code is generated on demand</li>\n<li>use_existing = the code already exists and is taken from a previously entered list of codes, in case of vouchers a new code will be generated for each item purchased that has associated a campaign ID</li>\n<li>only_use_existing = the code already exists and is taken from a previously entered list of codes, for vouchers no additional code will be generated for items purchased, only existing codes will be used</li></ul>"
                },
                "codeLength": {
                    "type": "string",
                    "description": "There are 3 different length available. The code can be 6, 16, 24 or 32 characters long."
                },
                "usage": {
                    "type": "string",
                    "description": "The usage defines what the coupon codes from this campaign can be used for. There are three options available:\n<ul><li>single_and_subscription = The codes can be used for single orders and subscription orders</li>\n<li>single_order = The codes can be used for single orders only</li>\n<li>subscription = The codes can be used for subscriptions only</li></ul>"
                },
                "concept": {
                    "type": "string",
                    "description": "The campaign concept defines how many codes belong to a campaign. The concept interacts with the redeem type that is explained next. There are two concept options available:\n<ul><li>single_code = The campaign has only one code</li>\n<li>multi_code = The campaign has several codes</li></ul>"
                },
                "redeemType": {
                    "type": "string",
                    "description": "The redeem type defines how many times a code of a campaign can be redeemed. There are 4 redeem types available:\n<ul><li>multi_redeem_per_user = Each customer is allowed to redeem the same code several times</li>\n<li>single_redeem_per_user =  Each customer can only redeem the same code once</li>\n<li>redeem_until_value_reached = A code can be entered several times by the same customer or by different customers, but only until the coupon value is depleted</li>\n<li>unique_redeem = The code can be redeemed once. If several customers get the same code, only the first customer to enter the code can use it.</li></ul>\nThe redeem type interacts with the concept. Pay attention to the combination these two options form."
                },
                "discountType": {
                    "type": "string",
                    "description": "There are 4 discount types available:\n<ul><li>fixed = The coupon value is a fixed amount of money. This discount type is the only one that makes sense for coupons that are sold in the online store. The actual amount of money needs to be set with the value property.</li>\n<li>percent = The discount is given as percentage and the actual value depends on the purchase. The actual number of percent need to be set with the value property.</li>\n<li>item = The discount applies to entire items. A typical example would be - Buy 1 get 1 free - or in other words - Get 2 for the price of 1. The number of items the customer gets and the number of items the customer has to pay for need to be set with itemDiscountToPay and itemDiscountToBuy.</li>\n<li>shipping = The shipping does not cost anything. The cost will be set to zero no matter what the actual shipping costs are.</li></ul>"
                },
                "itemDiscountToPay": {
                    "type": "integer",
                    "description": "The number of items that the customer has to pay for. This number needs to be compared to the number of items the customer receives, itemDiscountToBuy"
                },
                "itemDiscountToBuy": {
                    "type": "integer",
                    "description": "The number of items that the customer receives, but he or she only has to pay for the number of items set with itemDiscountToPay."
                },
                "campaignType": {
                    "type": "string",
                    "description": "The two campaign types available are coupon or voucher."
                },
                "couponType": {
                    "type": "string",
                    "description": "The coupon type is only for campaigns that have the campaign type coupon. The two coupon types available are promotion and sales."
                },
                "description": {
                    "type": "string",
                    "description": "The description of the campaign"
                },
                "value": {
                    "type": "number",
                    "description": "The actual discount value of a coupon. The value needs to be set for the two discount types fixed and percent."
                }
            }
        },
        "CouponCampaignCode": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "description": "The coupon code"
                },
                "campaignId": {
                    "type": "integer",
                    "description": "The ID of the campaign that the code belongs to"
                },
                "disable": {
                    "type": "integer",
                    "description": "Flag that indicates if a code is active or deactivated.\n<ul><li>True = the code is deactivated</li>\n    <li>False = the code is active</li></ul>"
                },
                "consumed": {
                    "type": "integer",
                    "description": "Flag that indicates if a code was redeemed or not.\n<ul><li>True = the code was redeemed</li>\n    <li>False = the code is not redeemed</li></ul>"
                },
                "usedCount": {
                    "type": "integer",
                    "description": "How many times a code has been redeemed"
                },
                "usedAmount": {
                    "type": "number",
                    "description": "The amount that is already redeemed. The total amount that can be redeemed is defined in the campaign as coupon value, because the value applies to all codes of a campaign."
                },
                "value": {
                    "type": "number",
                    "description": "The value of the coupon if it differs from the campaign value. The value is null if the campaign value is used."
                }
            }
        },
        "CouponCodeValidation": {
            "type": "object",
            "properties": {
                "campaignId": {
                    "type": "integer",
                    "description": "The ID of the campaign"
                },
                "validationType": {
                    "type": "string",
                    "description": "The type of the campaign. Currently the only type available is plentymarkets."
                },
                "contactId": {
                    "type": "integer",
                    "description": "The ID of the contact that wants to redeem the coupon"
                },
                "couponCode": {
                    "type": "string",
                    "description": "The coupon code"
                },
                "currency": {
                    "type": "string",
                    "description": "The currency of the purchase"
                },
                "exchangeRate": {
                    "type": "number",
                    "description": "The exchange rate of the purchase (optional, is loaded from settings if not given)"
                },
                "referrer": {
                    "type": "number",
                    "description": "The order referrer"
                },
                "salesDiscount": {
                    "type": "number",
                    "description": "The total discount from a coupon applied to an order. The discount is given as gross amount."
                },
                "salesDiscountNet": {
                    "type": "number",
                    "description": "The net discount from a coupon applied to an order. The net discount is the total discount minus the vat amount."
                },
                "itemDiscount": {
                    "type": "number",
                    "description": "The discount amount applied to items."
                },
                "itemDiscountNet": {
                    "type": "number",
                    "description": "The net discount applied to items."
                },
                "shippingDiscount": {
                    "type": "number",
                    "description": "The discount applied to shipping costs."
                },
                "shippingDiscountNet": {
                    "type": "number",
                    "description": "The net discount applied to shipping costs."
                },
                "usedVatFields": {
                    "type": "array",
                    "items": [],
                    "description": "The vat fields used for the validation"
                },
                "restCouponAmount": {
                    "type": "number",
                    "description": "The remaining coupon amount"
                },
                "checkedItems": {
                    "type": "array",
                    "items": [],
                    "description": "The list of variations that passed the validation"
                },
                "validateParams": {
                    "type": "array",
                    "items": [],
                    "description": "Validation parameters"
                },
                "couponCampaignType": {
                    "type": "string",
                    "description": "The campaign type"
                }
            }
        },
        "CouponCodeContact": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "description": "The coupon code"
                },
                "contactId": {
                    "type": "integer",
                    "description": "The ID of the contact that redeemed the coupon"
                },
                "openAmount": {
                    "type": "number",
                    "description": "The coupon amount that can still be redeemed"
                },
                "redeemCount": {
                    "type": "integer",
                    "description": "How many times a coupon code has already been redeemed"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date that the coupon code was updated last."
                },
                "campaignId": {
                    "type": "integer",
                    "description": "The ID of the campaign that the coupon belongs to"
                },
                "externalTransactionId": {
                    "type": "integer",
                    "description": "The ID that is assigned to a coupon by the external coupon service provider, when the coupon is redeemed."
                }
            }
        },
        "Currency": {
            "type": "object",
            "properties": {
                "currency": {
                    "type": "string",
                    "description": "The ISO 4217 code and id of the currency."
                },
                "htmlCode": {
                    "type": "string",
                    "description": "The html code (entity) for the currency."
                },
                "unicodeSign": {
                    "type": "string",
                    "description": "The unicode symbol for the currency. If no unicode symbol exists, the html code will be used."
                },
                "isActive": {
                    "type": "boolean",
                    "description": "Flag that indicates if the currency is active in the system or not. Currencies are activated per sales price."
                },
                "isErasable": {
                    "type": "boolean",
                    "description": "Flag that indicates if this currency can be deleted or not. <ul><li>False = Currency cannot be deleted</li><li>True = Currency can be deleted</li></ul>"
                },
                "exchangeRate": {
                    "type": "number",
                    "description": "The current exchange rate for this currency."
                }
            }
        },
        "Country": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The country id."
                },
                "name": {
                    "type": "string",
                    "description": "The system country name."
                },
                "shippingDestinationId": {
                    "type": "integer",
                    "description": "The shipping destination (region) id."
                },
                "active": {
                    "type": "integer",
                    "description": "The active flag (1: active, 2: backend active, 3: supplier active"
                },
                "storehouseId": {
                    "type": "integer",
                    "description": "The id of the main warehouse in this country."
                },
                "isoCode2": {
                    "type": "string",
                    "description": "The ISO 3166 ALPHA-2 code of the country."
                },
                "isoCode3": {
                    "type": "string",
                    "description": "The ISO 3166 ALPHA-3 code of the country."
                },
                "lang": {
                    "type": "string",
                    "description": "The main language spoken in the country."
                },
                "isCountryStateMandatory": {
                    "type": "boolean",
                    "description": "Flag that states if a country state is mandatory for the country."
                },
                "vatCodes": {
                    "type": "array",
                    "items": [],
                    "description": "An array with country vat codes."
                }
            }
        },
        "CurrencyExchangeRate": {
            "type": "object",
            "properties": {
                "exchangeRate": {
                    "type": "number",
                    "description": "The exchange rate"
                }
            }
        },
        "OrderDateType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the order date type. The following date types are available:\n\n* Deleted on = 1\n* Created on = 2\n* Paid date = 3\n* Last update = 4\n* Completed on = 5\n* Return date = 6\n* Payment due date = 7\n* Estimated shipping date = 8\n* Start date = 9\n* End date = 10\n* Possible delivery date = 11\n* Market transfer date = 12\n* Subscription cancelled on = 13\n* Subscription last run = 14\n* Subscription next run = 15\n* Confirmation link valid until  = 19"
                },
                "isErasable": {
                    "type": "boolean",
                    "description": "Flag that indicates if this type can be deleted or not."
                },
                "position": {
                    "type": "integer",
                    "description": "The position for sorting"
                }
            }
        },
        "OrderDateTypeName": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the order date type name"
                },
                "typeId": {
                    "type": "integer",
                    "description": "The ID of the date type that this name belongs to. The following date types are available:\n\n* Deleted on = 1\n* Created on = 2\n* Paid date = 3\n* Last update = 4\n* Completed on = 5\n* Return date = 6\n* Payment due date = 7\n* Estimated shipping date = 8\n* Start date = 9\n* End date = 10\n* Possible delivery date = 11\n* Market transfer date = 12"
                },
                "lang": {
                    "type": "string",
                    "description": "The ISO 639-1 language code for the name, e.g. \"en\" for English"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the order date type"
                }
            }
        },
        "OrderItemDate": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the order date"
                },
                "orderItemId": {
                    "type": "integer",
                    "description": "The ID of the order item that the date belongs to"
                },
                "typeId": {
                    "type": "integer",
                    "description": "The ID of the date type. The following types are available:\n\n* Start date = 9\n* End date = 10\n* Estimated delivery date = 11"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date when the date was created"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date when the date was last updated"
                }
            }
        },
        "OrderItemProperty": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the order item property."
                },
                "orderItemId": {
                    "type": "integer",
                    "description": "The ID of the order item that the property belongs to."
                },
                "typeId": {
                    "type": "integer",
                    "description": "The ID of the property type.\n\n* WAREHOUSE\t\t              =\t1\n* SHIPPING_PROFILE\t              =\t2\n* PAYMENT_METHOD\t              =\t3\n* WEIGHT\t\t\t              =\t11\n* WIDTH\t\t\t              =\t12\n* LENGTH\t\t                  =\t13\n* HEIGHT\t      \t\t          = 14\n* EXTERNAL_TOKEN_ID              =\t16\n* EXTERNAL_ITEM_ID               =\t17\n* COUPON_CODE\t      \t          =\t18\n* COUPON_TYPE\t\t              =\t19\n* ORIGINAL_WAREHOUSE\t          =\t20\n* ORIGINAL_QUANTITY              =\t21\n* CATEGORY_ID                    = 22\n* MARKET_FEE\t\t              =\t23\n* STOCK_REVERSING\t              =\t24\n* DISPUTE_STATUS      \t          =\t25\n* NO_CHANGE_BY_CONTACT           = 26\n* SIZE \t\t\t              =\t29\n* LOCATION_RESERVED\t          =\t30\n* EXTERNAL_SHIPMENT_ITEM_ID      =\t31\n* PARTIAL_SHIPPING_COSTS         =\t32\n* MAIN_DOCUMENT_NUMBER           =\t33\n* SALES_TAX_ID_NUMBER            =\t34\n* RETURNS_REASON                 =\t35\n* RETURNS_ITEM_STATUS            =\t36\n* FULFILLMENT_CENTER_ID          = 37\n* FULFILLMENT_CENTER_COUNTRY_ISO = 38\n* REORDER_ITEM_ID                = 39\n* LISTING_TYPE                   = 40\n* SOLD_COUPON_CODE               = 46\n* ORDER_ITEM_STATE               = 48\n* SAP_ORDER_NUMBER               = 50\n* DISCOUNT                       = 52\n* REORDER_ITEM_PACKAGE_UNIT      = 53\n* REORDER_ITEM_MINIMUM_PURCHASE  = 54\n* REORDER_ITEM_DELIVERY_TIME_IN_DAYS = 55\n* REORDER_ITEM_DISCOUNTABLE      = 56\n* RETURNS_REMAINING_PERCENTAGE   = 57\n* ORDER_PROPERTY_ID              = 81\n* ORDER_PROPERTY_VALUE           = 82\n* ORDER_PROPERTY_GROUP_ID        = 83\n* WEEE_PICK_UP = 92"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the property. The value depends on type."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date that the property was created."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date that the property was last updated."
                }
            }
        },
        "OrderItemTransaction": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the transaction"
                },
                "orderItemId": {
                    "type": "integer",
                    "description": "The ID of the order item"
                },
                "quantity": {
                    "type": "number",
                    "description": "The quantity"
                },
                "userId": {
                    "type": "integer",
                    "description": "The ID of the user"
                },
                "identification": {
                    "type": "string",
                    "description": "External identification. Can be an arbitrary string."
                },
                "direction": {
                    "type": "string",
                    "description": "The direction. Possible values are 'in' and 'out'."
                },
                "status": {
                    "type": "string",
                    "description": "The status. Possible values are 'regular' and 'cancelled'."
                },
                "receiptId": {
                    "type": "integer",
                    "description": "The receipt ID"
                },
                "warehouseLocationId": {
                    "type": "integer",
                    "description": "The ID of the warehouse location"
                },
                "batch": {
                    "type": "string",
                    "description": "The batch"
                },
                "bestBeforeDate": {
                    "type": "string",
                    "description": "The best before date"
                },
                "batchBestBeforeDateId": {
                    "type": "integer",
                    "description": "Deprecated. Replaced by $batch and $bestBeforeDate."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date the transaction was created"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date the transaction was last updated"
                }
            }
        },
        "OrderBooking": {
            "type": "object",
            "properties": []
        },
        "OrderPropertyType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the property type"
                },
                "isErasable": {
                    "type": "boolean",
                    "description": "Flag that states if this type can be deleted or not."
                },
                "position": {
                    "type": "integer",
                    "description": "The position for sorting"
                },
                "cast": {
                    "type": "string",
                    "description": "The data type of the values of this property type. Valid types are:\n\n* string\n* int\n* numeric\n* bool\n* enum(val1,val2,val3,...)"
                }
            }
        },
        "OrderPropertyTypeName": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of type name"
                },
                "typeId": {
                    "type": "integer",
                    "description": "The ID of the property type"
                },
                "name": {
                    "type": "string",
                    "description": "The name of property type"
                },
                "lang": {
                    "type": "string",
                    "description": "The language of the type name"
                }
            }
        },
        "OrderProperty": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the order property"
                },
                "orderId": {
                    "type": "integer",
                    "description": "The ID of the order that the property belongs to"
                },
                "typeId": {
                    "type": "integer",
                    "description": "The ID of the property type. The following types are available:\n\n* WAREHOUSE\t\t=\t1\n* SHIPPING_PROFILE\t=\t2\n* PAYMENT_METHOD\t\t\t=\t3\n* PAYMENT_STATUS\t\t\t=\t4\n* EXTERNAL_SHIPPING_PROFILE\t\t\t=\t5\n* DOCUMENT_LANGUAGE\t\t\t=\t6\n* EXTERNAL_ORDER_ID\t\t\t=\t7\n* CUSTOMER_SIGN\t\t\t=\t8\n* DUNNING_LEVEL\t\t\t=\t9\n* SELLER_ACCOUNT\t\t\t=\t10\n* WEIGHT\t\t\t=\t11\n* WIDTH\t\t\t=\t12\n* LENGTH          =\t13\n* HEIGHT\t\t=\t14\n* FLAG\t\t\t=\t15\n* EXTERNAL_TOKEN_ID\t\t\t=\t16\n* EXTERNAL_ITEM_ID\t\t\t=\t17\n* COUPON_CODE\t\t\t=\t18\n* COUPON_TYPE         =   19\n* SALES_TAX_ID_NUMBER =   34\n* MAIN_DOCUMENT_NUMBER = 33\n* PAYMENT_TRANSACTION_ID = 45\n* EXTERNAL_TAX_SERVICE = 47\n* MERCHANT_ID = 60\n* REPORT_ID = 61\n* PREFERRED_STORAGE_LOCATION_ID = 63\n* AMAZON_SHIPPING_LABEL = 64\n* MARKET_TAX_ID = 88\n* MARKET_EORI = 89\n* IS_REVERSE_CHARGED = 90\n* DISALLOW_INTERNAL_TAX_RELEVANT_DOCUMENTS = 91\n* EBAY_PLUS = 994\n* FULFILLMENT_SERVICE = 995"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the property. The value depends on the type."
                }
            }
        },
        "OrderReferrer": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number",
                    "description": "The ID of the order referrer"
                },
                "isEditable": {
                    "type": "boolean",
                    "description": "Flag that indicates if this referrer can be updated as well as deleted or not\n<ul><li>True = the referrer can be edited and deleted</li>\n<li>False = the referrer can neither be edited nor deleted</li></ul>"
                },
                "backendName": {
                    "type": "string",
                    "description": "The backend name of the referrer"
                },
                "name": {
                    "type": "string",
                    "description": "The public name of the referrer as it is displayed e.g. on documents"
                },
                "orderOwnerId": {
                    "type": "integer",
                    "description": "The user ID of whoever owns new orders from this referrer"
                },
                "isFilterable": {
                    "type": "boolean",
                    "description": "Flag that indicates if this referrer can be used as a filter or not\n<ul><li>True = Can be used as a filter</li>\n<li>False = Cannot be used as a filter</li></ul>"
                },
                "origin": {
                    "type": "string",
                    "description": "The origin of this referrer"
                },
                "showInLeads": {
                    "type": "boolean",
                    "description": "Referrer is showed in list when creating a new lead"
                }
            }
        },
        "ExportDocument": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": ""
                },
                "orderId": {
                    "type": "integer",
                    "description": ""
                },
                "packageNumber": {
                    "type": "integer",
                    "description": ""
                },
                "base64Content": {
                    "type": "integer",
                    "description": ""
                }
            }
        },
        "ShippingPackageType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the shipping package type"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the shipping package type"
                },
                "width": {
                    "type": "integer",
                    "description": "The width of the shipping package type"
                },
                "height": {
                    "type": "integer",
                    "description": "The height of the shipping package type"
                },
                "length": {
                    "type": "integer",
                    "description": "The length of the shipping package type"
                },
                "unit": {
                    "type": "string",
                    "description": "The unit of the shipping package type dimension"
                },
                "maxWeight": {
                    "type": "integer",
                    "description": "The maximum weight of the shipping package type"
                },
                "maxVolume": {
                    "type": "integer",
                    "description": "The maximum volume of the shipping package type"
                },
                "volumeType": {
                    "type": "integer",
                    "description": "The volume type of the shipping package type"
                }
            }
        },
        "OrderShippingPackage": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the order shipping package"
                },
                "orderId": {
                    "type": "integer",
                    "description": "The ID of the order"
                },
                "packageId": {
                    "type": "integer",
                    "description": "The ID of the package"
                },
                "weight": {
                    "type": "integer",
                    "description": "The weight of the package in grams"
                },
                "packageNumber": {
                    "type": "string",
                    "description": "The package number"
                },
                "labelPath": {
                    "type": "string",
                    "description": "The path to the label"
                },
                "labelBase64": {
                    "type": "string",
                    "description": "The base64 encoded label"
                },
                "exportLabelBase64": {
                    "type": "string",
                    "description": "The base64 encoded export label"
                },
                "returnPackageNumber": {
                    "type": "string",
                    "description": "The return package number"
                },
                "packageType": {
                    "type": "integer",
                    "description": "The type of the package. The following types are valid:\n<ul>\n <li>0: unpacked</li>\n <li>1: Bale</li>\n <li>2: Dispenser</li>\n <li>3: Coil</li>\n <li>4: Roll pallet</li>\n <li>5: Colli</li>\n <li>6: Container</li>\n <li>7: Bucket</li>\n <li>8: Cask</li>\n <li>9: Bottles</li>\n <li>10: European flat pallet</li>\n <li>11: Structural frame</li>\n <li>12: Gas cylinder</li>\n <li>13: Pallet cage</li>\n <li>14: Hobbock</li>\n <li>15: Half pallet</li>\n <li>16: Pallet of food items</li>\n <li>17: Wooden coaster</li>\n <li>18: IBC container</li>\n <li>19: Pitcher</li>\n <li>20: Wicker bottle</li>\n <li>21: Case</li>\n <li>22: Canister</li>\n <li>23: Customer pallet</li>\n <li>24: Cardboard box</li>\n <li>25: Composite packaging</li>\n <li>26: Package</li>\n <li>27: Ring</li>\n <li>28: Role</li>\n <li>29: Sack</li>\n <li>30: units</li>\n <li>31: Tank</li>\n <li>32: Drum</li>\n <li>34: Crate</li>\n <li>35: Quarter pallet</li>\n <li>36: Other pallets</li>\n <li>37: Bin</li>\n <li>38: One-way pallet</li>\n <li>39: Foil bag</li>\n</ul>"
                },
                "volume": {
                    "type": "number",
                    "description": "The volume of the package"
                },
                "palletId": {
                    "type": "integer",
                    "description": "The id of the pallet of which the package belong to"
                },
                "isClosed": {
                    "type": "boolean",
                    "description": "Flag to say if the package is editable or not"
                },
                "createdAt": {
                    "type": "string",
                    "description": ""
                },
                "updatedAt": {
                    "type": "string",
                    "description": ""
                },
                "packageSscc": {
                    "type": "string",
                    "description": "Amazon Vendor PackageSscc"
                },
                "mrn": {
                    "type": "string",
                    "description": "Movement Reference Number (MRN)"
                },
                "atlasRegistration": {
                    "type": "integer",
                    "description": "ATLAS export declaration"
                }
            }
        },
        "OrderShippingPackageItems": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the order shipping package item. Primary key auto-increment"
                },
                "packageId": {
                    "type": "integer",
                    "description": "The ID of the package (id column from plenty_package_type2order)"
                },
                "itemId": {
                    "type": "integer",
                    "description": "The ID of the item (plenty_item_variation_base_item_id column from plenty_item_variation_base)"
                },
                "variationId": {
                    "type": "integer",
                    "description": "The ID of the variation (plenty_item_variation_base_id column from plenty_item_variation_base)"
                },
                "itemQuantity": {
                    "type": "number",
                    "description": "The quantity of the item in the package"
                }
            }
        },
        "OrderShippingPallet": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the order shipping pallet"
                },
                "weight": {
                    "type": "number",
                    "description": "The weight of the order shipping pallet, including it's contents"
                },
                "individualWeight": {
                    "type": "number",
                    "description": "The weight of the order shipping pallet"
                },
                "width": {
                    "type": "number",
                    "description": "The width of the order shipping pallet"
                },
                "height": {
                    "type": "number",
                    "description": "The height of the order shipping pallet"
                },
                "length": {
                    "type": "number",
                    "description": "The length of the order shipping pallet"
                },
                "isStackable": {
                    "type": "boolean",
                    "description": "Flag to tell if the pallet is stackable or not. If true, another pallet can be placed over the current one"
                },
                "additionalInfo": {
                    "type": "integer",
                    "description": "Additional info"
                },
                "barcode": {
                    "type": "string",
                    "description": "The barcode"
                },
                "isClosed": {
                    "type": "boolean",
                    "description": "Flag to tell if the pallet is closed or not. If true, the information within the pallet should not be changed anymore"
                },
                "palletSscc": {
                    "type": "string",
                    "description": "Amazon Vendor PalletSscc"
                },
                "orderId": {
                    "type": "integer",
                    "description": "The id of the order"
                }
            }
        },
        "ParcelServiceRegion": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the parcel service region"
                },
                "shippingRegionId": {
                    "type": "integer",
                    "description": "The ID of the shipping region"
                },
                "parcelServicePresetId": {
                    "type": "integer",
                    "description": "The ID of the parcel service preset"
                },
                "shippingRegionName": {
                    "type": "string",
                    "description": "The name of the shipping region"
                },
                "serviceType": {
                    "type": "integer",
                    "description": "Type of the parcel service"
                }
            }
        },
        "ParcelServicePreset": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the shipping profile (autoincrement value)"
                },
                "parcelServiceId": {
                    "type": "integer",
                    "description": "The ID of the shipping service provider"
                },
                "backendName": {
                    "type": "string",
                    "description": "The back end name of the shipping profile"
                },
                "flag": {
                    "type": "integer",
                    "description": "The icon of the shipping profile"
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority of the shipping profile"
                },
                "category": {
                    "type": "integer",
                    "description": "The category of the shipping profile"
                },
                "useArticlePorto": {
                    "type": "integer",
                    "description": "Flag that indicates if the extra shipping charge saved in the item data record is used"
                },
                "isInsured": {
                    "type": "integer",
                    "description": "Flag that indicates if the shipping profile is insured"
                },
                "isExpress": {
                    "type": "integer",
                    "description": "Flag that indicates if the shipping profile is used for express delivery"
                },
                "isPostident": {
                    "type": "integer",
                    "description": "Flag that indicates if the shipping profile includes an authority verification"
                },
                "isDefaultEnabled": {
                    "type": "integer",
                    "description": "Flag that indicates if the shipping profile is automatically assigned to new items"
                },
                "islandFee": {
                    "type": "number",
                    "description": "The extra charge for islands saved in the shipping profile"
                },
                "isCod": {
                    "type": "integer",
                    "description": "Flag that indicates Cash on Delivery"
                },
                "supportedMultishop": {
                    "type": "array",
                    "items": [],
                    "description": "The clients (stores) that are activated for the shipping profile"
                },
                "supportedReferrer": {
                    "type": "array",
                    "items": [],
                    "description": "The order referrers that are activated for the shipping profile"
                },
                "subreferrerSupport": {
                    "type": "array",
                    "items": [],
                    "description": "This field is currently without any function."
                },
                "excludedPaymentMethods": {
                    "type": "array",
                    "items": [],
                    "description": "The blocked payment methods that are not offered for the shipping profile"
                },
                "excludedCustomerGroups": {
                    "type": "array",
                    "items": [],
                    "description": "The blocked customer groups for the shipping profile. Blocked customer groups cannot select the shipping profile during checkout."
                },
                "shippingGroup": {
                    "type": "string",
                    "description": "The group of the shipping profile"
                },
                "dispatchIdentifier": {
                    "type": "string",
                    "description": "This field is currently without any function."
                },
                "auctionType": {
                    "type": "integer",
                    "description": "The eBay listing type for the shipping profile"
                },
                "supportedLoyaltyPrograms": {
                    "type": "array",
                    "items": [],
                    "description": "The loyalty programs that are supported by the shipping profile"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date the shipping profile was last updated"
                },
                "showDataPrivacyAgreementHint": {
                    "type": "integer",
                    "description": ""
                },
                "transmitPrivacyRule": {
                    "type": "string",
                    "description": ""
                },
                "alternativeEmail": {
                    "type": "string",
                    "description": ""
                },
                "alternativePhone": {
                    "type": "string",
                    "description": ""
                },
                "isParcelBox": {
                    "type": "integer",
                    "description": "Indicates whether the e.g. paketshop is supported"
                },
                "isPostOffice": {
                    "type": "integer",
                    "description": "Indicates whether the e.g. postfiliale is supported"
                }
            }
        },
        "ReturnsServiceProvider": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the returns service provider"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the returns service provider"
                },
                "pluginId": {
                    "type": "integer",
                    "description": "The optional ID of the plugin when the returns service provider is registered as a plugin"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the returns service provider was created"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the returns service provider was updated"
                }
            }
        },
        "OrderReturns": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": ""
                },
                "orderId": {
                    "type": "integer",
                    "description": ""
                },
                "returnsOrderId": {
                    "type": "integer",
                    "description": ""
                },
                "providerId": {
                    "type": "integer",
                    "description": ""
                },
                "fileName": {
                    "type": "string",
                    "description": ""
                },
                "externalNumber": {
                    "type": "string",
                    "description": ""
                },
                "externalData": {
                    "type": "string",
                    "description": ""
                }
            }
        },
        "ShippingInformation": {
            "type": "object",
            "properties": {
                "orderId": {
                    "type": "integer",
                    "description": "The ID of the order"
                },
                "shippingServiceProvider": {
                    "type": "string",
                    "description": "The name of the shipping service provider"
                },
                "transactionId": {
                    "type": "string",
                    "description": "The ID of the transaction"
                },
                "shippingStatus": {
                    "type": "string",
                    "description": "The shipping status. Possible values are 'open', 'prepared' and 'registered'."
                },
                "shippingCosts": {
                    "type": "number",
                    "description": "The shipping costs"
                },
                "additionalData": {
                    "type": "string",
                    "description": "The additional data. Depending on the shipping service provider selected, this data may contain different information, e.g. shipping service, email address and order ID."
                },
                "registrationAt": {
                    "type": "integer",
                    "description": "The date and time the shipment was registered"
                },
                "shipmentAt": {
                    "type": "integer",
                    "description": "The date the items will be shipped"
                }
            }
        },
        "ShippingServiceProvider": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the shipping service provider"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the shipping service provider"
                },
                "pluginId": {
                    "type": "integer",
                    "description": "The optional ID of the plugin when the shipping service provider is registered as a plugin"
                },
                "icon": {
                    "type": "string",
                    "description": "The optional path of the icon"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the shipping service provider was created"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the shipping service provider was updated"
                }
            }
        },
        "StatusHistoryEntry": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the status history entry"
                },
                "orderId": {
                    "type": "integer",
                    "description": "The ID of the order"
                },
                "statusId": {
                    "type": "number",
                    "description": "The ID of the status"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date when the entry was created"
                },
                "userId": {
                    "type": "integer",
                    "description": "The ID of the user"
                },
                "procedureText": {
                    "type": "string",
                    "description": "The information text of the procedure that created the entry"
                }
            }
        },
        "OrderStatus": {
            "type": "object",
            "properties": {
                "statusId": {
                    "type": "number",
                    "description": "The ID of the status."
                },
                "isErasable": {
                    "type": "boolean",
                    "description": "Flag that indicates whether the status is erasable or not."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date, when the status was created."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date, when the status was updated."
                },
                "isFrontendVisible": {
                    "type": "boolean",
                    "description": "Indicates visibility in frontend."
                },
                "isReorderVisible": {
                    "type": "boolean",
                    "description": "Indicates visibility in reorder."
                },
                "isRedistributionVisible": {
                    "type": "boolean",
                    "description": "Indicates visibility in redistribution."
                },
                "color": {
                    "type": "string",
                    "description": "The color of the status."
                }
            }
        },
        "ContactWish": {
            "type": "object",
            "properties": {
                "text": {
                    "type": "string",
                    "description": "The text of the contact wish"
                }
            }
        },
        "OrderDate": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the order date"
                },
                "orderId": {
                    "type": "integer",
                    "description": "The ID of the order that the date belongs to"
                },
                "typeId": {
                    "type": "integer",
                    "description": "The ID of the date type. The following types are available:\n\n* Deleted on = 1\n* Created on = 2\n* Paid date = 3\n* Last update = 4\n* Completed date = 5\n* Return date = 6\n* Payment due date = 7\n* Estimated shipping date = 8\n* Start date = 9\n* End date = 10\n* Estimated delivery date = 11\n* Market transfer date = 12\n* Subscription cancelled on = 13\n* Subscription last run = 14\n* Subscription next run = 15\n* Purchase date = 16\n* Finish date = 17"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date when the date was created"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date when the date was last updated"
                }
            }
        },
        "DocumentData": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string",
                    "description": "The base64 encoded file data."
                },
                "type": {
                    "type": "string",
                    "description": "The type of the document."
                },
                "number": {
                    "type": "integer",
                    "description": "The document number"
                },
                "numberWithPrefix": {
                    "type": "string",
                    "description": "The document number with prefix"
                },
                "directoryId": {
                    "type": "integer",
                    "description": "The ID of the directory"
                },
                "path": {
                    "type": "string",
                    "description": "The path"
                },
                "userId": {
                    "type": "integer",
                    "description": "The ID of the user"
                },
                "source": {
                    "type": "string",
                    "description": "The source"
                },
                "displayDate": {
                    "type": "string",
                    "description": "The date displayed on the document"
                }
            }
        },
        "OrderFamily": {
            "type": "object",
            "properties": {
                "originOrderId": {
                    "type": "integer",
                    "description": ""
                },
                "mainSalesOrderId": {
                    "type": "integer",
                    "description": ""
                }
            }
        },
        "OrderItem": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the order item"
                },
                "orderId": {
                    "type": "integer",
                    "description": "The ID of the order that the order item belongs to"
                },
                "typeId": {
                    "type": "integer",
                    "description": "The ID of the order item type\n\n* VARIATION\t\t\t=\t1\n* ITEM_BUNDLE\t\t\t=\t2\n* BUNDLE_COMPONENT\t\t=\t3\n* PROMOTIONAL_COUPON\t=\t4\n* GIFT_CARD\t\t\t=\t5\n* SHIPPING_COSTS\t\t=\t6\n* PAYMENT_SURCHARGE\t=\t7\n* GIFT_WRAP\t\t\t=\t8\n* UNASSIGEND_VARIATION\t=\t9\n* DEPOSIT\t\t\t\t=\t10\n* ORDER\t\t\t\t=\t11\n* DUNNING_CHARGE\t\t=   12\n* ITEM_SET\t\t        =   13\n* SET_COMPONENT\t\t=   14\n* ORDER_PROPERTY\t\t=   15"
                },
                "referrerId": {
                    "type": "number",
                    "description": "The ID of order item referrer"
                },
                "itemVariationId": {
                    "type": "integer",
                    "description": "The ID of the item variation"
                },
                "quantity": {
                    "type": "number",
                    "description": "The quantity."
                },
                "orderItemName": {
                    "type": "string",
                    "description": "The name of the order item"
                },
                "attributeValues": {
                    "type": "string",
                    "description": "The attribute value names"
                },
                "shippingProfileId": {
                    "type": "integer",
                    "description": "The ID of the order item's shipping profile"
                },
                "countryVatId": {
                    "type": "integer",
                    "description": "The ID of the country vat"
                },
                "vatField": {
                    "type": "integer",
                    "description": "The vat id (0-5)."
                },
                "vatRate": {
                    "type": "number",
                    "description": "The vat amount, e.g. 19.0 for 19% VAT."
                },
                "position": {
                    "type": "integer",
                    "description": "The order items position in the order."
                },
                "warehouseId": {
                    "type": "integer",
                    "description": "The ID of the warehouse."
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date at which the order item was created."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date that the order item was last updated."
                }
            }
        },
        "OrderSerialNumber": {
            "type": "object",
            "properties": {
                "serialNumberId": {
                    "type": "integer",
                    "description": "The ID of the serial number"
                },
                "orderId": {
                    "type": "integer",
                    "description": "The ID of the order"
                },
                "orderItemId": {
                    "type": "integer",
                    "description": "The ID of the order item"
                },
                "serialNumber": {
                    "type": "string",
                    "description": "The serial number"
                }
            }
        },
        "PaymentPropertyTypeName": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the name of the property type"
                },
                "typeId": {
                    "type": "integer",
                    "description": "The ID of the property type"
                },
                "lang": {
                    "type": "string",
                    "description": "The language of the name of the property type"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the property type"
                }
            }
        },
        "PaymentContactRelation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the payment order relation"
                },
                "paymentId": {
                    "type": "integer",
                    "description": "The ID of the payment"
                },
                "contactId": {
                    "type": "integer",
                    "description": "The ID of the contact"
                },
                "assignedAt": {
                    "type": "string",
                    "description": "The time the payment contact relation was assigned"
                }
            }
        },
        "PaymentOrderRelation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the payment order relation"
                },
                "paymentId": {
                    "type": "integer",
                    "description": "The ID of the payment"
                },
                "orderId": {
                    "type": "integer",
                    "description": "The ID of the order"
                },
                "assignedAt": {
                    "type": "string",
                    "description": "The time the payment order relation was assigned"
                }
            }
        },
        "Payment": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the payment"
                },
                "amount": {
                    "type": "number",
                    "description": "The amount of the payment"
                },
                "exchangeRatio": {
                    "type": "number",
                    "description": "The exchange rate. Exchange rates are used if the default currency saved in plentymarkets differs from the currency of the order."
                },
                "parentId": {
                    "type": "integer",
                    "description": "The ID of the parent payment"
                },
                "deleted": {
                    "type": "integer",
                    "description": "A deleted payment. Deleted payments have the value 1 and are not displayed in the plentymarkets back end."
                },
                "unaccountable": {
                    "type": "integer",
                    "description": "An unassigned payment. Unassigned payments have the value 1."
                },
                "currency": {
                    "type": "string",
                    "description": "The currency of the payment in ISO 4217 code."
                },
                "type": {
                    "type": "string",
                    "description": "The payment type. Available types are credit and debit."
                },
                "hash": {
                    "type": "string",
                    "description": "The hash code of the payment. The hash code consists of 32 characters and is automatically generated."
                },
                "origin": {
                    "type": "integer",
                    "description": "The origin of the payment. The following origins are available:\n<ul>\n    <li>Undefined = 0</li>\n    <li>System = 1</li>\n    <li>Manually = 2</li>\n    <li>SOAP = 3</li>\n    <li>Import = 4</li>\n    <li>Split payment = 5</li>\n    <li>Plugin = 6</li>\n    <li>POS = 7</li>\n</ul>"
                },
                "receivedAt": {
                    "type": "string",
                    "description": "The time the payment was received"
                },
                "importedAt": {
                    "type": "string",
                    "description": "The time the payment was imported"
                },
                "status": {
                    "type": "integer",
                    "description": "The <a href=\"https://developers.plentymarkets.com/en-gb/developers/main/rest-api-guides/getting-started.html#_payment_status_ids\"  target=\"_blank\">status</a> of the payment"
                },
                "transactionType": {
                    "type": "integer",
                    "description": "The transaction type of the payment. The following transaction types are available:\n<ul>\n    <li>Interim transaction report = 1</li>\n    <li>Booked payment = 2</li>\n    <li>Split payment = 3</li>\n</ul>"
                },
                "mopId": {
                    "type": "integer",
                    "description": "The ID of the payment method"
                },
                "regenerateHash": {
                    "type": "boolean",
                    "description": "If $regenerateHash is true, regenerate the payment hash value. Default is false."
                },
                "updateOrderPaymentStatus": {
                    "type": "boolean",
                    "description": "If $updateOrderPaymentStatus is true, update the order payment status. Default is false."
                },
                "isSystemCurrency": {
                    "type": "boolean",
                    "description": "If $isSystemCurrency is false, the value will be converted to the standard currency with the provided exchange rate. If $isSystemCurrency is true, the value is not converted. Default is true."
                }
            }
        },
        "PaymentHistory": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the payment history"
                },
                "paymentId": {
                    "type": "integer",
                    "description": "The ID of the payment"
                },
                "typeId": {
                    "type": "integer",
                    "description": "The ID of the history type. The following types are available:\n<ul>\n    <li>Created = 1</li>\n    <li>Status updated = 2</li>\n    <li>Assigned = 3</li>\n    <li>Detached = 4</li>\n    <li>Deleted = 5</li>\n    <li>Updated = 6</li>\n</ul>"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the payment history"
                },
                "user": {
                    "type": "string",
                    "description": "The user who initiated the action"
                }
            }
        },
        "PaymentProperty": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the payment property"
                },
                "paymentId": {
                    "type": "integer",
                    "description": "The ID of the payment"
                },
                "typeId": {
                    "type": "integer",
                    "description": "The ID of the property type. The following property types are available:\n<ul>\n    <li>Transaction ID = 1</li>\n    <li>Reference ID = 2</li>\n    <li>Booking text = 3</li>\n    <li>Transaction password = 4</li>\n    <li>Transaction code = 5</li>\n    <li>Authorisation ID = 6</li>\n    <li>Capture ID = 7</li>\n    <li>Refund ID = 8</li>\n    <li>Credit note ID = 9</li>\n    <li>Order reference = 10</li>\n    <li>Name of the sender = 11</li>\n    <li>Email of the sender = 12</li>\n    <li>The sender's sort code = 13</li>\n    <li>The sender's bank name = 14</li>\n    <li>The sender's bank account number = 15</li>\n    <li>The holder of the bank account = 16</li>\n    <li>The country of the sender's bank account = 17</li>\n    <li>The sender's IBAN = 18</li>\n    <li>The sender's BIC = 19</li>\n    <li>Name of the recipient = 20</li>\n    <li>The recipient's bank account = 21</li>\n    <li>Reference text of the payment = 22</li>\n    <li>Payment origin = 23</li>\n    <li>Shipping address ID = 24</li>\n    <li>Invoice address ID = 25</li>\n    <li>Item buyer = 26</li>\n    <li>Item number = 27</li>\n    <li>Item transaction ID = 28</li>\n    <li>External transaction type = 29</li>\n    <li>External transaction status = 30</li>\n    <li>The receiver's IBAN = 31</li>\n    <li>The receiver's BIC = 32</li>\n    <li>Transaction fee = 33</li>\n    <li>Transaction lifespan = 34</li>\n    <li>Matching rate = 36</li>\n</ul>"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the property type"
                }
            }
        },
        "PaymentMethodName": {
            "type": "object",
            "properties": {
                "paymentMethodId": {
                    "type": "integer",
                    "description": ""
                },
                "lang": {
                    "type": "string",
                    "description": ""
                },
                "name": {
                    "type": "string",
                    "description": ""
                }
            }
        },
        "PaymentMethod": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the payment method"
                },
                "pluginKey": {
                    "type": "string",
                    "description": "The plugin key of the payment method"
                },
                "paymentKey": {
                    "type": "string",
                    "description": "The payment key of the payment method"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the payment method"
                },
                "isDocumentBuilderActive": {
                    "type": "boolean",
                    "description": "Flag that indicates if payment method is checked for document builder"
                }
            }
        },
        "PaymentPropertyType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the property type"
                },
                "erasable": {
                    "type": "integer",
                    "description": "Specifies whether the property type can be deleted. Property types that can be deleted have the value 1. Default property types cannot be deleted."
                },
                "position": {
                    "type": "integer",
                    "description": "The position number of the property type"
                }
            }
        },
        "ItemSerialNumber": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the serial number"
                },
                "orderId": {
                    "type": "integer",
                    "description": "The ID of the order"
                },
                "orderItemId": {
                    "type": "integer",
                    "description": "The ID of the order item"
                },
                "itemId": {
                    "type": "integer",
                    "description": "The ID of the item"
                },
                "serialNumber": {
                    "type": "string",
                    "description": "The serial number"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date the serial number was created"
                }
            }
        },
        "AdditionalSku": {
            "type": "object",
            "properties": []
        },
        "BundleComponent": {
            "type": "object",
            "properties": []
        },
        "Client": {
            "type": "object",
            "properties": []
        },
        "DefaultCategory": {
            "type": "object",
            "properties": []
        },
        "Image": {
            "type": "object",
            "properties": []
        },
        "Market": {
            "type": "object",
            "properties": []
        },
        "MarketIdentNumber": {
            "type": "object",
            "properties": []
        },
        "Sku": {
            "type": "object",
            "properties": []
        },
        "Supplier": {
            "type": "object",
            "properties": []
        },
        "Warehouse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The id of the warehouse"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the warehouse"
                },
                "note": {
                    "type": "string",
                    "description": "A note for this warehouse"
                },
                "typeId": {
                    "type": "integer",
                    "description": "The id of the warehouse type. The following types are available:\n<ul>\n    <li>0 = Sales warehouse</li>\n    <li>1 = Repair warehouse</li>\n    <li>4 = Storage warehouse</li>\n    <li>5 = Transit warehouse</li>\n    <li>6 = Distribution warehouse</li>\n    <li>7 = Other</li>\n</ul>"
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority of the warehouse. The higher the priority, the more important the warehouse is. The priority is used for automatic warehouse detection."
                },
                "allocationReferrerIds": {
                    "type": "array",
                    "items": [],
                    "description": "Allocation Referrer Ids by automatic warehouse detection"
                },
                "onStockAvailability": {
                    "type": "integer",
                    "description": "Displayed availability of a variation if stock is available"
                },
                "outOfStockAvailability": {
                    "type": "integer",
                    "description": "Displayed availability of a variation if no stock is available"
                },
                "splitByShippingProfile": {
                    "type": "boolean",
                    "description": "Flag that indicates if for this warehouse orders are split by shipping profiles or not. <ul><li>True = Orders are split by shipping profiles</li> <li>False = Orders will not be split by shipping profiles</li></ul>"
                },
                "storageLocationType": {
                    "type": "string",
                    "description": "The storage location type. The following types are available: <ul><li>none</li> <li>small</li><li>medium</li> <li>large</li> <li>europallet</li></ul>"
                },
                "storageLocationZone": {
                    "type": "integer",
                    "description": "The zone that the storage location is in"
                },
                "repairWarehouseId": {
                    "type": "integer",
                    "description": "The id of the associated repair warehouse"
                },
                "isInventoryModeActive": {
                    "type": "boolean",
                    "description": "Flag that indicates if the stocktaking mode for this warehouse is active or not. <ul><li>True = active</li> <li>False = inactive</li></ul>"
                },
                "logisticsType": {
                    "type": "string",
                    "description": "The id of the logistics type of the warehouse. The logistics type states which service provider fulfills the storage and shipping. The following logistics types are available:\n<ul>\n<li>own</li>\n<li>amazon</li>\n<li>dhlFulfillment</li>\n</ul>"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The updated at timestamp of the warehouse"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The created at timestamp of the warehouse"
                }
            }
        },
        "Inheritance": {
            "type": "object",
            "properties": []
        },
        "Base": {
            "type": "object",
            "properties": []
        },
        "CursorResult": {
            "type": "object",
            "properties": []
        },
        "PluginSet": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": ""
                },
                "hash": {
                    "type": "string",
                    "description": ""
                },
                "hasSuccessfulBuild": {
                    "type": "boolean",
                    "description": ""
                },
                "parentPluginSetId": {
                    "type": "integer",
                    "description": ""
                },
                "name": {
                    "type": "string",
                    "description": ""
                },
                "description": {
                    "type": "string",
                    "description": ""
                }
            }
        },
        "PluginSetsInfo": {
            "type": "object",
            "properties": []
        },
        "Plugin": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the plugin"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the plugin"
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the plugin. The position is used to determine the plugin\norder."
                },
                "activeStage": {
                    "type": "boolean",
                    "description": "Shows whether the plugin is active in Stage. Inactive plugins will not\nbe provisioned in Stage."
                },
                "activeProductive": {
                    "type": "boolean",
                    "description": "Shows whether the plugin is active in Productive. Inactive plugins will\nnot be provisioned in Productive."
                },
                "created_at": {
                    "type": "string",
                    "description": "The date that the plugin was created."
                },
                "updated_at": {
                    "type": "string",
                    "description": "The date that the plugin was updated last."
                },
                "inStage": {
                    "type": "boolean",
                    "description": "Shows whether the plugin is provisioned in Stage."
                },
                "inProductive": {
                    "type": "boolean",
                    "description": "Shows whether the plugin is provisioned in Productive."
                },
                "isConnectedWithGit": {
                    "type": "boolean",
                    "description": ""
                },
                "updateInformation": {
                    "type": "array",
                    "items": [],
                    "description": ""
                },
                "type": {
                    "type": "string",
                    "description": "The type of the plugin. The following plugin types are available:\n<ul>\n    <li>Template</li>\n    <li>Export</li>\n</ul>"
                },
                "installed": {
                    "type": "boolean",
                    "description": "Whether or not the plugin is installed. This will be false for plugins\nthat have been purchased from the marketplace but have not yet been installed in any set."
                },
                "version": {
                    "type": "string",
                    "description": "The version of the plugin"
                },
                "versionStage": {
                    "type": "string",
                    "description": "The version of the plugin in stage"
                },
                "versionProductive": {
                    "type": "string",
                    "description": "The version of the plugin in productive"
                },
                "description": {
                    "type": "string",
                    "description": "The description text of the plugin"
                },
                "namespace": {
                    "type": "string",
                    "description": "The namespace of the plugin"
                },
                "dependencies": {
                    "type": "array",
                    "items": [],
                    "description": "A list of plugins with dependencies to the plugin"
                },
                "author": {
                    "type": "string",
                    "description": "The name of the plugin author"
                },
                "price": {
                    "type": "number",
                    "description": "The price of the plugin"
                },
                "keywords": {
                    "type": "array",
                    "items": [],
                    "description": "A list of plugin keywords"
                },
                "require": {
                    "type": "array",
                    "items": [],
                    "description": "A list of plugins that are required by the plugin"
                },
                "platform": {
                    "type": "array",
                    "items": [],
                    "description": "Details about what platform does the plugin support."
                },
                "notInstalledRequirements": {
                    "type": "array",
                    "items": [],
                    "description": "A list of required plugins that are not installed"
                },
                "notActiveStageRequirements": {
                    "type": "array",
                    "items": [],
                    "description": "A list of required plugins that are not active in stage"
                },
                "notActiveProductiveRequirements": {
                    "type": "array",
                    "items": [],
                    "description": "A list of required plugins that are not active in productive"
                },
                "runOnBuild": {
                    "type": "array",
                    "items": [],
                    "description": "The list of classes to execute once on plugin build"
                },
                "checkOnBuild": {
                    "type": "array",
                    "items": [],
                    "description": "The list of classes to execute on every plugin build"
                },
                "authorIcon": {
                    "type": "string",
                    "description": "The author icon"
                },
                "pluginIcon": {
                    "type": "string",
                    "description": "The plugin icon"
                },
                "license": {
                    "type": "string",
                    "description": "The plugin license"
                },
                "shortDescription": {
                    "type": "array",
                    "items": [],
                    "description": ""
                },
                "isClosedSource": {
                    "type": "boolean",
                    "description": "is closed source"
                },
                "inboxPath": {
                    "type": "string",
                    "description": "path in the inbox (closed source, open source)"
                },
                "marketplaceName": {
                    "type": "array",
                    "items": [],
                    "description": "The plugin name displayed in marketplace"
                },
                "source": {
                    "type": "string",
                    "description": "Whether this plugin was installed from marketplace, git or local"
                },
                "javaScriptFiles": {
                    "type": "array",
                    "items": [],
                    "description": "A list of included javascript files"
                },
                "containers": {
                    "type": "array",
                    "items": [],
                    "description": "A list of provided containers with name and description"
                },
                "dataProviders": {
                    "type": "array",
                    "items": [],
                    "description": "A list of data providers with name and description"
                },
                "categories": {
                    "type": "array",
                    "items": [],
                    "description": ""
                },
                "webhookUrl": {
                    "type": "string",
                    "description": "webhookUrl"
                },
                "isExternalTool": {
                    "type": "boolean",
                    "description": "is external tool"
                },
                "directDownloadLinks": {
                    "type": "array",
                    "items": [],
                    "description": "A list of urls for the external tool"
                },
                "forwardLink": {
                    "type": "string",
                    "description": "A forward link to the external tool developers page"
                },
                "branch": {
                    "type": "string",
                    "description": "The branch to checkout for this particular Plugin"
                },
                "commit": {
                    "type": "string",
                    "description": "The commit to checkout for this particular Plugin"
                },
                "offerTrial": {
                    "type": "boolean",
                    "description": "Determines if the plugin offers a trial period for plentyMarketplace"
                },
                "offerFreemium": {
                    "type": "boolean",
                    "description": "Determines if the plugin offers freemium functionality"
                },
                "pluginSetIds": {
                    "type": "array",
                    "items": [],
                    "description": "Array of PluginSet Ids where this plugin is contained."
                }
            }
        },
        "PluginSetEntry": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": ""
                },
                "pluginId": {
                    "type": "integer",
                    "description": ""
                },
                "pluginSetId": {
                    "type": "integer",
                    "description": ""
                },
                "branchName": {
                    "type": "string",
                    "description": ""
                },
                "commit": {
                    "type": "string",
                    "description": ""
                },
                "position": {
                    "type": "integer",
                    "description": ""
                },
                "isInstalledFromGit": {
                    "type": "boolean",
                    "description": ""
                }
            }
        },
        "Webstore": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the client (store)"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the client (store)"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the client (store)"
                },
                "storeIdentifier": {
                    "type": "integer",
                    "description": "The identifier of the client (store)"
                },
                "pluginSetId": {
                    "type": "integer",
                    "description": "The plugin set id of the client (store)"
                }
            }
        },
        "Configuration": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": ""
                },
                "key": {
                    "type": "string",
                    "description": ""
                },
                "value": {
                    "type": "string",
                    "description": ""
                },
                "plugin_id": {
                    "type": "integer",
                    "description": ""
                },
                "tab": {
                    "type": "string",
                    "description": ""
                },
                "label": {
                    "type": "string",
                    "description": ""
                },
                "type": {
                    "type": "string",
                    "description": ""
                },
                "possibleValues": {
                    "type": "array",
                    "items": [],
                    "description": ""
                },
                "default": {
                    "type": "string",
                    "description": ""
                },
                "scss": {
                    "type": "boolean",
                    "description": ""
                },
                "updated_at": {
                    "type": "string",
                    "description": ""
                },
                "pluginSetEntryId": {
                    "type": "integer",
                    "description": ""
                }
            }
        },
        "PropertyAmazon": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the property amazon"
                },
                "propertyId": {
                    "type": "integer",
                    "description": "The property ID of the property amazon"
                },
                "platform": {
                    "type": "string",
                    "description": "The platform of the property amazon"
                },
                "category": {
                    "type": "string",
                    "description": "The category of the property amazon"
                },
                "field": {
                    "type": "string",
                    "description": "The field of the property amazon"
                }
            }
        },
        "PropertyAvailability": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the property availability"
                },
                "propertyId": {
                    "type": "integer",
                    "description": "The ID of the property"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the property availability"
                },
                "value": {
                    "type": "number",
                    "description": "The value of the property availability"
                }
            }
        },
        "PropertyGroupOption": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the property group option"
                },
                "groupId": {
                    "type": "integer",
                    "description": "The property group ID of the property group"
                },
                "type": {
                    "type": "string",
                    "description": "The identifier of the property group option"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the property group option"
                }
            }
        },
        "PropertyMarket": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the property market"
                },
                "propertyId": {
                    "type": "integer",
                    "description": "The ID of the property"
                },
                "referrerId": {
                    "type": "number",
                    "description": "The ID of the referrer"
                },
                "referrerSubId": {
                    "type": "integer",
                    "description": "The ID of the sub referrer"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the property market"
                }
            }
        },
        "PropertyOption": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the property option"
                },
                "propertyId": {
                    "type": "integer",
                    "description": "The property ID of the property option"
                },
                "type": {
                    "type": "string",
                    "description": "The identifier type of the option"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the option"
                }
            }
        },
        "PropertyRelation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the property relation"
                },
                "propertyId": {
                    "type": "integer",
                    "description": "The property ID of the property relation"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the property relation"
                },
                "targetId": {
                    "type": "string",
                    "description": "The ID of the target of the property relation"
                },
                "groupId": {
                    "type": "integer",
                    "description": "The property group ID of the property relation"
                },
                "markup": {
                    "type": "number",
                    "description": "The mark up of the property relation"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the property relation for properties of the following type: int, float, date and file."
                }
            }
        },
        "PropertyRelationValue": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the property relation value"
                },
                "relationId": {
                    "type": "integer",
                    "description": "The ID of the property relation"
                },
                "lang": {
                    "type": "string",
                    "description": "The language of the property relation value"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the property relation"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the property relation value"
                }
            }
        },
        "RepairReason": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the repair reason."
                },
                "reason": {
                    "type": "string",
                    "description": "The specified reason in system language."
                }
            }
        },
        "RepairStatus": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the repair status."
                },
                "status": {
                    "type": "string",
                    "description": "The specified status in system language."
                }
            }
        },
        "ReturnReason": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the return reason."
                },
                "reason": {
                    "type": "string",
                    "description": "The specified reason in system language."
                }
            }
        },
        "ReturnStatus": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the return status."
                },
                "status": {
                    "type": "string",
                    "description": "The specified status in system language."
                }
            }
        },
        "ContentLink": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the content link"
                },
                "contentId": {
                    "type": "integer",
                    "description": "The ID of the content"
                },
                "containerName": {
                    "type": "string",
                    "description": "The name of the container"
                },
                "pluginSetId": {
                    "type": "integer",
                    "description": "The Id of the plugin set"
                },
                "language": {
                    "type": "string",
                    "description": "The language where the content is linked to."
                },
                "active": {
                    "type": "boolean",
                    "description": "Indicates if the link is active and the content should be visible for the frontend."
                },
                "relatedContentType": {
                    "type": "string",
                    "description": "The content type the content is linked to"
                },
                "relatedContainerName": {
                    "type": "string",
                    "description": "The container name the content is linked to"
                },
                "inherit": {
                    "type": "boolean",
                    "description": "Indicates if this content should be inherited to child contents."
                },
                "invalid": {
                    "type": "boolean",
                    "description": "Indicate if the content is invalid and should be regenerated on next request."
                }
            }
        },
        "Content": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the content"
                },
                "dataProviderName": {
                    "type": "string",
                    "description": "The name of the data provider"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the content"
                },
                "widgets": {
                    "type": "string",
                    "description": "The configured widgets of the content. This attribute is deprecated. Use $dropzones instead."
                },
                "dropzones": {
                    "type": "array",
                    "items": [],
                    "description": "Dropzones of the content"
                }
            }
        },
        "ContentPage": {
            "type": "object",
            "properties": {
                "identifier": {
                    "type": "string",
                    "description": "The identifier of the content page"
                },
                "caption": {
                    "type": "string",
                    "description": "Translation key to read the caption from"
                }
            }
        },
        "SearchResult": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "string",
                    "description": ""
                },
                "label": {
                    "type": "string",
                    "description": ""
                },
                "source": {
                    "type": "string",
                    "description": ""
                }
            }
        },
        "Reservation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": ""
                },
                "initialId": {
                    "type": "string",
                    "description": ""
                },
                "transactionId": {
                    "type": "string",
                    "description": ""
                },
                "variationId": {
                    "type": "integer",
                    "description": ""
                },
                "warehouseId": {
                    "type": "integer",
                    "description": ""
                },
                "storageLocationId": {
                    "type": "integer",
                    "description": ""
                },
                "batch": {
                    "type": "string",
                    "description": ""
                },
                "difference": {
                    "type": "number",
                    "description": ""
                },
                "reason": {
                    "type": "string",
                    "description": ""
                },
                "priority": {
                    "type": "integer",
                    "description": ""
                },
                "mayBecomePending": {
                    "type": "boolean",
                    "description": ""
                },
                "timeToLive": {
                    "type": "integer",
                    "description": ""
                }
            }
        },
        "Stock": {
            "type": "object",
            "properties": {
                "itemId": {
                    "type": "integer",
                    "description": "The ID of the item"
                },
                "variationId": {
                    "type": "integer",
                    "description": "The ID of the variation"
                },
                "warehouseId": {
                    "type": "integer",
                    "description": "The ID of the warehouse"
                },
                "stockPhysical": {
                    "type": "number",
                    "description": "The physical stock"
                },
                "reservedStock": {
                    "type": "number",
                    "description": "The reserved stock"
                },
                "reservedEbay": {
                    "type": "number",
                    "description": "The stock reserved for ebay"
                },
                "reorderDelta": {
                    "type": "number",
                    "description": "The reorder delta"
                },
                "stockNet": {
                    "type": "number",
                    "description": "The net stock"
                },
                "reordered": {
                    "type": "integer",
                    "description": "The reordered quantity of a variation"
                },
                "warehousePriority": {
                    "type": "integer",
                    "description": "The priority of the warehouse"
                },
                "reservedBundle": {
                    "type": "number",
                    "description": "Reserved bundle"
                },
                "averagePurchasePrice": {
                    "type": "number",
                    "description": "The average purchase price"
                },
                "averageSale": {
                    "type": "number",
                    "description": "The average sale"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the stock was last updated"
                }
            }
        },
        "VariationStockRedistribution": {
            "type": "object",
            "properties": {
                "variationId": {
                    "type": "integer",
                    "description": "The ID of the variation"
                },
                "reasonId": {
                    "type": "integer",
                    "description": "The reason for the redistribution. Valid reasons are:\n<ul>\n <li>401: Stock transfer</li>\n <li>402: Stock correction by stocktaking</li>\n <li>403: Stock transfer because of need for repair</li>\n</ul>"
                },
                "quantity": {
                    "type": "number",
                    "description": "The quantity to redistribute"
                },
                "bestBeforeDate": {
                    "type": "string",
                    "description": "The best before date of the redistribution"
                },
                "batch": {
                    "type": "string",
                    "description": "The batch of the redistribution"
                },
                "currentStorageLocationId": {
                    "type": "integer",
                    "description": "The ID of the current storage location"
                },
                "currentWarehouseId": {
                    "type": "integer",
                    "description": "The ID of the current warehouse"
                },
                "newStorageLocationId": {
                    "type": "integer",
                    "description": "The ID of the new storage location"
                },
                "newWarehouseId": {
                    "type": "integer",
                    "description": "The ID of the new warehouse"
                }
            }
        },
        "StorageLocation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The id of the storage location."
                },
                "warehouseId": {
                    "type": "integer",
                    "description": "The id of the warehouse the storage location belongs to."
                },
                "rackId": {
                    "type": "integer",
                    "description": "The id of the rack the storage location belongs to."
                },
                "shelfId": {
                    "type": "integer",
                    "description": "The id of the shelf the storage location belongs to."
                },
                "name": {
                    "type": "string",
                    "description": "The name of the storage location."
                },
                "type": {
                    "type": "integer",
                    "description": "The type of the storage location. Valid strings are: 'small', 'medium', 'large', 'europallet'."
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the storage location."
                }
            }
        },
        "VariationStockIntake": {
            "type": "object",
            "properties": {
                "variationId": {
                    "type": "integer",
                    "description": "The ID of the variation"
                },
                "warehouseId": {
                    "type": "integer",
                    "description": "The ID of the warehouse"
                },
                "storageLocationId": {
                    "type": "integer",
                    "description": "The ID of the storage location"
                },
                "deliveredAt": {
                    "type": "string",
                    "description": "The date when stock was booked in. The date is given in W3C format."
                },
                "orderNumber": {
                    "type": "string",
                    "description": "The order number"
                },
                "supplierId": {
                    "type": "integer",
                    "description": "The ID of the supplier"
                },
                "currency": {
                    "type": "string",
                    "description": "The currency"
                },
                "exchangeRate": {
                    "type": "number",
                    "description": "The exchange rate"
                },
                "quantity": {
                    "type": "number",
                    "description": "The quantity of a variation"
                },
                "purchasePrice": {
                    "type": "number",
                    "description": "The purchase price"
                },
                "bestBeforeDate": {
                    "type": "string",
                    "description": "The best before date of the variation"
                },
                "batch": {
                    "type": "string",
                    "description": "The batch of the variation"
                },
                "reasonId": {
                    "type": "integer",
                    "description": "The ID of the reason. The following IDs are available:\n<ul>\n<li>101: Incoming items</li>\n<li>102: Booked in by stocktaking</li>\n<li>104: Rebooked into stock because no production errors were found</li>\n<li>106: Maculation canceled</li>\n<li>107: Packing error, items are re-booked</li>\n<li>109: Incoming items (logistics)</li>\n<li>115: Incoming items (second choice)</li>\n<li>116: Booked in by correction</li>\n<li>117: Unpacked item</li>\n<li>180: Incoming items (purchase order)</li>\n<li>181: Incoming items (warehousing)</li>\n</ul>"
                }
            }
        },
        "VariationStockDischarge": {
            "type": "object",
            "properties": {
                "variationId": {
                    "type": "integer",
                    "description": "The ID of the variation"
                },
                "warehouseId": {
                    "type": "integer",
                    "description": "The ID of the warehouse"
                },
                "storageLocationId": {
                    "type": "integer",
                    "description": "The ID of the storage location"
                },
                "deliveredAt": {
                    "type": "string",
                    "description": "The date when stock was booked in. The date is given in W3C format."
                },
                "orderNumber": {
                    "type": "string",
                    "description": "The order number"
                },
                "supplierId": {
                    "type": "integer",
                    "description": "The ID of the supplier"
                },
                "currency": {
                    "type": "string",
                    "description": "The currency"
                },
                "exchangeRate": {
                    "type": "number",
                    "description": "The exchange rate"
                },
                "quantity": {
                    "type": "number",
                    "description": "The quantity of a variation"
                },
                "bestBeforeDate": {
                    "type": "string",
                    "description": "The best before date of the variation"
                },
                "batch": {
                    "type": "string",
                    "description": "The batch of the variation"
                },
                "reasonId": {
                    "type": "integer",
                    "description": "The ID of the reason. The following IDs are available:\n<ul>\n<li>201: Outbound items</li>\n<li>202: Outbound inventur</li>\n<li>205: Outbound rubbish</li>\n<li>206: Outbound packing error</li>\n<li>207: Outbound defect</li>\n<li>208: Outbound complaint</li>\n<li>209: Outbound logistic</li>\n<li>214: Outbound warehouse movement</li>\n<li>215: Outbound second choise</li>\n<li>216: Outbound correction</li>\n<li>280: Outbound purchase order</li>\n<li>281: Outbound loss</li>\n</ul>"
                }
            }
        },
        "VariationStockCorrection": {
            "type": "object",
            "properties": {
                "variationId": {
                    "type": "integer",
                    "description": "The ID of the variation"
                },
                "warehouseId": {
                    "type": "integer",
                    "description": "The ID of the warehouse"
                },
                "storageLocationId": {
                    "type": "integer",
                    "description": "The ID of the storage location"
                },
                "quantity": {
                    "type": "number",
                    "description": "The quantity of the variation"
                },
                "bestBeforeDate": {
                    "type": "string",
                    "description": "The best before date of the variation"
                },
                "batch": {
                    "type": "string",
                    "description": "The batch of the variation"
                },
                "reasonId": {
                    "type": "integer",
                    "description": "The reason for correction. The following reasons are available:\n<ul>\n<li>301: Stock correction</li>\n<li>302: Stock correction by stocktaking</li>\n<li>304: Stock correction because of manufacturer error</li>\n<li>305: Stock correction because of unusable paper</li>\n<li>306: Stock correction because of packing error</li>\n<li>307: Stock correction because of damage</li>\n<li>309: Stock correction (internal offset)</li>\n<li>317: Stock correction because of BBD</li>\n<li>318: Stock correction because of shipping items to FBA</li>\n<li>319: Stock correction because of shipping items to fulfillment service provider</li>\n<li>320: Stock correction because of sample for interested parties</li>\n<li>321: Stock correction because of sample for customers</li>\n<li>322: Stock correction because of sample</li>\n<li>323: Stock correction because quality models are booked in</li>\n<li>324: Stock correction because quality models are booked out</li>\n<li>325: Stock correction because of gift</li>\n<li>326: Stock correction because of malfunction (without return)</li>\n<li>327: Stock correction because of loss</li>\n<li>328: Stock correction because of unpack</li>\n</ul>"
                }
            }
        },
        "CloudMetricsList": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer",
                    "description": ""
                },
                "totalsCount": {
                    "type": "integer",
                    "description": ""
                },
                "isLastPage": {
                    "type": "boolean",
                    "description": ""
                }
            }
        },
        "TaricVatAssignment": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the taric vat assignment"
                },
                "taricCode": {
                    "type": "integer",
                    "description": "The taric code"
                },
                "countryId": {
                    "type": "integer",
                    "description": "The ID of the country that the taric code configuration belongs to"
                },
                "vatField": {
                    "type": "string",
                    "description": "The ID of the VAT rate of the taric code / country id combination."
                }
            }
        },
        "TagAvailability": {
            "type": "object",
            "properties": {
                "tagId": {
                    "type": "integer",
                    "description": "The Tag ID of the tag"
                },
                "tagType": {
                    "type": "string",
                    "description": "The type of the tag. The following types are available.\n<ul>\n<li>blog</li>\n<li>category</li>\n<li>content_page</li>\n<li>variation</li>\n<li>ticket</li>\n<li>board</li>\n<li>order</li>\n</ul>"
                }
            }
        },
        "TagClient": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The id of the relation"
                },
                "tagId": {
                    "type": "integer",
                    "description": "The Tag ID of the tag"
                },
                "plentyId": {
                    "type": "integer",
                    "description": "The PlentyId of the client"
                }
            }
        },
        "TagName": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The name ID of the tag"
                },
                "tagId": {
                    "type": "integer",
                    "description": "The tag ID"
                },
                "tagLang": {
                    "type": "string",
                    "description": "The lang of the tag name."
                },
                "tagName": {
                    "type": "string",
                    "description": "The name of the tag."
                }
            }
        },
        "TagRelationship": {
            "type": "object",
            "properties": {
                "tagId": {
                    "type": "integer",
                    "description": "The ID of the tag"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the relationship"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the relationship"
                },
                "UUID5": {
                    "type": "string",
                    "description": "The UUID5 of the relationship"
                }
            }
        },
        "Ticket": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the ticket"
                },
                "typeId": {
                    "type": "integer",
                    "description": "The type ID of the ticket"
                },
                "priorityId": {
                    "type": "integer",
                    "description": "The priority ID of the ticket"
                },
                "parentTicketId": {
                    "type": "integer",
                    "description": "The ID of the parent ticket"
                },
                "statusId": {
                    "type": "integer",
                    "description": "The status ID of the ticket"
                },
                "confidential": {
                    "type": "array",
                    "items": [],
                    "description": "The confidential value. Displays 1 if the ticket is confidential. Displays 0 if the ticket is not confidential."
                },
                "contactId": {
                    "type": "integer",
                    "description": "The ID of the contact that is linked with the ticket"
                },
                "orderId": {
                    "type": "integer",
                    "description": "The ID of the order linked with the ticket"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the ticket was created as unix timestamp or carbon object"
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The time the ticket was last updated as unix timestamp or carbon object"
                },
                "contactLastUpdateAt": {
                    "type": "string",
                    "description": "The time the contact was last updated"
                },
                "deadlineAt": {
                    "type": "string",
                    "description": "The date of the ticket deadline"
                },
                "finishedAt": {
                    "type": "string",
                    "description": "The date the ticket is solved and displays 100 percent in the progress bar"
                },
                "title": {
                    "type": "string",
                    "description": "The title of the ticket"
                },
                "progress": {
                    "type": "integer",
                    "description": "The progress of the ticket in percent"
                },
                "plentyId": {
                    "type": "integer",
                    "description": "The ID of the client (store)"
                },
                "source": {
                    "type": "array",
                    "items": [],
                    "description": "The source of the ticket. Possible values are 'frontend', 'backend', 'ebay' and 'email'."
                },
                "documentsCount": {
                    "type": "integer",
                    "description": "The number of documents that are attached to the ticket"
                },
                "hasDocuments": {
                    "type": "integer",
                    "description": "Displays 1 if the ticket has one or more documents. Displays 0 if the ticket has no document."
                },
                "childrenCount": {
                    "type": "integer",
                    "description": "The number of child tickets"
                },
                "resubmissionAt": {
                    "type": "string",
                    "description": "The date the ticket should be resubmitted"
                },
                "parseData": {
                    "type": "string",
                    "description": "The ParseData from the ticket"
                }
            }
        },
        "TicketOwner": {
            "type": "object",
            "properties": {
                "ticketId": {
                    "type": "integer",
                    "description": "The ID of the ticket"
                },
                "userId": {
                    "type": "integer",
                    "description": "The user ID of the owner"
                },
                "roleId": {
                    "type": "integer",
                    "description": "The role ID of the owner"
                }
            }
        },
        "TicketMessage": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the message"
                },
                "ticketId": {
                    "type": "integer",
                    "description": "The ticket ID the message belongs to"
                },
                "userId": {
                    "type": "integer",
                    "description": "The user of the message"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time the ticket message was created as unix timestamp or carbon object"
                },
                "text": {
                    "type": "string",
                    "description": "The content of the message"
                },
                "type": {
                    "type": "array",
                    "items": [],
                    "description": "The type of the message. Two types are available:\n<ul>\n<li>message (visible for the customer)</li>\n<li>comment (not visible for the customer)</li>\n</ul>"
                },
                "source": {
                    "type": "array",
                    "items": [],
                    "description": "The origin of the message. The following sources are available by default and cannot be deleted.\n<ul>\n<li>backend</li>\n<li>frontend</li>\n<li>ebay</li>\n<li>email</li>\n</ul>"
                },
                "topicId": {
                    "type": "integer",
                    "description": "The ID of the topic the message is assigned to"
                }
            }
        },
        "TicketStatusName": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the status name"
                },
                "statusId": {
                    "type": "integer",
                    "description": "The status ID of the status name"
                },
                "lang": {
                    "type": "string",
                    "description": "The language of the status name"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the status"
                }
            }
        },
        "TicketTypeName": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the role name"
                },
                "typeId": {
                    "type": "integer",
                    "description": "The type id of the role name"
                },
                "lang": {
                    "type": "string",
                    "description": "The language of the role name"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the role"
                }
            }
        },
        "Todo": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": ""
                },
                "flag": {
                    "type": "integer",
                    "description": ""
                },
                "userId": {
                    "type": "integer",
                    "description": ""
                },
                "priorityId": {
                    "type": "integer",
                    "description": ""
                },
                "progress": {
                    "type": "number",
                    "description": ""
                },
                "title": {
                    "type": "string",
                    "description": ""
                },
                "description": {
                    "type": "string",
                    "description": ""
                }
            }
        },
        "PropertyGroupRelation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the property group relation"
                },
                "propertyId": {
                    "type": "integer",
                    "description": "The ID of the property"
                },
                "groupId": {
                    "type": "integer",
                    "description": "The ID of the property group"
                }
            }
        },
        "PropertyRelationSelection": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the property relation selection value"
                },
                "relationId": {
                    "type": "integer",
                    "description": "The relation ID of the property relation selection value"
                },
                "selectionId": {
                    "type": "integer",
                    "description": "The selection ID of the property relation selection value"
                }
            }
        },
        "PropertySelectionName": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the property selection name"
                },
                "selectionId": {
                    "type": "integer",
                    "description": "The selection ID of the property selection name"
                },
                "lang": {
                    "type": "string",
                    "description": "The language of the property selection name"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the property selection name"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the property selection name"
                }
            }
        },
        "Vat": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the VAT configuration. A VAT configuration includes 4 VAT rates"
                },
                "countryId": {
                    "type": "integer",
                    "description": "The ID of the country that the VAT configuration belongs to"
                },
                "taxIdNumber": {
                    "type": "string",
                    "description": "The tax id number of VAT configuration."
                },
                "startedAt": {
                    "type": "string",
                    "description": "The date when the VAT configuration went into effect"
                },
                "invalidFrom": {
                    "type": "string",
                    "description": "The date when the VAT configuration should not be used any more"
                },
                "locationId": {
                    "type": "integer",
                    "description": "The ID of the location"
                },
                "marginScheme": {
                    "type": "string",
                    "description": "Specifies the tax rate that is used, when the margin scheme is applied. Available values: 'none', 'vat1', 'vat2', 'vat3', 'vat4'."
                },
                "isRestrictedToDigitalItems": {
                    "type": "boolean",
                    "description": "Flag that indicates if the VAT configuration is used only applied to digital goods or not. True= The VAT set is only applied to digital goods. False = The VAT set is applied to all types of goods."
                },
                "isStandard": {
                    "type": "boolean",
                    "description": "Flag that indicates if the VAT configuration is the standard VAT configuration for the location"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The date at which the VAT configuration was created."
                },
                "updatedAt": {
                    "type": "string",
                    "description": "The date that the VAT configuration was last updated."
                },
                "isActive": {
                    "type": "boolean",
                    "description": "Is this the active VAT configuration for this location and country? (read-only)"
                }
            }
        },
        "VatRate": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the VAT rate"
                },
                "vatRate": {
                    "type": "number",
                    "description": "The percentage of the VAT rate, e.g. 19.00 for 19 %"
                },
                "name": {
                    "type": "string",
                    "description": "The name of a VAT rate"
                },
                "revenueAccount": {
                    "type": "string",
                    "description": "The revenue account for the VAT rate"
                }
            }
        },
        "WarehouseLocationDimension": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the storage location dimension"
                },
                "parentId": {
                    "type": "integer",
                    "description": "The parent ID of the storage location dimension"
                },
                "warehouseId": {
                    "type": "integer",
                    "description": "The warehouse ID of the storage location dimension"
                },
                "level": {
                    "type": "integer",
                    "description": "The level of the storage location dimension"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the storage location dimension"
                },
                "shortcut": {
                    "type": "string",
                    "description": "The shortcut of the storage location dimension"
                },
                "separator": {
                    "type": "string",
                    "description": "The separator of the storage location dimension"
                },
                "displayInName": {
                    "type": "integer",
                    "description": "If true, the dimension prefix will be shown in the storage location name"
                },
                "isActiveForPickupPath": {
                    "type": "integer",
                    "description": "Active flag for pickup path of the storage location dimension"
                }
            }
        },
        "WarehouseLocation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the storage location"
                },
                "levelId": {
                    "type": "integer",
                    "description": "The level ID of the storage location"
                },
                "label": {
                    "type": "string",
                    "description": "The label of the storage location"
                },
                "purposeKey": {
                    "type": "string",
                    "description": "The purpose key of the storage location"
                },
                "statusKey": {
                    "type": "string",
                    "description": "The status key of the storage location"
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the storage location"
                },
                "fullLabel": {
                    "type": "string",
                    "description": "The label with level path name"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the storage location (array values: 'small','medium','large','europallet')"
                },
                "notes": {
                    "type": "string",
                    "description": "The notes of the storage location"
                }
            }
        },
        "WarehouseLocationInventory": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the storage location"
                },
                "userId": {
                    "type": "integer",
                    "description": "The user ID of the storage location"
                },
                "user_id": {
                    "type": "integer",
                    "description": "deprecated - use userID instead"
                },
                "status": {
                    "type": "integer",
                    "description": "The status of the storage location stocktaking"
                },
                "warehouseLocationId": {
                    "type": "integer",
                    "description": "The  storage location ID"
                },
                "warehouse_location": {
                    "type": "integer",
                    "description": "deprecated - use WarehouseLocationId"
                }
            }
        },
        "WarehouseLocationLevel": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "The ID of the storage location level"
                },
                "parentId": {
                    "type": "integer",
                    "description": "The parent ID of the storage location level"
                },
                "dimensionId": {
                    "type": "integer",
                    "description": "The storage location dimension id of the storage location level"
                },
                "position": {
                    "type": "integer",
                    "description": "The position of the storage location level"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the storage location level"
                },
                "type": {
                    "type": "string",
                    "description": "The type of the storage location ['small','medium','large','europallet']"
                },
                "pathName": {
                    "type": "string",
                    "description": "The complete path name from the level"
                }
            }
        },
        "Wizard": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string",
                    "description": "The title"
                },
                "key": {
                    "type": "string",
                    "description": "The wizard's key"
                },
                "settingsHandlerClass": {
                    "type": "string",
                    "description": "Settings handler"
                },
                "shortDescription": {
                    "type": "string",
                    "description": "The short description"
                },
                "translationKey": {
                    "type": "string",
                    "description": "The translation key"
                },
                "deleteConfirmationText": {
                    "type": "string",
                    "description": "Delete confirmation Text in deletion overlay"
                },
                "topics": {
                    "type": "array",
                    "items": [],
                    "description": "The topics"
                },
                "steps": {
                    "type": "array",
                    "items": [],
                    "description": "Wizard's structure"
                },
                "priority": {
                    "type": "integer",
                    "description": "Wizard's listing priority in the overview"
                },
                "relevance": {
                    "type": "string",
                    "description": "Wizard's level of relevance"
                },
                "keywords": {
                    "type": "array",
                    "items": [],
                    "description": "Keywords describing the wizard"
                }
            }
        }
    }
}