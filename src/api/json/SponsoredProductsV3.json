{
  "info": {
    "description": " ",
    "title": "Sponsored Products",
    "version": "3.0"
  },
  "paths": {
    "/sp/targets/bid/recommendations": {
      "post": {
        "summary": "Get bid recommendations for ad groups",
        "requestBody": {
          "content": {
            "application/vnd.spthemebasedbidrecommendation.v4+json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/AdGroupThemeBasedBidRecommendationRequestV4"
                  },
                  {
                    "$ref": "#/components/schemas/AsinsThemeBasedBidRecommendationRequestV4"
                  }
                ],
                "discriminator": {
                  "mapping": {
                    "BIDS_FOR_EXISTING_AD_GROUP": "#/components/schemas/AdGroupThemeBasedBidRecommendationRequestV4",
                    "BIDS_FOR_NEW_AD_GROUP": "#/components/schemas/AsinsThemeBasedBidRecommendationRequestV4"
                  },
                  "propertyName": "recommendationType"
                }
              }
            },
            "application/vnd.spthemebasedbidrecommendation.v3+json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/AdGroupThemeBasedBidRecommendationRequest"
                  },
                  {
                    "$ref": "#/components/schemas/AsinsThemeBasedBidRecommendationRequest"
                  }
                ],
                "discriminator": {
                  "mapping": {
                    "BIDS_FOR_EXISTING_AD_GROUP": "#/components/schemas/AdGroupThemeBasedBidRecommendationRequest",
                    "BIDS_FOR_NEW_AD_GROUP": "#/components/schemas/AsinsThemeBasedBidRecommendationRequest"
                  },
                  "propertyName": "recommendationType"
                }
              }
            },
            "application/vnd.spthemebasedbidrecommendation.v5+json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/AdGroupThemeBasedBidRecommendationRequestV5"
                  },
                  {
                    "$ref": "#/components/schemas/AsinsThemeBasedBidRecommendationRequestV5"
                  }
                ],
                "discriminator": {
                  "mapping": {
                    "BIDS_FOR_EXISTING_AD_GROUP": "#/components/schemas/AdGroupThemeBasedBidRecommendationRequestV5",
                    "BIDS_FOR_NEW_AD_GROUP": "#/components/schemas/AsinsThemeBasedBidRecommendationRequestV5"
                  },
                  "propertyName": "recommendationType"
                }
              }
            }
          }
        },
        "description": "The <b> POST /sp/targets/bid/recommendations <\/b> endpoint returns recommended bids for each target given either A) new ad group (a list of ad ASINs) or B) existing ad group (a campaign ID and ad group ID). Please use the recommendationType field to specify if you want to use option A or option B. This API is currently available at marketplaces where SP is available. The API supports keyword, auto and product targets. The API will return a 422 response when an unsupported marketplace or target is provided. <h1> Version 5.0 <\/h1><h2> New Features <\/h2><ul><li> Version 5.0 introduces two new capabilities. First, advertisers will receive the estimated impressions for the suggested bid to help them understand the potential impact of adopting them. Second, advertisers will get a view of the estimated impressions for a range of bids (8 bids) for each target. <\/li><li> The second feature is default to be disabled. To enable it, user needs to set <b> includeAnalysis <\/b> as True in request body. <\/li><li> New features are currently available only for existing ad group requests in US marketplace. <\/li><\/ul><h1> Version 4.0 <\/h1><h2> New Features <\/h2><ul><li> Version 4.0 allows users to get theme-based bid recommendations for product targeting expressions, including PAT_ASIN, PAT_CATEGORY and PAT_CATEGORY_REFINEMENT. <\/li><li> Version 4.0 supports keyword, auto and product targets in all marketplaces. <\/li><li> Version 4.0 removes \"impact metrics\" when returning each bid suggestion. <\/li><li> Version 4.0 also allows users to get theme-based bid recommendations for keyword group targeting expressions with the type KEYWORD_GROUP. This new type is only available in US marketplace. <\/li><\/ul><br>\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "operationId": "GetThemeBasedBidRecommendationForAdGroup_v1",
        "responses": {
          "200": {
            "description": "Successful Operation.",
            "content": {
              "application/vnd.spthemebasedbidrecommendation.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/ThemeBasedBidRecommendationResponseV4"
                }
              },
              "application/vnd.spthemebasedbidrecommendation.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ThemeBasedBidRecommendationResponse"
                }
              },
              "application/vnd.spthemebasedbidrecommendation.v5+json": {
                "schema": {
                  "$ref": "#/components/schemas/ThemeBasedBidRecommendationResponseV5"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/vnd.spthemebasedbidrecommendation.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/BidRecommendationError"
                }
              },
              "application/vnd.spthemebasedbidrecommendation.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/BidRecommendationError"
                }
              },
              "application/vnd.spthemebasedbidrecommendation.v5+json": {
                "schema": {
                  "$ref": "#/components/schemas/BidRecommendationError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity. Failed due to invalid parameters. If you receive an error like \u201cInvalid Advertiser and ASINs combination in the request\u201d, please make sure the ad group has at least one ASIN in it.",
            "content": {
              "application/vnd.spthemebasedbidrecommendation.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/BidRecommendationError"
                }
              },
              "application/vnd.spthemebasedbidrecommendation.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/BidRecommendationError"
                }
              },
              "application/vnd.spthemebasedbidrecommendation.v5+json": {
                "schema": {
                  "$ref": "#/components/schemas/BidRecommendationError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Request failed because user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/vnd.spthemebasedbidrecommendation.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/BidRecommendationError"
                }
              },
              "application/vnd.spthemebasedbidrecommendation.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/BidRecommendationError"
                }
              },
              "application/vnd.spthemebasedbidrecommendation.v5+json": {
                "schema": {
                  "$ref": "#/components/schemas/BidRecommendationError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Something went wrong on the server.",
            "content": {
              "application/vnd.spthemebasedbidrecommendation.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/BidRecommendationError"
                }
              },
              "application/vnd.spthemebasedbidrecommendation.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/BidRecommendationError"
                }
              },
              "application/vnd.spthemebasedbidrecommendation.v5+json": {
                "schema": {
                  "$ref": "#/components/schemas/BidRecommendationError"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Request failed because the payload format is not supported.",
            "content": {
              "application/vnd.spthemebasedbidrecommendation.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/BidRecommendationError"
                }
              },
              "application/vnd.spthemebasedbidrecommendation.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/BidRecommendationError"
                }
              },
              "application/vnd.spthemebasedbidrecommendation.v5+json": {
                "schema": {
                  "$ref": "#/components/schemas/BidRecommendationError"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed. Request failed because the request HTTP method is not supported.",
            "content": {
              "application/vnd.spthemebasedbidrecommendation.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/BidRecommendationError"
                }
              },
              "application/vnd.spthemebasedbidrecommendation.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/BidRecommendationError"
                }
              },
              "application/vnd.spthemebasedbidrecommendation.v5+json": {
                "schema": {
                  "$ref": "#/components/schemas/BidRecommendationError"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable. Request failed because the service cannot produce a response in a format matching the media types provided in the Accept header.",
            "content": {
              "application/vnd.spthemebasedbidrecommendation.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/BidRecommendationError"
                }
              },
              "application/vnd.spthemebasedbidrecommendation.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/BidRecommendationError"
                }
              },
              "application/vnd.spthemebasedbidrecommendation.v5+json": {
                "schema": {
                  "$ref": "#/components/schemas/BidRecommendationError"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests. Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.spthemebasedbidrecommendation.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/BidRecommendationError"
                }
              },
              "application/vnd.spthemebasedbidrecommendation.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/BidRecommendationError"
                }
              },
              "application/vnd.spthemebasedbidrecommendation.v5+json": {
                "schema": {
                  "$ref": "#/components/schemas/BidRecommendationError"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
            "required": true
          }
        ],
        "tags": [
          "Theme-based bid recommendations"
        ]
      }
    },
    "/sp/targets/keywords/recommendations": {
      "post": {
        "summary": "Get keyword recommendations",
        "requestBody": {
          "content": {
            "application/vnd.spkeywordsrecommendation.v3+json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/AdGroupKeywordTargetRankRecommendationRequest"
                  },
                  {
                    "$ref": "#/components/schemas/AsinsKeywordTargetRankRecommendationRequest"
                  }
                ],
                "discriminator": {
                  "mapping": {
                    "KEYWORDS_FOR_ADGROUP": "#/components/schemas/AdGroupKeywordTargetRankRecommendationRequest",
                    "KEYWORDS_FOR_ASINS": "#/components/schemas/AsinsKeywordTargetRankRecommendationRequest"
                  },
                  "propertyName": "recommendationType"
                }
              }
            },
            "application/vnd.spkeywordsrecommendation.v5+json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RankedKeywordTargetsForAsinsRequest"
                  },
                  {
                    "$ref": "#/components/schemas/RankedKeywordTargetsForAdGroupRequest"
                  }
                ],
                "discriminator": {
                  "mapping": {
                    "KEYWORDS_FOR_ADGROUP": "#/components/schemas/RankedKeywordTargetsForAdGroupRequest",
                    "KEYWORDS_FOR_ASINS": "#/components/schemas/RankedKeywordTargetsForAsinsRequest"
                  },
                  "propertyName": "recommendationType"
                }
              }
            },
            "application/vnd.spkeywordsrecommendation.v4+json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/AdGroupKeywordTargetRankRecommendationRequest"
                  },
                  {
                    "$ref": "#/components/schemas/AsinsKeywordTargetRankRecommendationRequest"
                  }
                ],
                "discriminator": {
                  "mapping": {
                    "KEYWORDS_FOR_ADGROUP": "#/components/schemas/AdGroupKeywordTargetRankRecommendationRequest",
                    "KEYWORDS_FOR_ASINS": "#/components/schemas/AsinsKeywordTargetRankRecommendationRequest"
                  },
                  "propertyName": "recommendationType"
                }
              }
            }
          }
        },
        "operationId": "getRankedKeywordRecommendation",
        "description": "The <b> POST /sp/targets/keywords/recommendations <\/b> endpoint returns recommended keyword targets given either A) a list of ad ASINs or B) a campaign ID and ad group ID. Please use the recommendationType field to specify if you want to use option A or option B. This endpoint will also return recommended bids along with each recommendation keyword target.<br><br> <b> Ranking <\/b> <br> The keyword recommendations will be ranked in descending order of clicks or impressions, depending on the <b>sortDimension<\/b> field provided by the user. You may also input your own keyword targets to be ranked alongside the keyword recommendations by using the <b>targets<\/b> array. <br><br> <b> Localization <\/b> <br> Use the <b> locale <\/b> field to get keywords in your specified locale. Supported marketplace to locale mappings can be found at the <a href='https://advertising.amazon.com/API/docs/en-us/localization/#/Keyword%20Localization'>POST /keywords/localize<\/a> endpoint. <h1> Version 5.0 <\/h1>  <h2> New Features <\/h2> Version 5.0 utilizes the new theme-based bid recommendations, which can be retrieved at the endpoint <b>/sp/targets/bid/recommendations<\/b>, to return improved bid recommendations for each keyword. Theme-based bid recommendations provide \\\\\\\"themes\\\\\\\" and \\\\\\\"impact metrics\\\\\\\" along with each bid suggestion to help you choose the right bid for your keyword target.<br><br><b>Themes<\/b><br> We now may return multiple bid suggestions for each keyword target. Each suggestion will have a theme to express the business objective of the bid. Available themes are: <ul> <li> CONVERSION_OPPORTUNITIES - The default theme which aims to maximize number of conversions. <\/li> <li> SPECIAL_DAYS - A theme available during high sales events such as Prime Day, to anticipate an increase in sales and competition.<\/li><\/ul><b>Impact Metrics<\/b><br>We have added impact metrics which provide insight on the number of clicks and conversions you will receive for targeting a keyword at a certain bid. <br><br><b>Bidding Strategy<\/b><br> You may now specify your bidding strategy in the KEYWORDS_BY_ASINS request to get bid suggestions tailored to your bidding strategy. For KEYWORDS_BY_ADGROUP requests, you will not specify a bidding strategy, because the bidding strategy of the ad group is used. The three bidding strategies are: <ul> <li> LEGACY_FOR_SALES - Dynamic bids (down only) <\/li> <li> AUTO_FOR_SALES - Dynamic bids (up and down) <\/li> <li> MANUAL - Fixed bids <\/li> <\/ul> <h3> Availability <\/h3> Version 5.0 is only available in the following marketplaces: US, CA, UK, DE, FR, ES, IN, JP. <h1> Version 4.0 <\/h1> <h2> New features <\/h2> Version 4.0 allows users to retrieve recommended keyword targets which are sorted in descending order of clicks or conversions. The default sort dimension, if not specified, ranks recommendations by our interal ranking mechanism. We have also added search term metrics. <b> Search term impression share <\/b> indicates the percentage share of all ad-attributed impressions you received on that keyword in the last 30 days. This metric helps advertisers identify potential opportunities based on their share on relevant keywords. <b> Search term impression rank <\/b> indicates your ranking among all advertisers for the keyword by ad impressions in a marketplace. It tells an advertiser how many advertisers had higher share of ad impressions. <i> Search term information is only available for keywords the advertiser targeted with ad impressions. <\/i> <h3> Availability <\/h3> Version 4.0 is available in all marketplaces.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/vnd.spkeywordsrecommendation.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/KeywordTargetResponse"
                }
              },
              "application/vnd.spkeywordsrecommendation.v5+json": {
                "schema": {
                  "$ref": "#/components/schemas/RankedTargetWithThemedBidsResponse"
                }
              },
              "application/vnd.spkeywordsrecommendation.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/RankedTargetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.spkeywordsrecommendation.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTargetingError"
                }
              },
              "application/vnd.spkeywordsrecommendation.v5+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTargetingError"
                }
              },
              "application/vnd.spkeywordsrecommendation.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTargetingError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - Failed due to invalid parameters.",
            "content": {
              "application/vnd.spkeywordsrecommendation.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTargetingError"
                }
              },
              "application/vnd.spkeywordsrecommendation.v5+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTargetingError"
                }
              },
              "application/vnd.spkeywordsrecommendation.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTargetingError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Request failed because user is not authenticated or\nis not allowed to invoke the operation.",
            "content": {
              "application/vnd.spkeywordsrecommendation.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTargetingError"
                }
              },
              "application/vnd.spkeywordsrecommendation.v5+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTargetingError"
                }
              },
              "application/vnd.spkeywordsrecommendation.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTargetingError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server. Retry\nlater and report an error if unresolved.",
            "content": {
              "application/vnd.spkeywordsrecommendation.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTargetingError"
                }
              },
              "application/vnd.spkeywordsrecommendation.v5+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTargetingError"
                }
              },
              "application/vnd.spkeywordsrecommendation.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTargetingError"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type Exception.",
            "content": {
              "application/vnd.spkeywordsrecommendation.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTargetingError"
                }
              },
              "application/vnd.spkeywordsrecommendation.v5+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTargetingError"
                }
              },
              "application/vnd.spkeywordsrecommendation.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTargetingError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable due to transient error or dependent service failure - Something went wrong on the server. Retry\nlater and report an error if unresolved.",
            "content": {
              "application/vnd.spkeywordsrecommendation.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTargetingError"
                }
              },
              "application/vnd.spkeywordsrecommendation.v5+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTargetingError"
                }
              },
              "application/vnd.spkeywordsrecommendation.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTargetingError"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.spkeywordsrecommendation.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTargetingError"
                }
              },
              "application/vnd.spkeywordsrecommendation.v5+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTargetingError"
                }
              },
              "application/vnd.spkeywordsrecommendation.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTargetingError"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-MarketplaceId",
            "description": "The advertiser's Marketplace ID associated with the advertiser.\naccount."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-AdvertiserId",
            "description": "The advertiser's ID associated with the advertiser account."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          }
        ],
        "tags": [
          "Keyword Targets"
        ]
      }
    },
    "/sp/keywords/list": {
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.spKeyword.v3+json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredProductsListSponsoredProductsKeywordsRequestContent"
              }
            }
          }
        },
        "description": "List keywords\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "ListSponsoredProductsKeywords",
        "responses": {
          "200": {
            "description": "ListSponsoredProductsKeywords 200 response",
            "content": {
              "application/vnd.spKeyword.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsListSponsoredProductsKeywordsResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "KeywordAccessException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsKeywordAccessExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsInternalServerExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "415": {
            "description": "UnsupportedMediaTypeException 415 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnsupportedMediaTypeExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "headers": {
              "Retry-After": {
                "schema": {
                  "format": "int32",
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended",
                  "type": "integer"
                },
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended"
              }
            },
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsThrottlingExceptionResponseContent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
            "required": true
          }
        ],
        "tags": [
          "Keywords"
        ]
      }
    },
    "/sp/negativeKeywords/delete": {
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.spNegativeKeyword.v3+json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent"
              }
            }
          },
          "required": true
        },
        "description": "Delete negative keywords\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "DeleteSponsoredProductsNegativeKeywords",
        "responses": {
          "400": {
            "description": "NegativeKeywordMutationException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsNegativeKeywordMutationExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsInternalServerExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "415": {
            "description": "UnsupportedMediaTypeException 415 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnsupportedMediaTypeExceptionResponseContent"
                }
              }
            }
          },
          "207": {
            "description": "DeleteSponsoredProductsNegativeKeywords 207 response",
            "content": {
              "application/vnd.spNegativeKeyword.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsDeleteSponsoredProductsNegativeKeywordsResponseContent"
                }
              }
            }
          },
          "429": {
            "headers": {
              "Retry-After": {
                "schema": {
                  "format": "int32",
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended",
                  "type": "integer"
                },
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended"
              }
            },
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsThrottlingExceptionResponseContent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
            "required": true
          }
        ],
        "tags": [
          "Negative keywords"
        ]
      }
    },
    "/sp/targets/products/count": {
      "post": {
        "summary": "Get number of targetable asins based on refinements provided by the user.",
        "requestBody": {
          "content": {
            "application/vnd.spproducttargeting.v3+json": {
              "schema": {
                "$ref": "#/components/schemas/GetTargetableAsinCountsRequest"
              }
            }
          }
        },
        "operationId": "getTargetableASINCounts",
        "description": "Get number of targetable asins based on refinements provided by the user. Please use the GetTargetableCategories API or the GetCategoryRecommendationsForASINs API to retrieve the category ID. Please use the GetRefinementsByCategory API to retrieve refinements data for a category.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/vnd.spproducttargetingresponse.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetableAsinCounts"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The input fails to satisfy the constraints of the API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - Failed due to invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableEntityException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Request failed because user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server. Retry\nlater and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Prefer",
            "description": "Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.",
            "required": false
          }
        ],
        "tags": [
          "Product Targeting"
        ]
      }
    },
    "/sp/targets/categories": {
      "get": {
        "summary": "Returns all targetable categories.",
        "operationId": "getTargetableCategories",
        "description": "Returns all targetable categories. This API returns a large JSON string containing a tree of category nodes. Each category node has the fields - category id, category name, and child categories.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/vnd.spproducttargetingresponse.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetableCategories"
                }
              },
              "application/vnd.spproducttargetingresponse.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetableCategories"
                }
              },
              "application/vnd.spproducttargetingresponse.v5+json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetableCategoriesLoP"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Request failed because user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server. Retry\nlater and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Prefer",
            "description": "Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "ar_AE",
                "de_DE",
                "en_AE",
                "en_AU",
                "en_CA",
                "en_GB",
                "en_IN",
                "en_SG",
                "en_US",
                "es_ES",
                "es_MX",
                "fr_CA",
                "fr_FR",
                "hi_IN",
                "it_IT",
                "ja_JP",
                "ko_KR",
                "nl_NL",
                "pl_PL",
                "pt_BR",
                "sv_SE",
                "ta_IN",
                "th_TH",
                "tr_TR",
                "vi_VN",
                "zh_CN"
              ]
            },
            "in": "query",
            "name": "locale",
            "description": "The locale to which the caller wishes to translate the targetable categories to. For example, if the caller wishes to receive the targetable categories in Simplified Chinese, the locale parameter should be set to zh_CN. If no locale is provided, the returned targetable categories will be in the default language of the marketplace."
          }
        ],
        "tags": [
          "Product Targeting"
        ]
      }
    },
    "/sp/rules/campaignOptimization": {
      "post": {
        "summary": "Creates a campaign optimization rule.",
        "requestBody": {
          "content": {
            "application/vnd.optimizationrules.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSPCampaignOptimizationRulesRequest"
              }
            }
          },
          "required": true
        },
        "operationId": "CreateOptimizationRule",
        "responses": {
          "200": {
            "description": "Successful Operation.",
            "content": {
              "application/vnd.optimizationrules.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSPCampaignOptimizationRulesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity. The server understood the request, but was unable to process the instruction.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The request failed because user does not have access to a specified resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests. The request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          }
        },
        "description": "\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          }
        ],
        "tags": [
          "Campaign Optimization Rules"
        ]
      },
      "put": {
        "summary": "Updates a campaign optimization rule.",
        "requestBody": {
          "content": {
            "application/vnd.optimizationrules.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSPCampaignOptimizationRulesRequest"
              }
            }
          },
          "required": true
        },
        "operationId": "UpdateOptimizationRule",
        "responses": {
          "200": {
            "description": "Successfully updated",
            "content": {
              "application/vnd.optimizationrules.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSPCampaignOptimizationRuleResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity. The server understood the request, but was unable to process the instruction.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The request failed because user does not have access to a specified resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests. The request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          }
        },
        "description": "\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          }
        ],
        "tags": [
          "Campaign Optimization Rules"
        ]
      }
    },
    "/sp/campaigns/{campaignId}/budgetRules": {
      "post": {
        "summary": "Associates one or more budget rules to a campaign specified by identifer.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAssociatedBudgetRulesRequest"
              }
            }
          },
          "required": true
        },
        "description": "A maximum of 250 rules can be associated to a campaign. Note that the name of each rule associated to a campaign is required to be unique.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "CreateAssociatedBudgetRulesForSPCampaigns",
        "responses": {
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity. The server understood the request, but was unable to process the instruction.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The request failed because user does not have access to a specified resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "207": {
            "description": "Multi-status. An object containing a list of associated budget rule response objects reflecting the same order as the input.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAssociatedBudgetRulesResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests. The request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "format": "int64",
              "type": "number"
            },
            "in": "path",
            "name": "campaignId",
            "description": "The campaign identifier.",
            "required": true
          }
        ],
        "tags": [
          "BudgetRules"
        ]
      },
      "get": {
        "summary": "Gets a list of budget rules associated to a campaign specified by identifier.",
        "operationId": "ListAssociatedBudgetRulesForSPCampaigns",
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SPListAssociatedBudgetRulesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity. The server understood the request, but was unable to process the instruction.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The request failed because user does not have access to a specified resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests. The request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          }
        },
        "description": "\n\n**Authorized resource type**:\nGlobal Ad Account ID, Profile ID\n\n**Parameter name**:\nAmazon-Ads-AccountId\n\n**Parameter in**:\nheader\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "format": "int64",
              "type": "number"
            },
            "in": "path",
            "name": "campaignId",
            "description": "The campaign identifier.",
            "required": true
          }
        ],
        "tags": [
          "BudgetRules"
        ]
      }
    },
    "/sp/negativeTargets/brands/search": {
      "post": {
        "summary": "Returns brands related to keyword input for negative targeting.",
        "requestBody": {
          "content": {
            "application/vnd.spproducttargeting.v3+json": {
              "schema": {
                "$ref": "#/components/schemas/SearchBrandsRequest"
              }
            }
          }
        },
        "operationId": "searchBrands",
        "description": "Returns up to 100 brands related to keyword input for negative targeting.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/vnd.spproducttargetingresponse.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Brands"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The input fails to satisfy the constraints of the API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Request failed because user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server. Retry\nlater and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Prefer",
            "description": "Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.",
            "required": false
          }
        ],
        "tags": [
          "Product Targeting"
        ]
      }
    },
    "/sp/targets/category/{categoryId}/refinements": {
      "get": {
        "summary": "Returns refinements according to category input.",
        "operationId": "getRefinementsForCategory",
        "description": "Returns refinements according to category input.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/vnd.spproducttargetingresponse.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Refinements"
                }
              },
              "application/vnd.spproducttargetingresponse.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/RefinementsLoP"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - Failed due to invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableEntityException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Request failed because user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server. Retry\nlater and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "categoryId",
            "description": "The category ID. Please use the GetTargetableCategories API or the GetCategoriesForASINs API to retrieve categories IDs. This API does not check if the category is a valid category.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Prefer",
            "description": "Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "ar_AE",
                "de_DE",
                "en_AE",
                "en_AU",
                "en_CA",
                "en_GB",
                "en_IN",
                "en_SG",
                "en_US",
                "es_ES",
                "es_MX",
                "fr_CA",
                "fr_FR",
                "hi_IN",
                "it_IT",
                "ja_JP",
                "ko_KR",
                "nl_NL",
                "pl_PL",
                "pt_BR",
                "sv_SE",
                "ta_IN",
                "th_TH",
                "tr_TR",
                "vi_VN",
                "zh_CN"
              ]
            },
            "in": "query",
            "name": "locale",
            "description": "The locale to which the caller wishes to translate the refinements to. For example, if the caller wishes to receive the refinements in Simplified Chinese, the locale parameter should be set to zh_CN. If no locale is provided, the refinements will be in the default language of the marketplace."
          }
        ],
        "tags": [
          "Product Targeting"
        ]
      }
    },
    "/sp/rules/campaignOptimization/state": {
      "post": {
        "summary": "Gets campaign optimization rule state. Recommended refresh frequency is once a day.",
        "requestBody": {
          "content": {
            "application/vnd.optimizationrules.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/SPCampaignOptimizationNotificationAPIRequest"
              }
            }
          },
          "required": true
        },
        "operationId": "GetRuleNotification",
        "responses": {
          "200": {
            "description": "Successful Operation.",
            "content": {
              "application/vnd.optimizationrules.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPCampaignOptimizationNotificationAPIResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity. The server understood the request, but was unable to process the instruction.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The request failed because user does not have access to a specified resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests. The request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          }
        },
        "description": "\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          }
        ],
        "tags": [
          "Campaign Optimization Rules"
        ]
      }
    },
    "/sp/targetPromotionGroups/list": {
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.sptargetpromotiongroup.v2+json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredProductsListTargetPromotionGroupsV2RequestContent"
              }
            },
            "application/vnd.sptargetpromotiongroup.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredProductsListTargetPromotionGroupsRequestContent"
              }
            }
          }
        },
        "description": "Returns the target promotion groups for an advertiser and / or adGroupId, and / or target\npromotion group id.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_view\"]",
        "operationId": "ListTargetPromotionGroups",
        "responses": {
          "200": {
            "description": "ListTargetPromotionGroups 200 response",
            "content": {
              "application/vnd.sptargetpromotiongroup.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsListTargetPromotionGroupsV2ResponseContent"
                }
              },
              "application/vnd.sptargetpromotiongroup.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsListTargetPromotionGroupsResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "SchemaValidationException 400 response",
            "content": {
              "application/vnd.sptargetpromotiongroup.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsSchemaValidationExceptionResponseContent"
                }
              },
              "application/vnd.sptargetpromotiongroup.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsSchemaValidationExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthenticatedException 401 response",
            "content": {
              "application/vnd.sptargetpromotiongroup.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnauthenticatedExceptionResponseContent"
                }
              },
              "application/vnd.sptargetpromotiongroup.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnauthenticatedExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerException 500 response",
            "content": {
              "application/vnd.sptargetpromotiongroup.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsInternalServerExceptionResponseContent"
                }
              },
              "application/vnd.sptargetpromotiongroup.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsInternalServerExceptionResponseContent"
                }
              }
            }
          },
          "501": {
            "description": "NotImplementedException 501 response",
            "content": {
              "application/vnd.sptargetpromotiongroup.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsNotImplementedExceptionResponseContent"
                }
              },
              "application/vnd.sptargetpromotiongroup.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsNotImplementedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/vnd.sptargetpromotiongroup.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAccessDeniedExceptionResponseContent"
                }
              },
              "application/vnd.sptargetpromotiongroup.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/vnd.sptargetpromotiongroup.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsServiceUnavailableExceptionResponseContent"
                }
              },
              "application/vnd.sptargetpromotiongroup.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "headers": {
              "Retry-After": {
                "schema": {
                  "format": "int32",
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended",
                  "type": "integer"
                },
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended"
              }
            },
            "description": "ThrottlingException 429 response",
            "content": {
              "application/vnd.sptargetpromotiongroup.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsThrottlingExceptionResponseContent"
                }
              },
              "application/vnd.sptargetpromotiongroup.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsThrottlingExceptionResponseContent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "description": "The identifier of a client associated with a 'Login with Amazon' account. This is a required\n    header for advertisers and integrators using the Advertising API.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": " The identifier of a client associated with a 'Login with Amazon' account. This is a required\n    header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles\n    resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a\n    required header for advertisers and integrators using the Advertising API.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles\n    resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a\n    required header for advertisers and integrators using the Advertising API.",
            "required": true
          }
        ],
        "tags": [
          "TargetPromotionGroups"
        ]
      }
    },
    "/sp/productAds/list": {
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.spProductAd.v3+json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredProductsListSponsoredProductsProductAdsRequestContent"
              }
            }
          }
        },
        "description": "List product ads\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "operationId": "ListSponsoredProductsProductAds",
        "responses": {
          "200": {
            "description": "ListSponsoredProductsProductAds 200 response",
            "content": {
              "application/vnd.spProductAd.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsListSponsoredProductsProductAdsResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "ProductAdAccessException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsProductAdAccessExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsInternalServerExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "415": {
            "description": "UnsupportedMediaTypeException 415 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnsupportedMediaTypeExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "headers": {
              "Retry-After": {
                "schema": {
                  "format": "int32",
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended",
                  "type": "integer"
                },
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended"
              }
            },
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsThrottlingExceptionResponseContent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
            "required": true
          }
        ],
        "tags": [
          "Product ads"
        ]
      }
    },
    "/sp/rules/optimization": {
      "post": {
        "summary": "Creates one or more optimization rules.\n",
        "requestBody": {
          "content": {
            "application/vnd.spoptimizationrules.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/OptimizationRulesAPISwaggerCreateOptimizationRulesRequest"
              },
              "examples": {
                "singleRuleForEveryMorning": {
                  "value": {
                    "optimizationRules": [
                      {
                        "recurrence": {
                          "duration": {
                            "startTime": "2022-11-01T00:00:00Z"
                          },
                          "timesOfDay": [
                            {
                              "startTime": "05:00",
                              "endTime": "07:00"
                            }
                          ],
                          "type": "DAILY"
                        },
                        "ruleCategory": "BID",
                        "ruleSubCategory": "SCHEDULE",
                        "ruleName": "increase_bids_by_15%_on_mornings",
                        "action": {
                          "actionType": "ADOPT",
                          "actionDetails": {
                            "actionUnit": "PERCENT",
                            "value": "15",
                            "actionOperator": "INCREMENT"
                          }
                        },
                        "status": "ENABLED"
                      }
                    ]
                  }
                },
                "singleRuleForWeekendNightsWithDuration": {
                  "value": {
                    "optimizationRules": [
                      {
                        "recurrence": {
                          "duration": {
                            "startTime": "2022-11-01T00:00:00Z",
                            "endTime": "2024-11-01T00:00:00Z"
                          },
                          "timesOfDay": [
                            {
                              "startTime": "12:00",
                              "endTime": "14:00"
                            }
                          ],
                          "type": "WEEKLY",
                          "daysOfWeek": [
                            "SATURDAY",
                            "SUNDAY"
                          ]
                        },
                        "ruleCategory": "BID",
                        "ruleSubCategory": "SCHEDULE",
                        "ruleName": "increase_bids_by_50%_on_weekend_nights",
                        "action": {
                          "actionType": "ADOPT",
                          "actionDetails": {
                            "actionUnit": "PERCENT",
                            "value": "50",
                            "actionOperator": "INCREMENT"
                          }
                        },
                        "status": "ENABLED"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "CreateOptimizationRules",
        "responses": {
          "400": {
            "description": "Bad request caused by invalid input.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OptimizationRulesAPISwaggerOptimizationRulesError"
                },
                "example": {
                  "code": "400",
                  "message": "Invalid advertiser id."
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated. Request failed because user is not authenticated.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OptimizationRulesAPISwaggerOptimizationRulesError"
                },
                "example": {
                  "code": "401",
                  "message": "Unauthenticated."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Something went wrong on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OptimizationRulesAPISwaggerOptimizationRulesError"
                },
                "example": {
                  "code": "500",
                  "message": "Internal server error."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. Request failed because user does not have access to a specified resource.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OptimizationRulesAPISwaggerOptimizationRulesError"
                },
                "example": {
                  "code": "403",
                  "message": "You do not have permission to access the resource."
                }
              }
            }
          },
          "207": {
            "description": "Multi-status.\nAn object containing a list of optimization rule response objects reflecting the same order as the input.\n",
            "content": {
              "application/vnd.spoptimizationrules.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/OptimizationRulesAPISwaggerOptimizationRulesResponse"
                }
              }
            }
          }
        },
        "description": "\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.\nThis is a required header for advertisers and integrators using the Advertising API.\n",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account.\nUse `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.\nThis is a required header for advertisers and integrators using the Advertising API.\n",
            "required": true
          }
        ],
        "tags": [
          "Optimization Rules"
        ]
      },
      "put": {
        "summary": "Updates one or more optimization rules.\n",
        "requestBody": {
          "content": {
            "application/vnd.spoptimizationrules.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/OptimizationRulesAPISwaggerUpdateOptimizationRulesRequest"
              }
            }
          }
        },
        "operationId": "UpdateOptimizationRules",
        "responses": {
          "400": {
            "description": "Bad request caused by invalid input.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OptimizationRulesAPISwaggerOptimizationRulesError"
                },
                "example": {
                  "code": "400",
                  "message": "Invalid advertiser id."
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated. Request failed because user is not authenticated.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OptimizationRulesAPISwaggerOptimizationRulesError"
                },
                "example": {
                  "code": "401",
                  "message": "Unauthenticated."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Something went wrong on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OptimizationRulesAPISwaggerOptimizationRulesError"
                },
                "example": {
                  "code": "500",
                  "message": "Internal server error."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. Request failed because user does not have access to a specified resource.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OptimizationRulesAPISwaggerOptimizationRulesError"
                },
                "example": {
                  "code": "403",
                  "message": "You do not have permission to access the resource."
                }
              }
            }
          },
          "207": {
            "description": "Successful Operation.",
            "content": {
              "application/vnd.spoptimizationrules.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/OptimizationRulesAPISwaggerOptimizationRulesResponse"
                }
              }
            }
          }
        },
        "description": "\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.\nThis is a required header for advertisers and integrators using the Advertising API.\n",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account.\nUse `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.\nThis is a required header for advertisers and integrators using the Advertising API.\n",
            "required": true
          }
        ],
        "tags": [
          "Optimization Rules"
        ]
      }
    },
    "/sp/targetPromotionGroups": {
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.sptargetpromotiongroup.v2+json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredProductsCreateTargetPromotionGroupsV2RequestContent"
              }
            },
            "application/vnd.sptargetpromotiongroup.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredProductsCreateTargetPromotionGroupsRequestContent"
              }
            }
          },
          "required": true
        },
        "description": "Creates a target promotion group, by grouping the auto-targeting adGroupId\nand manual-targeting adGroups, divided by keyword targeting adGroups, and product targeting adGroups.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "operationId": "CreateTargetPromotionGroups",
        "responses": {
          "200": {
            "description": "CreateTargetPromotionGroups 200 response",
            "content": {
              "application/vnd.sptargetpromotiongroup.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsCreateTargetPromotionGroupsV2ResponseContent"
                }
              },
              "application/vnd.sptargetpromotiongroup.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsCreateTargetPromotionGroupsResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "SchemaValidationException 400 response",
            "content": {
              "application/vnd.sptargetpromotiongroup.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsSchemaValidationExceptionResponseContent"
                }
              },
              "application/vnd.sptargetpromotiongroup.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsSchemaValidationExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthenticatedException 401 response",
            "content": {
              "application/vnd.sptargetpromotiongroup.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnauthenticatedExceptionResponseContent"
                }
              },
              "application/vnd.sptargetpromotiongroup.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnauthenticatedExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerException 500 response",
            "content": {
              "application/vnd.sptargetpromotiongroup.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsInternalServerExceptionResponseContent"
                }
              },
              "application/vnd.sptargetpromotiongroup.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsInternalServerExceptionResponseContent"
                }
              }
            }
          },
          "501": {
            "description": "NotImplementedException 501 response",
            "content": {
              "application/vnd.sptargetpromotiongroup.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsNotImplementedExceptionResponseContent"
                }
              },
              "application/vnd.sptargetpromotiongroup.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsNotImplementedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/vnd.sptargetpromotiongroup.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAccessDeniedExceptionResponseContent"
                }
              },
              "application/vnd.sptargetpromotiongroup.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/vnd.sptargetpromotiongroup.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsServiceUnavailableExceptionResponseContent"
                }
              },
              "application/vnd.sptargetpromotiongroup.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "headers": {
              "Retry-After": {
                "schema": {
                  "format": "int32",
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended",
                  "type": "integer"
                },
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended"
              }
            },
            "description": "ThrottlingException 429 response",
            "content": {
              "application/vnd.sptargetpromotiongroup.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsThrottlingExceptionResponseContent"
                }
              },
              "application/vnd.sptargetpromotiongroup.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsThrottlingExceptionResponseContent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "description": "The identifier of a client associated with a 'Login with Amazon' account. This is a required\n    header for advertisers and integrators using the Advertising API.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": " The identifier of a client associated with a 'Login with Amazon' account. This is a required\n    header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles\n    resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a\n    required header for advertisers and integrators using the Advertising API.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles\n    resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a\n    required header for advertisers and integrators using the Advertising API.",
            "required": true
          }
        ],
        "tags": [
          "TargetPromotionGroups"
        ]
      }
    },
    "/sp/targetPromotionGroups/targets": {
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.sptargetpromotiongrouptarget.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredProductsCreateTargetPromotionGroupTargetsRequestContent"
              }
            },
            "application/vnd.sptargetpromotiongrouptarget.v2+json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredProductsCreateTargetPromotionGroupTargetsV2RequestContent"
              }
            }
          },
          "required": true
        },
        "description": "Creates keyword and/or product targets in the manual adGroup that are part of the target promotion group\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "operationId": "CreateTargetPromotionGroupTargets",
        "responses": {
          "400": {
            "description": "SchemaValidationException 400 response",
            "content": {
              "application/vnd.sptargetpromotiongrouptarget.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsSchemaValidationExceptionResponseContent"
                }
              },
              "application/vnd.sptargetpromotiongrouptarget.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsSchemaValidationExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthenticatedException 401 response",
            "content": {
              "application/vnd.sptargetpromotiongrouptarget.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnauthenticatedExceptionResponseContent"
                }
              },
              "application/vnd.sptargetpromotiongrouptarget.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnauthenticatedExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerException 500 response",
            "content": {
              "application/vnd.sptargetpromotiongrouptarget.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsInternalServerExceptionResponseContent"
                }
              },
              "application/vnd.sptargetpromotiongrouptarget.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsInternalServerExceptionResponseContent"
                }
              }
            }
          },
          "501": {
            "description": "NotImplementedException 501 response",
            "content": {
              "application/vnd.sptargetpromotiongrouptarget.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsNotImplementedExceptionResponseContent"
                }
              },
              "application/vnd.sptargetpromotiongrouptarget.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsNotImplementedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/vnd.sptargetpromotiongrouptarget.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAccessDeniedExceptionResponseContent"
                }
              },
              "application/vnd.sptargetpromotiongrouptarget.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/vnd.sptargetpromotiongrouptarget.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsServiceUnavailableExceptionResponseContent"
                }
              },
              "application/vnd.sptargetpromotiongrouptarget.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "207": {
            "description": "CreateTargetPromotionGroupTargets 207 response",
            "content": {
              "application/vnd.sptargetpromotiongrouptarget.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsCreateTargetPromotionGroupTargetsResponseContent"
                }
              },
              "application/vnd.sptargetpromotiongrouptarget.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsCreateTargetPromotionGroupTargetsV2ResponseContent"
                }
              }
            }
          },
          "429": {
            "headers": {
              "Retry-After": {
                "schema": {
                  "format": "int32",
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended",
                  "type": "integer"
                },
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended"
              }
            },
            "description": "ThrottlingException 429 response",
            "content": {
              "application/vnd.sptargetpromotiongrouptarget.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsThrottlingExceptionResponseContent"
                }
              },
              "application/vnd.sptargetpromotiongrouptarget.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsThrottlingExceptionResponseContent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "description": "The identifier of a client associated with a 'Login with Amazon' account. This is a required\n    header for advertisers and integrators using the Advertising API.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": " The identifier of a client associated with a 'Login with Amazon' account. This is a required\n    header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles\n    resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a\n    required header for advertisers and integrators using the Advertising API.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles\n    resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a\n    required header for advertisers and integrators using the Advertising API.",
            "required": true
          }
        ],
        "tags": [
          "TargetPromotionGroups"
        ]
      }
    },
    "/sp/negativeTargets/list": {
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.spNegativeTargetingClause.v3+json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent"
              }
            }
          }
        },
        "description": "List negative targeting clauses\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "operationId": "ListSponsoredProductsNegativeTargetingClauses",
        "responses": {
          "200": {
            "description": "ListSponsoredProductsNegativeTargetingClauses 200 response",
            "content": {
              "application/vnd.spNegativeTargetingClause.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsListSponsoredProductsNegativeTargetingClausesResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "NegativeTargetAccessException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsNegativeTargetAccessExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsInternalServerExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "415": {
            "description": "UnsupportedMediaTypeException 415 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnsupportedMediaTypeExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "headers": {
              "Retry-After": {
                "schema": {
                  "format": "int32",
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended",
                  "type": "integer"
                },
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended"
              }
            },
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsThrottlingExceptionResponseContent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
            "required": true
          }
        ],
        "tags": [
          "Negative targeting clauses"
        ]
      }
    },
    "/sp/targeting/recommendations/keywordGroups": {
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.spkeywordgroupsrecommendations.v1.0+json": {
              "schema": {
                "$ref": "#/components/schemas/KeywordGroupsRecommendationsRequest"
              }
            }
          }
        },
        "description": "This API (currently beta) recommends Keyword Group targets for a given list of Ad ASINs. Keyword Groups is a new control for Amazon Ads Sponsored Products keyword-based campaigns that enables advertisers to reach relevant audiences through a collection of keywords.\n\nOnce a Keyword Group specification is created, the performance of Keyword Groups will be available in the search terms report. Keyword Groups improves campaign performance by dynamically updating the keywords within a group through the campaign lifecycle and eliminates the need for advertisers to constantly curate new keywords. Additionally, Keyword Groups can be used alongside keywords within the same ad group.\n",
        "operationId": "getKeywordGroupRecommendations",
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/vnd.spkeywordgroupsrecommendations.v1.0+json": {
                "schema": {
                  "$ref": "#/components/schemas/KeywordGroupsRecommendationsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/vnd.spkeywordgroupsrecommendations.v1.0+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPKeywordGroupsException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized.",
            "content": {
              "application/vnd.spkeywordgroupsrecommendations.v1.0+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPKeywordGroupsException"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.spkeywordgroupsrecommendations.v1.0+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPKeywordGroupsException"
                }
              }
            }
          },
          "424": {
            "description": "Dependency Failure.",
            "content": {
              "application/vnd.spkeywordgroupsrecommendations.v1.0+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPKeywordGroupsException"
                }
              }
            }
          },
          "403": {
            "description": "Not Authenticated.",
            "content": {
              "application/vnd.spkeywordgroupsrecommendations.v1.0+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPKeywordGroupsException"
                }
              }
            }
          },
          "404": {
            "description": "Not Found.",
            "content": {
              "application/vnd.spkeywordgroupsrecommendations.v1.0+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPKeywordGroupsException"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media.",
            "content": {
              "application/vnd.spkeywordgroupsrecommendations.v1.0+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPKeywordGroupsException"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/vnd.spkeywordgroupsrecommendations.v1.0+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPKeywordGroupsException"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.spkeywordgroupsrecommendations.v1.0+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPKeywordGroupsException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "explode": false,
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "style": "simple",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "explode": false,
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
            "style": "simple",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "explode": false,
            "name": "locale",
            "description": "User specified locale. If nothing is passed the default for the marketplace will be used. The value should confirm to the IETF BCP 47 standard, using language tags composed of language- and optionally region specific sub-tags (e.g., 'en-us' for American English and 'fr-CA' for Canadian French).",
            "style": "simple"
          }
        ],
        "tags": [
          "Keyword Group Targeting Recommendations"
        ]
      }
    },
    "/sp/productAds": {
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.spProductAd.v3+json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredProductsCreateSponsoredProductsProductAdsRequestContent"
              }
            }
          },
          "required": true
        },
        "description": "Create product ads\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "CreateSponsoredProductsProductAds",
        "responses": {
          "400": {
            "description": "ProductAdMutationException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsProductAdMutationExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsInternalServerExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "415": {
            "description": "UnsupportedMediaTypeException 415 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnsupportedMediaTypeExceptionResponseContent"
                }
              }
            }
          },
          "207": {
            "headers": {
              "Preference-Applied": {
                "schema": {
                  "description": "Header containing preferences applied while processing API call",
                  "type": "string"
                },
                "description": "Header containing preferences applied while processing API call"
              }
            },
            "description": "CreateSponsoredProductsProductAds 207 response",
            "content": {
              "application/vnd.spProductAd.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsCreateSponsoredProductsProductAdsResponseContent"
                }
              }
            }
          },
          "429": {
            "headers": {
              "Retry-After": {
                "schema": {
                  "format": "int32",
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended",
                  "type": "integer"
                },
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended"
              }
            },
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsThrottlingExceptionResponseContent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
            "required": true
          },
          {
            "schema": {
              "description": "The \"Prefer\" header, as defined in [RFC7240], allows clients to request certain behavior from the service.\nThe service ignores preference values that are either not supported or not known by the service.\nEither multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent\nSupported preferences:\nreturn=representation - return the full object when doing create/update/delete operations instead of ids.\nPlease note that the extendedData field will be part of the full object for /list endpoints only.",
              "type": "string"
            },
            "in": "header",
            "name": "Prefer",
            "description": "The \"Prefer\" header, as defined in [RFC7240], allows clients to request certain behavior from the service.\nThe service ignores preference values that are either not supported or not known by the service.\nEither multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent\nSupported preferences:\nreturn=representation - return the full object when doing create/update/delete operations instead of ids.\nPlease note that the extendedData field will be part of the full object for /list endpoints only."
          }
        ],
        "tags": [
          "Product ads"
        ]
      },
      "put": {
        "requestBody": {
          "content": {
            "application/vnd.spProductAd.v3+json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredProductsUpdateSponsoredProductsProductAdsRequestContent"
              }
            }
          },
          "required": true
        },
        "description": "Update product ads\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "UpdateSponsoredProductsProductAds",
        "responses": {
          "400": {
            "description": "ProductAdMutationException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsProductAdMutationExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsInternalServerExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "415": {
            "description": "UnsupportedMediaTypeException 415 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnsupportedMediaTypeExceptionResponseContent"
                }
              }
            }
          },
          "207": {
            "headers": {
              "Preference-Applied": {
                "schema": {
                  "description": "Header containing preferences applied while processing API call",
                  "type": "string"
                },
                "description": "Header containing preferences applied while processing API call"
              }
            },
            "description": "UpdateSponsoredProductsProductAds 207 response",
            "content": {
              "application/vnd.spProductAd.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUpdateSponsoredProductsProductAdsResponseContent"
                }
              }
            }
          },
          "429": {
            "headers": {
              "Retry-After": {
                "schema": {
                  "format": "int32",
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended",
                  "type": "integer"
                },
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended"
              }
            },
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsThrottlingExceptionResponseContent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
            "required": true
          },
          {
            "schema": {
              "description": "The \"Prefer\" header, as defined in [RFC7240], allows clients to request certain behavior from the service.\nThe service ignores preference values that are either not supported or not known by the service.\nEither multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent\nSupported preferences:\nreturn=representation - return the full object when doing create/update/delete operations instead of ids.\nPlease note that the extendedData field will be part of the full object for /list endpoints only.",
              "type": "string"
            },
            "in": "header",
            "name": "Prefer",
            "description": "The \"Prefer\" header, as defined in [RFC7240], allows clients to request certain behavior from the service.\nThe service ignores preference values that are either not supported or not known by the service.\nEither multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent\nSupported preferences:\nreturn=representation - return the full object when doing create/update/delete operations instead of ids.\nPlease note that the extendedData field will be part of the full object for /list endpoints only."
          }
        ],
        "tags": [
          "Product ads"
        ]
      }
    },
    "/sp/budgetRules": {
      "post": {
        "summary": "Creates one or more budget rules.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSPBudgetRulesRequest"
              }
            }
          },
          "required": true
        },
        "operationId": "CreateBudgetRulesForSPCampaigns",
        "responses": {
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity. The server understood the request, but was unable to process the instruction.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The request failed because user does not have access to a specified resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "207": {
            "description": "Multi-status. An object containing a list of budget rule response objects reflecting the same order as the input.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateBudgetRulesResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests. The request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          }
        },
        "description": "\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          }
        ],
        "tags": [
          "BudgetRules"
        ]
      },
      "get": {
        "summary": "Get all budget rules created by an advertiser",
        "operationId": "GetSPBudgetRulesForAdvertiser",
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSPBudgetRulesForAdvertiserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity. The server understood the request, but was unable to process the instruction.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The request failed because user does not have access to a specified resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests. The request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "nextToken",
            "description": "To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results."
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "pageSize",
            "description": "Sets a limit on the number of results returned. Maximum limit of `pageSize` is 30.",
            "required": true
          }
        ],
        "tags": [
          "BudgetRules"
        ]
      },
      "put": {
        "summary": "Updates one or more budget rules.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSPBudgetRulesRequest"
              }
            }
          },
          "required": true
        },
        "operationId": "UpdateBudgetRulesForSPCampaigns",
        "responses": {
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity. The server understood the request, but was unable to process the instruction.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The request failed because user does not have access to a specified resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "207": {
            "description": "Multi-status. An object containing a list of budget rule response objects reflecting the same order as the input.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateBudgetRulesResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests. The request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          }
        },
        "description": "\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          }
        ],
        "tags": [
          "BudgetRules"
        ]
      }
    },
    "/sp/targets/categories/recommendations": {
      "post": {
        "summary": "Returns a list of category recommendations for the input list of ASINs.",
        "requestBody": {
          "content": {
            "application/vnd.spproducttargeting.v3+json": {
              "schema": {
                "$ref": "#/components/schemas/GetCategoryRecommendationsForAsinsRequest"
              }
            }
          }
        },
        "operationId": "getCategoryRecommendationsForASINs",
        "description": "Returns a list of category recommendations for the input list of ASINs. Use this API to discover relevant categories to target. To find ASINs, either use the Product Metadata API or browse the Amazon Retail Website. <br> <ul><li>Response can be requested in different versions with the help of accept header. Please review the response mediaTypes for more information.<\/li><ul>\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/vnd.spproducttargetingresponse.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryRecommendations"
                }
              },
              "application/vnd.spproducttargetingresponse.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryRecommendationsWithAsinCounts"
                }
              },
              "application/vnd.spproducttargetingresponse.v5+json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryRecommendationsWithAsinCountsLoP"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - Failed due to invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableEntityException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Request failed because user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server. Retry\nlater and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Prefer",
            "description": "Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.",
            "required": false
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "ar_AE",
                "de_DE",
                "en_AE",
                "en_AU",
                "en_CA",
                "en_GB",
                "en_IN",
                "en_SG",
                "en_US",
                "es_ES",
                "es_MX",
                "fr_CA",
                "fr_FR",
                "hi_IN",
                "it_IT",
                "ja_JP",
                "ko_KR",
                "nl_NL",
                "pl_PL",
                "pt_BR",
                "sv_SE",
                "ta_IN",
                "th_TH",
                "tr_TR",
                "vi_VN",
                "zh_CN"
              ]
            },
            "in": "query",
            "name": "locale",
            "description": "The locale to which the caller wishes to translate the list of category recommendations to. For example, if the caller wishes to receive a list of category recommendations in Simplified Chinese, the locale parameter should be set to zh_CN. If no locale is provided, the returned list of category recommendations will be in the default language of the marketplace."
          }
        ],
        "tags": [
          "Product Targeting"
        ]
      }
    },
    "/sp/targetPromotionGroups/recommendations": {
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.spTargetPromotionGroupsRecommendations.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredProductsGetTargetPromotionGroupsRecommendationsRequestContent"
              }
            }
          }
        },
        "description": "Retrieves keyword and product targets of an auto-targeting campaign as recommendations for promoting to a manual-targeting campaign. The recommendations are based on performance heuristics of the targets.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "operationId": "GetTargetPromotionGroupsRecommendations",
        "responses": {
          "200": {
            "description": "GetTargetPromotionGroupsRecommendations 200 response",
            "content": {
              "application/vnd.spTargetPromotionGroupsRecommendations.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsGetTargetPromotionGroupsRecommendationsResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "SchemaValidationException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsSchemaValidationExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsInternalServerExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "415": {
            "description": "UnsupportedMediaTypeException 415 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnsupportedMediaTypeExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "headers": {
              "Retry-After": {
                "schema": {
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended",
                  "type": "integer"
                },
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended"
              }
            },
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsThrottlingExceptionResponseContent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "description": "The identifier of a client associated with a 'Login with Amazon' account.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a 'Login with Amazon' account.",
            "required": true
          },
          {
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.",
            "required": true
          }
        ],
        "tags": [
          "TargetPromotionGroups"
        ]
      }
    },
    "/sp/campaigns/initialBudgetRecommendation": {
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.spinitialbudgetrecommendation.v3.4+json": {
              "schema": {
                "$ref": "#/components/schemas/InitialBudgetRecommendationRequest"
              }
            }
          }
        },
        "description": "Creates daily budget recommendation along with benchmark metrics when creating a new campaign.",
        "operationId": "getBudgetRecommendation",
        "responses": {
          "200": {
            "description": "200 response.",
            "content": {
              "application/vnd.spinitialbudgetrecommendation.v3.4+json": {
                "schema": {
                  "$ref": "#/components/schemas/InitialBudgetRecommendationResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response.",
            "content": {
              "application/vnd.spinitialbudgetrecommendation.v3.4+json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRecommendationNewCampaignsException"
                }
              }
            }
          },
          "401": {
            "description": "401 response.",
            "content": {
              "application/vnd.spinitialbudgetrecommendation.v3.4+json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRecommendationNewCampaignsException"
                }
              }
            }
          },
          "500": {
            "description": "500 response.",
            "content": {
              "application/vnd.spinitialbudgetrecommendation.v3.4+json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRecommendationNewCampaignsException"
                }
              }
            }
          },
          "403": {
            "description": "403 response.",
            "content": {
              "application/vnd.spinitialbudgetrecommendation.v3.4+json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRecommendationNewCampaignsException"
                }
              }
            }
          },
          "415": {
            "description": "415 response.",
            "content": {
              "application/vnd.spinitialbudgetrecommendation.v3.4+json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRecommendationNewCampaignsException"
                }
              }
            }
          },
          "429": {
            "description": "429 response.",
            "content": {
              "application/vnd.spinitialbudgetrecommendation.v3.4+json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRecommendationNewCampaignsException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "explode": false,
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "style": "simple",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "explode": false,
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
            "style": "simple",
            "required": true
          }
        ],
        "tags": [
          "Budget Recommendation New Campaigns"
        ]
      }
    },
    "/sp/campaignNegativeTargets/delete": {
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.spCampaignNegativeTargetingClause.v3+json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent"
              }
            }
          },
          "required": true
        },
        "description": "Delete campaign negative targeting clauses\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "DeleteSponsoredProductsCampaignNegativeTargetingClauses",
        "responses": {
          "400": {
            "description": "CampaignNegativeTargetsMutationException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsCampaignNegativeTargetsMutationExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsInternalServerExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "415": {
            "description": "UnsupportedMediaTypeException 415 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnsupportedMediaTypeExceptionResponseContent"
                }
              }
            }
          },
          "207": {
            "description": "DeleteSponsoredProductsCampaignNegativeTargetingClauses 207 response",
            "content": {
              "application/vnd.spCampaignNegativeTargetingClause.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesResponseContent"
                }
              }
            }
          },
          "429": {
            "headers": {
              "Retry-After": {
                "schema": {
                  "format": "int32",
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended",
                  "type": "integer"
                },
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended"
              }
            },
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsThrottlingExceptionResponseContent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
            "required": true
          }
        ],
        "tags": [
          "Campaign negative targeting clauses"
        ]
      }
    },
    "/sp/productAds/delete": {
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.spProductAd.v3+json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredProductsDeleteSponsoredProductsProductAdsRequestContent"
              }
            }
          },
          "required": true
        },
        "description": "Delete product ads\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "DeleteSponsoredProductsProductAds",
        "responses": {
          "400": {
            "description": "ProductAdMutationException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsProductAdMutationExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsInternalServerExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "415": {
            "description": "UnsupportedMediaTypeException 415 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnsupportedMediaTypeExceptionResponseContent"
                }
              }
            }
          },
          "207": {
            "description": "DeleteSponsoredProductsProductAds 207 response",
            "content": {
              "application/vnd.spProductAd.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsDeleteSponsoredProductsProductAdsResponseContent"
                }
              }
            }
          },
          "429": {
            "headers": {
              "Retry-After": {
                "schema": {
                  "format": "int32",
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended",
                  "type": "integer"
                },
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended"
              }
            },
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsThrottlingExceptionResponseContent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
            "required": true
          }
        ],
        "tags": [
          "Product ads"
        ]
      }
    },
    "/sp/negativeTargets/brands/recommendations": {
      "get": {
        "summary": "Returns brands recommended for negative targeting.",
        "operationId": "getNegativeBrands",
        "description": "Returns brands recommended for negative targeting. Only available for Sellers and Vendors. These recommendations include your own brands because targeting your own brands usually results in lower performance than targeting competitors' brands.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/vnd.spproducttargetingresponse.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Brands"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The input fails to satisfy the constraints of the API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Request failed because user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server. Retry\nlater and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "403": {
            "description": "Access Denied - Request failed because the user is not allowed to invoke the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Prefer",
            "description": "Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.",
            "required": false
          }
        ],
        "tags": [
          "Product Targeting"
        ]
      }
    },
    "/sp/campaigns/budgetRecommendations": {
      "post": {
        "summary": "Get recommended daily budget and estimated missed opportunities for campaigns.",
        "requestBody": {
          "content": {
            "application/vnd.budgetrecommendation.v3+json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetRecommendationRequest"
              }
            }
          },
          "required": true
        },
        "description": "Given a list of campaigns as input, this API provides the following metrics -  <br> <b>1. Recommended daily budget - <\/b> Estimated daily budget needed to keep the campaign in budget for the full 24-hour period in a day. Consider this daily budget to minimize your campaign's chances of running out of budget. <br> <b>2. Percent time in budget <\/b> - Actual average percentage of time the campaign was in budget between the start and end date specified in the response. Note: value -1 means we don\u2019t have enough information to compute the campaign\u2019s percent time in budget. <br> <b>3. Estimated missed impressions, clicks and sales <\/b> - These are the estimated range of additional impressions, clicks and sales the campaign might have generated between the start and end date specified in the response had it been in budget 100% of the time. These are estimates based on historical traffic and the campaign's past performance (e.g. impressions & clicks generated) but not guaranteed.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "operationId": "getBudgetRecommendations",
        "responses": {
          "200": {
            "description": "Successful Operation.",
            "content": {
              "application/vnd.budgetrecommendation.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRecommendationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/vnd.budgetrecommendation.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTORBudgetRecommendationError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Failed due to invalid parameters.",
            "content": {
              "application/vnd.budgetrecommendation.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTORBudgetRecommendationError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Request failed because user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/vnd.budgetrecommendation.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTORBudgetRecommendationError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server DBCError - something went wrong on the server. Retry later and report a DBCError if unresolved.",
            "content": {
              "application/vnd.budgetrecommendation.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTORBudgetRecommendationError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - access to the requested resource is forbidden",
            "content": {
              "application/vnd.budgetrecommendation.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTORBudgetRecommendationError"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - the payload is in a format not supported by this method.",
            "content": {
              "application/vnd.budgetrecommendation.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTORBudgetRecommendationError"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - request was rate-limited. Retry later.",
            "content": {
              "application/vnd.budgetrecommendation.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTORBudgetRecommendationError"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.",
            "required": true
          }
        ],
        "tags": [
          "Budget recommendations and missed opportunities"
        ]
      }
    },
    "/sp/negativeTargets": {
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.spNegativeTargetingClause.v3+json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent"
              }
            }
          },
          "required": true
        },
        "description": "Create negative targeting clauses\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "CreateSponsoredProductsNegativeTargetingClauses",
        "responses": {
          "400": {
            "description": "NegativeTargetMutationException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsNegativeTargetMutationExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsInternalServerExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "415": {
            "description": "UnsupportedMediaTypeException 415 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnsupportedMediaTypeExceptionResponseContent"
                }
              }
            }
          },
          "207": {
            "headers": {
              "Preference-Applied": {
                "schema": {
                  "description": "Header containing preferences applied while processing API call",
                  "type": "string"
                },
                "description": "Header containing preferences applied while processing API call"
              }
            },
            "description": "CreateSponsoredProductsNegativeTargetingClauses 207 response",
            "content": {
              "application/vnd.spNegativeTargetingClause.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsCreateSponsoredProductsNegativeTargetingClausesResponseContent"
                }
              }
            }
          },
          "429": {
            "headers": {
              "Retry-After": {
                "schema": {
                  "format": "int32",
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended",
                  "type": "integer"
                },
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended"
              }
            },
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsThrottlingExceptionResponseContent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
            "required": true
          },
          {
            "schema": {
              "description": "The \"Prefer\" header, as defined in [RFC7240], allows clients to request certain behavior from the service.\nThe service ignores preference values that are either not supported or not known by the service.\nEither multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent\nSupported preferences:\nreturn=representation - return the full object when doing create/update/delete operations instead of ids.\nPlease note that the extendedData field will be part of the full object for /list endpoints only.",
              "type": "string"
            },
            "in": "header",
            "name": "Prefer",
            "description": "The \"Prefer\" header, as defined in [RFC7240], allows clients to request certain behavior from the service.\nThe service ignores preference values that are either not supported or not known by the service.\nEither multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent\nSupported preferences:\nreturn=representation - return the full object when doing create/update/delete operations instead of ids.\nPlease note that the extendedData field will be part of the full object for /list endpoints only."
          }
        ],
        "tags": [
          "Negative targeting clauses"
        ]
      },
      "put": {
        "requestBody": {
          "content": {
            "application/vnd.spNegativeTargetingClause.v3+json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent"
              }
            }
          },
          "required": true
        },
        "description": "Update negative targeting clauses\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "UpdateSponsoredProductsNegativeTargetingClauses",
        "responses": {
          "400": {
            "description": "NegativeTargetMutationException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsNegativeTargetMutationExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsInternalServerExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "415": {
            "description": "UnsupportedMediaTypeException 415 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnsupportedMediaTypeExceptionResponseContent"
                }
              }
            }
          },
          "207": {
            "headers": {
              "Preference-Applied": {
                "schema": {
                  "description": "Header containing preferences applied while processing API call",
                  "type": "string"
                },
                "description": "Header containing preferences applied while processing API call"
              }
            },
            "description": "UpdateSponsoredProductsNegativeTargetingClauses 207 response",
            "content": {
              "application/vnd.spNegativeTargetingClause.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesResponseContent"
                }
              }
            }
          },
          "429": {
            "headers": {
              "Retry-After": {
                "schema": {
                  "format": "int32",
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended",
                  "type": "integer"
                },
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended"
              }
            },
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsThrottlingExceptionResponseContent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
            "required": true
          },
          {
            "schema": {
              "description": "The \"Prefer\" header, as defined in [RFC7240], allows clients to request certain behavior from the service.\nThe service ignores preference values that are either not supported or not known by the service.\nEither multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent\nSupported preferences:\nreturn=representation - return the full object when doing create/update/delete operations instead of ids.\nPlease note that the extendedData field will be part of the full object for /list endpoints only.",
              "type": "string"
            },
            "in": "header",
            "name": "Prefer",
            "description": "The \"Prefer\" header, as defined in [RFC7240], allows clients to request certain behavior from the service.\nThe service ignores preference values that are either not supported or not known by the service.\nEither multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent\nSupported preferences:\nreturn=representation - return the full object when doing create/update/delete operations instead of ids.\nPlease note that the extendedData field will be part of the full object for /list endpoints only."
          }
        ],
        "tags": [
          "Negative targeting clauses"
        ]
      }
    },
    "/sp/targets": {
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.spTargetingClause.v3+json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent"
              }
            }
          },
          "required": true
        },
        "description": "Create targeting clauses\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "CreateSponsoredProductsTargetingClauses",
        "responses": {
          "400": {
            "description": "TargetMutationException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsTargetMutationExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsInternalServerExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "415": {
            "description": "UnsupportedMediaTypeException 415 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnsupportedMediaTypeExceptionResponseContent"
                }
              }
            }
          },
          "207": {
            "headers": {
              "Preference-Applied": {
                "schema": {
                  "description": "Header containing preferences applied while processing API call",
                  "type": "string"
                },
                "description": "Header containing preferences applied while processing API call"
              }
            },
            "description": "CreateSponsoredProductsTargetingClauses 207 response",
            "content": {
              "application/vnd.spTargetingClause.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsCreateSponsoredProductsTargetingClausesResponseContent"
                }
              }
            }
          },
          "429": {
            "headers": {
              "Retry-After": {
                "schema": {
                  "format": "int32",
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended",
                  "type": "integer"
                },
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended"
              }
            },
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsThrottlingExceptionResponseContent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
            "required": true
          },
          {
            "schema": {
              "description": "The \"Prefer\" header, as defined in [RFC7240], allows clients to request certain behavior from the service.\nThe service ignores preference values that are either not supported or not known by the service.\nEither multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent\nSupported preferences:\nreturn=representation - return the full object when doing create/update/delete operations instead of ids.\nPlease note that the extendedData field will be part of the full object for /list endpoints only.",
              "type": "string"
            },
            "in": "header",
            "name": "Prefer",
            "description": "The \"Prefer\" header, as defined in [RFC7240], allows clients to request certain behavior from the service.\nThe service ignores preference values that are either not supported or not known by the service.\nEither multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent\nSupported preferences:\nreturn=representation - return the full object when doing create/update/delete operations instead of ids.\nPlease note that the extendedData field will be part of the full object for /list endpoints only."
          }
        ],
        "tags": [
          "Targeting clauses"
        ]
      },
      "put": {
        "requestBody": {
          "content": {
            "application/vnd.spTargetingClause.v3+json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent"
              }
            }
          },
          "required": true
        },
        "description": "Update targeting clauses\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "UpdateSponsoredProductsTargetingClauses",
        "responses": {
          "400": {
            "description": "TargetMutationException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsTargetMutationExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsInternalServerExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "415": {
            "description": "UnsupportedMediaTypeException 415 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnsupportedMediaTypeExceptionResponseContent"
                }
              }
            }
          },
          "207": {
            "headers": {
              "Preference-Applied": {
                "schema": {
                  "description": "Header containing preferences applied while processing API call",
                  "type": "string"
                },
                "description": "Header containing preferences applied while processing API call"
              }
            },
            "description": "UpdateSponsoredProductsTargetingClauses 207 response",
            "content": {
              "application/vnd.spTargetingClause.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUpdateSponsoredProductsTargetingClausesResponseContent"
                }
              }
            }
          },
          "429": {
            "headers": {
              "Retry-After": {
                "schema": {
                  "format": "int32",
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended",
                  "type": "integer"
                },
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended"
              }
            },
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsThrottlingExceptionResponseContent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
            "required": true
          },
          {
            "schema": {
              "description": "The \"Prefer\" header, as defined in [RFC7240], allows clients to request certain behavior from the service.\nThe service ignores preference values that are either not supported or not known by the service.\nEither multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent\nSupported preferences:\nreturn=representation - return the full object when doing create/update/delete operations instead of ids.\nPlease note that the extendedData field will be part of the full object for /list endpoints only.",
              "type": "string"
            },
            "in": "header",
            "name": "Prefer",
            "description": "The \"Prefer\" header, as defined in [RFC7240], allows clients to request certain behavior from the service.\nThe service ignores preference values that are either not supported or not known by the service.\nEither multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent\nSupported preferences:\nreturn=representation - return the full object when doing create/update/delete operations instead of ids.\nPlease note that the extendedData field will be part of the full object for /list endpoints only."
          }
        ],
        "tags": [
          "Targeting clauses"
        ]
      }
    },
    "/sp/campaigns/budgetRules/recommendations": {
      "post": {
        "summary": "Gets a list of special events with suggested date range and suggested budget increase for a campaign specified by identifier.",
        "requestBody": {
          "content": {
            "application/vnd.spbudgetrulesrecommendation.v3+json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/SPBudgetRulesRecommendationEventRequest"
                  }
                ],
                "discriminator": {
                  "mapping": {
                    "EVENTS_FOR_EXISTING_CAMPAIGN": "#/components/schemas/SPBudgetRulesRecommendationEventRequest"
                  },
                  "propertyName": "recommendationType"
                }
              }
            }
          }
        },
        "operationId": "SPGetBudgetRulesRecommendation",
        "description": "A rule enables an automatic budget increase for a specified date range or for a special event. The response also includes a suggested budget increase for each special event.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "responses": {
          "200": {
            "description": "Successful Operation.",
            "content": {
              "application/vnd.spbudgetrulesrecommendation.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPBudgetRulesRecommendationEventResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/vnd.spbudgetrulesrecommendation.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPBudgetRulesRecommendationError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Something went wrong on the server.",
            "content": {
              "application/vnd.spbudgetrulesrecommendation.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPBudgetRulesRecommendationError"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests. Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.spbudgetrulesrecommendation.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPBudgetRulesRecommendationError"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.",
            "required": true
          }
        ],
        "tags": [
          "BudgetRulesRecommendation"
        ]
      }
    },
    "/sp/campaignNegativeTargets": {
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.spCampaignNegativeTargetingClause.v3+json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent"
              }
            }
          },
          "required": true
        },
        "description": "Create campaign negative targeting clauses\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "CreateSponsoredProductsCampaignNegativeTargetingClauses",
        "responses": {
          "400": {
            "description": "CampaignNegativeTargetsMutationException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsCampaignNegativeTargetsMutationExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsInternalServerExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "415": {
            "description": "UnsupportedMediaTypeException 415 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnsupportedMediaTypeExceptionResponseContent"
                }
              }
            }
          },
          "207": {
            "headers": {
              "Preference-Applied": {
                "schema": {
                  "description": "Header containing preferences applied while processing API call",
                  "type": "string"
                },
                "description": "Header containing preferences applied while processing API call"
              }
            },
            "description": "CreateSponsoredProductsCampaignNegativeTargetingClauses 207 response",
            "content": {
              "application/vnd.spCampaignNegativeTargetingClause.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesResponseContent"
                }
              }
            }
          },
          "429": {
            "headers": {
              "Retry-After": {
                "schema": {
                  "format": "int32",
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended",
                  "type": "integer"
                },
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended"
              }
            },
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsThrottlingExceptionResponseContent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
            "required": true
          },
          {
            "schema": {
              "description": "The \"Prefer\" header, as defined in [RFC7240], allows clients to request certain behavior from the service.\nThe service ignores preference values that are either not supported or not known by the service.\nEither multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent\nSupported preferences:\nreturn=representation - return the full object when doing create/update/delete operations instead of ids.\nPlease note that the extendedData field will be part of the full object for /list endpoints only.",
              "type": "string"
            },
            "in": "header",
            "name": "Prefer",
            "description": "The \"Prefer\" header, as defined in [RFC7240], allows clients to request certain behavior from the service.\nThe service ignores preference values that are either not supported or not known by the service.\nEither multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent\nSupported preferences:\nreturn=representation - return the full object when doing create/update/delete operations instead of ids.\nPlease note that the extendedData field will be part of the full object for /list endpoints only."
          }
        ],
        "tags": [
          "Campaign negative targeting clauses"
        ]
      },
      "put": {
        "requestBody": {
          "content": {
            "application/vnd.spCampaignNegativeTargetingClause.v3+json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent"
              }
            }
          },
          "required": true
        },
        "description": "Update campaign negative targeting clauses\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "UpdateSponsoredProductsCampaignNegativeTargetingClauses",
        "responses": {
          "400": {
            "description": "CampaignNegativeTargetsMutationException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsCampaignNegativeTargetsMutationExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsInternalServerExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "415": {
            "description": "UnsupportedMediaTypeException 415 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnsupportedMediaTypeExceptionResponseContent"
                }
              }
            }
          },
          "207": {
            "headers": {
              "Preference-Applied": {
                "schema": {
                  "description": "Header containing preferences applied while processing API call",
                  "type": "string"
                },
                "description": "Header containing preferences applied while processing API call"
              }
            },
            "description": "UpdateSponsoredProductsCampaignNegativeTargetingClauses 207 response",
            "content": {
              "application/vnd.spCampaignNegativeTargetingClause.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesResponseContent"
                }
              }
            }
          },
          "429": {
            "headers": {
              "Retry-After": {
                "schema": {
                  "format": "int32",
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended",
                  "type": "integer"
                },
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended"
              }
            },
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsThrottlingExceptionResponseContent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
            "required": true
          },
          {
            "schema": {
              "description": "The \"Prefer\" header, as defined in [RFC7240], allows clients to request certain behavior from the service.\nThe service ignores preference values that are either not supported or not known by the service.\nEither multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent\nSupported preferences:\nreturn=representation - return the full object when doing create/update/delete operations instead of ids.\nPlease note that the extendedData field will be part of the full object for /list endpoints only.",
              "type": "string"
            },
            "in": "header",
            "name": "Prefer",
            "description": "The \"Prefer\" header, as defined in [RFC7240], allows clients to request certain behavior from the service.\nThe service ignores preference values that are either not supported or not known by the service.\nEither multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent\nSupported preferences:\nreturn=representation - return the full object when doing create/update/delete operations instead of ids.\nPlease note that the extendedData field will be part of the full object for /list endpoints only."
          }
        ],
        "tags": [
          "Campaign negative targeting clauses"
        ]
      }
    },
    "/sp/keywords": {
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.spKeyword.v3+json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredProductsCreateSponsoredProductsKeywordsRequestContent"
              }
            }
          },
          "required": true
        },
        "description": "Create keywords\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "CreateSponsoredProductsKeywords",
        "responses": {
          "400": {
            "description": "KeywordMutationException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsKeywordMutationExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsInternalServerExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "415": {
            "description": "UnsupportedMediaTypeException 415 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnsupportedMediaTypeExceptionResponseContent"
                }
              }
            }
          },
          "207": {
            "headers": {
              "Preference-Applied": {
                "schema": {
                  "description": "Header containing preferences applied while processing API call",
                  "type": "string"
                },
                "description": "Header containing preferences applied while processing API call"
              }
            },
            "description": "CreateSponsoredProductsKeywords 207 response",
            "content": {
              "application/vnd.spKeyword.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsCreateSponsoredProductsKeywordsResponseContent"
                }
              }
            }
          },
          "429": {
            "headers": {
              "Retry-After": {
                "schema": {
                  "format": "int32",
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended",
                  "type": "integer"
                },
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended"
              }
            },
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsThrottlingExceptionResponseContent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
            "required": true
          },
          {
            "schema": {
              "description": "The \"Prefer\" header, as defined in [RFC7240], allows clients to request certain behavior from the service.\nThe service ignores preference values that are either not supported or not known by the service.\nEither multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent\nSupported preferences:\nreturn=representation - return the full object when doing create/update/delete operations instead of ids.\nPlease note that the extendedData field will be part of the full object for /list endpoints only.",
              "type": "string"
            },
            "in": "header",
            "name": "Prefer",
            "description": "The \"Prefer\" header, as defined in [RFC7240], allows clients to request certain behavior from the service.\nThe service ignores preference values that are either not supported or not known by the service.\nEither multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent\nSupported preferences:\nreturn=representation - return the full object when doing create/update/delete operations instead of ids.\nPlease note that the extendedData field will be part of the full object for /list endpoints only."
          }
        ],
        "tags": [
          "Keywords"
        ]
      },
      "put": {
        "requestBody": {
          "content": {
            "application/vnd.spKeyword.v3+json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredProductsUpdateSponsoredProductsKeywordsRequestContent"
              }
            }
          },
          "required": true
        },
        "description": "Update keywords\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "UpdateSponsoredProductsKeywords",
        "responses": {
          "400": {
            "description": "KeywordMutationException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsKeywordMutationExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsInternalServerExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "415": {
            "description": "UnsupportedMediaTypeException 415 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnsupportedMediaTypeExceptionResponseContent"
                }
              }
            }
          },
          "207": {
            "headers": {
              "Preference-Applied": {
                "schema": {
                  "description": "Header containing preferences applied while processing API call",
                  "type": "string"
                },
                "description": "Header containing preferences applied while processing API call"
              }
            },
            "description": "UpdateSponsoredProductsKeywords 207 response",
            "content": {
              "application/vnd.spKeyword.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUpdateSponsoredProductsKeywordsResponseContent"
                }
              }
            }
          },
          "429": {
            "headers": {
              "Retry-After": {
                "schema": {
                  "format": "int32",
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended",
                  "type": "integer"
                },
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended"
              }
            },
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsThrottlingExceptionResponseContent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
            "required": true
          },
          {
            "schema": {
              "description": "The \"Prefer\" header, as defined in [RFC7240], allows clients to request certain behavior from the service.\nThe service ignores preference values that are either not supported or not known by the service.\nEither multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent\nSupported preferences:\nreturn=representation - return the full object when doing create/update/delete operations instead of ids.\nPlease note that the extendedData field will be part of the full object for /list endpoints only.",
              "type": "string"
            },
            "in": "header",
            "name": "Prefer",
            "description": "The \"Prefer\" header, as defined in [RFC7240], allows clients to request certain behavior from the service.\nThe service ignores preference values that are either not supported or not known by the service.\nEither multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent\nSupported preferences:\nreturn=representation - return the full object when doing create/update/delete operations instead of ids.\nPlease note that the extendedData field will be part of the full object for /list endpoints only."
          }
        ],
        "tags": [
          "Keywords"
        ]
      }
    },
    "/sp/campaignNegativeTargets/list": {
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.spCampaignNegativeTargetingClause.v3+json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent"
              }
            }
          }
        },
        "description": "List campaign negative targeting clauses\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "operationId": "ListSponsoredProductsCampaignNegativeTargetingClauses",
        "responses": {
          "200": {
            "description": "ListSponsoredProductsCampaignNegativeTargetingClauses 200 response",
            "content": {
              "application/vnd.spCampaignNegativeTargetingClause.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "CampaignNegativeTargetsAccessException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsCampaignNegativeTargetsAccessExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsInternalServerExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "415": {
            "description": "UnsupportedMediaTypeException 415 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnsupportedMediaTypeExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "headers": {
              "Retry-After": {
                "schema": {
                  "format": "int32",
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended",
                  "type": "integer"
                },
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended"
              }
            },
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsThrottlingExceptionResponseContent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
            "required": true
          }
        ],
        "tags": [
          "Campaign negative targeting clauses"
        ]
      }
    },
    "/sp/targets/delete": {
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.spTargetingClause.v3+json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent"
              }
            }
          },
          "required": true
        },
        "description": "Delete targeting clauses\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "DeleteSponsoredProductsTargetingClauses",
        "responses": {
          "400": {
            "description": "TargetMutationException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsTargetMutationExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsInternalServerExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "415": {
            "description": "UnsupportedMediaTypeException 415 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnsupportedMediaTypeExceptionResponseContent"
                }
              }
            }
          },
          "207": {
            "description": "DeleteSponsoredProductsTargetingClauses 207 response",
            "content": {
              "application/vnd.spTargetingClause.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsDeleteSponsoredProductsTargetingClausesResponseContent"
                }
              }
            }
          },
          "429": {
            "headers": {
              "Retry-After": {
                "schema": {
                  "format": "int32",
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended",
                  "type": "integer"
                },
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended"
              }
            },
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsThrottlingExceptionResponseContent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
            "required": true
          }
        ],
        "tags": [
          "Targeting clauses"
        ]
      }
    },
    "/sp/rules/optimization/search": {
      "post": {
        "summary": "Searches optimization rules based on optional filters.\n",
        "requestBody": {
          "content": {
            "application/vnd.spoptimizationrules.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/OptimizationRulesAPISwaggerSearchOptimizationRulesRequest"
              },
              "examples": {
                "getSingleOptimizationRuleByRuleId": {
                  "value": {
                    "optimizationRuleFilter": {
                      "optimizationRuleId": {
                        "values": [
                          "29aeb716-2ba7-4fae-9f9a-3e8306e0ca0f"
                        ],
                        "filterType": "EXACT_MATCH"
                      }
                    }
                  }
                },
                "getMultipleOptimizationRulesByRuleId": {
                  "value": {
                    "optimizationRuleFilter": {
                      "optimizationRuleId": {
                        "values": [
                          "29aeb716-2ba7-4fae-9f9a-3e8306e0ca0f",
                          "c735308f-fd6c-49a6-b2a8-e53f354265bc"
                        ],
                        "filterType": "EXACT_MATCH"
                      }
                    }
                  }
                },
                "getIntradayBiddingRulesByMultipleCampaignIds": {
                  "value": {
                    "optimizationRuleFilter": {
                      "ruleCategory": {
                        "values": [
                          "BID"
                        ],
                        "filterType": "EXACT_MATCH"
                      },
                      "ruleSubCategory": {
                        "values": [
                          "SCHEDULE"
                        ],
                        "filterType": "EXACT_MATCH"
                      }
                    },
                    "campaignFilter": {
                      "campaignId": {
                        "values": [
                          "12345678",
                          "34567890"
                        ],
                        "filterType": "EXACT_MATCH"
                      }
                    }
                  }
                },
                "getIntradayBiddingRulesBySingleCampaignId": {
                  "value": {
                    "optimizationRuleFilter": {
                      "ruleCategory": {
                        "values": [
                          "BID"
                        ],
                        "filterType": "EXACT_MATCH"
                      },
                      "ruleSubCategory": {
                        "values": [
                          "SCHEDULE"
                        ],
                        "filterType": "EXACT_MATCH"
                      }
                    },
                    "campaignFilter": {
                      "campaignId": {
                        "values": [
                          "12345678"
                        ],
                        "filterType": "EXACT_MATCH"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "SearchOptimizationRules",
        "responses": {
          "200": {
            "description": "Successful Operation.",
            "content": {
              "application/vnd.spoptimizationrules.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/OptimizationRulesAPISwaggerSearchOptimizationRulesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request caused by invalid input.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OptimizationRulesAPISwaggerOptimizationRulesError"
                },
                "example": {
                  "code": "400",
                  "message": "Invalid advertiser id."
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated. Request failed because user is not authenticated.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OptimizationRulesAPISwaggerOptimizationRulesError"
                },
                "example": {
                  "code": "401",
                  "message": "Unauthenticated."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Something went wrong on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OptimizationRulesAPISwaggerOptimizationRulesError"
                },
                "example": {
                  "code": "500",
                  "message": "Internal server error."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. Request failed because user does not have access to a specified resource.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OptimizationRulesAPISwaggerOptimizationRulesError"
                },
                "example": {
                  "code": "403",
                  "message": "You do not have permission to access the resource."
                }
              }
            }
          }
        },
        "description": "\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.\nThis is a required header for advertisers and integrators using the Advertising API.\n",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account.\nUse `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.\nThis is a required header for advertisers and integrators using the Advertising API.\n",
            "required": true
          }
        ],
        "tags": [
          "Optimization Rules"
        ]
      }
    },
    "/sp/campaigns": {
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.spCampaign.v3+json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredProductsCreateSponsoredProductsCampaignsRequestContent"
              }
            }
          },
          "required": true
        },
        "description": "Create campaigns\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "CreateSponsoredProductsCampaigns",
        "responses": {
          "400": {
            "description": "CampaignMutationException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsCampaignMutationExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsInternalServerExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "415": {
            "description": "UnsupportedMediaTypeException 415 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnsupportedMediaTypeExceptionResponseContent"
                }
              }
            }
          },
          "207": {
            "headers": {
              "Preference-Applied": {
                "schema": {
                  "description": "Header containing preferences applied while processing API call",
                  "type": "string"
                },
                "description": "Header containing preferences applied while processing API call"
              }
            },
            "description": "CreateSponsoredProductsCampaigns 207 response",
            "content": {
              "application/vnd.spCampaign.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsCreateSponsoredProductsCampaignsResponseContent"
                }
              }
            }
          },
          "429": {
            "headers": {
              "Retry-After": {
                "schema": {
                  "format": "int32",
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended",
                  "type": "integer"
                },
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended"
              }
            },
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsThrottlingExceptionResponseContent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
            "required": true
          },
          {
            "schema": {
              "description": "The \"Prefer\" header, as defined in [RFC7240], allows clients to request certain behavior from the service.\nThe service ignores preference values that are either not supported or not known by the service.\nEither multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent\nSupported preferences:\nreturn=representation - return the full object when doing create/update/delete operations instead of ids.\nPlease note that the extendedData field will be part of the full object for /list endpoints only.",
              "type": "string"
            },
            "in": "header",
            "name": "Prefer",
            "description": "The \"Prefer\" header, as defined in [RFC7240], allows clients to request certain behavior from the service.\nThe service ignores preference values that are either not supported or not known by the service.\nEither multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent\nSupported preferences:\nreturn=representation - return the full object when doing create/update/delete operations instead of ids.\nPlease note that the extendedData field will be part of the full object for /list endpoints only."
          }
        ],
        "tags": [
          "Campaigns"
        ]
      },
      "put": {
        "requestBody": {
          "content": {
            "application/vnd.spCampaign.v3+json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredProductsUpdateSponsoredProductsCampaignsRequestContent"
              }
            }
          },
          "required": true
        },
        "description": "Update campaigns\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "UpdateSponsoredProductsCampaigns",
        "responses": {
          "400": {
            "description": "CampaignMutationException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsCampaignMutationExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsInternalServerExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "415": {
            "description": "UnsupportedMediaTypeException 415 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnsupportedMediaTypeExceptionResponseContent"
                }
              }
            }
          },
          "207": {
            "headers": {
              "Preference-Applied": {
                "schema": {
                  "description": "Header containing preferences applied while processing API call",
                  "type": "string"
                },
                "description": "Header containing preferences applied while processing API call"
              }
            },
            "description": "UpdateSponsoredProductsCampaigns 207 response",
            "content": {
              "application/vnd.spCampaign.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUpdateSponsoredProductsCampaignsResponseContent"
                }
              }
            }
          },
          "429": {
            "headers": {
              "Retry-After": {
                "schema": {
                  "format": "int32",
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended",
                  "type": "integer"
                },
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended"
              }
            },
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsThrottlingExceptionResponseContent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
            "required": true
          },
          {
            "schema": {
              "description": "The \"Prefer\" header, as defined in [RFC7240], allows clients to request certain behavior from the service.\nThe service ignores preference values that are either not supported or not known by the service.\nEither multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent\nSupported preferences:\nreturn=representation - return the full object when doing create/update/delete operations instead of ids.\nPlease note that the extendedData field will be part of the full object for /list endpoints only.",
              "type": "string"
            },
            "in": "header",
            "name": "Prefer",
            "description": "The \"Prefer\" header, as defined in [RFC7240], allows clients to request certain behavior from the service.\nThe service ignores preference values that are either not supported or not known by the service.\nEither multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent\nSupported preferences:\nreturn=representation - return the full object when doing create/update/delete operations instead of ids.\nPlease note that the extendedData field will be part of the full object for /list endpoints only."
          }
        ],
        "tags": [
          "Campaigns"
        ]
      }
    },
    "/sp/adGroups/list": {
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.spAdGroup.v3+json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredProductsListSponsoredProductsAdGroupsRequestContent"
              }
            }
          }
        },
        "description": "List ad groups\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "operationId": "ListSponsoredProductsAdGroups",
        "responses": {
          "200": {
            "description": "ListSponsoredProductsAdGroups 200 response",
            "content": {
              "application/vnd.spAdGroup.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsListSponsoredProductsAdGroupsResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "AdGroupAccessException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAdGroupAccessExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsInternalServerExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "415": {
            "description": "UnsupportedMediaTypeException 415 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnsupportedMediaTypeExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "headers": {
              "Retry-After": {
                "schema": {
                  "format": "int32",
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended",
                  "type": "integer"
                },
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended"
              }
            },
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsThrottlingExceptionResponseContent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
            "required": true
          }
        ],
        "tags": [
          "Ad groups"
        ]
      }
    },
    "/sp/adGroups/delete": {
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.spAdGroup.v3+json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent"
              }
            }
          },
          "required": true
        },
        "description": "Delete ad groups\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "DeleteSponsoredProductsAdGroups",
        "responses": {
          "400": {
            "description": "AdGroupMutationException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAdGroupMutationExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsInternalServerExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "415": {
            "description": "UnsupportedMediaTypeException 415 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnsupportedMediaTypeExceptionResponseContent"
                }
              }
            }
          },
          "207": {
            "description": "DeleteSponsoredProductsAdGroups 207 response",
            "content": {
              "application/vnd.spAdGroup.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsDeleteSponsoredProductsAdGroupsResponseContent"
                }
              }
            }
          },
          "429": {
            "headers": {
              "Retry-After": {
                "schema": {
                  "format": "int32",
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended",
                  "type": "integer"
                },
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended"
              }
            },
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsThrottlingExceptionResponseContent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
            "required": true
          }
        ],
        "tags": [
          "Ad groups"
        ]
      }
    },
    "/sp/campaign/recommendations": {
      "get": {
        "operationId": "getCampaignRecommendations",
        "description": "Gets the top consolidated recommendations across bid, budget, targeting for SP campaigns given an advertiser profile id. The recommendations are refreshed everyday.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_view\",\"advertiser_campaign_edit\"]",
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/vnd.spgetcampaignrecommendationsresponse.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCampaignRecommendationsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid Request - The input fails to satisfy the constraints of the API.",
            "content": {
              "application/vnd.spgetcampaignrecommendationsresponse.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationException"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - Failed due to invalid parameters.",
            "content": {
              "application/vnd.spgetcampaignrecommendationsresponse.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableEntityException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Request failed because user is not authenticated.",
            "content": {
              "application/vnd.spgetcampaignrecommendationsresponse.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/vnd.spgetcampaignrecommendationsresponse.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "403": {
            "description": "Access Denied - Request failed because the user is not allowed to invoke the operation.",
            "content": {
              "application/vnd.spgetcampaignrecommendationsresponse.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.spgetcampaignrecommendationsresponse.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "nextToken",
            "description": "Optional. Token to retrieve subsequent page of results."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "maxResults",
            "description": "Optional. Limits the number of items to return in the response."
          }
        ],
        "tags": [
          "Consolidated Recommendations"
        ]
      }
    },
    "/sp/campaignNegativeKeywords/delete": {
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.spCampaignNegativeKeyword.v3+json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent"
              }
            }
          },
          "required": true
        },
        "description": "Delete campaign negative keywords\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "DeleteSponsoredProductsCampaignNegativeKeywords",
        "responses": {
          "400": {
            "description": "CampaignNegativeKeywordMutationException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsCampaignNegativeKeywordMutationExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsInternalServerExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "415": {
            "description": "UnsupportedMediaTypeException 415 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnsupportedMediaTypeExceptionResponseContent"
                }
              }
            }
          },
          "207": {
            "description": "DeleteSponsoredProductsCampaignNegativeKeywords 207 response",
            "content": {
              "application/vnd.spCampaignNegativeKeyword.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsResponseContent"
                }
              }
            }
          },
          "429": {
            "headers": {
              "Retry-After": {
                "schema": {
                  "format": "int32",
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended",
                  "type": "integer"
                },
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended"
              }
            },
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsThrottlingExceptionResponseContent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
            "required": true
          }
        ],
        "tags": [
          "Campaign negative keywords"
        ]
      }
    },
    "/sp/campaigns/{campaignId}/optimizationRules": {
      "post": {
        "summary": "Associates one or multiple optimization rules with a campaign.\n",
        "requestBody": {
          "content": {
            "application/vnd.spoptimizationrules.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/OptimizationRulesAPISwaggerAssociateOptimizationRulesToCampaignRequest"
              },
              "examples": {
                "associateMultipleRules": {
                  "value": {
                    "optimizationRuleIds": [
                      "f0da81d5-318d-4938-9c45-0d33f680fdc1",
                      "babc8a5e-b050-496f-a4f6-36f1f67d5bad",
                      "c7b2b725-2269-4b5e-95d0-54cd0fd28cd1"
                    ]
                  }
                },
                "associateASingleRule": {
                  "value": {
                    "optimizationRuleIds": [
                      "7bf484ff-381c-4703-82ec-66b9eb732705"
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "AssociateOptimizationRulesToCampaign",
        "responses": {
          "400": {
            "description": "Bad request caused by invalid input.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OptimizationRulesAPISwaggerOptimizationRulesError"
                },
                "example": {
                  "code": "400",
                  "message": "Invalid advertiser id."
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated. Request failed because user is not authenticated.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OptimizationRulesAPISwaggerOptimizationRulesError"
                },
                "example": {
                  "code": "401",
                  "message": "Unauthenticated."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Something went wrong on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OptimizationRulesAPISwaggerOptimizationRulesError"
                },
                "example": {
                  "code": "500",
                  "message": "Internal server error."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. Request failed because user does not have access to a specified resource.\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OptimizationRulesAPISwaggerOptimizationRulesError"
                },
                "example": {
                  "code": "403",
                  "message": "You do not have permission to access the resource."
                }
              }
            }
          },
          "207": {
            "description": "Multi-status.\nAn object containing a list of optimization rule response objects reflecting the same order as the input.\n",
            "content": {
              "application/vnd.spoptimizationrules.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/OptimizationRulesAPISwaggerAssociateOptimizationRulesToCampaignResponse"
                }
              }
            }
          }
        },
        "description": "\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.\nThis is a required header for advertisers and integrators using the Advertising API.\n",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account.\nUse `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.\nThis is a required header for advertisers and integrators using the Advertising API.\n",
            "required": true
          },
          {
            "schema": {
              "description": "Sp campaign identifier.",
              "type": "string"
            },
            "in": "path",
            "name": "campaignId",
            "description": "The sp campaign identifier.",
            "required": true
          }
        ],
        "tags": [
          "Optimization Rules"
        ]
      }
    },
    "/sp/campaignNegativeKeywords/list": {
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.spCampaignNegativeKeyword.v3+json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent"
              }
            }
          }
        },
        "description": "List campaign negative keywords\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "operationId": "ListSponsoredProductsCampaignNegativeKeywords",
        "responses": {
          "200": {
            "description": "ListSponsoredProductsCampaignNegativeKeywords 200 response",
            "content": {
              "application/vnd.spCampaignNegativeKeyword.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "CampaignNegativeKeywordAccessException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsCampaignNegativeKeywordAccessExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsInternalServerExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "415": {
            "description": "UnsupportedMediaTypeException 415 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnsupportedMediaTypeExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "headers": {
              "Retry-After": {
                "schema": {
                  "format": "int32",
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended",
                  "type": "integer"
                },
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended"
              }
            },
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsThrottlingExceptionResponseContent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
            "required": true
          }
        ],
        "tags": [
          "Campaign negative keywords"
        ]
      }
    },
    "/sp/campaigns/delete": {
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.spCampaign.v3+json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredProductsDeleteSponsoredProductsCampaignsRequestContent"
              }
            }
          },
          "required": true
        },
        "description": "Delete campaigns\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "DeleteSponsoredProductsCampaigns",
        "responses": {
          "400": {
            "description": "CampaignMutationException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsCampaignMutationExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsInternalServerExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "415": {
            "description": "UnsupportedMediaTypeException 415 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnsupportedMediaTypeExceptionResponseContent"
                }
              }
            }
          },
          "207": {
            "description": "DeleteSponsoredProductsCampaigns 207 response",
            "content": {
              "application/vnd.spCampaign.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsDeleteSponsoredProductsCampaignsResponseContent"
                }
              }
            }
          },
          "429": {
            "headers": {
              "Retry-After": {
                "schema": {
                  "format": "int32",
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended",
                  "type": "integer"
                },
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended"
              }
            },
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsThrottlingExceptionResponseContent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
            "required": true
          }
        ],
        "tags": [
          "Campaigns"
        ]
      }
    },
    "/sp/campaigns/list": {
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.spCampaign.v3+json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredProductsListSponsoredProductsCampaignsRequestContent"
              }
            }
          }
        },
        "description": "List campaigns\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "operationId": "ListSponsoredProductsCampaigns",
        "responses": {
          "200": {
            "description": "ListSponsoredProductsCampaigns 200 response",
            "content": {
              "application/vnd.spCampaign.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsListSponsoredProductsCampaignsResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "CampaignAccessException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsCampaignAccessExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsInternalServerExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "415": {
            "description": "UnsupportedMediaTypeException 415 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnsupportedMediaTypeExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "headers": {
              "Retry-After": {
                "schema": {
                  "format": "int32",
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended",
                  "type": "integer"
                },
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended"
              }
            },
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsThrottlingExceptionResponseContent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
            "required": true
          }
        ],
        "tags": [
          "Campaigns"
        ]
      }
    },
    "/sp/budgetRules/{budgetRuleId}/campaigns": {
      "get": {
        "summary": "Gets all the campaigns associated with a budget rule",
        "operationId": "GetCampaignsAssociatedWithSPBudgetRule",
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SPGetAssociatedCampaignsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity. The server understood the request, but was unable to process the instruction.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The request failed because user does not have access to a specified resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests. The request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "budgetRuleId",
            "description": "The budget rule identifier.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "nextToken",
            "description": "To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results."
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "pageSize",
            "description": "Sets a limit on the number of results returned. Maximum limit of `pageSize` is 30.",
            "required": true
          }
        ],
        "tags": [
          "BudgetRules"
        ]
      }
    },
    "/sp/campaigns/{campaignId}/budgetRules/{budgetRuleId}": {
      "delete": {
        "summary": "Disassociates a budget rule specified by identifier from a campaign specified by identifier.",
        "operationId": "DisassociateAssociatedBudgetRuleForSPCampaigns",
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisassociateAssociatedBudgetRuleResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity. The server understood the request, but was unable to process the instruction.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request failed because user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The request failed because user does not have access to a specified resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests. The request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          }
        },
        "description": "\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "format": "int64",
              "type": "number"
            },
            "in": "path",
            "name": "campaignId",
            "description": "The campaign identifier.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "budgetRuleId",
            "description": "The budget rule identifier.",
            "required": true
          }
        ],
        "tags": [
          "BudgetRules"
        ]
      }
    },
    "/sp/adGroups": {
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.spAdGroup.v3+json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredProductsCreateSponsoredProductsAdGroupsRequestContent"
              }
            }
          },
          "required": true
        },
        "description": "Create ad groups\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "CreateSponsoredProductsAdGroups",
        "responses": {
          "400": {
            "description": "AdGroupMutationException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAdGroupMutationExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsInternalServerExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "415": {
            "description": "UnsupportedMediaTypeException 415 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnsupportedMediaTypeExceptionResponseContent"
                }
              }
            }
          },
          "207": {
            "headers": {
              "Preference-Applied": {
                "schema": {
                  "description": "Header containing preferences applied while processing API call",
                  "type": "string"
                },
                "description": "Header containing preferences applied while processing API call"
              }
            },
            "description": "CreateSponsoredProductsAdGroups 207 response",
            "content": {
              "application/vnd.spAdGroup.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsCreateSponsoredProductsAdGroupsResponseContent"
                }
              }
            }
          },
          "429": {
            "headers": {
              "Retry-After": {
                "schema": {
                  "format": "int32",
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended",
                  "type": "integer"
                },
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended"
              }
            },
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsThrottlingExceptionResponseContent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
            "required": true
          },
          {
            "schema": {
              "description": "The \"Prefer\" header, as defined in [RFC7240], allows clients to request certain behavior from the service.\nThe service ignores preference values that are either not supported or not known by the service.\nEither multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent\nSupported preferences:\nreturn=representation - return the full object when doing create/update/delete operations instead of ids.\nPlease note that the extendedData field will be part of the full object for /list endpoints only.",
              "type": "string"
            },
            "in": "header",
            "name": "Prefer",
            "description": "The \"Prefer\" header, as defined in [RFC7240], allows clients to request certain behavior from the service.\nThe service ignores preference values that are either not supported or not known by the service.\nEither multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent\nSupported preferences:\nreturn=representation - return the full object when doing create/update/delete operations instead of ids.\nPlease note that the extendedData field will be part of the full object for /list endpoints only."
          }
        ],
        "tags": [
          "Ad groups"
        ]
      },
      "put": {
        "requestBody": {
          "content": {
            "application/vnd.spAdGroup.v3+json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent"
              }
            }
          },
          "required": true
        },
        "description": "Update ad groups\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "UpdateSponsoredProductsAdGroups",
        "responses": {
          "400": {
            "description": "AdGroupMutationException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAdGroupMutationExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsInternalServerExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "415": {
            "description": "UnsupportedMediaTypeException 415 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnsupportedMediaTypeExceptionResponseContent"
                }
              }
            }
          },
          "207": {
            "headers": {
              "Preference-Applied": {
                "schema": {
                  "description": "Header containing preferences applied while processing API call",
                  "type": "string"
                },
                "description": "Header containing preferences applied while processing API call"
              }
            },
            "description": "UpdateSponsoredProductsAdGroups 207 response",
            "content": {
              "application/vnd.spAdGroup.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUpdateSponsoredProductsAdGroupsResponseContent"
                }
              }
            }
          },
          "429": {
            "headers": {
              "Retry-After": {
                "schema": {
                  "format": "int32",
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended",
                  "type": "integer"
                },
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended"
              }
            },
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsThrottlingExceptionResponseContent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
            "required": true
          },
          {
            "schema": {
              "description": "The \"Prefer\" header, as defined in [RFC7240], allows clients to request certain behavior from the service.\nThe service ignores preference values that are either not supported or not known by the service.\nEither multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent\nSupported preferences:\nreturn=representation - return the full object when doing create/update/delete operations instead of ids.\nPlease note that the extendedData field will be part of the full object for /list endpoints only.",
              "type": "string"
            },
            "in": "header",
            "name": "Prefer",
            "description": "The \"Prefer\" header, as defined in [RFC7240], allows clients to request certain behavior from the service.\nThe service ignores preference values that are either not supported or not known by the service.\nEither multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent\nSupported preferences:\nreturn=representation - return the full object when doing create/update/delete operations instead of ids.\nPlease note that the extendedData field will be part of the full object for /list endpoints only."
          }
        ],
        "tags": [
          "Ad groups"
        ]
      }
    },
    "/sp/targets/products/recommendations": {
      "post": {
        "summary": "Suggested target ASINs for your advertised product",
        "requestBody": {
          "content": {
            "application/vnd.spproductrecommendation.v3+json": {
              "schema": {
                "$ref": "#/components/schemas/GetProductRecommendationsRequest"
              }
            }
          }
        },
        "operationId": "getProductRecommendations",
        "description": "Given an advertised ASIN as input, this API returns suggested ASINs to target in a product targeting campaign. We use various methods to generate these suggestions. These include using historical performance of your ad, items that shoppers they frequently view and purchase together, etc. The suggested targets can be retrieved either as a single list, or grouped by \u2018theme' \u2013 i.e. an accompanying context for why we recommend the items. You can pick the desired format using the Accepts header, please see the response mediaTypes for more information. <\/br>\n<h4>Pagination Behavior<\/h4> The API supports cursor based pagination using encoded cursor values to return next set of records or previously served records. The <b>count<\/b> parameter in the request body will be used to determine the size of results when requesting the previous page or next page. If no value for <b>count<\/b> is passed in the request, a default value is assumed. Please refer the range and defaults for these values in the request schema under GetProductRecommendationsRequest. <\/br> <i><b>Note:<\/b> The clients should never cache pagination cursor values locally as these values will expire after a certain time period. However a cursor value can be reused to perform retries in case of failures as long as the value has not expired.\n<\/br><\/br> <h4>Themes <\/h4> Themes provide additional context for why we are recommending a product as a target. See below for an overall list of themes currently available \u2013  <\/br><b>- Top converting targets<\/b> \u2013 These ASINs generated conversions for the input ASIN in the past 30 days (e.g. your product appeared as an ad on the detail page of these items, and a shopper clicked and purchased your item). The suggested ASINs under this theme are sorted in decreasing order of sales generated for your promoted item. <\/br><b>- Similar items (frequently viewed together)<\/b> \u2013 Items that shoppers frequently view and click along with your advertised item during a shopping session.\n<\/br><b>- Complements<\/b> \u2013 Items that are frequently purchased together as complements. For example, if you are promoting a tennis racquet, you may see tennis balls recommended under this theme.\n<\/br><b>- Similar items with low ratings and reviews<\/b> \u2013 Subset of the \u2018similar items\u2019 theme containing items that are rated lower than 3 stars and/or with fewer than 5 reviews.\n<\/br><b>- Other books read by your readers<\/b> \u2013 Items that shoppers frequently view and click along with your advertised item during a shopping session. <\/br><\/br><i><b>Note:<\/b> Availability of themes differs by input ASIN - some ASINs may not have all above themes available<\/i>\n",
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/vnd.spproductrecommendationresponse.themes.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductRecommendationsByTheme"
                }
              },
              "application/vnd.spproductrecommendationresponse.asins.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductRecommendationsByASIN"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - Failed due to invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableEntityException"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-AdvertiserId",
            "description": "The Advertiser ID associated with the advertiser account."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          }
        ],
        "tags": [
          "Product Recommendation Service"
        ]
      }
    },
    "/sp/negativeTargets/delete": {
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.spNegativeTargetingClause.v3+json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent"
              }
            }
          },
          "required": true
        },
        "description": "Delete negative targeting clauses\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "DeleteSponsoredProductsNegativeTargetingClauses",
        "responses": {
          "400": {
            "description": "NegativeTargetMutationException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsNegativeTargetMutationExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsInternalServerExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "415": {
            "description": "UnsupportedMediaTypeException 415 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnsupportedMediaTypeExceptionResponseContent"
                }
              }
            }
          },
          "207": {
            "description": "DeleteSponsoredProductsNegativeTargetingClauses 207 response",
            "content": {
              "application/vnd.spNegativeTargetingClause.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesResponseContent"
                }
              }
            }
          },
          "429": {
            "headers": {
              "Retry-After": {
                "schema": {
                  "format": "int32",
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended",
                  "type": "integer"
                },
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended"
              }
            },
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsThrottlingExceptionResponseContent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
            "required": true
          }
        ],
        "tags": [
          "Negative targeting clauses"
        ]
      }
    },
    "/sp/global/targets/bid/recommendations": {
      "post": {
        "summary": "Get bid recommendations for multi-country ad groups",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/MultiCountryAdGroupThemeBasedBidRecommendationRequest"
                  },
                  {
                    "$ref": "#/components/schemas/MultiCountryAsinsThemeBasedBidRecommendationRequest"
                  }
                ],
                "discriminator": {
                  "mapping": {
                    "BIDS_FOR_EXISTING_AD_GROUP": "#/components/schemas/MultiCountryAdGroupThemeBasedBidRecommendationRequest",
                    "BIDS_FOR_NEW_AD_GROUP": "#/components/schemas/MultiCountryAsinsThemeBasedBidRecommendationRequest"
                  },
                  "propertyName": "recommendationType"
                }
              }
            }
          }
        },
        "description": "The <b> POST /sp/targets/bid/recommendations <\/b> endpoint returns recommended bids for each target given either A) new ad group (a list of ad ASINs) or B) existing ad group (a campaign ID and ad group ID). Please use the recommendationType field to specify if you want to use option A or option B. This API is currently available at marketplaces where SP is available. The API supports keyword, auto and product targets. The API will return a 422 response when an unsupported marketplace or target is provided. <h1> Version 5.0 <\/h1><h2> New Features <\/h2><ul><li> Version 5.0 introduces two new capabilities. First, advertisers will receive the estimated impressions for the suggested bid to help them understand the potential impact of adopting them. Second, advertisers will get a view of the estimated impressions for a range of bids (8 bids) for each target. <\/li><li> The second feature is default to be disabled. To enable it, user needs to set <b> includeAnalysis <\/b> as True in request body. <\/li><li> New features are currently available only for existing ad group requests in US marketplace. <\/li><\/ul><h1> Version 4.0 <\/h1><h2> New Features <\/h2><ul><li> Version 4.0 allows users to get theme-based bid recommendations for product targeting expressions, including PAT_ASIN, PAT_CATEGORY and PAT_CATEGORY_REFINEMENT. <\/li><li> Version 4.0 supports keyword, auto and product targets in all marketplaces. <\/li><li> Version 4.0 removes \"impact metrics\" when returning each bid suggestion. <\/li><li> Version 4.0 also allows users to get theme-based bid recommendations for keyword group targeting expressions with the type KEYWORD_GROUP. This new type is only available in US marketplace. <\/li><\/ul><br>\n\n**Authorized resource type**:\nGlobal Ad Account ID\n\n**Parameter name**:\nAmazon-Ads-AccountId\n\n**Parameter in**:\nheader\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "operationId": "GetMultiCountryThemeBasedBidRecommendationForAdGroup_v1",
        "responses": {
          "200": {
            "description": "Successful Operation.",
            "content": {
              "application/vnd.spthemebasedglobalbidrecommendation.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/MultiCountryThemeBasedBidRecommendationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultiCountryThemeBasedBidRecommendationCompleteFailureResponse"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity. Failed due to invalid parameters. If you receive an error like \u201cInvalid Advertiser and ASINs combination in the request\u201d, please make sure the ad group has at least one ASIN in it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultiCountryThemeBasedBidRecommendationCompleteFailureResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Request failed because user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultiCountryThemeBasedBidRecommendationCompleteFailureResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Something went wrong on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultiCountryThemeBasedBidRecommendationCompleteFailureResponse"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type. Request failed because the payload format is not supported.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultiCountryThemeBasedBidRecommendationCompleteFailureResponse"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed. Request failed because the request HTTP method is not supported.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultiCountryThemeBasedBidRecommendationCompleteFailureResponse"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable. Request failed because the service cannot produce a response in a format matching the media types provided in the Accept header.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultiCountryThemeBasedBidRecommendationCompleteFailureResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests. Request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultiCountryThemeBasedBidRecommendationCompleteFailureResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Ads-AccountId",
            "description": "Global Account Id Identifier.",
            "required": true
          }
        ],
        "tags": [
          "Multi Country Theme-based bid recommendations"
        ]
      }
    },
    "/sp/keywords/delete": {
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.spKeyword.v3+json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredProductsDeleteSponsoredProductsKeywordsRequestContent"
              }
            }
          },
          "required": true
        },
        "description": "Delete keywords\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "DeleteSponsoredProductsKeywords",
        "responses": {
          "400": {
            "description": "KeywordMutationException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsKeywordMutationExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsInternalServerExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "415": {
            "description": "UnsupportedMediaTypeException 415 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnsupportedMediaTypeExceptionResponseContent"
                }
              }
            }
          },
          "207": {
            "description": "DeleteSponsoredProductsKeywords 207 response",
            "content": {
              "application/vnd.spKeyword.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsDeleteSponsoredProductsKeywordsResponseContent"
                }
              }
            }
          },
          "429": {
            "headers": {
              "Retry-After": {
                "schema": {
                  "format": "int32",
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended",
                  "type": "integer"
                },
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended"
              }
            },
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsThrottlingExceptionResponseContent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
            "required": true
          }
        ],
        "tags": [
          "Keywords"
        ]
      }
    },
    "/sp/rules/campaignOptimization/eligibility": {
      "post": {
        "summary": "Gets a campaign optimization rule eligibility for SP campaigns.",
        "requestBody": {
          "content": {
            "application/vnd.optimizationrules.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/SPCampaignOptimizationRecommendationsAPIRequest"
              }
            }
          },
          "required": true
        },
        "operationId": "GetOptimizationRuleEligibility",
        "responses": {
          "200": {
            "description": "Successful Operation.",
            "content": {
              "application/vnd.optimizationrules.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPCampaignOptimizationRecommendationAPIResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity. The server understood the request, but was unable to process the instruction.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The request failed because user does not have access to a specified resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests. The request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          }
        },
        "description": "\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          }
        ],
        "tags": [
          "Campaign Optimization Rules"
        ]
      }
    },
    "/sp/budgetRules/{budgetRuleId}": {
      "get": {
        "summary": "Gets a budget rule specified by identifier.",
        "operationId": "GetBudgetRuleByRuleIdForSPCampaigns",
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSPBudgetRuleResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity. The server understood the request, but was unable to process the instruction.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The request failed because user does not have access to a specified resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests. The request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          }
        },
        "description": "\n\n**Authorized resource type**:\nGlobal Ad Account ID, Profile ID\n\n**Parameter name**:\nAmazon-Ads-AccountId\n\n**Parameter in**:\nheader\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "budgetRuleId",
            "description": "The budget rule identifier.",
            "required": true
          }
        ],
        "tags": [
          "BudgetRules"
        ]
      }
    },
    "/sp/rules/campaignOptimization/{campaignOptimizationId}": {
      "get": {
        "summary": "Gets a campaign optimization rule specified by identifier.",
        "operationId": "GetCampaignOptimizationRule",
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/vnd.optimizationrules.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSPCampaignOptimizationRuleResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity. The server understood the request, but was unable to process the instruction.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The request failed because user does not have access to a specified resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests. The request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          }
        },
        "description": "\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "campaignOptimizationId",
            "description": "The sp campaign optimization rule identifier.",
            "required": true
          }
        ],
        "tags": [
          "Campaign Optimization Rules"
        ]
      },
      "delete": {
        "summary": "Deletes a campaign optimization rule specified by identifier.",
        "operationId": "DeleteCampaignOptimizationRule",
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/vnd.optimizationrules.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteSPCampaignOptimizationRuleResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity. The server understood the request, but was unable to process the instruction.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The request failed because user does not have access to a specified resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests. The request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          }
        },
        "description": "\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "campaignOptimizationId",
            "description": "The sp campaign optimization rule identifier.",
            "required": true
          }
        ],
        "tags": [
          "Campaign Optimization Rules"
        ]
      }
    },
    "/sp/campaignNegativeKeywords": {
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.spCampaignNegativeKeyword.v3+json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent"
              }
            }
          },
          "required": true
        },
        "description": "Create campaign negative keywords\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "CreateSponsoredProductsCampaignNegativeKeywords",
        "responses": {
          "400": {
            "description": "CampaignNegativeKeywordMutationException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsCampaignNegativeKeywordMutationExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsInternalServerExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "415": {
            "description": "UnsupportedMediaTypeException 415 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnsupportedMediaTypeExceptionResponseContent"
                }
              }
            }
          },
          "207": {
            "headers": {
              "Preference-Applied": {
                "schema": {
                  "description": "Header containing preferences applied while processing API call",
                  "type": "string"
                },
                "description": "Header containing preferences applied while processing API call"
              }
            },
            "description": "CreateSponsoredProductsCampaignNegativeKeywords 207 response",
            "content": {
              "application/vnd.spCampaignNegativeKeyword.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsResponseContent"
                }
              }
            }
          },
          "429": {
            "headers": {
              "Retry-After": {
                "schema": {
                  "format": "int32",
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended",
                  "type": "integer"
                },
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended"
              }
            },
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsThrottlingExceptionResponseContent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
            "required": true
          },
          {
            "schema": {
              "description": "The \"Prefer\" header, as defined in [RFC7240], allows clients to request certain behavior from the service.\nThe service ignores preference values that are either not supported or not known by the service.\nEither multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent\nSupported preferences:\nreturn=representation - return the full object when doing create/update/delete operations instead of ids.\nPlease note that the extendedData field will be part of the full object for /list endpoints only.",
              "type": "string"
            },
            "in": "header",
            "name": "Prefer",
            "description": "The \"Prefer\" header, as defined in [RFC7240], allows clients to request certain behavior from the service.\nThe service ignores preference values that are either not supported or not known by the service.\nEither multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent\nSupported preferences:\nreturn=representation - return the full object when doing create/update/delete operations instead of ids.\nPlease note that the extendedData field will be part of the full object for /list endpoints only."
          }
        ],
        "tags": [
          "Campaign negative keywords"
        ]
      },
      "put": {
        "requestBody": {
          "content": {
            "application/vnd.spCampaignNegativeKeyword.v3+json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent"
              }
            }
          },
          "required": true
        },
        "description": "Update campaign negative keywords\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "UpdateSponsoredProductsCampaignNegativeKeywords",
        "responses": {
          "400": {
            "description": "CampaignNegativeKeywordMutationException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsCampaignNegativeKeywordMutationExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsInternalServerExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "415": {
            "description": "UnsupportedMediaTypeException 415 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnsupportedMediaTypeExceptionResponseContent"
                }
              }
            }
          },
          "207": {
            "headers": {
              "Preference-Applied": {
                "schema": {
                  "description": "Header containing preferences applied while processing API call",
                  "type": "string"
                },
                "description": "Header containing preferences applied while processing API call"
              }
            },
            "description": "UpdateSponsoredProductsCampaignNegativeKeywords 207 response",
            "content": {
              "application/vnd.spCampaignNegativeKeyword.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsResponseContent"
                }
              }
            }
          },
          "429": {
            "headers": {
              "Retry-After": {
                "schema": {
                  "format": "int32",
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended",
                  "type": "integer"
                },
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended"
              }
            },
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsThrottlingExceptionResponseContent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
            "required": true
          },
          {
            "schema": {
              "description": "The \"Prefer\" header, as defined in [RFC7240], allows clients to request certain behavior from the service.\nThe service ignores preference values that are either not supported or not known by the service.\nEither multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent\nSupported preferences:\nreturn=representation - return the full object when doing create/update/delete operations instead of ids.\nPlease note that the extendedData field will be part of the full object for /list endpoints only.",
              "type": "string"
            },
            "in": "header",
            "name": "Prefer",
            "description": "The \"Prefer\" header, as defined in [RFC7240], allows clients to request certain behavior from the service.\nThe service ignores preference values that are either not supported or not known by the service.\nEither multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent\nSupported preferences:\nreturn=representation - return the full object when doing create/update/delete operations instead of ids.\nPlease note that the extendedData field will be part of the full object for /list endpoints only."
          }
        ],
        "tags": [
          "Campaign negative keywords"
        ]
      }
    },
    "/sp/targetPromotionGroups/targets/list": {
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.sptargetpromotiongrouptarget.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredProductsListTargetPromotionGroupTargetsRequestContent"
              }
            },
            "application/vnd.sptargetpromotiongrouptarget.v2+json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredProductsListTargetPromotionGroupTargetsV2RequestContent"
              }
            }
          }
        },
        "description": "Returns the targets created through target promotion groups for an advertiser and / or given target promotion group.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_view\"]",
        "operationId": "ListTargetPromotionGroupTargets",
        "responses": {
          "200": {
            "description": "ListTargetPromotionGroupTargets 200 response",
            "content": {
              "application/vnd.sptargetpromotiongrouptarget.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsListTargetPromotionGroupTargetsResponseContent"
                }
              },
              "application/vnd.sptargetpromotiongrouptarget.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsListTargetPromotionGroupTargetsV2ResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "SchemaValidationException 400 response",
            "content": {
              "application/vnd.sptargetpromotiongrouptarget.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsSchemaValidationExceptionResponseContent"
                }
              },
              "application/vnd.sptargetpromotiongrouptarget.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsSchemaValidationExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthenticatedException 401 response",
            "content": {
              "application/vnd.sptargetpromotiongrouptarget.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnauthenticatedExceptionResponseContent"
                }
              },
              "application/vnd.sptargetpromotiongrouptarget.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnauthenticatedExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerException 500 response",
            "content": {
              "application/vnd.sptargetpromotiongrouptarget.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsInternalServerExceptionResponseContent"
                }
              },
              "application/vnd.sptargetpromotiongrouptarget.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsInternalServerExceptionResponseContent"
                }
              }
            }
          },
          "501": {
            "description": "NotImplementedException 501 response",
            "content": {
              "application/vnd.sptargetpromotiongrouptarget.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsNotImplementedExceptionResponseContent"
                }
              },
              "application/vnd.sptargetpromotiongrouptarget.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsNotImplementedExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/vnd.sptargetpromotiongrouptarget.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAccessDeniedExceptionResponseContent"
                }
              },
              "application/vnd.sptargetpromotiongrouptarget.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "503": {
            "description": "ServiceUnavailableException 503 response",
            "content": {
              "application/vnd.sptargetpromotiongrouptarget.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsServiceUnavailableExceptionResponseContent"
                }
              },
              "application/vnd.sptargetpromotiongrouptarget.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsServiceUnavailableExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "headers": {
              "Retry-After": {
                "schema": {
                  "format": "int32",
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended",
                  "type": "integer"
                },
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended"
              }
            },
            "description": "ThrottlingException 429 response",
            "content": {
              "application/vnd.sptargetpromotiongrouptarget.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsThrottlingExceptionResponseContent"
                }
              },
              "application/vnd.sptargetpromotiongrouptarget.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsThrottlingExceptionResponseContent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "description": "The identifier of a client associated with a 'Login with Amazon' account. This is a required\n    header for advertisers and integrators using the Advertising API.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a 'Login with Amazon' account. This is a required\n    header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles\n    resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a\n    required header for advertisers and integrators using the Advertising API.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles\n    resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a\n    required header for advertisers and integrators using the Advertising API.",
            "required": true
          }
        ],
        "tags": [
          "TargetPromotionGroups"
        ]
      }
    },
    "/sp/targets/list": {
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.spTargetingClause.v3+json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredProductsListSponsoredProductsTargetingClausesRequestContent"
              }
            }
          }
        },
        "description": "List targeting clauses\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "ListSponsoredProductsTargetingClauses",
        "responses": {
          "200": {
            "description": "ListSponsoredProductsTargetingClauses 200 response",
            "content": {
              "application/vnd.spTargetingClause.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsListSponsoredProductsTargetingClausesResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "TargetAccessException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsTargetAccessExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsInternalServerExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "415": {
            "description": "UnsupportedMediaTypeException 415 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnsupportedMediaTypeExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "headers": {
              "Retry-After": {
                "schema": {
                  "format": "int32",
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended",
                  "type": "integer"
                },
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended"
              }
            },
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsThrottlingExceptionResponseContent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
            "required": true
          }
        ],
        "tags": [
          "Targeting clauses"
        ]
      }
    },
    "/sp/negativeKeywords/list": {
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.spNegativeKeyword.v3+json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent"
              }
            }
          }
        },
        "description": "List negative keywords\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "operationId": "ListSponsoredProductsNegativeKeywords",
        "responses": {
          "200": {
            "description": "ListSponsoredProductsNegativeKeywords 200 response",
            "content": {
              "application/vnd.spNegativeKeyword.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsListSponsoredProductsNegativeKeywordsResponseContent"
                }
              }
            }
          },
          "400": {
            "description": "NegativeKeywordAccessException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsNegativeKeywordAccessExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsInternalServerExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "415": {
            "description": "UnsupportedMediaTypeException 415 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnsupportedMediaTypeExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "headers": {
              "Retry-After": {
                "schema": {
                  "format": "int32",
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended",
                  "type": "integer"
                },
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended"
              }
            },
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsThrottlingExceptionResponseContent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
            "required": true
          }
        ],
        "tags": [
          "Negative keywords"
        ]
      }
    },
    "/sp/global/targets/keywords/recommendations/list": {
      "post": {
        "summary": "Get global keyword recommendations",
        "requestBody": {
          "content": {
            "application/vnd.spkeywordsrecommendation.v5+json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/GlobalRankedKeywordTargetsForAsinsRequest"
                  },
                  {
                    "$ref": "#/components/schemas/GlobalRankedKeywordTargetsForAdGroupRequest"
                  }
                ],
                "discriminator": {
                  "mapping": {
                    "KEYWORDS_FOR_ADGROUP": "#/components/schemas/GlobalRankedKeywordTargetsForAdGroupRequest",
                    "KEYWORDS_FOR_ASINS": "#/components/schemas/GlobalRankedKeywordTargetsForAsinsRequest"
                  },
                  "propertyName": "recommendationType"
                }
              }
            }
          }
        },
        "operationId": "getGlobalRankedKeywordRecommendation",
        "description": "The <b> POST /sp/global/targets/keywords/recommendations/list <\/b> endpoint returns recommended keyword targets for a list of countries given either A) a list of ad ASINs per target country or B) a global campaign ID and ad group ID. Please use the recommendationType field to specify if you want to use option A or option B. This endpoint will also return recommended bids along with each recommendation keyword target.<br><br> <b> CountryCodes<\/b> <br>Global API endpoint accepts <b>countryCodes<\/b> dictionary. Key is the 2-letter country code. Value is an object with two arrays <b>asins<\/b> and <b>targets<\/b>. Each country will be processed in parallel according to rules of <a href=\"https://advertising.amazon.com/API/docs/en-us/sponsored-products/3-0/openapi/prod#tag/Keyword-Targets:~:text=keywords/localize%20endpoint.-,Version%205.0,-New%20Features\">version 5<\/a> recommendation API.<h3> Availability <\/h3> Global keyword recommendation API is available in all the marketplaces.",
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/vnd.spkeywordsrecommendation.v5+json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalRankedTargetWithThemedBidsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTargetingError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - Failed due to invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTargetingError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Request failed because user is not authenticated in any of requested marketplaces or\nis not allowed to invoke the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTargetingError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server. Retry\nlater and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTargetingError"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type Exception.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTargetingError"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable due to transient error or dependent service failure - Something went wrong on the server. Retry\nlater and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTargetingError"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTargetingError"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-MarketplaceId",
            "description": "The advertiser's Marketplace ID associated with the advertiser account to support single marketplace request. Will not be used if global account id is provided."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-AdvertiserId",
            "description": "The advertiser's ID associated with the advertiser account to support single marketplace request. Will not be used if global account id is provided."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Ads-AccountId",
            "description": "The identifier of a profile associated with the advertiser account. Used for authentication of Global Account.",
            "required": true
          }
        ],
        "tags": [
          "Keyword Targets"
        ]
      }
    },
    "/sp/negativeKeywords": {
      "post": {
        "requestBody": {
          "content": {
            "application/vnd.spNegativeKeyword.v3+json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent"
              }
            }
          },
          "required": true
        },
        "description": "Create negative keywords\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "CreateSponsoredProductsNegativeKeywords",
        "responses": {
          "400": {
            "description": "NegativeKeywordMutationException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsNegativeKeywordMutationExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsInternalServerExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "415": {
            "description": "UnsupportedMediaTypeException 415 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnsupportedMediaTypeExceptionResponseContent"
                }
              }
            }
          },
          "207": {
            "headers": {
              "Preference-Applied": {
                "schema": {
                  "description": "Header containing preferences applied while processing API call",
                  "type": "string"
                },
                "description": "Header containing preferences applied while processing API call"
              }
            },
            "description": "CreateSponsoredProductsNegativeKeywords 207 response",
            "content": {
              "application/vnd.spNegativeKeyword.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsCreateSponsoredProductsNegativeKeywordsResponseContent"
                }
              }
            }
          },
          "429": {
            "headers": {
              "Retry-After": {
                "schema": {
                  "format": "int32",
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended",
                  "type": "integer"
                },
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended"
              }
            },
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsThrottlingExceptionResponseContent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
            "required": true
          },
          {
            "schema": {
              "description": "The \"Prefer\" header, as defined in [RFC7240], allows clients to request certain behavior from the service.\nThe service ignores preference values that are either not supported or not known by the service.\nEither multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent\nSupported preferences:\nreturn=representation - return the full object when doing create/update/delete operations instead of ids.\nPlease note that the extendedData field will be part of the full object for /list endpoints only.",
              "type": "string"
            },
            "in": "header",
            "name": "Prefer",
            "description": "The \"Prefer\" header, as defined in [RFC7240], allows clients to request certain behavior from the service.\nThe service ignores preference values that are either not supported or not known by the service.\nEither multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent\nSupported preferences:\nreturn=representation - return the full object when doing create/update/delete operations instead of ids.\nPlease note that the extendedData field will be part of the full object for /list endpoints only."
          }
        ],
        "tags": [
          "Negative keywords"
        ]
      },
      "put": {
        "requestBody": {
          "content": {
            "application/vnd.spNegativeKeyword.v3+json": {
              "schema": {
                "$ref": "#/components/schemas/SponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent"
              }
            }
          },
          "required": true
        },
        "description": "Update negative keywords\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "UpdateSponsoredProductsNegativeKeywords",
        "responses": {
          "400": {
            "description": "NegativeKeywordMutationException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsNegativeKeywordMutationExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsInternalServerExceptionResponseContent"
                }
              }
            }
          },
          "403": {
            "description": "AccessDeniedException 403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsAccessDeniedExceptionResponseContent"
                }
              }
            }
          },
          "415": {
            "description": "UnsupportedMediaTypeException 415 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUnsupportedMediaTypeExceptionResponseContent"
                }
              }
            }
          },
          "207": {
            "headers": {
              "Preference-Applied": {
                "schema": {
                  "description": "Header containing preferences applied while processing API call",
                  "type": "string"
                },
                "description": "Header containing preferences applied while processing API call"
              }
            },
            "description": "UpdateSponsoredProductsNegativeKeywords 207 response",
            "content": {
              "application/vnd.spNegativeKeyword.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsUpdateSponsoredProductsNegativeKeywordsResponseContent"
                }
              }
            }
          },
          "429": {
            "headers": {
              "Retry-After": {
                "schema": {
                  "format": "int32",
                  "description": "Delay in seconds, before the next re-try attempt to the operation is recommended",
                  "type": "integer"
                },
                "description": "Delay in seconds, before the next re-try attempt to the operation is recommended"
              }
            },
            "description": "ThrottlingException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SponsoredProductsThrottlingExceptionResponseContent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list\nprofiles associated with the access token passed in the HTTP Authorization header.",
            "required": true
          },
          {
            "schema": {
              "description": "The \"Prefer\" header, as defined in [RFC7240], allows clients to request certain behavior from the service.\nThe service ignores preference values that are either not supported or not known by the service.\nEither multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent\nSupported preferences:\nreturn=representation - return the full object when doing create/update/delete operations instead of ids.\nPlease note that the extendedData field will be part of the full object for /list endpoints only.",
              "type": "string"
            },
            "in": "header",
            "name": "Prefer",
            "description": "The \"Prefer\" header, as defined in [RFC7240], allows clients to request certain behavior from the service.\nThe service ignores preference values that are either not supported or not known by the service.\nEither multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent\nSupported preferences:\nreturn=representation - return the full object when doing create/update/delete operations instead of ids.\nPlease note that the extendedData field will be part of the full object for /list endpoints only."
          }
        ],
        "tags": [
          "Negative keywords"
        ]
      }
    },
    "/sp/campaigns/budget/usage": {
      "post": {
        "summary": "Budget usage API for SP campaigns",
        "requestBody": {
          "content": {
            "application/vnd.spcampaignbudgetusage.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetUsageCampaignRequest"
              }
            }
          },
          "required": true
        },
        "operationId": "spCampaignsBudgetUsage",
        "responses": {
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetUsageError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity. The server understood the request, but was unable to process the instruction.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetUsageError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetUsageError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server BudgetUsageError - Something went wrong on the server. Retry later and report an BudgetUsageError if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetUsageError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The request failed because user does not have access to a specified resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetUsageError"
                }
              }
            }
          },
          "207": {
            "description": "Multi-status. An object containing a list of budget usage response objects reflecting the same order as the input.",
            "content": {
              "application/vnd.spcampaignbudgetusage.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetUsageCampaignResponse"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests. The request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetUsageError"
                }
              }
            }
          }
        },
        "description": "\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "parameters": [
          {
            "schema": {},
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {},
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          }
        ],
        "tags": [
          "Budget Usage"
        ]
      }
    },
    "/sp/v1/events": {
      "post": {
        "summary": "Gets all special individual and grouped events with suggested date range in advertiser's marketplace.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SPGetAllRuleEventRequest"
              }
            }
          }
        },
        "operationId": "SPGetAllRuleEvents",
        "description": "A rule enables an automatic budget increase for a specified date range or for a special event. The response includes the suggested date range for each special event.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "responses": {
          "200": {
            "description": "Successful Operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SPGetAllRuleEventResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SPGetRuleEventError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Something went wrong on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SPGetRuleEventError"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests. Request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SPGetRuleEventError"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.",
            "required": true
          }
        ],
        "tags": [
          "BudgetRulesRecommendation"
        ]
      }
    }
  },
  "components": {
    "headers": {},
    "examples": {},
    "schemas": {
      "SponsoredProductsBudgetErrorReason": {
        "type": "string",
        "enum": [
          "BUDGET_TOO_LOW",
          "BUDGET_TOO_HIGH",
          "BUDGET_LT_DEFAULT_BIDS",
          "BUDGET_LT_KEYWORD_BIDS",
          "BUDGET_LT_PREDEFINED_TARGET_BIDS",
          "BUDGET_OUT_OF_MARKET_PLACE_RANGE",
          "BUDGET_CURRENCY_DOES_NOT_MATCH_MARKETPLACE_SETTINGS",
          "BUDGETING_POLICY_INVALID",
          "MISSING_BUDGETING_POLICY",
          "MISSING_IN_BUDGET_FLAG"
        ]
      },
      "SponsoredProductsOtherErrorReason": {
        "type": "string",
        "enum": [
          "OTHER_ERROR"
        ]
      },
      "SponsoredProductsAsinOwnershipError": {
        "description": "Errors related to author asin ownership",
        "type": "object",
        "properties": {
          "reason": {
            "$ref": "#/components/schemas/SponsoredProductsAsinOwnershipErrorReason"
          },
          "cause": {
            "$ref": "#/components/schemas/SponsoredProductsErrorCause"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          }
        },
        "required": [
          "message",
          "reason"
        ]
      },
      "SponsoredProductsDeleteSponsoredProductsGlobalCampaignNegativeKeywordsResponseContent": {
        "type": "object",
        "properties": {
          "campaignNegativeKeywords": {
            "$ref": "#/components/schemas/SponsoredProductsBulkGlobalCampaignNegativeKeywordOperationResponse"
          }
        },
        "required": [
          "campaignNegativeKeywords"
        ]
      },
      "SponsoredProductsListSponsoredProductsDraftCampaignNegativeKeywordsResponseContent": {
        "type": "object",
        "properties": {
          "totalResults": {
            "format": "int64",
            "description": "The total number of entities",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          },
          "campaignNegativeKeywords": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftCampaignNegativeKeyword"
            }
          }
        }
      },
      "SponsoredProductsDraftNegativeKeyword": {
        "type": "object",
        "properties": {
          "keywordId": {
            "description": "The identifier of the keyword.",
            "type": "string"
          },
          "nativeLanguageKeyword": {
            "description": "The unlocalized keyword text in the preferred locale of the advertiser",
            "type": "string"
          },
          "nativeLanguageLocale": {
            "description": "The locale preference of the advertiser.",
            "type": "string"
          },
          "campaignId": {
            "description": "The identifier of the campaign to which the keyword is associated.",
            "type": "string"
          },
          "matchType": {
            "$ref": "#/components/schemas/SponsoredProductsNegativeMatchType"
          },
          "adGroupId": {
            "description": "The identifier of the ad group to which this keyword is associated.",
            "type": "string"
          },
          "keywordText": {
            "description": "The keyword text.",
            "type": "string"
          },
          "extendedData": {
            "$ref": "#/components/schemas/SponsoredProductsDraftNegativeKeywordExtendedData"
          }
        },
        "required": [
          "adGroupId",
          "campaignId",
          "keywordId",
          "keywordText",
          "matchType"
        ]
      },
      "BrandLoP": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of brand.",
            "type": "string"
          },
          "id": {
            "description": "Id of brand.",
            "type": "string"
          }
        }
      },
      "GetTargetableAsinCountsRequest": {
        "type": "object",
        "required": [
          "category"
        ],
        "properties": {
          "ageRanges": {
            "$ref": "#/components/schemas/AgeRanges"
          },
          "brands": {
            "$ref": "#/components/schemas/Brands"
          },
          "genres": {
            "$ref": "#/components/schemas/Genres"
          },
          "isPrimeShipping": {
            "description": "Indicates if products have prime shipping",
            "type": "boolean"
          },
          "ratingRange": {
            "$ref": "#/components/schemas/RatingRange"
          },
          "category": {
            "description": "The category node id. Please use the GetTargetableCategories API or GetCategoryRecommendationsForASINs API to retrieve category IDs.",
            "type": "string"
          },
          "priceRange": {
            "$ref": "#/components/schemas/PriceRange"
          }
        }
      },
      "GlobalTargetingExpression": {
        "properties": {
          "expression": {
            "$ref": "#/components/schemas/GlobalExpression"
          },
          "countryBids": {
            "$ref": "#/components/schemas/CountryBidsMap"
          }
        },
        "required": [
          "countryBids"
        ]
      },
      "SponsoredProductsBatchErrorCode": {
        "description": "Per-item batch error codes.\n| Error Code |  description |\n|-----------|------------|\n| `BAD_REQUEST` | Non-retryable error that indicates the requester must take some corrective action before the request will succeed. |\n| `TOO_MANY_REQUESTS` | The requester has sent too many requests. Please retry later and distribute requests over larger time intervals. |\n| `INTERNAL_ERROR` | An internal error has occurred. Please contact customer support if the issue persists. |",
        "type": "string",
        "enum": [
          "BAD_REQUEST",
          "TOO_MANY_REQUESTS",
          "INTERNAL_SERVER_ERROR"
        ]
      },
      "UpdateSPCampaignOptimizationRulesRequest": {
        "description": "Request object for updating campaign optimization rule",
        "properties": {
          "recurrence": {
            "$ref": "#/components/schemas/RecurrenceType"
          },
          "ruleAction": {
            "$ref": "#/components/schemas/RuleAction"
          },
          "campaignOptimizationId": {
            "$ref": "#/components/schemas/campaignOptimizationId"
          },
          "ruleCondition": {
            "$ref": "#/components/schemas/RuleConditionList"
          },
          "ruleType": {
            "$ref": "#/components/schemas/RuleType"
          },
          "ruleName": {
            "$ref": "#/components/schemas/RuleName"
          },
          "campaignIds": {
            "maxItems": 20,
            "description": "A list of campaign ids",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuleCampaignId"
            }
          }
        },
        "required": [
          "campaignOptimizationId",
          "campaignIds",
          "ruleType",
          "recurrence",
          "ruleCondition",
          "ruleAction"
        ],
        "example": {
          "recurrence": "DAILY",
          "ruleAction": "ADOPT",
          "campaignOptimizationId": "10001",
          "ruleCondition": [
            {
              "metricName": "ROAS",
              "comparisonOperator": "GREATER_THAN",
              "threshold": "7"
            }
          ],
          "ruleType": "BID",
          "ruleName": "RuleROAS4",
          "campaignIds": [
            "123784",
            "1223785"
          ]
        }
      },
      "SponsoredProductsDraftCampaignNegativeKeywordFailureResponseItem": {
        "type": "object",
        "properties": {
          "index": {
            "format": "int32",
            "description": "the index of the draft in the array from the request body",
            "type": "integer",
            "minimum": 0
          },
          "errors": {
            "description": "A list of validation errors",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftCampaignNegativeKeywordMutationError"
            }
          }
        },
        "required": [
          "index"
        ]
      },
      "RMSBudgetRuleDetails": {
        "description": "Object representing details of a budget rule for RMS campaign",
        "type": "object",
        "properties": {
          "duration": {
            "$ref": "#/components/schemas/RuleDuration"
          },
          "recurrence": {
            "$ref": "#/components/schemas/Recurrence"
          },
          "ruleType": {
            "$ref": "#/components/schemas/RMSRuleType"
          },
          "budgetIncreaseBy": {
            "$ref": "#/components/schemas/budgetIncreaseBy"
          },
          "name": {
            "description": "The budget rule name. Required to be unique within a campaign.",
            "type": "string",
            "maxLength": 355
          },
          "performanceMeasureCondition": {
            "$ref": "#/components/schemas/PerformanceMeasureCondition"
          }
        }
      },
      "SponsoredProductsDraftAdGroupAccessError": {
        "type": "object",
        "properties": {
          "errorType": {
            "description": "The type of the error",
            "type": "string"
          },
          "errorValue": {
            "$ref": "#/components/schemas/SponsoredProductsDraftAdGroupAccessErrorSelector"
          }
        },
        "required": [
          "errorType",
          "errorValue"
        ]
      },
      "SponsoredProductsInternalErrorResponseContent": {
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsErrorCode"
          },
          "message": {
            "type": "string"
          },
          "httpStatusCode": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "AsinsThemeBasedBidRecommendationRequestV5": {
        "type": "object",
        "properties": {
          "asins": {
            "maxItems": 50,
            "description": "The list of ad ASINs in the ad group.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "targetingExpressions": {
            "$ref": "#/components/schemas/TargetingExpressionListV4"
          },
          "productDetailsList": {
            "maxItems": 50,
            "description": "This field is upcoming and not ready for use. The list of products in the request, required for GlobalStore ASINs.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDetails"
            }
          },
          "bidding": {
            "description": "Bidding control configuration for the campaign.",
            "type": "object",
            "properties": {
              "adjustments": {
                "maxItems": 3,
                "description": "Placement adjustment configuration for the campaign.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PlacementAdjustment"
                }
              },
              "strategy": {
                "$ref": "#/components/schemas/BiddingStrategy"
              }
            },
            "required": [
              "strategy"
            ]
          },
          "recommendationType": {
            "description": "The bid recommendation type.",
            "type": "string",
            "enum": [
              "BIDS_FOR_NEW_AD_GROUP"
            ]
          },
          "includeAnalysis": {
            "default": "false",
            "description": "Flag to include new bid analyzer data.",
            "type": "boolean"
          }
        },
        "required": [
          "recommendationType",
          "asins",
          "targetingExpressions",
          "bidding"
        ],
        "example": {
          "asins": [
            "asin1",
            "asin2"
          ],
          "targetingExpressions": [
            {
              "type": "CLOSE_MATCH"
            },
            {
              "type": "LOOSE_MATCH"
            },
            {
              "type": "SUBSTITUTES"
            },
            {
              "type": "COMPLEMENTS"
            }
          ],
          "productDetailsList": [
            {
              "globalStoreSetting": {
                "catalogSourceCountryCode": "US"
              },
              "asin": "asin1"
            },
            {
              "globalStoreSetting": {
                "catalogSourceCountryCode": "UK"
              },
              "asin": "asin2"
            }
          ],
          "bidding": {
            "adjustments": [
              {
                "predicate": "PLACEMENT_TOP",
                "percentage": "100"
              },
              {
                "predicate": "PLACEMENT_REST_OF_SEARCH",
                "percentage": "75"
              },
              {
                "predicate": "PLACEMENT_PRODUCT_PAGE",
                "percentage": "50"
              }
            ],
            "strategy": "AUTO_FOR_SALES"
          },
          "recommendationType": "BIDS_FOR_NEW_AD_GROUP",
          "includeAnalysis": "true"
        }
      },
      "AsinsThemeBasedBidRecommendationRequestV4": {
        "type": "object",
        "properties": {
          "asins": {
            "maxItems": 50,
            "description": "The list of ad ASINs in the ad group.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "targetingExpressions": {
            "$ref": "#/components/schemas/TargetingExpressionListV4"
          },
          "productDetailsList": {
            "maxItems": 50,
            "description": "The list of products in the request, required for GlobalStore ASINs.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDetails"
            }
          },
          "bidding": {
            "description": "Bidding control configuration for the campaign.",
            "type": "object",
            "properties": {
              "adjustments": {
                "maxItems": 3,
                "description": "Placement adjustment configuration for the campaign.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PlacementAdjustment"
                }
              },
              "strategy": {
                "$ref": "#/components/schemas/BiddingStrategy"
              }
            },
            "required": [
              "strategy"
            ]
          },
          "recommendationType": {
            "description": "The bid recommendation type.",
            "type": "string",
            "enum": [
              "BIDS_FOR_NEW_AD_GROUP"
            ]
          }
        },
        "required": [
          "recommendationType",
          "asins",
          "targetingExpressions",
          "bidding"
        ],
        "example": {
          "asins": [
            "asin1",
            "asin2"
          ],
          "targetingExpressions": [
            {
              "type": "CLOSE_MATCH"
            },
            {
              "type": "LOOSE_MATCH"
            },
            {
              "type": "SUBSTITUTES"
            },
            {
              "type": "COMPLEMENTS"
            }
          ],
          "productDetailsList": [
            {
              "globalStoreSetting": {
                "catalogSourceCountryCode": "US"
              },
              "asin": "asin1"
            },
            {
              "globalStoreSetting": {
                "catalogSourceCountryCode": "UK"
              },
              "asin": "asin2"
            }
          ],
          "bidding": {
            "adjustments": [
              {
                "predicate": "PLACEMENT_TOP",
                "percentage": "100"
              },
              {
                "predicate": "PLACEMENT_REST_OF_SEARCH",
                "percentage": "75"
              },
              {
                "predicate": "PLACEMENT_PRODUCT_PAGE",
                "percentage": "50"
              }
            ],
            "strategy": "AUTO_FOR_SALES"
          },
          "recommendationType": "BIDS_FOR_NEW_AD_GROUP"
        }
      },
      "RMSGetAssociatedCampaignsResponse": {
        "type": "object",
        "properties": {
          "associatedCampaigns": {
            "minItems": 0,
            "maxItems": 30,
            "description": "A list of campaigns that are associated to this budget rule.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssociatedCampaign"
            }
          },
          "nextToken": {
            "description": "To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsDeleteSponsoredProductsGlobalCampaignsRequestContent": {
        "type": "object",
        "properties": {
          "campaignIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          }
        }
      },
      "SponsoredProductsDraftAdGroupMutationError": {
        "type": "object",
        "properties": {
          "errorType": {
            "description": "The type of the error",
            "type": "string"
          },
          "errorValue": {
            "$ref": "#/components/schemas/SponsoredProductsDraftAdGroupMutationErrorSelector"
          }
        },
        "required": [
          "errorType",
          "errorValue"
        ]
      },
      "SponsoredProductsMarketplaceTargetingClauseServingStatus": {
        "type": "object",
        "properties": {
          "statusReasons": {
            "minItems": 0,
            "maxItems": 27,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsGlobalKeywordMarketplaceServingStatusReason"
            }
          },
          "marketplace": {
            "$ref": "#/components/schemas/SponsoredProductsMarketplace"
          },
          "servingStatus": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalKeywordMarketplaceServingStatus"
          }
        },
        "required": [
          "servingStatus"
        ]
      },
      "SponsoredProductsUpdateSponsoredProductsGlobalAdGroupsResponseContent": {
        "type": "object",
        "properties": {
          "adGroups": {
            "$ref": "#/components/schemas/SponsoredProductsBulkGlobalAdGroupOperationResponse"
          }
        },
        "required": [
          "adGroups"
        ]
      },
      "SponsoredProductsDeleteSponsoredProductsDraftProductAdsRequestContent": {
        "type": "object",
        "properties": {
          "adIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          }
        },
        "required": [
          "adIdFilter"
        ]
      },
      "SponsoredProductsGlobalStoreSetting": {
        "type": "object",
        "properties": {
          "catalogSourceCountryCode": {
            "minLength": 2,
            "description": "Country code of source marketplace where seller has listed the product. Possible source country codes include US, UK, DE, JP, and AE.",
            "type": "string",
            "maxLength": 2
          }
        }
      },
      "SponsoredProductsAdServingStatusReason": {
        "type": "string",
        "enum": [
          "AD_GROUP_STATUS_ENABLED_DETAIL",
          "AD_GROUP_PAUSED_DETAIL",
          "AD_GROUP_ARCHIVED_DETAIL",
          "AD_GROUP_INCOMPLETE_DETAIL",
          "AD_GROUP_POLICING_PENDING_REVIEW_DETAIL",
          "AD_GROUP_POLICING_CREATIVE_REJECTED_DETAIL",
          "AD_GROUP_LOW_BID_DETAIL",
          "CAMPAIGN_STATUS_ENABLED_DETAIL",
          "CAMPAIGN_PAUSED_DETAIL",
          "CAMPAIGN_ARCHIVED_DETAIL",
          "PENDING_REVIEW_DETAIL",
          "REJECTED_DETAIL",
          "PENDING_START_DATE_DETAIL",
          "ENDED_DETAIL",
          "CAMPAIGN_OUT_OF_BUDGET_DETAIL",
          "CAMPAIGN_INCOMPLETE_DETAIL",
          "PORTFOLIO_STATUS_ENABLED_DETAIL",
          "PORTFOLIO_PAUSED_DETAIL",
          "PORTFOLIO_ARCHIVED_DETAIL",
          "PORTFOLIO_OUT_OF_BUDGET_DETAIL",
          "PORTFOLIO_PENDING_START_DATE_DETAIL",
          "PORTFOLIO_ENDED_DETAIL",
          "ADVERTISER_POLICING_SUSPENDED_DETAIL",
          "ADVERTISER_POLICING_PENDING_REVIEW_DETAIL",
          "ADVERTISER_ARCHIVED_DETAIL",
          "ADVERTISER_PAUSED_DETAIL",
          "ADVERTISER_OUT_OF_BUDGET_DETAIL",
          "ADVERTISER_PAYMENT_FAILURE_DETAIL",
          "AD_STATUS_LIVE_DETAIL",
          "AD_POLICING_PENDING_REVIEW",
          "AD_POLICING_SUSPENDED_DETAIL",
          "AD_PAUSED_DETAIL",
          "AD_ARCHIVED_DETAIL",
          "MISSING_IMAGE_DETAIL",
          "MODERATION_ADULT_PRODUCT_PV_DETAIL",
          "MODERATION_ADULT_NOVELTY_PV_DETAIL",
          "MODERATION_ADULT_SOFTLINES_PV_DETAIL",
          "MODERATION_CONTENT_NUDITY_PV_DETAIL",
          "MODERATION_CONTENT_PROVOCATIVE_PV_DETAIL",
          "MODERATION_CLAIM_WEIGHTLOSS_PV_DETAIL",
          "MODERATION_ERROR_404_PV_DETAIL",
          "MODERATION_GRAPHICAL_SEXUAL_IMAGES_PV_DETAIL",
          "MODERATION_LANGUAGE_OFFENSIVE_PV_DETAIL",
          "MODERATION_HFSS_PRODUCT_PV_DETAIL",
          "MODERATION_CONTENT_SMOKING_PV_DETAIL",
          "MODERATION_SMOKING_RELATED_PV_DETAIL",
          "MODERATION_NOT_COMPLIANT_TO_AD_POLICY_PV_DETAIL",
          "MODERATION_CRITICAL_EVENTS_PV_DETAIL",
          "ACCOUNT_OUT_OF_BUDGET_DETAIL",
          "ADVERTISER_ACCOUNT_OUT_OF_BUDGET_DETAIL",
          "ADVERTISER_EXCEED_SPENDS_LIMIT_DETAIL",
          "ADVERTISER_STATUS_ENABLED_DETAIL",
          "AD_CREATION_OFFLINE_FAILED",
          "AD_CREATION_OFFLINE_IN_PROGRESS",
          "AD_CREATION_OFFLINE_PENDING",
          "CAMPAIGN_ADS_NOT_DELIVERING_DETAIL",
          "LANDING_PAGE_NOT_AVAILABLE_DETAIL",
          "MISSING_DECORATION_DETAIL",
          "NOT_BUYABLE_DETAIL",
          "NOT_IN_BUYBOX_DETAIL",
          "OUT_OF_STOCK_DETAIL",
          "SECURITY_SCAN_PENDING_REVIEW",
          "SECURITY_SCAN_REJECTED",
          "STATUS_UNAVAILABLE",
          "TARGETING_CLAUSE_ARCHIVED_DETAIL",
          "TARGETING_CLAUSE_BLOCKED_DETAIL",
          "TARGETING_CLAUSE_PAUSED_DETAIL",
          "TARGETING_CLAUSE_POLICING_SUSPENDED_DETAIL",
          "TARGETING_CLAUSE_STATUS_LIVE_DETAIL",
          "ADULT_PRODUCT",
          "ASIN_QUARANTINED",
          "BRAND_REMOVED",
          "CBA_NOT_SUPPORTED",
          "CLOSED_GL",
          "CP_INELIGIBLE",
          "CP_INELIGIBLE_ASIN",
          "CP_INELIGIBLE_UNKNOWN",
          "CP_INELIGIBLE_VENDOR",
          "ELIGIBLE_DETAIL",
          "INELIGIBLE_CONDITION",
          "INVENTORY_INCOMPLETE",
          "ITEM_MISSING",
          "LANDING_PAGE_INELIGIBLE",
          "NO_INVENTORY_DETAIL",
          "NO_PURCHASABLE_OFFER_DETAIL",
          "OFFER_MISSING_DETAIL",
          "PIR_RULE_EXCLUDED",
          "RESTRICTED_GL",
          "SKU_DEFECTIVE",
          "VARIATION_PARENT",
          "AD_POLICING_PENDING_REVIEW_DETAIL",
          "OTHER"
        ]
      },
      "SponsoredProductsCampaignNegativeTargetingClauseFailureResponseItem": {
        "type": "object",
        "properties": {
          "index": {
            "format": "int32",
            "description": "the index of the CampaignNegativeTargets in the array from the request body",
            "type": "integer",
            "minimum": 0
          },
          "errors": {
            "description": "A list of validation errors",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCampaignNegativeTargetsMutationError"
            }
          }
        },
        "required": [
          "index"
        ]
      },
      "SponsoredProductsNegativeKeywordMutationExceptionResponseContent": {
        "description": "Exception resulting in mutating campaign management entities",
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsInvalidArgumentErrorCode"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsNegativeKeywordMutationError"
            }
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "SponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent": {
        "type": "object",
        "properties": {
          "negativeTargetIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          }
        },
        "required": [
          "negativeTargetIdFilter"
        ]
      },
      "SponsoredProductsCurrencyErrorReason": {
        "type": "string",
        "enum": [
          "PREFERRED_CURRENCY_NOT_SET",
          "CURRENCY_NOT_SUPPORTED",
          "CANNOT_UPDATE_CURRENCY",
          "CURRENCY_NOT_MATCHING_PREFERRED_CURRENCY"
        ]
      },
      "OptimizationRulesAPISwaggerDisassociateOptimizationRulesRequest": {
        "description": "Request body for disassociating optimization rules from advertising entities, in bulk.",
        "type": "object",
        "properties": {
          "associations": {
            "minItems": 1,
            "maxItems": 1000,
            "description": "Pairs of a rule with an advertising entity to disassociate from each other.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptimizationRulesAPISwaggerRuleAssociationDefinition"
            }
          }
        },
        "required": [
          "associations"
        ]
      },
      "SponsoredProductsListSponsoredProductsGlobalKeywordsResponseContent": {
        "type": "object",
        "properties": {
          "totalResults": {
            "format": "int64",
            "description": "The total number of entities",
            "type": "integer"
          },
          "keywords": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsGlobalKeyword"
            }
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          }
        }
      },
      "SponsoredProductsDeleteAllSPTargetsRequestContent": {
        "type": "object",
        "properties": {
          "targetIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          }
        },
        "required": [
          "targetIdFilter"
        ]
      },
      "SponsoredProductsDraftKeywordMutationExceptionResponseContent": {
        "description": "Exception resulting in mutating campaign management entities",
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsInvalidArgumentErrorCode"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftKeywordMutationError"
            }
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "SponsoredProductsProductAdMutationError": {
        "type": "object",
        "properties": {
          "errorType": {
            "description": "The type of the error",
            "type": "string"
          },
          "errorValue": {
            "$ref": "#/components/schemas/SponsoredProductsProductAdMutationErrorSelector"
          }
        },
        "required": [
          "errorType",
          "errorValue"
        ]
      },
      "SponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent": {
        "type": "object",
        "properties": {
          "targetingClauses": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "An array of targetingClauses with updated values.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsUpdateTargetingClause"
            }
          }
        },
        "required": [
          "targetingClauses"
        ]
      },
      "GlobalBudgetRecommendationError": {
        "type": "object",
        "required": [
          "code"
        ],
        "properties": {
          "countryCodes": {
            "minItems": 0,
            "maxItems": 50,
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "SponsoredProductsCreateSponsoredProductsKeywordsRequestContent": {
        "type": "object",
        "properties": {
          "keywords": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "An array of keywords.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCreateKeyword"
            }
          }
        },
        "required": [
          "keywords"
        ]
      },
      "RankedTargetWithThemedBidsResponseWithError": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RankedTargetWithThemedBidsResponse"
          }
        ],
        "type": "object",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/SPTargetingError"
          }
        }
      },
      "SponsoredProductsDeleteTargetRequest": {
        "type": "object",
        "properties": {
          "targetPromotionGroupId": {
            "description": "Entity object identifier",
            "type": "string"
          },
          "targetId": {
            "description": "Entity object identifier",
            "type": "string"
          },
          "manualTargetingAdGroupId": {
            "description": "Entity object identifier",
            "type": "string"
          },
          "autoTargetingCampaignAdGroupId": {
            "description": "Entity object identifier",
            "type": "string"
          }
        },
        "required": [
          "autoTargetingCampaignAdGroupId",
          "manualTargetingAdGroupId",
          "targetId",
          "targetPromotionGroupId"
        ]
      },
      "SponsoredProductsBulkTargetingClauseOperationResponse": {
        "type": "object",
        "properties": {
          "success": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsTargetingClauseSuccessResponseItem"
            }
          },
          "error": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsTargetingClauseFailureResponseItem"
            }
          }
        }
      },
      "SponsoredProductsForbiddenResponseContent": {
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsErrorCode"
          },
          "message": {
            "type": "string"
          },
          "httpStatusCode": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "SponsoredProductsKeywordAccessErrorSelector": {
        "type": "object",
        "properties": {
          "entityNotFoundError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityNotFoundError"
          },
          "missingValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMissingValueError"
          },
          "localeError": {
            "$ref": "#/components/schemas/SponsoredProductsLocaleError"
          },
          "malformedValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMalformedValueError"
          },
          "internalServerError": {
            "$ref": "#/components/schemas/SponsoredProductsInternalServerError"
          },
          "rangeError": {
            "$ref": "#/components/schemas/SponsoredProductsRangeError"
          },
          "otherError": {
            "$ref": "#/components/schemas/SponsoredProductsOtherError"
          },
          "invalidInputError": {
            "$ref": "#/components/schemas/SponsoredProductsInvalidInputError"
          },
          "throttledError": {
            "$ref": "#/components/schemas/SponsoredProductsThrottledError"
          }
        }
      },
      "SponsoredProductsCreateOrUpdateTargetType": {
        "type": "string",
        "enum": [
          "KEYWORD",
          "PRODUCT",
          "PRODUCT_CATEGORY"
        ]
      },
      "SponsoredProductsListSponsoredProductsNegativeKeywordsPreviewRequestContent": {
        "type": "object",
        "properties": {
          "campaignIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsReducedObjectIdFilter"
          },
          "stateFilter": {
            "$ref": "#/components/schemas/SponsoredProductsEntityStateFilter"
          },
          "negativeKeywordTextFilter": {
            "$ref": "#/components/schemas/SponsoredProductsKeywordTextFilter"
          },
          "maxResults": {
            "format": "int32",
            "description": "Number of records to include in the paginated response. Defaults to max page size for given API",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          },
          "adGroupIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsReducedObjectIdFilter"
          },
          "includeExtendedDataFields": {
            "description": "Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus",
            "type": "boolean"
          },
          "locale": {
            "description": "Restricts results to negativeKeywords that match the specified locale.",
            "type": "string"
          },
          "negativeKeywordIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          },
          "matchTypeFilter": {
            "description": "Only the negativeKeyword with the match type that is in this list will be listed",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsNegativeMatchType"
            }
          }
        }
      },
      "RankedTargetWithThemedBids": {
        "type": "object",
        "properties": {
          "searchTermImpressionShare": {
            "format": "Double",
            "description": "The account-level ad-attributed impression share for the search-term/keyword. Provides percentage share of all ad impressions the advertiser has for the keyword in the last 30 days. This metric helps advertisers identify potential opportunities based on their share on relevant keywords. This information is only available for keywords the advertiser targeted with ad impressions.",
            "type": "number"
          },
          "translation": {
            "description": "The translation of keyword if a locale is passed in",
            "type": "string"
          },
          "bidInfo": {
            "minItems": 0,
            "maxItems": 15,
            "description": "A list of keyword bid info",
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ThemedBid"
                }
              ]
            }
          },
          "searchTermImpressionRank": {
            "description": "The account-level ad-attributed impression rank for the search-term/keyword. Provides [1:N] place the advertiser ranks among all advertisers for the keyword by ad impressions in a marketplace in the last 30 days. It tells an advertiser how many advertisers had higher share of ad impressions. This information is only available for keywords the advertiser targeted with ad impressions.",
            "type": "number"
          },
          "keyword": {
            "description": "The keyword value",
            "type": "string"
          },
          "userSelectedKeyword": {
            "description": "Flag that tells if keyword was selected by the user or was recommended by KRS",
            "type": "boolean"
          },
          "recId": {
            "description": "The recommended keyword target id",
            "type": "string"
          }
        }
      },
      "BidPlacementAdjustment": {
        "description": "Specifies bid adjustments based on the placement location. Use `PLACEMENT_TOP` for the top of the search page. Use `PLACEMENT_REST_OF_SEARCH` for the rest of the search page. Use `PLACEMENT_PRODUCT_PAGE` for a product page.",
        "type": "object",
        "properties": {
          "predicate": {
            "type": "string",
            "enum": [
              "PLACEMENT_TOP",
              "PLACEMENT_REST_OF_SEARCH",
              "PLACEMENT_PRODUCT_PAGE"
            ]
          },
          "percentage": {
            "maximum": 900,
            "type": "integer",
            "minimum": 0
          }
        },
        "example": {
          "predicate": "PLACEMENT_TOP",
          "percentage": "100"
        }
      },
      "SponsoredProductsGlobalAdGroup": {
        "type": "object",
        "properties": {
          "campaignId": {
            "description": "The identifier of the campaign to which the keyword is associated.",
            "type": "string"
          },
          "applicableMarketplaces": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "description": "The name of the ad group.",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalEntityState"
          },
          "adGroupId": {
            "description": "The identifier of the keyword.",
            "type": "string"
          },
          "defaultBid": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalBid"
          },
          "extendedData": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalAdGroupExtendedData"
          }
        },
        "required": [
          "adGroupId",
          "campaignId",
          "defaultBid",
          "name",
          "state"
        ]
      },
      "OptimizationRulesAPISwaggerOptimizationRuleFilter": {
        "description": "Filter on optimization rules.",
        "type": "object",
        "properties": {
          "ruleCategory": {
            "$ref": "#/components/schemas/OptimizationRulesAPISwaggerEntityFieldFilter"
          },
          "ruleSubCategory": {
            "$ref": "#/components/schemas/OptimizationRulesAPISwaggerEntityFieldFilter"
          },
          "optimizationRuleId": {
            "$ref": "#/components/schemas/OptimizationRulesAPISwaggerEntityFieldFilter"
          }
        }
      },
      "SearchGlobalBrandsRequest": {
        "description": "Request object for SearchGlobalBrands API.",
        "type": "object",
        "required": [
          "countryKeyword"
        ],
        "properties": {
          "countryKeyword": {
            "description": "Map containing keywords for countries passed in the request.",
            "additionalProperties": {
              "description": "Country code corresponding to the keyword. <br> <table><thead><tr><th>Country Code<\/th><th>Country<\/th><\/tr><\/thead><tbody><tr><td>US<\/td><td>United States<\/td><\/tr><tr><td>CA<\/td><td>Canada<\/td><\/tr><tr><td>MX<\/td><td>Mexico<\/td><\/tr><tr><td>BR<\/td><td>Brazil<\/td><\/tr><tr><td>UK<\/td><td>United Kingdom<\/td><\/tr><tr><td>DE<\/td><td>Germany<\/td><\/tr><tr><td>FR<\/td><td>France<\/td><\/tr><tr><td>ES<\/td><td>Spain<\/td><\/tr><tr><td>IT<\/td><td>Italy<\/td><\/tr><tr><td>IN<\/td><td>India<\/td><\/tr><tr><td>AE<\/td><td>United Arab Emirates<\/td><\/tr><tr><td>SA<\/td><td>Saudi Arabia<\/td><\/tr><tr><td>NL<\/td><td>Netherlands<\/td><\/tr><tr><td>PL<\/td><td>Poland<\/td><\/tr><tr><td>BE<\/td><td>Belgium<\/td><\/tr><tr><td>SE<\/td><td>Sweden<\/td><\/tr><tr><td>TR<\/td><td>Turkey<\/td><\/tr><tr><td>EG<\/td><td>Egypt<\/td><\/tr><tr><td>JP<\/td><td>Japan<\/td><\/tr><tr><td>AU<\/td><td>Australia<\/td><\/tr><tr><td>SG<\/td><td>Singapore<\/td><\/tr><\/tbody><\/table>\",\n",
              "type": "string"
            },
            "type": "object",
            "example": {
              "UK": "phone",
              "US": "shoes"
            }
          }
        }
      },
      "SponsoredProductsGetTargetPromotionGroupsRecommendationsResponseContent": {
        "type": "object",
        "properties": {
          "totalResults": {
            "description": "Total number of records available",
            "type": "integer"
          },
          "nextToken": {
            "description": "Token for fetching the next page",
            "type": "string"
          },
          "targets": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "List of optimized targets for the request, as recommended by Amazon heuristics",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsRecommendedTarget"
            }
          }
        },
        "required": [
          "targets",
          "totalResults"
        ]
      },
      "SponsoredProductsSchemaValidationExceptionResponseContent": {
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsInvalidArgumentErrorCode"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "InternalServerException": {
        "description": "Returns information about an InternalServerException.",
        "type": "object",
        "properties": {
          "code": {
            "description": "The HTTP status code of the response.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        }
      },
      "AsinsBasedRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RecommendationOptions"
          }
        ],
        "properties": {
          "biddingStrategy": {
            "default": "LEGACY_FOR_SALES",
            "description": "The bid recommendations returned will depend on the bidding strategy. <br> LEGACY_FOR_SALES - Dynamic Bids (Down only) <br> AUTO_FOR_SALES - Dynamic Bids (Up or down) <br> MANUAL - Fixed Bids",
            "type": "string",
            "enum": [
              "LEGACY_FOR_SALES",
              "AUTO_FOR_SALES",
              "MANUAL",
              "RULE_BASED"
            ]
          },
          "recommendationType": {
            "description": "The recommendationType to retrieve recommended keyword targets for a list of ASINs.",
            "type": "string",
            "enum": [
              "KEYWORDS_FOR_ASINS"
            ]
          },
          "bidsEnabled": {
            "default": "true",
            "description": "Set this parameter to false if you do not want to retrieve bid suggestions for your keyword targets. Defaults to true.",
            "type": "boolean"
          }
        }
      },
      "SponsoredProductsListSponsoredProductsDraftKeywordsRequestContent": {
        "type": "object",
        "properties": {
          "campaignIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsReducedObjectIdFilter"
          },
          "maxResults": {
            "format": "int32",
            "description": "Number of records to include in the paginated response. Defaults to max page size for given API",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          },
          "adGroupIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsReducedObjectIdFilter"
          },
          "includeExtendedDataFields": {
            "description": "Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus",
            "type": "boolean"
          },
          "locale": {
            "description": "Restricts results to draft keywords associated with locale",
            "type": "string"
          },
          "keywordTextFilter": {
            "$ref": "#/components/schemas/SponsoredProductsKeywordTextFilter"
          },
          "keywordIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          },
          "matchTypeFilter": {
            "description": "Only the draft keyword with match type that is in this list will be listed",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsMatchType"
            }
          }
        }
      },
      "AdGroupThemeBasedBidRecommendationRequestV5": {
        "type": "object",
        "properties": {
          "targetingExpressions": {
            "$ref": "#/components/schemas/TargetingExpressionListV4"
          },
          "campaignId": {
            "description": "The campaign identifier.",
            "type": "string"
          },
          "recommendationType": {
            "description": "The bid recommendation type.",
            "type": "string",
            "enum": [
              "BIDS_FOR_EXISTING_AD_GROUP"
            ]
          },
          "includeAnalysis": {
            "default": "false",
            "description": "Flag to include new bid analyzer data.",
            "type": "boolean"
          },
          "adGroupId": {
            "description": "The ad group identifier.",
            "type": "string"
          }
        },
        "required": [
          "recommendationType",
          "targetingExpressions",
          "campaignId",
          "adGroupId"
        ],
        "example": {
          "targetingExpressions": [
            {
              "type": "CLOSE_MATCH"
            },
            {
              "type": "LOOSE_MATCH"
            },
            {
              "type": "SUBSTITUTES"
            },
            {
              "type": "COMPLEMENTS"
            }
          ],
          "campaignId": "ABCD1234",
          "recommendationType": "BIDS_FOR_EXISTING_AD_GROUP",
          "includeAnalysis": "true",
          "adGroupId": "EFGH5678"
        }
      },
      "AdGroupThemeBasedBidRecommendationRequestV4": {
        "type": "object",
        "properties": {
          "targetingExpressions": {
            "$ref": "#/components/schemas/TargetingExpressionListV4"
          },
          "campaignId": {
            "description": "The campaign identifier.",
            "type": "string"
          },
          "recommendationType": {
            "description": "The bid recommendation type.",
            "type": "string",
            "enum": [
              "BIDS_FOR_EXISTING_AD_GROUP"
            ]
          },
          "adGroupId": {
            "description": "The ad group identifier.",
            "type": "string"
          }
        },
        "required": [
          "recommendationType",
          "targetingExpressions",
          "campaignId",
          "adGroupId"
        ],
        "example": {
          "targetingExpressions": [
            {
              "type": "CLOSE_MATCH"
            },
            {
              "type": "LOOSE_MATCH"
            },
            {
              "type": "SUBSTITUTES"
            },
            {
              "type": "COMPLEMENTS"
            }
          ],
          "campaignId": "ABCD1234",
          "recommendationType": "BIDS_FOR_EXISTING_AD_GROUP",
          "adGroupId": "EFGH5678"
        }
      },
      "SponsoredProductsUpdateGlobalTargetingClause": {
        "type": "object",
        "properties": {
          "expression": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "The targeting expression.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsGlobalTargetingExpressionPredicate"
            }
          },
          "targetId": {
            "description": "The target identifier",
            "type": "string"
          },
          "name": {
            "description": "Name for the targeting clause",
            "type": "string"
          },
          "expressionType": {
            "$ref": "#/components/schemas/SponsoredProductsExpressionTypeWithoutOther"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateGlobalEntityState"
          },
          "bid": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalBid"
          }
        },
        "required": [
          "targetId"
        ]
      },
      "SponsoredProductsListMatchedAdGroupsRequestContent": {
        "type": "object",
        "properties": {
          "adIds": {
            "minItems": 1,
            "maxItems": 1000,
            "description": "List of ad Ids for ASIN/SKU matches.",
            "type": "array",
            "items": {
              "description": "Entity object identifier",
              "type": "string"
            }
          },
          "maxResults": {
            "default": 1000,
            "format": "int32",
            "description": "The maximum number of results requested.",
            "maximum": 1000,
            "type": "integer",
            "minimum": 1
          },
          "nextToken": {
            "description": "Token value allowing to navigate to the next or previous response page",
            "type": "string"
          },
          "adGroupId": {
            "description": "The id of an adGroup. ASIN/SKU match will be based on all the ads this adGroup id contains if adIds are not provided.",
            "type": "string"
          }
        }
      },
      "GlobalAdGroup": {
        "properties": {
          "targetingExpressions": {
            "minItems": 1,
            "maxItems": 100,
            "description": "The list of targeting expressions. Maximum of 100 per request.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GlobalTargetingExpression"
            }
          },
          "asins": {
            "minItems": 1,
            "maxItems": 50,
            "description": "The list of ad ASINs in ad group.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CountryAsinsMap"
            }
          },
          "adGroupId": {
            "description": "The ad group identifier.",
            "type": "string"
          }
        },
        "required": [
          "targetingExpressions",
          "asins"
        ]
      },
      "SponsoredProductsMarketplaceAdGroupServingStatus": {
        "type": "object",
        "properties": {
          "statusReasons": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsGlobalAdGroupMarketplaceServingReason"
            }
          },
          "marketplace": {
            "$ref": "#/components/schemas/SponsoredProductsMarketplace"
          },
          "servingStatus": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalAdGroupMarketplaceServingStatus"
          }
        },
        "required": [
          "servingStatus"
        ]
      },
      "OptimizationRulesAPISwaggerRuleRecurrenceType": {
        "description": "The frequency of the optimization rule application.",
        "type": "string",
        "enum": [
          "DAILY",
          "WEEKLY"
        ]
      },
      "TargetingExpression": {
        "description": "The targeting expression. The `type` property specifies the targeting option. Use `CLOSE_MATCH` to match your auto targeting ads closely to the specified value. Use `LOOSE_MATCH` to match your auto targeting ads broadly to the specified value. Use `SUBSTITUTES` to display your auto targeting ads along with substitutable products. Use `COMPLEMENTS` to display your auto targeting ads along with affiliated products. Use `KEYWORD_BROAD_MATCH` to broadly match your keyword targeting ads with search queries. Use `KEYWORD_EXACT_MATCH` to exactly match your keyword targeting ads with search queries. Use `KEYWORD_PHRASE_MATCH` to match your keyword targeting ads with search phrases. your keyword targeting ads with search phrases.",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "CLOSE_MATCH",
              "LOOSE_MATCH",
              "SUBSTITUTES",
              "COMPLEMENTS",
              "KEYWORD_BROAD_MATCH",
              "KEYWORD_EXACT_MATCH",
              "KEYWORD_PHRASE_MATCH"
            ]
          },
          "value": {
            "description": "The targeting expression value.",
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "example": {
          "type": "CLOSE_MATCH"
        }
      },
      "CreateSPCampaignOptimizationRulesRequest": {
        "type": "object",
        "properties": {
          "recurrence": {
            "$ref": "#/components/schemas/RecurrenceType"
          },
          "ruleAction": {
            "$ref": "#/components/schemas/RuleAction"
          },
          "ruleCondition": {
            "$ref": "#/components/schemas/RuleConditionList"
          },
          "ruleType": {
            "$ref": "#/components/schemas/RuleType"
          },
          "ruleName": {
            "$ref": "#/components/schemas/RuleName"
          },
          "campaignIds": {
            "maxItems": 20,
            "description": "A list of campaign ids",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuleCampaignId"
            }
          }
        },
        "required": [
          "ruleType",
          "recurrence",
          "ruleCondition",
          "ruleAction",
          "campaignIds"
        ],
        "example": {
          "recurrence": "DAILY",
          "ruleAction": "ADOPT",
          "ruleCondition": [
            {
              "metricName": "ROAS",
              "comparisonOperator": "GREATER_THAN",
              "threshold": "4"
            }
          ],
          "ruleType": "BID",
          "ruleName": "RuleROAS4",
          "campaignIds": [
            "123784",
            "1223785"
          ]
        }
      },
      "SponsoredProductsQueryTermMatchType": {
        "description": "Match type for query filters.\n| Value |  Description |\n|-----------|------------|\n| `BROAD_MATCH` | Match if the queried value contains the filter value (substring matching). Note: If queryTermMatchType is set to BROAD_MATCH, only matches for the first query included will be returned. |\n| `EXACT_MATCH` | Match if the queried value is exactly equivalent to the filter value. |",
        "type": "string",
        "enum": [
          "BROAD_MATCH",
          "EXACT_MATCH"
        ]
      },
      "SponsoredProductsUnauthorizedExceptionResponseContent": {
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsUnauthorizedErrorCode"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "Clicks": {
        "description": "Clicks benchmark.",
        "properties": {
          "lower": {
            "description": "lower bound.",
            "type": "integer"
          },
          "upper": {
            "description": "upper bound.",
            "type": "integer"
          }
        }
      },
      "SponsoredProductsGlobalTargetingClauseSuccessResponseItem": {
        "type": "object",
        "properties": {
          "targetingClause": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalTargetingClause"
          },
          "targetId": {
            "description": "the targetingClause ID",
            "type": "string"
          },
          "index": {
            "format": "int32",
            "description": "the index of the targetingClause in the array from the request body",
            "type": "integer",
            "minimum": 0
          }
        },
        "required": [
          "index"
        ]
      },
      "SponsoredProductsDeleteSponsoredProductsDraftKeywordsRequestContent": {
        "type": "object",
        "properties": {
          "keywordIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          }
        },
        "required": [
          "keywordIdFilter"
        ]
      },
      "SponsoredProductsDraftAdGroupMutationErrorSelector": {
        "type": "object",
        "properties": {
          "entityNotFoundError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityNotFoundError"
          },
          "entityStateError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityStateError"
          },
          "missingValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMissingValueError"
          },
          "biddingError": {
            "$ref": "#/components/schemas/SponsoredProductsBiddingError"
          },
          "malformedValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMalformedValueError"
          },
          "duplicateValueError": {
            "$ref": "#/components/schemas/SponsoredProductsDuplicateValueError"
          },
          "billingError": {
            "$ref": "#/components/schemas/SponsoredProductsBillingError"
          },
          "entityQuotaError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityQuotaError"
          },
          "internalServerError": {
            "$ref": "#/components/schemas/SponsoredProductsInternalServerError"
          },
          "rangeError": {
            "$ref": "#/components/schemas/SponsoredProductsRangeError"
          },
          "otherError": {
            "$ref": "#/components/schemas/SponsoredProductsOtherError"
          },
          "throttledError": {
            "$ref": "#/components/schemas/SponsoredProductsThrottledError"
          }
        }
      },
      "SponsoredProductsCreateGlobalCampaign": {
        "type": "object",
        "properties": {
          "endDate": {
            "format": "date",
            "description": "The format of the date is YYYY-MM-DD.",
            "type": "string"
          },
          "name": {
            "description": "The name of the campaign.",
            "type": "string"
          },
          "targetingType": {
            "$ref": "#/components/schemas/SponsoredProductsTargetingType"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateGlobalEntityState"
          },
          "dynamicBidding": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateDynamicBidding"
          },
          "startDate": {
            "format": "date",
            "description": "The format of the date is YYYY-MM-DD.",
            "type": "string"
          },
          "budget": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalBudget"
          },
          "tags": {
            "$ref": "#/components/schemas/SponsoredProductsTags"
          }
        },
        "required": [
          "budget",
          "name",
          "state",
          "targetingType"
        ]
      },
      "SponsoredProductsDraftAdGroupExtendedData": {
        "type": "object",
        "properties": {
          "lastUpdateDateTime": {
            "format": "date-time",
            "description": "Last updated date in ISO 8601.",
            "type": "string"
          },
          "servingStatus": {
            "$ref": "#/components/schemas/SponsoredProductsAdGroupServingStatus"
          },
          "creationDateTime": {
            "format": "date-time",
            "description": "Creation date in ISO 8601.",
            "type": "string"
          }
        }
      },
      "OptimizationRulesAPISwaggerAssociateOptimizationRulesToCampaignRequest": {
        "description": "Request body for create campaign to optimization rules association.",
        "type": "object",
        "properties": {
          "optimizationRuleIds": {
            "minItems": 1,
            "maxItems": 25,
            "description": "An array of rule identifiers.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "7bf484ff-381c-4703-82ec-66b9eb732705",
              "ed1d58dd-662b-4639-9ee2-85ff1386b946",
              "750fe03c-9884-4a72-a540-3b87521018d9"
            ]
          }
        },
        "required": [
          "optimizationRuleIds"
        ]
      },
      "SponsoredProductsDraftNegativeKeywordExtendedData": {
        "type": "object",
        "properties": {
          "lastUpdateDateTime": {
            "format": "date-time",
            "description": "Last updated date in ISO 8601.",
            "type": "string"
          },
          "servingStatus": {
            "$ref": "#/components/schemas/SponsoredProductsKeywordServingStatus"
          },
          "creationDateTime": {
            "format": "date-time",
            "description": "Creation date in ISO 8601.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsMarketplace": {
        "type": "string",
        "enum": [
          "US",
          "CA",
          "MX",
          "BR",
          "UK",
          "DE",
          "FR",
          "ES",
          "IT",
          "IN",
          "AE",
          "SA",
          "NL",
          "PL",
          "SE",
          "TR",
          "EG",
          "JP",
          "AU",
          "SG"
        ]
      },
      "SponsoredProductsBulkProductAdOperationResponse": {
        "type": "object",
        "properties": {
          "success": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsProductAdSuccessResponseItem"
            }
          },
          "error": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsProductAdFailureResponseItem"
            }
          }
        }
      },
      "SponsoredProductsGlobalProductAd": {
        "type": "object",
        "properties": {
          "adId": {
            "description": "The product ad identifier.",
            "type": "string"
          },
          "campaignId": {
            "description": "The campaign identifier.",
            "type": "string"
          },
          "customText": {
            "description": "The custom text that is associated with this ad. Defined for custom text ads only.",
            "type": "string"
          },
          "name": {
            "description": "Name for the product Ad",
            "type": "string"
          },
          "asin": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalProductIdentifiers"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalEntityState"
          },
          "sku": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalProductIdentifiers"
          },
          "adGroupId": {
            "description": "The ad group identifier.",
            "type": "string"
          },
          "extendedData": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalProductAdExtendedData"
          }
        },
        "required": [
          "adGroupId",
          "adId",
          "campaignId",
          "state"
        ]
      },
      "SponsoredProductsDeleteSponsoredProductsTargetingClausesResponseContent": {
        "type": "object",
        "properties": {
          "targetingClauses": {
            "$ref": "#/components/schemas/SponsoredProductsBulkTargetingClauseOperationResponse"
          }
        },
        "required": [
          "targetingClauses"
        ]
      },
      "SponsoredProductsTargetingClauseExtendedData": {
        "type": "object",
        "properties": {
          "lastUpdateDateTime": {
            "format": "date-time",
            "description": "Last updated date in ISO 8601.",
            "type": "string"
          },
          "servingStatus": {
            "$ref": "#/components/schemas/SponsoredProductsKeywordServingStatus"
          },
          "servingStatusDetails": {
            "description": "The serving status reasons of the TargetingClause",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsKeywordServingStatusDetail"
            }
          },
          "creationDateTime": {
            "format": "date-time",
            "description": "Creation date in ISO 8601.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsApplicableMarketplacesError": {
        "description": "Errors related to ad eligibility",
        "type": "object",
        "properties": {
          "reason": {
            "$ref": "#/components/schemas/SponsoredProductsApplicableMarketplacesErrorReason"
          },
          "cause": {
            "$ref": "#/components/schemas/SponsoredProductsErrorCause"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          }
        },
        "required": [
          "message",
          "reason"
        ]
      },
      "SponsoredProductsInternalServerExceptionCode": {
        "type": "string",
        "enum": [
          "INTERNAL_SERVER_EXCEPTION"
        ]
      },
      "SponsoredProductsDeleteSponsoredProductsDraftCampaignNegativeKeywordsRequestContent": {
        "type": "object",
        "properties": {
          "campaignNegativeKeywordIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          }
        },
        "required": [
          "campaignNegativeKeywordIdFilter"
        ]
      },
      "SponsoredProductsGlobalCampaignMarketplaceServingReason": {
        "type": "string",
        "enum": [
          "CAMPAIGN_STATUS_ENABLED_DETAIL",
          "CAMPAIGN_PAUSED_DETAIL",
          "CAMPAIGN_ARCHIVED_DETAIL",
          "PENDING_REVIEW_DETAIL",
          "REJECTED_DETAIL",
          "PENDING_START_DATE_DETAIL",
          "ENDED_DETAIL",
          "CAMPAIGN_OUT_OF_BUDGET_DETAIL",
          "CAMPAIGN_INCOMPLETE_DETAIL",
          "ADVERTISER_POLICING_SUSPENDED_DETAIL",
          "ADVERTISER_POLICING_PENDING_REVIEW_DETAIL",
          "ADVERTISER_ARCHIVED_DETAIL",
          "ADVERTISER_PAUSED_DETAIL",
          "ADVERTISER_OUT_OF_BUDGET_DETAIL",
          "ADVERTISER_PAYMENT_FAILURE_DETAIL"
        ]
      },
      "SponsoredProductsCampaignNegativeTargetsMutationErrorSelector": {
        "type": "object",
        "properties": {
          "entityStateError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityStateError"
          },
          "missingValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMissingValueError"
          },
          "duplicateValueError": {
            "$ref": "#/components/schemas/SponsoredProductsDuplicateValueError"
          },
          "rangeError": {
            "$ref": "#/components/schemas/SponsoredProductsRangeError"
          },
          "parentEntityError": {
            "$ref": "#/components/schemas/SponsoredProductsParentEntityError"
          },
          "otherError": {
            "$ref": "#/components/schemas/SponsoredProductsOtherError"
          },
          "throttledError": {
            "$ref": "#/components/schemas/SponsoredProductsThrottledError"
          },
          "entityNotFoundError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityNotFoundError"
          },
          "targetingClauseSetupError": {
            "$ref": "#/components/schemas/SponsoredProductsTargetingClauseSetupError"
          },
          "malformedValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMalformedValueError"
          },
          "billingError": {
            "$ref": "#/components/schemas/SponsoredProductsBillingError"
          },
          "entityQuotaError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityQuotaError"
          },
          "internalServerError": {
            "$ref": "#/components/schemas/SponsoredProductsInternalServerError"
          }
        }
      },
      "SBBudgetRule": {
        "type": "object",
        "required": [
          "ruleId"
        ],
        "properties": {
          "ruleState": {
            "$ref": "#/components/schemas/state"
          },
          "lastUpdatedDate": {
            "format": "int64",
            "description": "Epoch time of budget rule update. Read-only.",
            "type": "number"
          },
          "createdDate": {
            "format": "int64",
            "description": "Epoch time of budget rule creation. Read-only.",
            "type": "number"
          },
          "ruleDetails": {
            "$ref": "#/components/schemas/SBBudgetRuleDetails"
          },
          "ruleId": {
            "description": "The budget rule identifier.",
            "type": "string"
          },
          "ruleStatus": {
            "description": "The budget rule status. Read-only.",
            "type": "string"
          }
        }
      },
      "Brand": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of brand. This field is OPTIONAL if the Brand object is being used as an input.",
            "type": "string"
          },
          "id": {
            "description": "Id of brand. This field is REQUIRED if the Brand object is being used as an input. Use the GetRefinementsForCategory to retrieve Brand Node IDs.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsDraftTargetingClause": {
        "type": "object",
        "properties": {
          "expression": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "The targeting expression.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsTargetingExpressionPredicate"
            }
          },
          "targetId": {
            "description": "The target identifier",
            "type": "string"
          },
          "resolvedExpression": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "The resolved targeting expression.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsTargetingExpressionPredicate"
            }
          },
          "campaignId": {
            "description": "The identifier of the campaign to which this target is associated.",
            "type": "string"
          },
          "expressionType": {
            "$ref": "#/components/schemas/SponsoredProductsExpressionType"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsEntityState"
          },
          "bid": {
            "nullable": true,
            "format": "double",
            "description": "The bid for ads sourced using the target. Targets that do not have bid values in listTargetingClauses will inherit the defaultBid from the adGroup level. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).",
            "type": "number"
          },
          "adGroupId": {
            "description": "The identifier of the ad group to which this target is associated.",
            "type": "string"
          },
          "extendedData": {
            "$ref": "#/components/schemas/SponsoredProductsDraftTargetingClauseExtendedData"
          }
        },
        "required": [
          "adGroupId",
          "campaignId",
          "expression",
          "expressionType",
          "resolvedExpression",
          "targetId"
        ]
      },
      "GetRMSBudgetRuleResponse": {
        "type": "object",
        "properties": {
          "budgetRule": {
            "$ref": "#/components/schemas/RMSBudgetRule"
          }
        }
      },
      "SponsoredProductsBulkKeywordOperationResponse": {
        "type": "object",
        "properties": {
          "success": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsKeywordSuccessResponseItem"
            }
          },
          "error": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsKeywordFailureResponseItem"
            }
          }
        }
      },
      "SponsoredProductsCampaignNegativeKeywordAccessError": {
        "type": "object",
        "properties": {
          "errorType": {
            "description": "The type of the error",
            "type": "string"
          },
          "errorValue": {
            "$ref": "#/components/schemas/SponsoredProductsCampaignNegativeKeywordAccessErrorSelector"
          }
        },
        "required": [
          "errorType",
          "errorValue"
        ]
      },
      "RuleState": {
        "description": "The campaign optimization rule state.",
        "type": "string",
        "enum": [
          "ENABLED",
          "DISABLED"
        ]
      },
      "ValidationException": {
        "description": "Returns information about a ValidationException.",
        "type": "object",
        "properties": {
          "code": {
            "description": "The HTTP status code of the response.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        }
      },
      "GetSBBudgetRulesForAdvertiserResponse": {
        "type": "object",
        "properties": {
          "budgetRulesForAdvertiserResponse": {
            "minItems": 0,
            "maxItems": 30,
            "description": "A list of rules created by the advertiser.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SBBudgetRule"
            }
          },
          "nextToken": {
            "description": "To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsCreateSponsoredProductsNegativeTargetingClausesResponseContent": {
        "type": "object",
        "properties": {
          "negativeTargetingClauses": {
            "$ref": "#/components/schemas/SponsoredProductsBulkNegativeTargetingClauseOperationResponse"
          }
        },
        "required": [
          "negativeTargetingClauses"
        ]
      },
      "SponsoredProductsUpdateSponsoredProductsDraftCampaignsRequestContent": {
        "type": "object",
        "properties": {
          "campaigns": {
            "minItems": 0,
            "maxItems": 100,
            "description": "An array of drafts with updated values.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsUpdateDraftCampaign"
            }
          }
        },
        "required": [
          "campaigns"
        ]
      },
      "SponsoredProductsCampaignNegativeTargetsMutationExceptionResponseContent": {
        "description": "Exception resulting in mutating campaign management entities",
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsInvalidArgumentErrorCode"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCampaignNegativeTargetsMutationError"
            }
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "SponsoredProductsTargetPromotionGroup": {
        "description": "A Target Promotion Group that groups an Auto-Targeting Campaign/AdGroup with a Manual-Targeting Keyword Campaign/AdGroup, and a\nManual-Targeting Product Campaign/AdGroup",
        "type": "object",
        "properties": {
          "productCampaignAdGroupIds": {
            "minItems": 1,
            "maxItems": 1,
            "description": "The Ids of the manual product-targeting AdGroups associated with the target promotion group",
            "type": "array",
            "items": {
              "description": "Entity object identifier",
              "type": "string"
            }
          },
          "targetPromotionGroupId": {
            "description": "The id of the target promotion group.",
            "type": "string"
          },
          "autoTargetingCampaignAdIds": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "The list of Product Ad Ids in the Auto-Targeting campaign's Ad Group that's tied to the Target Promotion Group.",
            "type": "array",
            "items": {
              "description": "Entity object identifier",
              "type": "string"
            }
          },
          "keywordCampaignAdGroupIds": {
            "minItems": 1,
            "maxItems": 1,
            "description": "The Ids of the manual keyword-targeting AdGroups associated with the target promotion group",
            "type": "array",
            "items": {
              "description": "Entity object identifier",
              "type": "string"
            }
          },
          "state": {
            "description": "The state of the target promotion group.",
            "type": "string"
          },
          "targetPromotionGroupName": {
            "description": "The name of the target promotion group.",
            "type": "string"
          },
          "autoTargetingCampaignAdGroupId": {
            "description": "The Id of the auto-targeting AdGroup associated with the target promotion group",
            "type": "string"
          }
        }
      },
      "SponsoredProductsCreateTargetPromotionGroupTargetsInternalResponseContent": {
        "description": "Response object for creating target promotion group targets.",
        "type": "object",
        "properties": {
          "success": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "List of successfully created targets.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCreateTargetPromotionGroupTargetsSuccessResponseItem"
            }
          },
          "errors": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "List of targets that failed to create.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCreateTargetPromotionGroupTargetsFailureResponseItem"
            }
          }
        }
      },
      "SponsoredProductsBudgetError": {
        "type": "object",
        "properties": {
          "reason": {
            "$ref": "#/components/schemas/SponsoredProductsBudgetErrorReason"
          },
          "cause": {
            "$ref": "#/components/schemas/SponsoredProductsErrorCause"
          },
          "upperLimit": {
            "type": "string"
          },
          "lowerLimit": {
            "type": "string"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          }
        },
        "required": [
          "message",
          "reason"
        ]
      },
      "SponsoredProductsAllTargets": {
        "description": "Targets allow you to target or exclude criteria at the campaign or ad group level, and to set bids for specific criteria at the ad group level.",
        "type": "object",
        "properties": {
          "targetId": {
            "description": "The identifier for this target.",
            "type": "string"
          },
          "campaignId": {
            "description": "The campaign to which the target is associated.",
            "type": "string"
          },
          "targetType": {
            "$ref": "#/components/schemas/SponsoredProductsTargetType"
          },
          "adGroupId": {
            "description": "The ad group to which the target is associated.",
            "type": "string"
          },
          "deliveryReasons": {
            "description": "Provides a description for the delivery status.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDeliveryReasons"
            }
          },
          "negative": {
            "description": "Whether to target (false) or exclude (true) the given target",
            "type": "boolean"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsState"
          },
          "lastUpdatedDateTime": {
            "description": "ISO 8601 Date-Time when this target was last updated.",
            "type": "string"
          },
          "bid": {
            "$ref": "#/components/schemas/SponsoredProductsBid"
          },
          "targetDetails": {
            "$ref": "#/components/schemas/SponsoredProductsTargetDetails"
          },
          "targetLevel": {
            "$ref": "#/components/schemas/SponsoredProductsTargetLevel"
          },
          "deliveryStatus": {
            "$ref": "#/components/schemas/SponsoredProductsDeliveryStatus"
          },
          "creationDateTime": {
            "description": "ISO 8601 Date-Time when this target was created.",
            "type": "string"
          }
        },
        "required": [
          "negative",
          "state",
          "targetDetails",
          "targetId",
          "targetLevel",
          "targetType"
        ]
      },
      "SponsoredProductsCampaignMutationSuccessResponseItem": {
        "type": "object",
        "properties": {
          "campaignId": {
            "description": "the campaign ID",
            "type": "string"
          },
          "index": {
            "format": "int32",
            "description": "the index of the campaign in the array from the request body",
            "type": "integer",
            "minimum": 0
          },
          "campaign": {
            "$ref": "#/components/schemas/SponsoredProductsCampaign"
          }
        },
        "required": [
          "index"
        ]
      },
      "SponsoredProductsCreateSponsoredProductsDraftProductAdsResponseContent": {
        "type": "object",
        "properties": {
          "draftProductAds": {
            "$ref": "#/components/schemas/SponsoredProductsBulkDraftProductAdOperationResponse"
          }
        },
        "required": [
          "draftProductAds"
        ]
      },
      "SponsoredProductsDraftCampaignMutationError": {
        "type": "object",
        "properties": {
          "errorType": {
            "description": "The type of the error",
            "type": "string"
          },
          "errorValue": {
            "$ref": "#/components/schemas/SponsoredProductsDraftCampaignMutationErrorSelector"
          }
        },
        "required": [
          "errorType",
          "errorValue"
        ]
      },
      "OptimizationRulesAPISwaggerRuleActionOperator": {
        "description": "The action operation for the rule.",
        "type": "string",
        "enum": [
          "INCREMENT"
        ]
      },
      "SponsoredProductsUpdateSponsoredProductsProductAdsResponseContent": {
        "type": "object",
        "properties": {
          "productAds": {
            "$ref": "#/components/schemas/SponsoredProductsBulkProductAdOperationResponse"
          }
        },
        "required": [
          "productAds"
        ]
      },
      "SponsoredProductsProductAdAccessExceptionResponseContent": {
        "description": "Exception resulting in accessing campaign management entities",
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsInvalidArgumentErrorCode"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsProductAdAccessError"
            }
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "SponsoredProductsGlobalProductAdExtendedData": {
        "type": "object",
        "properties": {
          "servingStatus": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalProductAdServingStatus"
          }
        }
      },
      "UpdateBudgetRulesResponse": {
        "type": "object",
        "properties": {
          "responses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BudgetRuleResponse"
            }
          }
        }
      },
      "SponsoredProductsAdGroupMutationError": {
        "type": "object",
        "properties": {
          "errorType": {
            "description": "The type of the error",
            "type": "string"
          },
          "errorValue": {
            "$ref": "#/components/schemas/SponsoredProductsAdGroupMutationErrorSelector"
          }
        },
        "required": [
          "errorType",
          "errorValue"
        ]
      },
      "SponsoredProductsAdGroupServingStatus": {
        "type": "string",
        "enum": [
          "AD_GROUP_STATUS_ENABLED",
          "AD_GROUP_PAUSED",
          "AD_GROUP_ARCHIVED",
          "AD_GROUP_INCOMPLETE",
          "AD_GROUP_POLICING_PENDING_REVIEW",
          "AD_GROUP_POLICING_CREATIVE_REJECTED",
          "AD_GROUP_LOW_BID",
          "CAMPAIGN_STATUS_ENABLED",
          "CAMPAIGN_PAUSED",
          "CAMPAIGN_ARCHIVED",
          "PENDING_REVIEW",
          "REJECTED",
          "PENDING_START_DATE",
          "ENDED",
          "CAMPAIGN_OUT_OF_BUDGET",
          "CAMPAIGN_INCOMPLETE",
          "PORTFOLIO_STATUS_ENABLED",
          "PORTFOLIO_PAUSED",
          "PORTFOLIO_ARCHIVED",
          "PORTFOLIO_OUT_OF_BUDGET",
          "PORTFOLIO_PENDING_START_DATE",
          "PORTFOLIO_ENDED",
          "ADVERTISER_POLICING_SUSPENDED",
          "ADVERTISER_POLICING_PENDING_REVIEW",
          "ADVERTISER_ARCHIVED",
          "ADVERTISER_PAUSED",
          "ADVERTISER_OUT_OF_BUDGET",
          "ADVERTISER_PAYMENT_FAILURE",
          "OTHER"
        ]
      },
      "SponsoredProductsDraftNegativeKeywordFailureResponseItem": {
        "type": "object",
        "properties": {
          "index": {
            "format": "int32",
            "description": "the index of the draftNegativeKeyword in the array from the request body",
            "type": "integer",
            "minimum": 0
          },
          "errors": {
            "description": "A list of validation errors",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftNegativeKeywordMutationError"
            }
          }
        },
        "required": [
          "index"
        ]
      },
      "SponsoredProductsCreateDraftProductAd": {
        "type": "object",
        "properties": {
          "globalStoreSetting": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalStoreSetting"
          },
          "campaignId": {
            "description": "The campaign identifier.",
            "type": "string"
          },
          "customText": {
            "minLength": 0,
            "description": "The custom text to use for creating a custom text ad for the associated ASIN. Defined only for KDP Authors and Book Vendors in US marketplace.",
            "type": "string",
            "maxLength": 5000
          },
          "asin": {
            "description": "The ASIN associated with the product. Defined for vendors only.",
            "type": "string"
          },
          "sku": {
            "description": "The SKU associated with the product. Defined for seller accounts only.",
            "type": "string"
          },
          "adGroupId": {
            "description": "The ad group identifier.",
            "type": "string"
          }
        },
        "required": [
          "adGroupId",
          "campaignId"
        ]
      },
      "OptimizationRulesAPISwaggerRuleAssociationDefinition": {
        "type": "object",
        "properties": {
          "entityType": {
            "$ref": "#/components/schemas/OptimizationRulesAPISwaggerEntityType"
          },
          "entityId": {
            "description": "The identifier of an advertising entity. Its type is defined in the entityType field.",
            "type": "string"
          },
          "optimizationRuleId": {
            "description": "The rule identifier.",
            "type": "integer"
          }
        },
        "required": [
          "entityId",
          "entityType",
          "optimizationRuleId"
        ]
      },
      "SponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent": {
        "type": "object",
        "properties": {
          "negativeTargetingClauses": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "An array of negativeTargeting with updated values.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsUpdateNegativeTargetingClause"
            }
          }
        },
        "required": [
          "negativeTargetingClauses"
        ]
      },
      "SponsoredProductsOffAmazonBudgetControlStrategy": {
        "type": "string",
        "enum": [
          "MAXIMIZE_REACH",
          "MINIMIZE_SPEND"
        ]
      },
      "SPBudgetRulesRecommendationEvent": {
        "type": "object",
        "properties": {
          "eventId": {
            "description": "The event identifier.",
            "type": "string"
          },
          "endDate": {
            "description": "The end date in YYYYMMDD format.",
            "type": "string"
          },
          "suggestedBudgetIncreasePercent": {
            "description": "The suggested budget increase expressed as a percent.",
            "type": "number"
          },
          "eventName": {
            "description": "The event name.",
            "type": "string"
          },
          "startDate": {
            "description": "The start date in YYYYMMDD format.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsCreateExpressionType": {
        "type": "string",
        "enum": [
          "MANUAL"
        ]
      },
      "OptimizationRulesAPISwaggerRuleRecommendation": {
        "type": "object",
        "properties": {
          "ruleCategory": {
            "$ref": "#/components/schemas/OptimizationRulesAPISwaggerRuleCategory"
          },
          "campaignId": {
            "description": "Id of the campaign for which the rule is recommended",
            "type": "string"
          },
          "ruleSubCategory": {
            "$ref": "#/components/schemas/OptimizationRulesAPISwaggerRuleSubCategory"
          },
          "recommendation": {
            "$ref": "#/components/schemas/OptimizationRulesAPISwaggerOptimizationRuleWithoutRuleId"
          },
          "recommendationId": {
            "description": "Unique id for the recommendation.",
            "type": "string"
          },
          "optimizationRuleId": {
            "description": "Unique id for the rule if it already exists",
            "type": "string"
          },
          "recommendationReason": {
            "description": "Reason for recommendation.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsNegativeKeywordAccessError": {
        "type": "object",
        "properties": {
          "errorType": {
            "description": "The type of the error",
            "type": "string"
          },
          "errorValue": {
            "$ref": "#/components/schemas/SponsoredProductsNegativeKeywordAccessErrorSelector"
          }
        },
        "required": [
          "errorType",
          "errorValue"
        ]
      },
      "SponsoredProductsDeleteSponsoredProductsKeywordsResponseContent": {
        "type": "object",
        "properties": {
          "keywords": {
            "$ref": "#/components/schemas/SponsoredProductsBulkKeywordOperationResponse"
          }
        },
        "required": [
          "keywords"
        ]
      },
      "SponsoredProductsListSponsoredProductsDraftNegativeTargetingClausesRequestContent": {
        "type": "object",
        "properties": {
          "negativeTargetIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          },
          "campaignIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsReducedObjectIdFilter"
          },
          "maxResults": {
            "format": "int32",
            "description": "Number of records to include in the paginated response. Defaults to max page size for given API",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          },
          "asinFilter": {
            "$ref": "#/components/schemas/SponsoredProductsAsinFilter"
          },
          "adGroupIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsReducedObjectIdFilter"
          },
          "includeExtendedDataFields": {
            "description": "Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus",
            "type": "boolean"
          }
        }
      },
      "SponsoredProductsAsinFilter": {
        "type": "object",
        "properties": {
          "queryTermMatchType": {
            "$ref": "#/components/schemas/SponsoredProductsQueryTermMatchType"
          },
          "include": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SponsoredProductsCreateDraftCampaign": {
        "type": "object",
        "properties": {
          "portfolioId": {
            "description": "The identifier of an existing portfolio to which the draft is associated.",
            "type": "string"
          },
          "endDate": {
            "nullable": true,
            "format": "date",
            "description": "The format of the date is YYYY-MM-DD.",
            "type": "string"
          },
          "name": {
            "description": "The name of the DraftCampaign.",
            "type": "string"
          },
          "targetingType": {
            "$ref": "#/components/schemas/SponsoredProductsTargetingType"
          },
          "dynamicBidding": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateDraftCampaignDynamicBidding"
          },
          "startDate": {
            "format": "date",
            "description": "The format of the date is YYYY-MM-DD.",
            "type": "string"
          },
          "budget": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateDraftCampaignBudget"
          },
          "tags": {
            "$ref": "#/components/schemas/SponsoredProductsTags"
          }
        },
        "required": [
          "name",
          "targetingType"
        ]
      },
      "SponsoredProductsBadRequestResponseContent": {
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsErrorCode"
          },
          "message": {
            "type": "string"
          },
          "httpStatusCode": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "SponsoredProductsDraftCampaignDynamicBidding": {
        "type": "object",
        "properties": {
          "shopperCohortBidding": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftCampaignShopperCohortBidding"
            }
          },
          "placementBidding": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftCampaignPlacementBidding"
            }
          },
          "strategy": {
            "$ref": "#/components/schemas/SponsoredProductsBiddingStrategy"
          }
        },
        "required": [
          "strategy"
        ]
      },
      "SponsoredProductsGlobalCampaignNegativeKeywordExtendedData": {
        "type": "object",
        "properties": {
          "servingStatus": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalKeywordServingStatus"
          }
        }
      },
      "SponsoredProductsCreateSponsoredProductsGlobalAdGroupsRequestContent": {
        "type": "object",
        "properties": {
          "adGroups": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "An array of adGroups.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCreateGlobalAdGroup"
            }
          }
        },
        "required": [
          "adGroups"
        ]
      },
      "SponsoredProductsDeleteSponsoredProductsProductAdsResponseContent": {
        "type": "object",
        "properties": {
          "productAds": {
            "$ref": "#/components/schemas/SponsoredProductsBulkProductAdOperationResponse"
          }
        },
        "required": [
          "productAds"
        ]
      },
      "Values": {
        "description": "Metrics benchmark values.",
        "properties": {
          "conversions": {
            "$ref": "#/components/schemas/Conversions"
          },
          "clicks": {
            "$ref": "#/components/schemas/Clicks"
          },
          "impressions": {
            "$ref": "#/components/schemas/Impressions"
          }
        }
      },
      "SponsoredProductsGlobalCampaign": {
        "type": "object",
        "properties": {
          "endDate": {
            "format": "date",
            "description": "The format of the date is YYYY-MM-DD.",
            "type": "string"
          },
          "campaignId": {
            "description": "The identifier of the campaign.",
            "type": "string"
          },
          "applicableMarketplaces": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "description": "The name of the campaign.",
            "type": "string"
          },
          "targetingType": {
            "$ref": "#/components/schemas/SponsoredProductsTargetingType"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalEntityState"
          },
          "dynamicBidding": {
            "$ref": "#/components/schemas/SponsoredProductsDynamicBidding"
          },
          "startDate": {
            "format": "date",
            "description": "The format of the date is YYYY-MM-DD.",
            "type": "string"
          },
          "budget": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalBudget"
          },
          "tags": {
            "$ref": "#/components/schemas/SponsoredProductsTags"
          },
          "extendedData": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalCampaignExtendedData"
          }
        },
        "required": [
          "budget",
          "campaignId",
          "name",
          "state",
          "targetingType"
        ]
      },
      "CampaignOptimizationRuleError": {
        "description": "The Error Response Object.",
        "type": "object",
        "properties": {
          "code": {
            "description": "An enumerated error code for machine use.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsCreateSponsoredProductsGlobalCampaignsRequestContent": {
        "type": "object",
        "properties": {
          "campaigns": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "An array of campaigns.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCreateGlobalCampaign"
            }
          }
        },
        "required": [
          "campaigns"
        ]
      },
      "RangeMetricValue": {
        "description": "Describes lower and upper bounds of the range. <br> Note: This object is nullable",
        "type": "object",
        "properties": {
          "lower": {
            "type": "integer"
          },
          "upper": {
            "type": "integer"
          }
        }
      },
      "SponsoredProductsCampaignMutationError": {
        "type": "object",
        "properties": {
          "errorType": {
            "description": "The type of the error",
            "type": "string"
          },
          "errorValue": {
            "$ref": "#/components/schemas/SponsoredProductsCampaignMutationErrorSelector"
          }
        },
        "required": [
          "errorType",
          "errorValue"
        ]
      },
      "SponsoredProductsKeywordServingStatusDetail": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/SponsoredProductsKeywordServingStatusReason"
          },
          "helpUrl": {
            "description": "A URL with additional information about the status identifier.",
            "type": "string"
          },
          "message": {
            "description": "A human-readable description of the status identifier specified in the name field.",
            "type": "string"
          }
        }
      },
      "InitialBudgetRecommendationResponse": {
        "type": "object",
        "required": [
          "benchmark",
          "dailyBudget",
          "specialEvents"
        ],
        "properties": {
          "specialEvents": {
            "minItems": 0,
            "maxItems": 5,
            "description": "A list of special events around the start and end date of the campaign.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpecialEvent"
            }
          },
          "dailyBudget": {
            "description": "Recommended daily budget for the new campaign. Note: value -1 means we don\u2019t have enough information to provide a recommendation.",
            "type": "number"
          },
          "recommendationId": {
            "description": "Unique identifier for each recommendation.",
            "type": "string"
          },
          "benchmark": {
            "$ref": "#/components/schemas/Benchmark"
          }
        }
      },
      "SponsoredProductsKeywordFailureResponseItem": {
        "type": "object",
        "properties": {
          "index": {
            "format": "int32",
            "description": "the index of the keyword in the array from the request body",
            "type": "integer",
            "minimum": 0
          },
          "errors": {
            "description": "A list of validation errors",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsKeywordMutationError"
            }
          }
        },
        "required": [
          "index"
        ]
      },
      "GlobalProductRecommendationsByASIN": {
        "description": "Global Product recommendations supplemented with relevant information.",
        "type": "object",
        "properties": {
          "countryAdRecommendations": {
            "description": "A map containing recommended ASINs and their associated themes, grouped by country.",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/GlobalProductRecommendation"
              }
            },
            "type": "object"
          },
          "previousToken": {
            "description": "Optional parameter that links to the previous result set served. This parameter will be null on the first request.",
            "type": "string",
            "example": "TQ1MjAwNzI5NDE="
          },
          "nextToken": {
            "description": "An identifier to fetch next set of `GlobalProductRecommendation` records in the result set if available. This will be null when at the end of result set.",
            "type": "string",
            "example": "MTAxNTExOTQ1MjAwNzI5NDE="
          }
        }
      },
      "SponsoredProductsListSponsoredProductsGlobalProductAdsResponseContent": {
        "type": "object",
        "properties": {
          "totalResults": {
            "format": "int64",
            "description": "The total number of entities",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          },
          "productAds": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsGlobalProductAd"
            }
          }
        }
      },
      "SponsoredProductsBulkAdGroupOperationResponse": {
        "type": "object",
        "properties": {
          "success": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsAdGroupSuccessResponseItem"
            }
          },
          "error": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsAdGroupFailureResponseItem"
            }
          }
        }
      },
      "SponsoredProductsProductAdExtendedData": {
        "type": "object",
        "properties": {
          "lastUpdateDateTime": {
            "format": "date-time",
            "description": "Last updated date in ISO 8601.",
            "type": "string"
          },
          "servingStatus": {
            "$ref": "#/components/schemas/SponsoredProductsAdServingStatus"
          },
          "servingStatusDetails": {
            "description": "The serving status reasons of the Ad",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsAdServingStatusDetail"
            }
          },
          "creationDateTime": {
            "format": "date-time",
            "description": "Creation date in ISO 8601.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsExpressionType": {
        "type": "string",
        "enum": [
          "AUTO",
          "MANUAL",
          "OTHER"
        ]
      },
      "SponsoredProductsNegativeTargetingExpressionPredicate": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/SponsoredProductsNegativeTargetingExpressionPredicateType"
          },
          "value": {
            "description": "The expression value",
            "type": "string"
          }
        }
      },
      "SponsoredProductsTargetPromotionGroupNegativeTargetDetails": {
        "oneOf": [
          {
            "type": "object",
            "title": "success",
            "properties": {
              "success": {
                "$ref": "#/components/schemas/SponsoredProductsNegativeTargetSuccessItem"
              }
            },
            "required": [
              "success"
            ]
          },
          {
            "type": "object",
            "title": "error",
            "properties": {
              "error": {
                "$ref": "#/components/schemas/SponsoredProductsNegativeTargetErrorItem"
              }
            },
            "required": [
              "error"
            ]
          }
        ]
      },
      "SponsoredProductsCreateTargetPromotionGroupTargetsRequestContent": {
        "description": "Request object for creating target promotion group targets in a target promotion group.",
        "type": "object",
        "properties": {
          "targetPromotionGroupId": {
            "description": "The id of the target promotion group where the targets are being added.",
            "type": "string"
          },
          "targets": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "List of targets to be added to the target promotion group.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCreateTargetRequest"
            }
          }
        },
        "required": [
          "targetPromotionGroupId"
        ]
      },
      "InitialBudgetRecommendationRequest": {
        "type": "object",
        "required": [
          "adGroups",
          "bidding",
          "targetingType"
        ],
        "properties": {
          "bidding": {
            "$ref": "#/components/schemas/Bidding"
          },
          "adGroups": {
            "minItems": 1,
            "maxItems": 1,
            "description": "The ad group information for this new campaign.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdGroup"
            }
          },
          "endDate": {
            "description": "The end date of the campaign in YYYYMMDD format.",
            "type": "string"
          },
          "targetingType": {
            "description": "Specifies the targeting type.",
            "type": "string",
            "enum": [
              "manual",
              "auto"
            ]
          },
          "startDate": {
            "description": "The start date of the campaign in YYYYMMDD format.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsNegativeTargetingClause": {
        "type": "object",
        "properties": {
          "expression": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "The NegativeTargeting expression.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsNegativeTargetingExpressionPredicate"
            }
          },
          "targetId": {
            "description": "The target identifier",
            "type": "string"
          },
          "resolvedExpression": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "The resolved NegativeTargeting expression.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsNegativeTargetingExpressionPredicate"
            }
          },
          "campaignId": {
            "description": "The identifier of the campaign to which this target is associated.",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsEntityState"
          },
          "adGroupId": {
            "description": "The identifier of the ad group to which this target is associated.",
            "type": "string"
          },
          "extendedData": {
            "$ref": "#/components/schemas/SponsoredProductsNegativeTargetingClauseExtendedData"
          }
        },
        "required": [
          "adGroupId",
          "campaignId",
          "expression",
          "resolvedExpression",
          "state",
          "targetId"
        ]
      },
      "SponsoredProductsCreateDraftTargetingClause": {
        "type": "object",
        "properties": {
          "expression": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "The targeting expression.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsTargetingExpressionPredicateWithoutOther"
            }
          },
          "campaignId": {
            "description": "The identifier of the campaign to which this target is associated.",
            "type": "string"
          },
          "expressionType": {
            "$ref": "#/components/schemas/SponsoredProductsExpressionTypeWithoutOther"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsEntityState"
          },
          "bid": {
            "format": "double",
            "description": "The bid for ads sourced using the target. Targets that do not have bid values in listDraftTargetingClauses will inherit the defaultBid from the adGroup level. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).",
            "type": "number"
          },
          "adGroupId": {
            "description": "The identifier of the ad group to which this target is associated.",
            "type": "string"
          }
        },
        "required": [
          "adGroupId",
          "campaignId",
          "expression",
          "expressionType"
        ]
      },
      "SponsoredProductsDraftAdGroupAccessExceptionResponseContent": {
        "description": "Exception resulting in accessing campaign management entities",
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsInvalidArgumentErrorCode"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftAdGroupAccessError"
            }
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "SponsoredProductsProductAdSuccessResponseItem": {
        "type": "object",
        "properties": {
          "adId": {
            "description": "the ProductAd ID",
            "type": "string"
          },
          "index": {
            "format": "int32",
            "description": "The index in the original list from the request.",
            "type": "integer",
            "minimum": 0
          },
          "productAd": {
            "$ref": "#/components/schemas/SponsoredProductsProductAd"
          }
        },
        "required": [
          "index"
        ]
      },
      "SevenDaysEstimatedOpportunities": {
        "properties": {
          "estimatedIncrementalClicksLower": {
            "description": "Lower bound of the estimated incremental clicks that could be gained if all optimizations are made.",
            "type": "integer"
          },
          "estimatedIncrementalClicksUpper": {
            "description": "Upper bound of the estimated incremental clicks that could be gained if all optimizations are made.",
            "type": "integer"
          },
          "endDate": {
            "description": "End date of the opportunities date range in YYYY-MM-DDTHH:mm:ssZ format.",
            "type": "string"
          },
          "startDate": {
            "description": "Start date of the opportunities date range in YYYY-MM-DDTHH:mm:ssZ format.",
            "type": "string"
          }
        }
      },
      "RuleType": {
        "description": "The type of the campaign optimization rule. Only Support BID as of now",
        "type": "string",
        "enum": [
          "BID",
          "KEYWORD",
          "PRODUCT"
        ]
      },
      "SponsoredProductsBulkDraftNegativeTargetingClauseOperationResponse": {
        "type": "object",
        "properties": {
          "success": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftNegativeTargetingClauseSuccessResponseItem"
            }
          },
          "error": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftNegativeTargetingClauseFailureResponseItem"
            }
          }
        }
      },
      "SponsoredProductsDraftCampaignBudget": {
        "type": "object",
        "properties": {
          "budgetType": {
            "$ref": "#/components/schemas/SponsoredProductsDraftCampaignBudgetType"
          },
          "budget": {
            "format": "double",
            "description": "Monetary value",
            "type": "number"
          }
        },
        "required": [
          "budget",
          "budgetType"
        ]
      },
      "SponsoredProductsNegativeKeywordAccessExceptionResponseContent": {
        "description": "Exception resulting in accessing campaign management entities",
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsInvalidArgumentErrorCode"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsNegativeKeywordAccessError"
            }
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "SponsoredProductsBulkDraftCampaignNegativeKeywordOperationResponse": {
        "type": "object",
        "properties": {
          "success": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftCampaignNegativeKeywordSuccessResponseItem"
            }
          },
          "error": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftCampaignNegativeKeywordFailureResponseItem"
            }
          }
        }
      },
      "SponsoredProductsAdEligibilityErrorReason": {
        "type": "string",
        "enum": [
          "AD_INELIGIBLE"
        ]
      },
      "BrandsLoP": {
        "description": "List of Brands.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/BrandLoP"
        }
      },
      "ListGlobalTargetableCategoriesRequest": {
        "type": "object",
        "required": [
          "countryCodes"
        ],
        "properties": {
          "countryCodes": {
            "minItems": 1,
            "maxItems": 1,
            "uniqueItems": true,
            "description": "A list of country codes to fetch category tree <br> <table><thead><tr><th>Country Code<\/th><th>Country<\/th><\/tr><\/thead><tbody><tr><td>US<\/td><td>United States<\/td><\/tr><tr><td>CA<\/td><td>Canada<\/td><\/tr><tr><td>MX<\/td><td>Mexico<\/td><\/tr><tr><td>BR<\/td><td>Brazil<\/td><\/tr><tr><td>UK<\/td><td>United Kingdom<\/td><\/tr><tr><td>DE<\/td><td>Germany<\/td><\/tr><tr><td>FR<\/td><td>France<\/td><\/tr><tr><td>ES<\/td><td>Spain<\/td><\/tr><tr><td>IT<\/td><td>Italy<\/td><\/tr><tr><td>IN<\/td><td>India<\/td><\/tr><tr><td>AE<\/td><td>United Arab Emirates<\/td><\/tr><tr><td>SA<\/td><td>Saudi Arabia<\/td><\/tr><tr><td>NL<\/td><td>Netherlands<\/td><\/tr><tr><td>PL<\/td><td>Poland<\/td><\/tr><tr><td>BE<\/td><td>Belgium<\/td><\/tr><tr><td>SE<\/td><td>Sweden<\/td><\/tr><tr><td>TR<\/td><td>Turkey<\/td><\/tr><tr><td>EG<\/td><td>Egypt<\/td><\/tr><tr><td>JP<\/td><td>Japan<\/td><\/tr><tr><td>AU<\/td><td>Australia<\/td><\/tr><tr><td>SG<\/td><td>Singapore<\/td><\/tr><\/tbody><\/table>",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "locale": {
            "description": "The locale to which the caller wishes to translate the targetable categories to. For example, if the caller wishes to receive the targetable categories in Simplified Chinese, the locale parameter should be set to zh_CN. If no locale is provided, the returned targetable categories will be in the default language of the marketplace. <br><br> <b>Supported locale's<\/b> : \"ar_AE\",\"de_DE\",\"en_AE\",\"en_AU\",\"en_CA\",\"en_GB\",\"en_IN\",\"en_SG\",\"en_US\",\"es_ES\",\"es_MX\",\"fr_CA\",\"fr_FR\",\"hi_IN\",\"it_IT\",\"ja_JP\",\"ko_KR\",\"nl_NL\",\"pl_PL\",\"pt_BR\",\"sv_SE\",\"ta_IN\",\"th_TH\",\"tr_TR\",\"vi_VN\",\"zh_CN\"",
            "type": "string"
          }
        }
      },
      "SponsoredProductsGlobalTargetingClauseFailureResponseItem": {
        "type": "object",
        "properties": {
          "index": {
            "format": "int32",
            "description": "the index of the targetingClause in the array from the request body",
            "type": "integer",
            "minimum": 0
          },
          "errors": {
            "description": "A list of validation errors",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsTargetMutationError"
            }
          }
        },
        "required": [
          "index"
        ]
      },
      "SponsoredProductsBulkGlobalAdGroupOperationResponse": {
        "type": "object",
        "properties": {
          "success": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsGlobalAdGroupSuccessResponseItem"
            }
          },
          "error": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsGlobalAdGroupFailureResponseItem"
            }
          }
        }
      },
      "SponsoredProductsAdGroupAccessError": {
        "type": "object",
        "properties": {
          "errorType": {
            "description": "The type of the error",
            "type": "string"
          },
          "errorValue": {
            "$ref": "#/components/schemas/SponsoredProductsAdGroupAccessErrorSelector"
          }
        },
        "required": [
          "errorType",
          "errorValue"
        ]
      },
      "SponsoredProductsBulkGlobalTargetingClauseOperationResponse": {
        "type": "object",
        "properties": {
          "success": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsGlobalTargetingClauseSuccessResponseItem"
            }
          },
          "error": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsGlobalTargetingClauseFailureResponseItem"
            }
          }
        }
      },
      "SponsoredProductsCampaignServingStatus": {
        "type": "string",
        "enum": [
          "CAMPAIGN_STATUS_ENABLED",
          "CAMPAIGN_PAUSED",
          "CAMPAIGN_ARCHIVED",
          "PENDING_REVIEW",
          "REJECTED",
          "PENDING_START_DATE",
          "ENDED",
          "CAMPAIGN_OUT_OF_BUDGET",
          "CAMPAIGN_INCOMPLETE",
          "PORTFOLIO_STATUS_ENABLED",
          "PORTFOLIO_PAUSED",
          "PORTFOLIO_ARCHIVED",
          "PORTFOLIO_OUT_OF_BUDGET",
          "PORTFOLIO_PENDING_START_DATE",
          "PORTFOLIO_ENDED",
          "ADVERTISER_POLICING_SUSPENDED",
          "ADVERTISER_POLICING_PENDING_REVIEW",
          "ADVERTISER_ARCHIVED",
          "ADVERTISER_PAUSED",
          "ADVERTISER_OUT_OF_BUDGET",
          "ADVERTISER_PAYMENT_FAILURE",
          "ACCOUNT_OUT_OF_BUDGET",
          "OTHER"
        ]
      },
      "OptimizationRulesAPISwaggerSearchOptimizationRuleAssociationsRequest": {
        "description": "Request body for getting optimization rule associations.",
        "type": "object",
        "properties": {
          "maxResults": {
            "default": "50",
            "description": "Sets a limit on the number of results returned.\nDefaults to 50. Maximum limit of maxResults is 1000.",
            "maximum": 1000,
            "type": "integer",
            "minimum": 1
          },
          "nextToken": {
            "description": "To retrieve the next page of results, call the same operation and specify this token in the request.\nIf the nextToken field is empty, there are no further results.",
            "type": "string"
          },
          "optimizationRuleFilter": {
            "$ref": "#/components/schemas/OptimizationRulesAPISwaggerEntityFieldFilter"
          }
        }
      },
      "SponsoredProductsTargetAccessExceptionResponseContent": {
        "description": "Exception resulting in accessing campaign management entities",
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsInvalidArgumentErrorCode"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsTargetAccessError"
            }
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "SPBudgetRuleDetails": {
        "description": "Object representing details of a budget rule for SP campaign",
        "type": "object",
        "properties": {
          "duration": {
            "$ref": "#/components/schemas/RuleDuration"
          },
          "recurrence": {
            "$ref": "#/components/schemas/Recurrence"
          },
          "ruleType": {
            "$ref": "#/components/schemas/SPRuleType"
          },
          "budgetIncreaseBy": {
            "$ref": "#/components/schemas/budgetIncreaseBy"
          },
          "name": {
            "description": "The budget rule name. Required to be unique within a campaign.",
            "type": "string",
            "maxLength": 355
          },
          "performanceMeasureCondition": {
            "$ref": "#/components/schemas/PerformanceMeasureCondition"
          }
        }
      },
      "ProductRecommendation": {
        "description": "Recommended asin and related information.",
        "type": "object",
        "properties": {
          "themes": {
            "description": "List of themes associated with this recommended ASIN.",
            "type": "array",
            "items": {
              "type": "string",
              "example": "Top Converting ASINs"
            }
          },
          "recommendedAsin": {
            "minLength": 10,
            "description": "Recommended ASIN",
            "type": "string",
            "maxLength": 10,
            "example": "BX20002121"
          }
        }
      },
      "OptimizationRulesAPISwaggerAssociateOptimizationRulesResponseErrorItem": {
        "type": "object",
        "properties": {
          "index": {
            "description": "Index of the failed association pair in the request.",
            "type": "integer"
          },
          "errors": {
            "minItems": 1,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptimizationRulesAPISwaggerOptimizationRuleError"
            }
          }
        },
        "required": [
          "index",
          "errors"
        ]
      },
      "SponsoredProductsProductIdentifierErrorReason": {
        "type": "string",
        "enum": [
          "INVALID_SKU",
          "INVALID_ASIN"
        ]
      },
      "RMSBudgetRule": {
        "type": "object",
        "required": [
          "ruleId"
        ],
        "properties": {
          "ruleState": {
            "$ref": "#/components/schemas/state"
          },
          "lastUpdatedDate": {
            "format": "int64",
            "description": "Epoch time of budget rule update. Read-only.",
            "type": "number"
          },
          "createdDate": {
            "format": "int64",
            "description": "Epoch time of budget rule creation. Read-only.",
            "type": "number"
          },
          "ruleDetails": {
            "$ref": "#/components/schemas/RMSBudgetRuleDetails"
          },
          "ruleId": {
            "description": "The budget rule identifier.",
            "type": "string"
          },
          "ruleStatus": {
            "description": "The budget rule status. Read-only.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsErrorCause": {
        "description": "Structure describing error cause - location in the payload and data causing error",
        "type": "object",
        "properties": {
          "location": {
            "description": "Error location, JSON Path expression specifying element of API payload causing error",
            "type": "string"
          },
          "trigger": {
            "description": "optional value causing error",
            "type": "string"
          }
        },
        "required": [
          "location"
        ]
      },
      "RuleAction": {
        "description": "The action taken when the campaign optimization rule is enabled. Defaults to adopt",
        "type": "string",
        "enum": [
          "ADOPT"
        ]
      },
      "SponsoredProductsCreateSponsoredProductsDraftNegativeKeywordsResponseContent": {
        "type": "object",
        "properties": {
          "negativeKeywords": {
            "$ref": "#/components/schemas/SponsoredProductsBulkDraftNegativeKeywordOperationResponse"
          }
        },
        "required": [
          "negativeKeywords"
        ]
      },
      "SponsoredProductsMalformedValueError": {
        "description": "Errors being used to represent malformed values\ne.g. containing not allowed characters, not following patters etc",
        "type": "object",
        "properties": {
          "reason": {
            "$ref": "#/components/schemas/SponsoredProductsMalformedValueErrorReason"
          },
          "fragment": {
            "description": "fragment of the value which is wrong",
            "type": "string"
          },
          "marketplace": {
            "$ref": "#/components/schemas/SponsoredProductsMarketplace"
          },
          "cause": {
            "$ref": "#/components/schemas/SponsoredProductsErrorCause"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          }
        },
        "required": [
          "message",
          "reason"
        ]
      },
      "SponsoredProductsAsyncStatus": {
        "description": "Entity state for async status",
        "type": "string",
        "enum": [
          "WAITING",
          "PAUSED",
          "FAILED",
          "SUCCEED"
        ]
      },
      "BudgetUsageError": {
        "description": "The Error Response Object.",
        "type": "object",
        "properties": {
          "code": {
            "description": "An enumerated error code for machine use.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        }
      },
      "BudgetRuleRecommendation": {
        "type": "object",
        "properties": {
          "suggestedBudgetIncreasePercent": {
            "description": "suggested increase percent",
            "type": "number"
          },
          "ruleName": {
            "description": "rule name for the recomemendation",
            "type": "string"
          },
          "ruleId": {
            "description": "rule id for the recomemendation",
            "type": "string"
          }
        }
      },
      "SponsoredProductsListSponsoredProductsDraftTargetingClausesResponseContent": {
        "type": "object",
        "properties": {
          "totalResults": {
            "format": "int64",
            "description": "The total number of entities",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          },
          "targetingClauses": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftTargetingClause"
            }
          }
        }
      },
      "SponsoredProductsDeleteSponsoredProductsGlobalAdGroupsRequestContent": {
        "type": "object",
        "properties": {
          "adGroupIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          }
        }
      },
      "SponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent": {
        "type": "object",
        "properties": {
          "targetIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          }
        },
        "required": [
          "targetIdFilter"
        ]
      },
      "SponsoredProductsGlobalCampaignServingStatusReason": {
        "type": "string",
        "enum": [
          "CAMPAIGN_DELIVERING_IN_ALL_MARKETPLACES",
          "ADVERTISER_PAYMENT_FAILURE_IN_AT_LEAST_ONE_MARKETPLACE",
          "ADVERTISER_POLICING_PENDING_REVIEW_IN_ATLEAST_ONE_MARKETPLACES",
          "ADVERTISER_POLICING_SUSPENDED_IN_ATLEAST_ONE_MARKETPLACES",
          "ADVERTISER_PAUSED_IN_ATLEAST_ONE_MARKETPLACES",
          "ADVERTISER_ARCHIVED_IN_ATLEAST_ONE_MARKETPLACES",
          "CAMPAIGN_OUT_OF_BUDGET_IN_AT_LEAST_ONE_MARKETPLACE",
          "CAMPAIGN_PAUSED_IN_AT_LEAST_ONE_MARKETPLACE",
          "CAMPAIGN_ARCHIVED",
          "CAMPAIGN_INCOMPLETE_IN_AT_LEAST_ONE_MARKETPLACE",
          "CAMPAIGN_PENDING_START_DATE",
          "CAMPAIGN_ENDED"
        ]
      },
      "SponsoredProductsUpdateGlobalProductAd": {
        "type": "object",
        "properties": {
          "adId": {
            "description": "The product ad identifier.",
            "type": "string"
          },
          "name": {
            "description": "Name for the product Ad",
            "type": "string"
          },
          "asin": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalProductIdentifiers"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateGlobalEntityState"
          },
          "sku": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalProductIdentifiers"
          }
        },
        "required": [
          "adId"
        ]
      },
      "SponsoredProductsListSponsoredProductsNegativeTargetingClausesPreviewResponseContent": {
        "type": "object",
        "properties": {
          "totalResults": {
            "format": "int64",
            "description": "The total number of entities",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          },
          "negativeTargetingClauses": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsNegativeTargetingClause"
            }
          }
        }
      },
      "SponsoredProductsMarketplaceProductAdServingStatus": {
        "type": "object",
        "properties": {
          "statusReasons": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsGlobalProductAdMarketplaceServingReason"
            }
          },
          "marketplace": {
            "$ref": "#/components/schemas/SponsoredProductsMarketplace"
          },
          "servingStatus": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalProductAdMarketplaceServingStatus"
          }
        },
        "required": [
          "servingStatus"
        ]
      },
      "OptimizationRulesAPISwaggerFilterType": {
        "description": "Types of filter used for search.",
        "type": "string",
        "enum": [
          "EXACT_MATCH"
        ]
      },
      "SponsoredProductsUpdateSponsoredProductsTargetingClausesResponseContent": {
        "type": "object",
        "properties": {
          "targetingClauses": {
            "$ref": "#/components/schemas/SponsoredProductsBulkTargetingClauseOperationResponse"
          }
        },
        "required": [
          "targetingClauses"
        ]
      },
      "SponsoredProductsUpdateSponsoredProductsGlobalProductAdsResponseContent": {
        "type": "object",
        "properties": {
          "productAds": {
            "$ref": "#/components/schemas/SponsoredProductsBulkGlobalProductAdOperationResponse"
          }
        },
        "required": [
          "productAds"
        ]
      },
      "SponsoredProductsUpdateSponsoredProductsNegativeKeywordsResponseContent": {
        "type": "object",
        "properties": {
          "negativeKeywords": {
            "$ref": "#/components/schemas/SponsoredProductsBulkNegativeKeywordOperationResponse"
          }
        },
        "required": [
          "negativeKeywords"
        ]
      },
      "GlobalBudgetRulesRecommendationEventResponse": {
        "description": "Globalised Special events with date range and suggested budget increase for existing campaigns.",
        "type": "object",
        "required": [
          "campaignId",
          "countryBudgetRuleEventsRecommendations"
        ],
        "properties": {
          "countryBudgetRuleEventsRecommendations": {
            "description": "A list of recommended special events with date range and suggested budget increase for each country targeted by the campaign.",
            "additionalProperties": {
              "$ref": "#/components/schemas/SPBudgetRulesRecommendationEventsList"
            },
            "type": "object"
          },
          "errors": {
            "minItems": 1,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GlobalBudgetRulesRecommendationError"
            }
          }
        },
        "example": {
          "countryBudgetRuleEventsRecommendations": {
            "UK": [
              {
                "eventId": "124",
                "endDate": "20250303",
                "suggestedBudgetIncreasePercent": 9,
                "eventName": "sample event 2",
                "startDate": "20240701"
              }
            ],
            "US": [
              {
                "eventId": "123",
                "endDate": "20240806",
                "suggestedBudgetIncreasePercent": 5,
                "eventName": "sample event 1",
                "startDate": "20240401"
              }
            ],
            "errors": [
              {
                "countryCodes": [
                  "JP"
                ],
                "errorMessage": "Request is not authorised for JP",
                "errorCode": "UNAUTHORIZED",
                "errorId": 1106
              }
            ]
          }
        }
      },
      "SponsoredProductsUpdateSponsoredProductsGlobalCampaignsResponseContent": {
        "type": "object",
        "properties": {
          "campaigns": {
            "$ref": "#/components/schemas/SponsoredProductsBulkGlobalCampaignOperationResponse"
          }
        },
        "required": [
          "campaigns"
        ]
      },
      "SponsoredProductsDraftCampaignAccessExceptionResponseContent": {
        "description": "Exception resulting in accessing draft management entities",
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsInvalidArgumentErrorCode"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftCampaignAccessError"
            }
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "SponsoredProductsUpdateSponsoredProductsCampaignsResponseContent": {
        "type": "object",
        "properties": {
          "campaigns": {
            "$ref": "#/components/schemas/SponsoredProductsBulkCampaignOperationResponse"
          }
        },
        "required": [
          "campaigns"
        ]
      },
      "ThemeBasedBidRecommendationResponseV5": {
        "description": "A list of bid recommendation themes and associated bid recommendations.",
        "type": "object",
        "properties": {
          "bidRecommendations": {
            "maxItems": 2,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ThemeBasedBidRecommendationV5"
            }
          }
        },
        "required": [
          "bidRecommendations"
        ],
        "example": {
          "bidRecommendations": [
            {
              "theme": "CONVERSION_OPPORTUNITIES",
              "bidAnalysesForTargetingExpressions": [
                {
                  "bidAnalyses": {
                    "ALL": [
                      {
                        "bid": "0.8",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "300",
                          "estimatedImpressionUpper": "400",
                          "estimatedImpressionLower": "200"
                        }
                      },
                      {
                        "bid": "1",
                        "type": "SUGGESTED_LOWER",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "450",
                          "estimatedImpressionUpper": "600",
                          "estimatedImpressionLower": "300"
                        }
                      },
                      {
                        "bid": "1.2",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "600",
                          "estimatedImpressionUpper": "800",
                          "estimatedImpressionLower": "400"
                        }
                      },
                      {
                        "bid": "1.4",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "750",
                          "estimatedImpressionUpper": "1000",
                          "estimatedImpressionLower": "500"
                        }
                      },
                      {
                        "bid": "1.5",
                        "type": "SUGGESTED",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "900",
                          "estimatedImpressionUpper": "1200",
                          "estimatedImpressionLower": "600"
                        }
                      },
                      {
                        "bid": "1.7",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1050",
                          "estimatedImpressionUpper": "1400",
                          "estimatedImpressionLower": "700"
                        }
                      },
                      {
                        "bid": "2",
                        "type": "SUGGESTED_UPPER",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1200",
                          "estimatedImpressionUpper": "1600",
                          "estimatedImpressionLower": "800"
                        }
                      },
                      {
                        "bid": "2.4",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1350",
                          "estimatedImpressionUpper": "1800",
                          "estimatedImpressionLower": "900"
                        }
                      }
                    ],
                    "PLACEMENT_TOP": [
                      {
                        "bid": "0.8",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "300",
                          "estimatedImpressionUpper": "400",
                          "estimatedImpressionLower": "200"
                        }
                      },
                      {
                        "bid": "1",
                        "type": "SUGGESTED_LOWER",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "450",
                          "estimatedImpressionUpper": "600",
                          "estimatedImpressionLower": "300"
                        }
                      },
                      {
                        "bid": "1.2",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "600",
                          "estimatedImpressionUpper": "800",
                          "estimatedImpressionLower": "400"
                        }
                      },
                      {
                        "bid": "1.4",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "750",
                          "estimatedImpressionUpper": "1000",
                          "estimatedImpressionLower": "500"
                        }
                      },
                      {
                        "bid": "1.5",
                        "type": "SUGGESTED",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "900",
                          "estimatedImpressionUpper": "1200",
                          "estimatedImpressionLower": "600"
                        }
                      },
                      {
                        "bid": "1.7",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1050",
                          "estimatedImpressionUpper": "1400",
                          "estimatedImpressionLower": "700"
                        }
                      },
                      {
                        "bid": "2",
                        "type": "SUGGESTED_UPPER",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1200",
                          "estimatedImpressionUpper": "1600",
                          "estimatedImpressionLower": "800"
                        }
                      },
                      {
                        "bid": "2.4",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1350",
                          "estimatedImpressionUpper": "1800",
                          "estimatedImpressionLower": "900"
                        }
                      }
                    ],
                    "PLACEMENT_REST_OF_SEARCH": [
                      {
                        "bid": "0.8",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "300",
                          "estimatedImpressionUpper": "400",
                          "estimatedImpressionLower": "200"
                        }
                      },
                      {
                        "bid": "1",
                        "type": "SUGGESTED_LOWER",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "450",
                          "estimatedImpressionUpper": "600",
                          "estimatedImpressionLower": "300"
                        }
                      },
                      {
                        "bid": "1.2",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "600",
                          "estimatedImpressionUpper": "800",
                          "estimatedImpressionLower": "400"
                        }
                      },
                      {
                        "bid": "1.4",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "750",
                          "estimatedImpressionUpper": "1000",
                          "estimatedImpressionLower": "500"
                        }
                      },
                      {
                        "bid": "1.5",
                        "type": "SUGGESTED",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "900",
                          "estimatedImpressionUpper": "1200",
                          "estimatedImpressionLower": "600"
                        }
                      },
                      {
                        "bid": "1.7",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1050",
                          "estimatedImpressionUpper": "1400",
                          "estimatedImpressionLower": "700"
                        }
                      },
                      {
                        "bid": "2",
                        "type": "SUGGESTED_UPPER",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1200",
                          "estimatedImpressionUpper": "1600",
                          "estimatedImpressionLower": "800"
                        }
                      },
                      {
                        "bid": "2.4",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1350",
                          "estimatedImpressionUpper": "1800",
                          "estimatedImpressionLower": "900"
                        }
                      }
                    ],
                    "PLACEMENT_PRODUCT_PAGE": [
                      {
                        "bid": "0.8",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "300",
                          "estimatedImpressionUpper": "400",
                          "estimatedImpressionLower": "200"
                        }
                      },
                      {
                        "bid": "1",
                        "type": "SUGGESTED_LOWER",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "450",
                          "estimatedImpressionUpper": "600",
                          "estimatedImpressionLower": "300"
                        }
                      },
                      {
                        "bid": "1.2",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "600",
                          "estimatedImpressionUpper": "800",
                          "estimatedImpressionLower": "400"
                        }
                      },
                      {
                        "bid": "1.4",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "750",
                          "estimatedImpressionUpper": "1000",
                          "estimatedImpressionLower": "500"
                        }
                      },
                      {
                        "bid": "1.5",
                        "type": "SUGGESTED",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "900",
                          "estimatedImpressionUpper": "1200",
                          "estimatedImpressionLower": "600"
                        }
                      },
                      {
                        "bid": "1.7",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1050",
                          "estimatedImpressionUpper": "1400",
                          "estimatedImpressionLower": "700"
                        }
                      },
                      {
                        "bid": "2",
                        "type": "SUGGESTED_UPPER",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1200",
                          "estimatedImpressionUpper": "1600",
                          "estimatedImpressionLower": "800"
                        }
                      },
                      {
                        "bid": "2.4",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1350",
                          "estimatedImpressionUpper": "1800",
                          "estimatedImpressionLower": "900"
                        }
                      }
                    ]
                  },
                  "targetingExpression": {
                    "type": "CLOSE_MATCH"
                  }
                },
                {
                  "bidAnalyses": {
                    "ALL": [
                      {
                        "bid": "0.8",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "300",
                          "estimatedImpressionUpper": "400",
                          "estimatedImpressionLower": "200"
                        }
                      },
                      {
                        "bid": "1.1",
                        "type": "SUGGESTED_LOWER",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "525",
                          "estimatedImpressionUpper": "700",
                          "estimatedImpressionLower": "350"
                        }
                      },
                      {
                        "bid": "1.4",
                        "type": "SUGGESTED",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "750",
                          "estimatedImpressionUpper": "1000",
                          "estimatedImpressionLower": "500"
                        }
                      },
                      {
                        "bid": "1.5",
                        "type": "SUGGESTED",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "900",
                          "estimatedImpressionUpper": "1200",
                          "estimatedImpressionLower": "600"
                        }
                      },
                      {
                        "bid": "1.7",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1050",
                          "estimatedImpressionUpper": "1400",
                          "estimatedImpressionLower": "700"
                        }
                      },
                      {
                        "bid": "2",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1200",
                          "estimatedImpressionUpper": "1600",
                          "estimatedImpressionLower": "800"
                        }
                      },
                      {
                        "bid": "2.2",
                        "type": "SUGGESTED_UPPER",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1275",
                          "estimatedImpressionUpper": "1700",
                          "estimatedImpressionLower": "850"
                        }
                      },
                      {
                        "bid": "2.4",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1350",
                          "estimatedImpressionUpper": "1800",
                          "estimatedImpressionLower": "900"
                        }
                      }
                    ],
                    "PLACEMENT_TOP": [
                      {
                        "bid": "0.8",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "300",
                          "estimatedImpressionUpper": "400",
                          "estimatedImpressionLower": "200"
                        }
                      },
                      {
                        "bid": "1.1",
                        "type": "SUGGESTED_LOWER",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "525",
                          "estimatedImpressionUpper": "700",
                          "estimatedImpressionLower": "350"
                        }
                      },
                      {
                        "bid": "1.4",
                        "type": "SUGGESTED",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "750",
                          "estimatedImpressionUpper": "1000",
                          "estimatedImpressionLower": "500"
                        }
                      },
                      {
                        "bid": "1.5",
                        "type": "SUGGESTED",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "900",
                          "estimatedImpressionUpper": "1200",
                          "estimatedImpressionLower": "600"
                        }
                      },
                      {
                        "bid": "1.7",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1050",
                          "estimatedImpressionUpper": "1400",
                          "estimatedImpressionLower": "700"
                        }
                      },
                      {
                        "bid": "2",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1200",
                          "estimatedImpressionUpper": "1600",
                          "estimatedImpressionLower": "800"
                        }
                      },
                      {
                        "bid": "2.2",
                        "type": "SUGGESTED_UPPER",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1275",
                          "estimatedImpressionUpper": "1700",
                          "estimatedImpressionLower": "850"
                        }
                      },
                      {
                        "bid": "2.4",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1350",
                          "estimatedImpressionUpper": "1800",
                          "estimatedImpressionLower": "900"
                        }
                      }
                    ],
                    "PLACEMENT_REST_OF_SEARCH": [
                      {
                        "bid": "0.8",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "300",
                          "estimatedImpressionUpper": "400",
                          "estimatedImpressionLower": "200"
                        }
                      },
                      {
                        "bid": "1.1",
                        "type": "SUGGESTED_LOWER",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "525",
                          "estimatedImpressionUpper": "700",
                          "estimatedImpressionLower": "350"
                        }
                      },
                      {
                        "bid": "1.4",
                        "type": "SUGGESTED",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "750",
                          "estimatedImpressionUpper": "1000",
                          "estimatedImpressionLower": "500"
                        }
                      },
                      {
                        "bid": "1.5",
                        "type": "SUGGESTED",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "900",
                          "estimatedImpressionUpper": "1200",
                          "estimatedImpressionLower": "600"
                        }
                      },
                      {
                        "bid": "1.7",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1050",
                          "estimatedImpressionUpper": "1400",
                          "estimatedImpressionLower": "700"
                        }
                      },
                      {
                        "bid": "2",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1200",
                          "estimatedImpressionUpper": "1600",
                          "estimatedImpressionLower": "800"
                        }
                      },
                      {
                        "bid": "2.2",
                        "type": "SUGGESTED_UPPER",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1275",
                          "estimatedImpressionUpper": "1700",
                          "estimatedImpressionLower": "850"
                        }
                      },
                      {
                        "bid": "2.4",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1350",
                          "estimatedImpressionUpper": "1800",
                          "estimatedImpressionLower": "900"
                        }
                      }
                    ],
                    "PLACEMENT_PRODUCT_PAGE": [
                      {
                        "bid": "0.8",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "300",
                          "estimatedImpressionUpper": "400",
                          "estimatedImpressionLower": "200"
                        }
                      },
                      {
                        "bid": "1.1",
                        "type": "SUGGESTED_LOWER",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "525",
                          "estimatedImpressionUpper": "700",
                          "estimatedImpressionLower": "350"
                        }
                      },
                      {
                        "bid": "1.4",
                        "type": "SUGGESTED",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "750",
                          "estimatedImpressionUpper": "1000",
                          "estimatedImpressionLower": "500"
                        }
                      },
                      {
                        "bid": "1.5",
                        "type": "SUGGESTED",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "900",
                          "estimatedImpressionUpper": "1200",
                          "estimatedImpressionLower": "600"
                        }
                      },
                      {
                        "bid": "1.7",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1050",
                          "estimatedImpressionUpper": "1400",
                          "estimatedImpressionLower": "700"
                        }
                      },
                      {
                        "bid": "2",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1200",
                          "estimatedImpressionUpper": "1600",
                          "estimatedImpressionLower": "800"
                        }
                      },
                      {
                        "bid": "2.2",
                        "type": "SUGGESTED_UPPER",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1275",
                          "estimatedImpressionUpper": "1700",
                          "estimatedImpressionLower": "850"
                        }
                      },
                      {
                        "bid": "2.4",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1350",
                          "estimatedImpressionUpper": "1800",
                          "estimatedImpressionLower": "900"
                        }
                      }
                    ]
                  },
                  "targetingExpression": {
                    "type": "LOOSE_MATCH"
                  }
                }
              ],
              "bidRecommendationsForTargetingExpressions": [
                {
                  "suggestedBidImpactMetrics": {
                    "estimatedImpressionUpper": "1200",
                    "estimatedImpressionLower": "600"
                  },
                  "bidValues": [
                    {
                      "suggestedBid": "1"
                    },
                    {
                      "suggestedBid": "1.5"
                    },
                    {
                      "suggestedBid": "2"
                    }
                  ],
                  "targetingExpression": {
                    "type": "CLOSE_MATCH"
                  }
                },
                {
                  "suggestedBidImpactMetrics": {
                    "estimatedImpressionUpper": "1000",
                    "estimatedImpressionLower": "500"
                  },
                  "bidValues": [
                    {
                      "suggestedBid": "1.1"
                    },
                    {
                      "suggestedBid": "1.4"
                    },
                    {
                      "suggestedBid": "2.2"
                    }
                  ],
                  "targetingExpression": {
                    "type": "LOOSE_MATCH"
                  }
                }
              ]
            },
            {
              "theme": "PRIME_DAY",
              "bidAnalysesForTargetingExpressions": [
                {
                  "bidAnalyses": {
                    "ALL": [
                      {
                        "bid": "0.8",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "300",
                          "estimatedImpressionUpper": "400",
                          "estimatedImpressionLower": "200"
                        }
                      },
                      {
                        "bid": "1",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "450",
                          "estimatedImpressionUpper": "600",
                          "estimatedImpressionLower": "300"
                        }
                      },
                      {
                        "bid": "1.2",
                        "type": "SUGGESTED_LOWER",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "600",
                          "estimatedImpressionUpper": "800",
                          "estimatedImpressionLower": "400"
                        }
                      },
                      {
                        "bid": "1.4",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "750",
                          "estimatedImpressionUpper": "1000",
                          "estimatedImpressionLower": "500"
                        }
                      },
                      {
                        "bid": "1.5",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "900",
                          "estimatedImpressionUpper": "1200",
                          "estimatedImpressionLower": "600"
                        }
                      },
                      {
                        "bid": "1.7",
                        "type": "SUGGESTED",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1050",
                          "estimatedImpressionUpper": "1400",
                          "estimatedImpressionLower": "700"
                        }
                      },
                      {
                        "bid": "2.2",
                        "type": "SUGGESTED_UPPER",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1275",
                          "estimatedImpressionUpper": "1700",
                          "estimatedImpressionLower": "850"
                        }
                      },
                      {
                        "bid": "2.4",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1350",
                          "estimatedImpressionUpper": "1800",
                          "estimatedImpressionLower": "900"
                        }
                      }
                    ],
                    "PLACEMENT_TOP": [
                      {
                        "bid": "0.8",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "300",
                          "estimatedImpressionUpper": "400",
                          "estimatedImpressionLower": "200"
                        }
                      },
                      {
                        "bid": "1",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "450",
                          "estimatedImpressionUpper": "600",
                          "estimatedImpressionLower": "300"
                        }
                      },
                      {
                        "bid": "1.2",
                        "type": "SUGGESTED_LOWER",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "600",
                          "estimatedImpressionUpper": "800",
                          "estimatedImpressionLower": "400"
                        }
                      },
                      {
                        "bid": "1.4",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "750",
                          "estimatedImpressionUpper": "1000",
                          "estimatedImpressionLower": "500"
                        }
                      },
                      {
                        "bid": "1.5",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "900",
                          "estimatedImpressionUpper": "1200",
                          "estimatedImpressionLower": "600"
                        }
                      },
                      {
                        "bid": "1.7",
                        "type": "SUGGESTED",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1050",
                          "estimatedImpressionUpper": "1400",
                          "estimatedImpressionLower": "700"
                        }
                      },
                      {
                        "bid": "2.2",
                        "type": "SUGGESTED_UPPER",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1275",
                          "estimatedImpressionUpper": "1700",
                          "estimatedImpressionLower": "850"
                        }
                      },
                      {
                        "bid": "2.4",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1350",
                          "estimatedImpressionUpper": "1800",
                          "estimatedImpressionLower": "900"
                        }
                      }
                    ],
                    "PLACEMENT_REST_OF_SEARCH": [
                      {
                        "bid": "0.8",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "300",
                          "estimatedImpressionUpper": "400",
                          "estimatedImpressionLower": "200"
                        }
                      },
                      {
                        "bid": "1",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "450",
                          "estimatedImpressionUpper": "600",
                          "estimatedImpressionLower": "300"
                        }
                      },
                      {
                        "bid": "1.2",
                        "type": "SUGGESTED_LOWER",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "600",
                          "estimatedImpressionUpper": "800",
                          "estimatedImpressionLower": "400"
                        }
                      },
                      {
                        "bid": "1.4",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "750",
                          "estimatedImpressionUpper": "1000",
                          "estimatedImpressionLower": "500"
                        }
                      },
                      {
                        "bid": "1.5",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "900",
                          "estimatedImpressionUpper": "1200",
                          "estimatedImpressionLower": "600"
                        }
                      },
                      {
                        "bid": "1.7",
                        "type": "SUGGESTED",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1050",
                          "estimatedImpressionUpper": "1400",
                          "estimatedImpressionLower": "700"
                        }
                      },
                      {
                        "bid": "2.2",
                        "type": "SUGGESTED_UPPER",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1275",
                          "estimatedImpressionUpper": "1700",
                          "estimatedImpressionLower": "850"
                        }
                      },
                      {
                        "bid": "2.4",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1350",
                          "estimatedImpressionUpper": "1800",
                          "estimatedImpressionLower": "900"
                        }
                      }
                    ],
                    "PLACEMENT_PRODUCT_PAGE": [
                      {
                        "bid": "0.8",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "300",
                          "estimatedImpressionUpper": "400",
                          "estimatedImpressionLower": "200"
                        }
                      },
                      {
                        "bid": "1",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "450",
                          "estimatedImpressionUpper": "600",
                          "estimatedImpressionLower": "300"
                        }
                      },
                      {
                        "bid": "1.2",
                        "type": "SUGGESTED_LOWER",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "600",
                          "estimatedImpressionUpper": "800",
                          "estimatedImpressionLower": "400"
                        }
                      },
                      {
                        "bid": "1.4",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "750",
                          "estimatedImpressionUpper": "1000",
                          "estimatedImpressionLower": "500"
                        }
                      },
                      {
                        "bid": "1.5",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "900",
                          "estimatedImpressionUpper": "1200",
                          "estimatedImpressionLower": "600"
                        }
                      },
                      {
                        "bid": "1.7",
                        "type": "SUGGESTED",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1050",
                          "estimatedImpressionUpper": "1400",
                          "estimatedImpressionLower": "700"
                        }
                      },
                      {
                        "bid": "2.2",
                        "type": "SUGGESTED_UPPER",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1275",
                          "estimatedImpressionUpper": "1700",
                          "estimatedImpressionLower": "850"
                        }
                      },
                      {
                        "bid": "2.4",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1350",
                          "estimatedImpressionUpper": "1800",
                          "estimatedImpressionLower": "900"
                        }
                      }
                    ]
                  },
                  "targetingExpression": {
                    "type": "CLOSE_MATCH"
                  }
                },
                {
                  "bidAnalyses": {
                    "ALL": [
                      {
                        "bid": "0.8",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "300",
                          "estimatedImpressionUpper": "400",
                          "estimatedImpressionLower": "200"
                        }
                      },
                      {
                        "bid": "1.1",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "525",
                          "estimatedImpressionUpper": "700",
                          "estimatedImpressionLower": "350"
                        }
                      },
                      {
                        "bid": "1.3",
                        "type": "SUGGESTED_LOWER",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "675",
                          "estimatedImpressionUpper": "900",
                          "estimatedImpressionLower": "450"
                        }
                      },
                      {
                        "bid": "1.5",
                        "type": "SUGGESTED",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "900",
                          "estimatedImpressionUpper": "1200",
                          "estimatedImpressionLower": "600"
                        }
                      },
                      {
                        "bid": "1.7",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1050",
                          "estimatedImpressionUpper": "1400",
                          "estimatedImpressionLower": "700"
                        }
                      },
                      {
                        "bid": "2",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1200",
                          "estimatedImpressionUpper": "1600",
                          "estimatedImpressionLower": "800"
                        }
                      },
                      {
                        "bid": "2.4",
                        "type": "SUGGESTED_UPPER",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1350",
                          "estimatedImpressionUpper": "1800",
                          "estimatedImpressionLower": "900"
                        }
                      },
                      {
                        "bid": "2.6",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1350",
                          "estimatedImpressionUpper": "1800",
                          "estimatedImpressionLower": "900"
                        }
                      }
                    ],
                    "PLACEMENT_TOP": [
                      {
                        "bid": "0.8",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "300",
                          "estimatedImpressionUpper": "400",
                          "estimatedImpressionLower": "200"
                        }
                      },
                      {
                        "bid": "1.1",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "525",
                          "estimatedImpressionUpper": "700",
                          "estimatedImpressionLower": "350"
                        }
                      },
                      {
                        "bid": "1.3",
                        "type": "SUGGESTED_LOWER",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "675",
                          "estimatedImpressionUpper": "900",
                          "estimatedImpressionLower": "450"
                        }
                      },
                      {
                        "bid": "1.5",
                        "type": "SUGGESTED",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "900",
                          "estimatedImpressionUpper": "1200",
                          "estimatedImpressionLower": "600"
                        }
                      },
                      {
                        "bid": "1.7",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1050",
                          "estimatedImpressionUpper": "1400",
                          "estimatedImpressionLower": "700"
                        }
                      },
                      {
                        "bid": "2",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1200",
                          "estimatedImpressionUpper": "1600",
                          "estimatedImpressionLower": "800"
                        }
                      },
                      {
                        "bid": "2.4",
                        "type": "SUGGESTED_UPPER",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1350",
                          "estimatedImpressionUpper": "1800",
                          "estimatedImpressionLower": "900"
                        }
                      },
                      {
                        "bid": "2.6",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1350",
                          "estimatedImpressionUpper": "1800",
                          "estimatedImpressionLower": "900"
                        }
                      }
                    ],
                    "PLACEMENT_REST_OF_SEARCH": [
                      {
                        "bid": "0.8",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "300",
                          "estimatedImpressionUpper": "400",
                          "estimatedImpressionLower": "200"
                        }
                      },
                      {
                        "bid": "1.1",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "525",
                          "estimatedImpressionUpper": "700",
                          "estimatedImpressionLower": "350"
                        }
                      },
                      {
                        "bid": "1.3",
                        "type": "SUGGESTED_LOWER",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "675",
                          "estimatedImpressionUpper": "900",
                          "estimatedImpressionLower": "450"
                        }
                      },
                      {
                        "bid": "1.5",
                        "type": "SUGGESTED",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "900",
                          "estimatedImpressionUpper": "1200",
                          "estimatedImpressionLower": "600"
                        }
                      },
                      {
                        "bid": "1.7",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1050",
                          "estimatedImpressionUpper": "1400",
                          "estimatedImpressionLower": "700"
                        }
                      },
                      {
                        "bid": "2",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1200",
                          "estimatedImpressionUpper": "1600",
                          "estimatedImpressionLower": "800"
                        }
                      },
                      {
                        "bid": "2.4",
                        "type": "SUGGESTED_UPPER",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1350",
                          "estimatedImpressionUpper": "1800",
                          "estimatedImpressionLower": "900"
                        }
                      },
                      {
                        "bid": "2.6",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1350",
                          "estimatedImpressionUpper": "1800",
                          "estimatedImpressionLower": "900"
                        }
                      }
                    ],
                    "PLACEMENT_PRODUCT_PAGE": [
                      {
                        "bid": "0.8",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "300",
                          "estimatedImpressionUpper": "400",
                          "estimatedImpressionLower": "200"
                        }
                      },
                      {
                        "bid": "1.1",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "525",
                          "estimatedImpressionUpper": "700",
                          "estimatedImpressionLower": "350"
                        }
                      },
                      {
                        "bid": "1.3",
                        "type": "SUGGESTED_LOWER",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "675",
                          "estimatedImpressionUpper": "900",
                          "estimatedImpressionLower": "450"
                        }
                      },
                      {
                        "bid": "1.5",
                        "type": "SUGGESTED",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "900",
                          "estimatedImpressionUpper": "1200",
                          "estimatedImpressionLower": "600"
                        }
                      },
                      {
                        "bid": "1.7",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1050",
                          "estimatedImpressionUpper": "1400",
                          "estimatedImpressionLower": "700"
                        }
                      },
                      {
                        "bid": "2",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1200",
                          "estimatedImpressionUpper": "1600",
                          "estimatedImpressionLower": "800"
                        }
                      },
                      {
                        "bid": "2.4",
                        "type": "SUGGESTED_UPPER",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1350",
                          "estimatedImpressionUpper": "1800",
                          "estimatedImpressionLower": "900"
                        }
                      },
                      {
                        "bid": "2.6",
                        "type": "ALTERNATIVE",
                        "impactMetrics": {
                          "estimatedImpressionAvg": "1350",
                          "estimatedImpressionUpper": "1800",
                          "estimatedImpressionLower": "900"
                        }
                      }
                    ]
                  },
                  "targetingExpression": {
                    "type": "LOOSE_MATCH"
                  }
                }
              ],
              "bidRecommendationsForTargetingExpressions": [
                {
                  "suggestedBidImpactMetrics": {
                    "estimatedImpressionUpper": "1400",
                    "estimatedImpressionLower": "700"
                  },
                  "bidValues": [
                    {
                      "suggestedBid": "1.2"
                    },
                    {
                      "suggestedBid": "1.7"
                    },
                    {
                      "suggestedBid": "2.2"
                    }
                  ],
                  "targetingExpression": {
                    "type": "CLOSE_MATCH"
                  }
                },
                {
                  "suggestedBidImpactMetrics": {
                    "estimatedImpressionUpper": "1200",
                    "estimatedImpressionLower": "600"
                  },
                  "bidValues": [
                    {
                      "suggestedBid": "1.3"
                    },
                    {
                      "suggestedBid": "1.5"
                    },
                    {
                      "suggestedBid": "2.4"
                    }
                  ],
                  "targetingExpression": {
                    "type": "LOOSE_MATCH"
                  }
                }
              ]
            }
          ]
        }
      },
      "AdGroupBasedRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RecommendationOptions"
          }
        ],
        "properties": {
          "campaignId": {
            "description": "The identifier of the campaign",
            "type": "string"
          },
          "recommendationType": {
            "description": "The recommendationType to retrieve recommended keyword targets for an existing ad group.",
            "type": "string",
            "enum": [
              "KEYWORDS_FOR_ADGROUP"
            ]
          },
          "bidsEnabled": {
            "default": "true",
            "description": "Set this parameter to false if you do not want to retrieve bid suggestions for your keyword targets. Defaults to true.",
            "type": "boolean"
          },
          "adGroupId": {
            "description": "The identifier of the ad group",
            "type": "string"
          }
        }
      },
      "SponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent": {
        "type": "object",
        "properties": {
          "negativeKeywords": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "An array of negativeKeywords.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCreateNegativeKeyword"
            }
          }
        },
        "required": [
          "negativeKeywords"
        ]
      },
      "SponsoredProductsDraftProductAdExtendedData": {
        "type": "object",
        "properties": {
          "lastUpdateDateTime": {
            "format": "date-time",
            "description": "Last updated date in ISO 8601.",
            "type": "string"
          },
          "servingStatus": {
            "$ref": "#/components/schemas/SponsoredProductsAdServingStatus"
          },
          "creationDateTime": {
            "format": "date-time",
            "description": "Creation date in ISO 8601.",
            "type": "string"
          }
        }
      },
      "ThemeBasedBidRecommendationResponseV4": {
        "description": "A list of bid recommendation themes and associated bid recommendations.",
        "type": "object",
        "properties": {
          "bidRecommendations": {
            "maxItems": 2,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ThemeBasedBidRecommendationV4"
            }
          }
        },
        "required": [
          "bidRecommendations"
        ],
        "example": {
          "bidRecommendations": [
            {
              "theme": "CONVERSION_OPPORTUNITIES",
              "bidRecommendationsForTargetingExpressions": [
                {
                  "bidValues": [
                    {
                      "suggestedBid": "1"
                    },
                    {
                      "suggestedBid": "1.5"
                    },
                    {
                      "suggestedBid": "2"
                    }
                  ],
                  "targetingExpression": {
                    "type": "CLOSE_MATCH"
                  }
                },
                {
                  "bidValues": [
                    {
                      "suggestedBid": "1.1"
                    },
                    {
                      "suggestedBid": "1.4"
                    },
                    {
                      "suggestedBid": "2.2"
                    }
                  ],
                  "targetingExpression": {
                    "type": "LOOSE_MATCH"
                  }
                }
              ]
            },
            {
              "theme": "PRIME_DAY",
              "bidRecommendationsForTargetingExpressions": [
                {
                  "bidValues": [
                    {
                      "suggestedBid": "1.2"
                    },
                    {
                      "suggestedBid": "1.7"
                    },
                    {
                      "suggestedBid": "2.2"
                    }
                  ],
                  "targetingExpression": {
                    "type": "CLOSE_MATCH"
                  }
                },
                {
                  "bidValues": [
                    {
                      "suggestedBid": "1.3"
                    },
                    {
                      "suggestedBid": "1.5"
                    },
                    {
                      "suggestedBid": "2.4"
                    }
                  ],
                  "targetingExpression": {
                    "type": "LOOSE_MATCH"
                  }
                }
              ]
            }
          ]
        }
      },
      "SponsoredProductsCampaignNegativeKeywordAccessExceptionResponseContent": {
        "description": "Exception resulting in accessing campaign management entities",
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsInvalidArgumentErrorCode"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCampaignNegativeKeywordAccessError"
            }
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "SponsoredProductsDraftNegativeKeywordAccessErrorSelector": {
        "type": "object",
        "properties": {
          "entityNotFoundError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityNotFoundError"
          },
          "missingValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMissingValueError"
          },
          "malformedValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMalformedValueError"
          },
          "internalServerError": {
            "$ref": "#/components/schemas/SponsoredProductsInternalServerError"
          },
          "rangeError": {
            "$ref": "#/components/schemas/SponsoredProductsRangeError"
          },
          "otherError": {
            "$ref": "#/components/schemas/SponsoredProductsOtherError"
          },
          "throttledError": {
            "$ref": "#/components/schemas/SponsoredProductsThrottledError"
          }
        }
      },
      "SponsoredProductsState": {
        "description": "Entity State.\n| State |  description |\n|-----------|------------|\n| `ENABLED` | The entity is enabled. |\n| `PAUSED` | The entity is disabled. |\n| `PROPOSED` | The entity is proposed. (Upcoming Feature) |\n| `ARCHIVED` | The entity is archived. |",
        "type": "string",
        "enum": [
          "ENABLED",
          "PAUSED",
          "PROPOSED",
          "ARCHIVED"
        ]
      },
      "SponsoredProductsDraftKeywordSuccessResponseItem": {
        "type": "object",
        "properties": {
          "keywordId": {
            "description": "the draft keyword ID",
            "type": "string"
          },
          "index": {
            "format": "int32",
            "description": "the index of the draft keyword in the array from the request body",
            "type": "integer",
            "minimum": 0
          },
          "keyword": {
            "$ref": "#/components/schemas/SponsoredProductsDraftKeyword"
          }
        },
        "required": [
          "index"
        ]
      },
      "RankedKeywordTargetsForAsinsRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/KeywordTargetRankRecommendationRequest"
          }
        ],
        "description": "This request type is used to retrieve recommended keyword targets for ASINs. Set the recommendationType to KEYWORDS_FOR_ASINS to use this request type.",
        "required": [
          "recommendationType",
          "asins"
        ],
        "properties": {
          "asins": {
            "minItems": 0,
            "maxItems": 50,
            "description": "An array list of Asins",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "productDetailsList": {
            "$ref": "#/components/schemas/ProductDetailsList"
          },
          "biddingStrategy": {
            "default": "LEGACY_FOR_SALES",
            "description": "The bid recommendations returned will depend on the bidding strategy. <br> LEGACY_FOR_SALES - Dynamic Bids (Down only) <br> AUTO_FOR_SALES - Dynamic Bids (Up or down) <br> MANUAL - Fixed Bids",
            "type": "string",
            "enum": [
              "LEGACY_FOR_SALES",
              "AUTO_FOR_SALES",
              "MANUAL",
              "RULE_BASED"
            ]
          },
          "recommendationType": {
            "description": "The recommendationType to retrieve recommended keyword targets for a list of ASINs.",
            "type": "string",
            "enum": [
              "KEYWORDS_FOR_ASINS"
            ]
          },
          "bidsEnabled": {
            "default": "true",
            "description": "Set this parameter to false if you do not want to retrieve bid suggestions for your keyword targets. Defaults to true.",
            "type": "boolean"
          }
        }
      },
      "SponsoredProductsListSponsoredProductsNegativeKeywordsPreviewResponseContent": {
        "type": "object",
        "properties": {
          "negativeKeywords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsNegativeKeyword"
            }
          },
          "totalResults": {
            "format": "int64",
            "description": "The total number of entities",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          }
        }
      },
      "OptimizationRulesAPISwaggerEntityType": {
        "description": "Types of advertising entities that may be associated to an optimization rule.",
        "type": "string",
        "enum": [
          "CAMPAIGN",
          "AD_GROUP",
          "TARGET_PROMOTION_GROUP"
        ],
        "example": "CAMPAIGN"
      },
      "SponsoredProductsQuotaErrorReason": {
        "type": "string",
        "enum": [
          "QUOTA_EXCEEDED",
          "NON_ARCHIVED_QUOTA_EXCEEDED"
        ]
      },
      "Theme": {
        "description": "The bid recommendation theme. This API currently supports `CONVERSION_OPPORTUNITIES`, `PRIME_DAY`, `FALL_PRIME_DEAL_EVENT`, and `BFCM_HOLIDAY` themes.",
        "type": "string",
        "enum": [
          "CONVERSION_OPPORTUNITIES",
          "PRIME_DAY",
          "FALL_PRIME_DEAL_EVENT",
          "BFCM_HOLIDAY"
        ]
      },
      "SponsoredProductsDraftKeywordExtendedData": {
        "type": "object",
        "properties": {
          "lastUpdateDateTime": {
            "format": "date-time",
            "description": "Last updated date in ISO 8601.",
            "type": "string"
          },
          "servingStatus": {
            "$ref": "#/components/schemas/SponsoredProductsKeywordServingStatus"
          },
          "creationDateTime": {
            "format": "date-time",
            "description": "Creation date in ISO 8601.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsBudgetType": {
        "type": "string",
        "enum": [
          "DAILY",
          "OTHER"
        ]
      },
      "SponsoredProductsGlobalKeywordFailureResponseItem": {
        "type": "object",
        "properties": {
          "index": {
            "format": "int32",
            "description": "the index of the keyword in the array from the request body",
            "type": "integer",
            "minimum": 0
          },
          "errors": {
            "description": "A list of validation errors",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsKeywordMutationError"
            }
          }
        },
        "required": [
          "index"
        ]
      },
      "SponsoredProductsGlobalNegativeTargetingClauseFailureResponseItem": {
        "type": "object",
        "properties": {
          "index": {
            "format": "int32",
            "description": "the index of the NegativeTargetingClause in the array from the request body",
            "type": "integer",
            "minimum": 0
          },
          "errors": {
            "description": "A list of validation errors",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsNegativeTargetMutationError"
            }
          }
        },
        "required": [
          "index"
        ]
      },
      "SponsoredProductsCopySponsoredProductsCampaignsResponseContent": {
        "type": "object",
        "properties": {
          "copyCampaignResponses": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCopyCampaignResponse"
            }
          }
        },
        "required": [
          "copyCampaignResponses"
        ]
      },
      "SponsoredProductsProductAdMutationExceptionResponseContent": {
        "description": "Exception resulting in mutating campaign management entities",
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsInvalidArgumentErrorCode"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsProductAdMutationError"
            }
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "SponsoredProductsCreateSponsoredProductsGlobalKeywordsResponseContent": {
        "type": "object",
        "properties": {
          "keywords": {
            "$ref": "#/components/schemas/SponsoredProductsBulkGlobalKeywordOperationResponse"
          }
        },
        "required": [
          "keywords"
        ]
      },
      "KeywordGroupsRecommendationsRequest": {
        "description": "Keyword groups request.",
        "type": "object",
        "required": [
          "asins"
        ],
        "properties": {
          "asins": {
            "minItems": 1,
            "maxItems": 1000,
            "description": "List of ASINs.",
            "type": "array",
            "items": {
              "description": "ASIN.",
              "type": "string",
              "maxLength": 32
            }
          },
          "nextToken": {
            "description": "If the last response included this field then there are more items to retrieve.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsRecommendedTarget": {
        "type": "object",
        "properties": {
          "adId": {
            "description": "The ID of an ad for which the targets are recommended",
            "type": "string"
          },
          "campaignId": {
            "description": "The ID of a campaign for which the targets are recommended",
            "type": "string"
          },
          "targetType": {
            "$ref": "#/components/schemas/SponsoredProductsTargetType"
          },
          "adAsin": {
            "description": "The ASIN of the product being advertised",
            "type": "string"
          },
          "recommendedTarget": {
            "description": "The keyword or ASIN that is being targeted",
            "type": "string"
          },
          "adGroupId": {
            "description": "The ID of an ad group for which the targets are recommended",
            "type": "string"
          },
          "recommendationReasons": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "Provides a list of reasons for why this target is being recommended for harvesting",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsRecommendationReason"
            }
          }
        }
      },
      "SponsoredProductsGlobalTargetingExpressionPredicate": {
        "type": "object",
        "properties": {
          "marketplaceSettings": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "The marketplace settings for expression to be overridden for marketplace.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsTargetingExpressionPredicateMarketValue"
            }
          },
          "type": {
            "$ref": "#/components/schemas/SponsoredProductsTargetingExpressionPredicateType"
          }
        }
      },
      "SponsoredProductsListSponsoredProductsGlobalKeywordsRequestContent": {
        "type": "object",
        "properties": {
          "maxResults": {
            "format": "int32",
            "description": "Number of records to include in the paginated response. Defaults to max page size for given API",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          },
          "includeExtendedDataFields": {
            "description": "Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus",
            "type": "boolean"
          },
          "keywordIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          }
        }
      },
      "AgeRangesLoP": {
        "description": "List of Age Ranges in a language of preference (LoP). Use the POST /sp/targets/category/{categoryId}/refinements endpoint to retrieve Age Ranges. Age Ranges are only available for categories related to children's toys and games.",
        "type": "array",
        "items": {
          "minItems": 0,
          "maxItems": 15,
          "$ref": "#/components/schemas/AgeRangeLoP"
        }
      },
      "SponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent": {
        "type": "object",
        "properties": {
          "adGroupIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          }
        },
        "required": [
          "adGroupIdFilter"
        ]
      },
      "OptimizationRulesAPISwaggerRecommendationStatusUpdate": {
        "type": "object",
        "properties": {
          "recommendationId": {
            "$ref": "#/components/schemas/OptimizationRulesAPISwaggerEntityFieldFilter"
          },
          "status": {
            "$ref": "#/components/schemas/OptimizationRulesAPISwaggerEntityFieldFilter"
          }
        }
      },
      "SponsoredProductsDeleteSponsoredProductsGlobalTargetingClausesResponseContent": {
        "type": "object",
        "properties": {
          "targetingClauses": {
            "$ref": "#/components/schemas/SponsoredProductsBulkGlobalTargetingClauseOperationResponse"
          }
        },
        "required": [
          "targetingClauses"
        ]
      },
      "SponsoredProductsCampaignExtendedData": {
        "type": "object",
        "properties": {
          "lastUpdateDateTime": {
            "format": "date-time",
            "description": "Last updated date in ISO 8601.",
            "type": "string"
          },
          "servingStatus": {
            "$ref": "#/components/schemas/SponsoredProductsCampaignServingStatus"
          },
          "servingStatusDetails": {
            "description": "The serving status reasons of the Campaign",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCampaignServingStatusDetail"
            }
          },
          "creationDateTime": {
            "format": "date-time",
            "description": "Creation date in ISO 8601.",
            "type": "string"
          }
        }
      },
      "BudgetRecommendationNewCampaignsErrorMessage": {
        "type": "string"
      },
      "SponsoredProductsReducedObjectIdFilter": {
        "description": "Filter entities by the list of objectIds",
        "type": "object",
        "properties": {
          "include": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "description": "entity object identifier",
              "type": "string"
            }
          }
        },
        "required": [
          "include"
        ]
      },
      "SponsoredProductsDeleteTargetPromotionGroupsInternalRequestContent": {
        "type": "object",
        "properties": {
          "apiGatewayContext": {
            "$ref": "#/components/schemas/SponsoredProductsApiGatewayContext"
          },
          "targetPromotionGroups": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsTargetPromotionGroup"
            }
          }
        },
        "required": [
          "apiGatewayContext"
        ]
      },
      "SponsoredProductsDeleteSponsoredProductsGlobalKeywordsResponseContent": {
        "type": "object",
        "properties": {
          "keywords": {
            "$ref": "#/components/schemas/SponsoredProductsBulkGlobalKeywordOperationResponse"
          }
        },
        "required": [
          "keywords"
        ]
      },
      "SponsoredProductsDraftKeywordMutationError": {
        "type": "object",
        "properties": {
          "errorType": {
            "description": "The type of the error",
            "type": "string"
          },
          "errorValue": {
            "$ref": "#/components/schemas/SponsoredProductsDraftKeywordMutationErrorSelector"
          }
        },
        "required": [
          "errorType",
          "errorValue"
        ]
      },
      "SponsoredProductsDraftAdGroupAccessErrorSelector": {
        "type": "object",
        "properties": {
          "entityNotFoundError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityNotFoundError"
          },
          "missingValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMissingValueError"
          },
          "malformedValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMalformedValueError"
          },
          "internalServerError": {
            "$ref": "#/components/schemas/SponsoredProductsInternalServerError"
          },
          "rangeError": {
            "$ref": "#/components/schemas/SponsoredProductsRangeError"
          },
          "otherError": {
            "$ref": "#/components/schemas/SponsoredProductsOtherError"
          },
          "throttledError": {
            "$ref": "#/components/schemas/SponsoredProductsThrottledError"
          }
        }
      },
      "CountryBudgetRecommendation": {
        "type": "object",
        "required": [
          "sevenDaysMissedOpportunities",
          "suggestedBudget"
        ],
        "properties": {
          "suggestedBudget": {
            "description": "recommended budget for the country in country's local currency.",
            "type": "number"
          },
          "sevenDaysMissedOpportunities": {
            "$ref": "#/components/schemas/SevenDaysMissedOpportunities"
          }
        }
      },
      "SponsoredProductsDraftNegativeTargetAccessErrorSelector": {
        "type": "object",
        "properties": {
          "entityNotFoundError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityNotFoundError"
          },
          "missingValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMissingValueError"
          },
          "malformedValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMalformedValueError"
          },
          "internalServerError": {
            "$ref": "#/components/schemas/SponsoredProductsInternalServerError"
          },
          "rangeError": {
            "$ref": "#/components/schemas/SponsoredProductsRangeError"
          },
          "otherError": {
            "$ref": "#/components/schemas/SponsoredProductsOtherError"
          },
          "throttledError": {
            "$ref": "#/components/schemas/SponsoredProductsThrottledError"
          }
        }
      },
      "SponsoredProductsCampaignNegativeKeywordMutationError": {
        "type": "object",
        "properties": {
          "errorType": {
            "description": "The type of the error",
            "type": "string"
          },
          "errorValue": {
            "$ref": "#/components/schemas/SponsoredProductsCampaignNegativeKeywordMutationErrorSelector"
          }
        },
        "required": [
          "errorType",
          "errorValue"
        ]
      },
      "CountryBidsMap": {
        "description": "The bid value for each country.",
        "additionalProperties": {
          "description": "The bid value.",
          "type": "number"
        },
        "maxProperties": 50,
        "type": "object"
      },
      "PerformanceMetric": {
        "description": "The advertising performance metric.",
        "type": "string",
        "enum": [
          "ACOS",
          "CTR",
          "CVR",
          "ROAS"
        ]
      },
      "SponsoredProductsListSponsoredProductsGlobalCampaignsRequestContent": {
        "type": "object",
        "properties": {
          "campaignIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          },
          "maxResults": {
            "format": "int32",
            "description": "Number of records to include in the paginated response. Defaults to max page size for given API",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          },
          "includeExtendedDataFields": {
            "description": "Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus",
            "type": "boolean"
          }
        }
      },
      "TargetingExpressionListV4": {
        "maxItems": 100,
        "description": "The list of targeting expressions. Maximum of 100 per request, use pagination for more if needed.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/TargetingExpressionV4"
        },
        "example": [
          {
            "type": "CLOSE_MATCH"
          },
          {
            "type": "LOOSE_MATCH"
          },
          {
            "type": "SUBSTITUTES"
          },
          {
            "type": "COMPLEMENTS"
          }
        ]
      },
      "SponsoredProductsTargetAccessError": {
        "type": "object",
        "properties": {
          "errorType": {
            "description": "The type of the error",
            "type": "string"
          },
          "errorValue": {
            "$ref": "#/components/schemas/SponsoredProductsTargetAccessErrorSelector"
          }
        },
        "required": [
          "errorType",
          "errorValue"
        ]
      },
      "SponsoredProductsBulkDraftAdGroupOperationResponse": {
        "type": "object",
        "properties": {
          "success": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftAdGroupSuccessResponseItem"
            }
          },
          "error": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftAdGroupFailureResponseItem"
            }
          }
        }
      },
      "SponsoredProductsNotImplementedExceptionResponseContent": {
        "description": "Operation is not implemented.",
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsNotImplementedExceptionCode"
          },
          "message": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesResponseContent": {
        "type": "object",
        "properties": {
          "negativeTargetingClauses": {
            "$ref": "#/components/schemas/SponsoredProductsBulkNegativeTargetingClauseOperationResponse"
          }
        },
        "required": [
          "negativeTargetingClauses"
        ]
      },
      "OptimizationRulesAPISwaggerOptimizationRulesError": {
        "description": "Error response object.",
        "type": "object",
        "properties": {
          "code": {
            "description": "An enumerated error code for machine use.",
            "type": "string"
          },
          "message": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsBillingError": {
        "description": "Errors related to bids",
        "type": "object",
        "properties": {
          "reason": {
            "$ref": "#/components/schemas/SponsoredProductsBillingErrorReason"
          },
          "cause": {
            "$ref": "#/components/schemas/SponsoredProductsErrorCause"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          }
        },
        "required": [
          "message",
          "reason"
        ]
      },
      "BudgetRecommendationNewCampaignsException": {
        "type": "object",
        "properties": {
          "message": {
            "$ref": "#/components/schemas/BudgetRecommendationNewCampaignsErrorMessage"
          }
        }
      },
      "RecKeywordTarget": {
        "type": "object",
        "properties": {
          "searchTermImpressionShare": {
            "format": "Double",
            "description": "The account-level ad-attributed impression share for the search-term/keyword. Provides percentage share of all ad impressions the advertiser has for the keyword in the last 30 days. This metric helps advertisers identify potential opportunities based on their share on relevant keywords. This information is only available for keywords the advertiser targeted with ad impressions.",
            "type": "number"
          },
          "translation": {
            "description": "The translation of keyword if a locale is passed in",
            "type": "string"
          },
          "bidInfo": {
            "minItems": 0,
            "maxItems": 3,
            "description": "A list of keyword bid info",
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/KeywordBidInfo"
                }
              ]
            }
          },
          "searchTermImpressionRank": {
            "description": "The account-level ad-attributed impression rank for the search-term/keyword. Provides [1:N] place the advertiser ranks among all advertisers for the keyword by ad impressions in a marketplace in the last 30 days. It tells an advertiser how many advertisers had higher share of ad impressions. This information is only available for keywords the advertiser targeted with ad impressions.",
            "type": "number"
          },
          "keyword": {
            "description": "The keyword value",
            "type": "string"
          },
          "userSelectedKeyword": {
            "description": "Flag that tells if keyword was selected by the user or was recommended by KRS",
            "type": "boolean"
          },
          "recId": {
            "description": "The recommended keyword target id",
            "type": "string"
          }
        }
      },
      "SponsoredProductsInvalidInputError": {
        "description": "Errors related to ad eligibility",
        "type": "object",
        "properties": {
          "reason": {
            "$ref": "#/components/schemas/SponsoredProductsInvalidInputErrorReason"
          },
          "cause": {
            "$ref": "#/components/schemas/SponsoredProductsErrorCause"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          }
        },
        "required": [
          "message",
          "reason"
        ]
      },
      "SponsoredProductsSPProductCategoryTargetDetails": {
        "type": "object",
        "properties": {
          "productAgeRangeId": {
            "description": "The age range ID to target.",
            "type": "string"
          },
          "productPriceLessThan": {
            "format": "double",
            "description": "Refinement to target products with a price less than the value within the product category.",
            "type": "number"
          },
          "productPrimeShippingEligible": {
            "description": "Target based on if a product is Prime-shipping eligible.",
            "type": "boolean"
          },
          "productCategoryIdResolved": {
            "description": "The resolved product category.",
            "type": "string"
          },
          "productBrandId": {
            "description": "The brand ID to target.",
            "type": "string"
          },
          "productBrandIdResolved": {
            "description": "The resolved name of the brand.",
            "type": "string"
          },
          "productRatingLessThan": {
            "format": "double",
            "description": "Refinement to target products with a rating less than the value within the product category.",
            "type": "number"
          },
          "productGenreId": {
            "description": "The product genre ID to target.",
            "type": "string"
          },
          "productCategoryId": {
            "description": "The product category ID to target.",
            "type": "string"
          },
          "productRatingGreaterThan": {
            "format": "double",
            "description": "Refinement to target products with a rating greater than the value within the product category.",
            "type": "number"
          },
          "productAgeRangeIdResolved": {
            "description": "The resolved age range to target.",
            "type": "string"
          },
          "productGenreIdResolved": {
            "description": "The resolved product genre to target.",
            "type": "string"
          },
          "productPriceGreaterThan": {
            "format": "double",
            "description": "Refinement to target products with a price greater than the value within the product category.",
            "type": "number"
          }
        }
      },
      "SponsoredProductsCopyCampaignTaskDetails": {
        "type": "object",
        "properties": {
          "targetMarketplaceId": {
            "description": "The target marketplace in obfuscated format.",
            "type": "string"
          },
          "targetCampaignId": {
            "description": "The identifier of the campaign in the target marketplace.",
            "type": "string"
          },
          "percentageCompleted": {
            "format": "int32",
            "description": "Percent of copy operation that is complete",
            "type": "integer"
          },
          "sourceMarketplaceId": {
            "description": "The source marketplace in obfuscated format.",
            "type": "string"
          },
          "sourceCampaignId": {
            "description": "The identifier of the campaign in the source marketplace.",
            "type": "string"
          },
          "sourceAdvertiserId": {
            "description": "The identifier of the advertiser in source marketplace.",
            "type": "string"
          },
          "targetAdvertiserId": {
            "description": "The identifier of the advertiser in the target marketplace.",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/SponsoredProductsAsyncStatus"
          },
          "errorDetails": {
            "minItems": 0,
            "maxItems": 10,
            "description": "Errors that could occur during async process (up to 10)",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCopyCampaignErrorDetail"
            }
          }
        }
      },
      "SDListAssociatedBudgetRulesResponse": {
        "type": "object",
        "properties": {
          "associatedRules": {
            "description": "A list of associated budget rules.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SDBudgetRule"
            }
          }
        }
      },
      "SponsoredProductsDraftCampaignNegativeKeywordMutationErrorSelector": {
        "type": "object",
        "properties": {
          "entityNotFoundError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityNotFoundError"
          },
          "entityStateError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityStateError"
          },
          "missingValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMissingValueError"
          },
          "malformedValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMalformedValueError"
          },
          "duplicateValueError": {
            "$ref": "#/components/schemas/SponsoredProductsDuplicateValueError"
          },
          "billingError": {
            "$ref": "#/components/schemas/SponsoredProductsBillingError"
          },
          "entityQuotaError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityQuotaError"
          },
          "internalServerError": {
            "$ref": "#/components/schemas/SponsoredProductsInternalServerError"
          },
          "rangeError": {
            "$ref": "#/components/schemas/SponsoredProductsRangeError"
          },
          "otherError": {
            "$ref": "#/components/schemas/SponsoredProductsOtherError"
          },
          "throttledError": {
            "$ref": "#/components/schemas/SponsoredProductsThrottledError"
          }
        }
      },
      "SponsoredProductsListSponsoredProductsDraftAdGroupsResponseContent": {
        "type": "object",
        "properties": {
          "totalResults": {
            "format": "int64",
            "description": "The total number of entities",
            "type": "integer"
          },
          "adGroups": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftAdGroup"
            }
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          }
        }
      },
      "SponsoredProductsNameFilter": {
        "description": "Filter entities by name",
        "type": "object",
        "properties": {
          "queryTermMatchType": {
            "$ref": "#/components/schemas/SponsoredProductsQueryTermMatchType"
          },
          "include": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SponsoredProductsCreateTargetPromotionGroupTargetsSuccessResponseItem": {
        "description": "Response object of successfully created target promotion group target.",
        "type": "object",
        "properties": {
          "expressionType": {
            "description": "The expression type of the target that was requested to be created.",
            "type": "string"
          },
          "targetDetails": {
            "$ref": "#/components/schemas/SponsoredProductsCreateTarget"
          },
          "target": {
            "description": "The target that was requested to be created.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsCreateNegativeTargetingClause": {
        "type": "object",
        "properties": {
          "expression": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "The NegativeTargeting expression.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateNegativeTargetingExpressionPredicate"
            }
          },
          "campaignId": {
            "description": "The identifier of the campaign to which this target is associated.",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateEntityState"
          },
          "adGroupId": {
            "description": "The identifier of the ad group to which this target is associated.",
            "type": "string"
          }
        },
        "required": [
          "adGroupId",
          "campaignId",
          "expression",
          "state"
        ]
      },
      "SponsoredProductsDraftCampaignNegativeKeywordSuccessResponseItem": {
        "type": "object",
        "properties": {
          "campaignNegativeKeyword": {
            "$ref": "#/components/schemas/SponsoredProductsDraftCampaignNegativeKeyword"
          },
          "campaignNegativeKeywordId": {
            "description": "the negativeKeyword ID",
            "type": "string"
          },
          "index": {
            "format": "int32",
            "description": "the index of the draft in the array from the request body",
            "type": "integer",
            "minimum": 0
          }
        },
        "required": [
          "index"
        ]
      },
      "RankedTargetResponse": {
        "type": "object",
        "properties": {
          "keywordTargetList": {
            "minItems": 0,
            "maxItems": 200,
            "description": "A list of ranked keyword targets",
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/RecKeywordTarget"
                }
              ]
            }
          }
        }
      },
      "AgeRanges": {
        "description": "List of Age Ranges. Use the GetRefinementsForCategory to retrieve Age Ranges. Age Ranges are only available for categories related to children's toys and games.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AgeRange"
        }
      },
      "SponsoredProductsCreateAllSPTargetsResponseContent": {
        "type": "object",
        "properties": {
          "success": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsAllTargetsSuccessResponseItem"
            }
          },
          "error": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsAllTargetsFailureResponseItem"
            }
          }
        }
      },
      "SponsoredProductsDeleteSponsoredProductsDraftKeywordsResponseContent": {
        "type": "object",
        "properties": {
          "keywords": {
            "$ref": "#/components/schemas/SponsoredProductsBulkDraftKeywordOperationResponse"
          }
        },
        "required": [
          "keywords"
        ]
      },
      "SponsoredProductsCreateTargetPromotionGroupsResponseContent": {
        "description": "Response object for creating a target promotion group.",
        "type": "object",
        "properties": {
          "targetPromotionGroup": {
            "$ref": "#/components/schemas/SponsoredProductsTargetPromotionGroup"
          }
        }
      },
      "SponsoredProductsEntityNotFoundError": {
        "type": "object",
        "properties": {
          "reason": {
            "$ref": "#/components/schemas/SponsoredProductsEntityNotFoundErrorReason"
          },
          "entityType": {
            "$ref": "#/components/schemas/SponsoredProductsEntityType"
          },
          "cause": {
            "$ref": "#/components/schemas/SponsoredProductsErrorCause"
          },
          "entityId": {
            "description": "The entity id in the request",
            "type": "string"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          }
        },
        "required": [
          "entityId",
          "entityType",
          "message",
          "reason"
        ]
      },
      "OptimizationRulesAPISwaggerAssociateOptimizationRulesResponseSuccessItem": {
        "type": "object",
        "properties": {
          "entityType": {
            "$ref": "#/components/schemas/OptimizationRulesAPISwaggerEntityType"
          },
          "index": {
            "description": "Index of the successful association pair in the request.",
            "type": "integer"
          },
          "entityId": {
            "description": "The id that uniquely identifies the advertising entity that was associated to.",
            "type": "string"
          },
          "optimizationRuleId": {
            "description": "The id that uniquely identifies the optimization rule that was associated.",
            "type": "integer"
          }
        },
        "required": [
          "index",
          "entityId",
          "entityType",
          "optimizationRuleId"
        ]
      },
      "UpdateRMSBudgetRulesRequest": {
        "description": "Request object for updating budget rule for RMS campaign",
        "type": "object",
        "properties": {
          "budgetRulesDetails": {
            "maxItems": 25,
            "description": "A list of budget rule details.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RMSBudgetRule"
            }
          }
        }
      },
      "SponsoredProductsDeleteSponsoredProductsGlobalProductAdsResponseContent": {
        "type": "object",
        "properties": {
          "productAds": {
            "$ref": "#/components/schemas/SponsoredProductsBulkGlobalProductAdOperationResponse"
          }
        },
        "required": [
          "productAds"
        ]
      },
      "SponsoredProductsUpdateGlobalNegativeKeyword": {
        "type": "object",
        "properties": {
          "keywordId": {
            "description": "The identifier of the keyword.",
            "type": "string"
          },
          "name": {
            "description": "Name for the keyword",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateGlobalEntityState"
          },
          "keywordText": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalNegativeKeywordText"
          }
        },
        "required": [
          "keywordId"
        ]
      },
      "SponsoredProductsTargetPromotionGroupTargetDetails": {
        "oneOf": [
          {
            "type": "object",
            "title": "keywordTarget",
            "properties": {
              "keywordTarget": {
                "$ref": "#/components/schemas/SponsoredProductsKeywordTarget"
              }
            },
            "required": [
              "keywordTarget"
            ]
          },
          {
            "type": "object",
            "title": "productTarget",
            "properties": {
              "productTarget": {
                "$ref": "#/components/schemas/SponsoredProductsProductTarget"
              }
            },
            "required": [
              "productTarget"
            ]
          }
        ]
      },
      "GlobalProductAttributeTargetingBadRequestException": {
        "type": "object",
        "properties": {
          "errors": {
            "minItems": 1,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GlobalProductAttributeTargetingErrorModel"
            }
          }
        }
      },
      "SponsoredProductsDeleteSponsoredProductsDraftNegativeKeywordsResponseContent": {
        "type": "object",
        "properties": {
          "negativeKeywords": {
            "$ref": "#/components/schemas/SponsoredProductsBulkDraftNegativeKeywordOperationResponse"
          }
        },
        "required": [
          "negativeKeywords"
        ]
      },
      "SponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent": {
        "type": "object",
        "properties": {
          "negativeKeywords": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "An array of negativeKeywords with updated values.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsUpdateNegativeKeyword"
            }
          }
        },
        "required": [
          "negativeKeywords"
        ]
      },
      "SponsoredProductsProductAdFailureResponseItem": {
        "type": "object",
        "properties": {
          "index": {
            "format": "int32",
            "description": "the index of the product ad in the array from the request body",
            "type": "integer",
            "minimum": 0
          },
          "errors": {
            "description": "A list of validation errors",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsProductAdMutationError"
            }
          }
        },
        "required": [
          "index"
        ]
      },
      "SponsoredProductsCreateTargetPromotionGroupsInternalRequestContent": {
        "type": "object",
        "properties": {
          "adIds": {
            "minItems": 1,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "description": "Entity object identifier",
              "type": "string"
            }
          },
          "existingCampaignDetails": {
            "$ref": "#/components/schemas/SponsoredProductsExistingCampaignDetails"
          },
          "apiGatewayContext": {
            "$ref": "#/components/schemas/SponsoredProductsApiGatewayContext"
          },
          "adGroupId": {
            "description": "Entity object identifier",
            "type": "string"
          },
          "newCampaignDetails": {
            "$ref": "#/components/schemas/SponsoredProductsNewCampaignDetails"
          }
        },
        "required": [
          "adGroupId",
          "apiGatewayContext"
        ]
      },
      "SponsoredProductsCreateSponsoredProductsGlobalCampaignsResponseContent": {
        "type": "object",
        "properties": {
          "campaigns": {
            "$ref": "#/components/schemas/SponsoredProductsBulkGlobalCampaignOperationResponse"
          }
        },
        "required": [
          "campaigns"
        ]
      },
      "SponsoredProductsSPProductTargetDetails": {
        "type": "object",
        "properties": {
          "matchType": {
            "$ref": "#/components/schemas/SponsoredProductsProductTargetMatchType"
          },
          "asin": {
            "description": "The product asin to target.",
            "type": "string"
          }
        },
        "required": [
          "asin",
          "matchType"
        ]
      },
      "SponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsResponseContent": {
        "type": "object",
        "properties": {
          "campaignNegativeKeywords": {
            "$ref": "#/components/schemas/SponsoredProductsBulkCampaignNegativeKeywordOperationResponse"
          }
        },
        "required": [
          "campaignNegativeKeywords"
        ]
      },
      "SponsoredProductsThrottledError": {
        "description": "Error that represents failure due to API caller exceeding allowed service limits.",
        "type": "object",
        "properties": {
          "reason": {
            "$ref": "#/components/schemas/SponsoredProductsThrottledErrorReason"
          },
          "cause": {
            "$ref": "#/components/schemas/SponsoredProductsErrorCause"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          }
        },
        "required": [
          "message",
          "reason"
        ]
      },
      "SponsoredProductsKeywordTarget": {
        "description": "A keyword target.",
        "type": "object",
        "properties": {
          "keywordId": {
            "description": "The id of the keyword target.",
            "type": "string"
          },
          "targetPromotionGroupId": {
            "description": "The id of the target promotion group.",
            "type": "string"
          },
          "matchType": {
            "description": "The match type (for KEYWORDs). One of EXACT, PHRASE, BROAD",
            "type": "string"
          },
          "manualTargetingAdGroupId": {
            "description": "The adGroupId of the manual-targeting campaign where the target belongs.",
            "type": "string"
          },
          "keywordText": {
            "description": "The keyword text.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsBiddingErrorReason": {
        "type": "string",
        "enum": [
          "BID_GT_BUDGET",
          "BID_OUT_OF_MARKET_PLACE_RANGE",
          "BID_INVALID_PLACEMENT",
          "BID_INVALID_SHOPPER_COHORT_TYPE",
          "BID_SHOPPER_COHORTS_MORE_THAN_ALLOWED",
          "BID_MISSING_AUDIENCES",
          "BID_AUDIENCES_MORE_THAN_ALLOWED",
          "BID_INVALID_AUDIENCE_SEGMENT_TYPE",
          "BID_INVALID_AUDIENCE_ID"
        ]
      },
      "SponsoredProductsCampaignNegativeKeywordMutationErrorSelector": {
        "type": "object",
        "properties": {
          "entityNotFoundError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityNotFoundError"
          },
          "entityStateError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityStateError"
          },
          "missingValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMissingValueError"
          },
          "malformedValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMalformedValueError"
          },
          "duplicateValueError": {
            "$ref": "#/components/schemas/SponsoredProductsDuplicateValueError"
          },
          "billingError": {
            "$ref": "#/components/schemas/SponsoredProductsBillingError"
          },
          "entityQuotaError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityQuotaError"
          },
          "internalServerError": {
            "$ref": "#/components/schemas/SponsoredProductsInternalServerError"
          },
          "rangeError": {
            "$ref": "#/components/schemas/SponsoredProductsRangeError"
          },
          "parentEntityError": {
            "$ref": "#/components/schemas/SponsoredProductsParentEntityError"
          },
          "otherError": {
            "$ref": "#/components/schemas/SponsoredProductsOtherError"
          },
          "throttledError": {
            "$ref": "#/components/schemas/SponsoredProductsThrottledError"
          }
        }
      },
      "SponsoredProductsUpdateGlobalKeyword": {
        "type": "object",
        "properties": {
          "keywordId": {
            "description": "The identifier of the keyword.",
            "type": "string"
          },
          "name": {
            "description": "Name for the Keyword",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateGlobalEntityState"
          },
          "bid": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalBid"
          },
          "keywordText": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalKeywordText"
          }
        },
        "required": [
          "keywordId"
        ]
      },
      "CreateBudgetRulesResponse": {
        "type": "object",
        "properties": {
          "responses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BudgetRuleResponse"
            }
          }
        }
      },
      "RankedTargetWithThemedBidsResponse": {
        "type": "object",
        "properties": {
          "keywordTargetList": {
            "$ref": "#/components/schemas/RankedTargetWithThemedBidsList"
          },
          "impactMetrics": {
            "minItems": 0,
            "maxItems": 5,
            "description": "A list of impact metrics which anticipates the number of clicks and orders you will receive if you target all targeting expressions using the low, medium, and high suggested bid.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImpactMetrics"
            }
          }
        }
      },
      "SponsoredProductsCopyCampaignResponse": {
        "type": "object",
        "properties": {
          "requestId": {
            "description": "Id of the request to be passed in GET /copy/{requestId}.",
            "type": "string"
          },
          "errorDetail": {
            "$ref": "#/components/schemas/SponsoredProductsCopyCampaignErrorDetail"
          },
          "copyCampaignItem": {
            "$ref": "#/components/schemas/SponsoredProductsCopyCampaign"
          }
        }
      },
      "ThemeRecommendation": {
        "description": "Recommended asins grouped by theme attribute.",
        "type": "object",
        "properties": {
          "description": {
            "description": "A theme name representing the context around the recommended list of ASINs.",
            "type": "string",
            "example": "These target ASINs generated sales for the input ASIN in the past 30 days."
          },
          "recommendedAsins": {
            "description": "List of recommended ASINs under current theme.",
            "type": "array",
            "items": {
              "minLength": 10,
              "type": "string",
              "maxLength": 10,
              "example": "BX20002121"
            }
          },
          "theme": {
            "description": "A theme name representing the context around the recommended list of ASINs.",
            "type": "string",
            "example": "Top Converting targets"
          }
        }
      },
      "RuleConditionList": {
        "maxItems": 3,
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/RuleCondition"
        }
      },
      "SponsoredProductsMarketplaceLevelProductIdentifier": {
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string"
          },
          "marketplace": {
            "$ref": "#/components/schemas/SponsoredProductsMarketplace"
          }
        },
        "required": [
          "identifier"
        ]
      },
      "SponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent": {
        "type": "object",
        "properties": {
          "campaignIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsReducedObjectIdFilter"
          },
          "stateFilter": {
            "$ref": "#/components/schemas/SponsoredProductsEntityStateFilter"
          },
          "negativeKeywordTextFilter": {
            "$ref": "#/components/schemas/SponsoredProductsKeywordTextFilter"
          },
          "maxResults": {
            "format": "int32",
            "description": "Number of records to include in the paginated response. Defaults to max page size for given API",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          },
          "adGroupIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsReducedObjectIdFilter"
          },
          "includeExtendedDataFields": {
            "description": "Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus",
            "type": "boolean"
          },
          "locale": {
            "description": "Restricts results to negativeKeywords that match the specified locale.",
            "type": "string"
          },
          "negativeKeywordIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          },
          "matchTypeFilter": {
            "description": "Only the negativeKeyword with the match type that is in this list will be listed",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsNegativeMatchType"
            }
          }
        }
      },
      "SponsoredProductsGlobalNegativeKeyword": {
        "type": "object",
        "properties": {
          "keywordId": {
            "description": "The identifier of the keyword.",
            "type": "string"
          },
          "campaignId": {
            "description": "The identifier of the campaign to which the keyword is associated.",
            "type": "string"
          },
          "matchType": {
            "$ref": "#/components/schemas/SponsoredProductsNegativeMatchType"
          },
          "name": {
            "description": "Name for the keyword",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalEntityState"
          },
          "adGroupId": {
            "description": "The identifier of the ad group to which this keyword is associated.",
            "type": "string"
          },
          "keywordText": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalNegativeKeywordText"
          },
          "extendedData": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalNegativeKeywordExtendedData"
          }
        },
        "required": [
          "adGroupId",
          "campaignId",
          "keywordId",
          "keywordText",
          "matchType",
          "state"
        ]
      },
      "SponsoredProductsBulkDraftKeywordOperationResponse": {
        "type": "object",
        "properties": {
          "success": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftKeywordSuccessResponseItem"
            }
          },
          "error": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftKeywordFailureResponseItem"
            }
          }
        }
      },
      "SponsoredProductsDraftNegativeKeywordAccessExceptionResponseContent": {
        "description": "Exception resulting in accessing campaign management entities",
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsInvalidArgumentErrorCode"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftNegativeKeywordAccessError"
            }
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "state": {
        "description": "The budget rule state.",
        "type": "string",
        "enum": [
          "ACTIVE",
          "PAUSED"
        ]
      },
      "SponsoredProductsGlobalNegativeKeywordExtendedData": {
        "type": "object",
        "properties": {
          "servingStatus": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalKeywordServingStatus"
          }
        }
      },
      "SponsoredProductsCreateDraftKeyword": {
        "type": "object",
        "properties": {
          "nativeLanguageKeyword": {
            "description": "The unlocalized draft keyword text in the preferred locale of the advertiser.",
            "type": "string"
          },
          "nativeLanguageLocale": {
            "description": "The locale preference of the advertiser. For example, if the advertiser\u2019s preferred language is Simplified Chinese, set the locale to zh_CN. Supported locales include: Simplified Chinese (locale: zh_CN) for US, UK and CA. English (locale: en_GB) for DE, FR, IT and ES.",
            "type": "string"
          },
          "campaignId": {
            "description": "The identifer of the campaign to which the draft keyword is associated.",
            "type": "string"
          },
          "matchType": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateMatchType"
          },
          "bid": {
            "format": "double",
            "description": "Bid associated with this draft keyword. Applicable to biddable match types only. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).",
            "type": "number"
          },
          "adGroupId": {
            "description": "The identifier of the ad group to which this draft keyword is associated.",
            "type": "string"
          },
          "keywordText": {
            "description": "The draft keyword text.",
            "type": "string"
          }
        },
        "required": [
          "adGroupId",
          "campaignId",
          "keywordText"
        ]
      },
      "SponsoredProductsCreateSponsoredProductsGlobalNegativeTargetingClausesRequestContent": {
        "type": "object",
        "properties": {
          "negativeTargetingClauses": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "An array of negativeTargeting.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCreateGlobalNegativeTargetingClause"
            }
          }
        }
      },
      "GetGlobalProductRecommendationsRequest": {
        "description": "Request structure to get ASIN recommendations for a set of input ASINs in a given marketplace",
        "type": "object",
        "properties": {
          "previousToken": {
            "description": "An optional token value that can be used to fetch previous set of records.",
            "type": "string",
            "example": "MTAxNTwNzI5NDE="
          },
          "maxResults": {
            "description": "The <b>maxResults<\/b> parameter in the request body determines the number of objects requested in the response. The count will be applied to the objects returned under the array belonging to each country under the `countryAdRecommendations` field in the response body. <ul> <li>When requesting the `application/vnd.spproductrecommendationresponse.asins.v3+json` media type, the count applies to the `GlobalProductRecommendation` objects in the response body. If no count value is provided, a default of `100` is assumed. The API will return a maximum of `1000` recommendations, regardless of how large the count is set.<\/li> <\/ul> Please refer to the response schemas for more information on the structure and fields of the response.",
            "type": "integer",
            "minimum": 1,
            "example": "5"
          },
          "nextToken": {
            "description": "An optional token value that can be used to fetch next set of records.",
            "type": "string",
            "example": "MTAxNTwNzI5NDE="
          },
          "locale": {
            "description": "Theme names and descriptions will be provided in the language for your supported locale. Available options are en_US (U.S. English), en_GB (UK English), zh_CN (Chinese), es_ES (Spanish), jp_JP (Japanese), de_DE (German), fr_FR (French), it_IT(Italian). If locale is not provided or unsupported, the theme names and descriptions will be returned in U.S. English (en_US).",
            "type": "string",
            "example": "en_US"
          },
          "countryAdAsins": {
            "description": "A map containing the country code as the key and a list of advertised ASINs for that country as the value. Currently, only one country entry is supported in the request.",
            "additionalProperties": {
              "minItems": 1,
              "type": "array",
              "items": {
                "minLength": 10,
                "type": "string",
                "maxLength": 10,
                "example": "BX20002121"
              }
            },
            "type": "object",
            "example": {
              "US": [
                "B09DL9VH46",
                "B07K1WWBJK"
              ]
            },
            "minProperties": 1
          }
        },
        "required": [
          "countryAdAsins"
        ]
      },
      "SponsoredProductsPromoteSponsoredProductsDraftCampaignsResponseContent": {
        "type": "object",
        "properties": {
          "campaigns": {
            "$ref": "#/components/schemas/SponsoredProductsBulkDraftCampaignOperationResponse"
          }
        },
        "required": [
          "campaigns"
        ]
      },
      "SponsoredProductsCreateTarget": {
        "description": "Target created in the target promotion group.",
        "type": "object",
        "properties": {
          "targetPromotionGroupId": {
            "description": "The id of the target promotion group.",
            "type": "string"
          },
          "targetId": {
            "description": "The id of the target that got created.",
            "type": "string"
          },
          "manualTargetingAdGroupId": {
            "description": "The adGroupId of the manual-targeting campaign where the target belongs.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsDeleteSponsoredProductsGlobalTargetingClausesRequestContent": {
        "type": "object",
        "properties": {
          "targetIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          }
        }
      },
      "SponsoredProductsGlobalKeywordText": {
        "type": "object",
        "properties": {
          "marketplaceSettings": {
            "minItems": 1,
            "maxItems": 1000,
            "description": "The marketplace settings for keyword text to be overridden for marketplace.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsKeywordTextMarketplaceSettings"
            }
          },
          "locale": {
            "$ref": "#/components/schemas/SponsoredProductsLocale"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "value"
        ]
      },
      "SponsoredProductsDraftCampaignAccessError": {
        "type": "object",
        "properties": {
          "errorType": {
            "description": "The type of the error",
            "type": "string"
          },
          "errorValue": {
            "$ref": "#/components/schemas/SponsoredProductsDraftCampaignAccessErrorSelector"
          }
        },
        "required": [
          "errorType",
          "errorValue"
        ]
      },
      "SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent": {
        "type": "object",
        "properties": {
          "campaignIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsReducedObjectIdFilter"
          },
          "campaignNegativeKeywordIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          },
          "stateFilter": {
            "$ref": "#/components/schemas/SponsoredProductsEntityStateFilter"
          },
          "maxResults": {
            "format": "int32",
            "description": "Number of records to include in the paginated response. Defaults to max page size for given API",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          },
          "includeExtendedDataFields": {
            "description": "Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus",
            "type": "boolean"
          },
          "campaignNegativeKeywordTextFilter": {
            "$ref": "#/components/schemas/SponsoredProductsKeywordTextFilter"
          },
          "matchTypeFilter": {
            "description": "Restricts results to resources with the selected matchType",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsNegativeMatchType"
            }
          }
        }
      },
      "SPBudgetRulesRecommendationEventRequest": {
        "type": "object",
        "properties": {
          "campaignId": {
            "description": "The campaign identifier.",
            "type": "string"
          }
        },
        "required": [
          "campaignId"
        ]
      },
      "SponsoredProductsDraftKeywordFailureResponseItem": {
        "type": "object",
        "properties": {
          "index": {
            "format": "int32",
            "description": "the index of the draft keyword in the array from the request body",
            "type": "integer",
            "minimum": 0
          },
          "errors": {
            "description": "A list of validation errors",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftKeywordMutationError"
            }
          }
        },
        "required": [
          "index"
        ]
      },
      "OptimizationRulesAPISwaggerSearchOptimizationRulesResponse": {
        "type": "object",
        "properties": {
          "code": {
            "description": "An enumerated error code for machine use.",
            "type": "string"
          },
          "nextToken": {
            "type": "string"
          },
          "optimizationRules": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptimizationRulesAPISwaggerOptimizationRule"
            }
          }
        }
      },
      "OptimizationRulesAPISwaggerDeleteOptimizationRulesResponseErrorItem": {
        "type": "object",
        "properties": {
          "index": {
            "description": "Index of the optimization rule in the request.",
            "type": "integer"
          },
          "optimizationRuleId": {
            "description": "The id that uniquely identifies the optimization rule that failed deletion.",
            "type": "string"
          },
          "httpStatusCode": {
            "description": "The http status error code for machine use.",
            "type": "string"
          },
          "subErrors": {
            "minItems": 1,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptimizationRulesAPISwaggerOptimizationRuleBatchSubError"
            }
          }
        },
        "required": [
          "httpStatusCode",
          "index",
          "optimizationRuleId",
          "subErrors"
        ]
      },
      "ThemeBasedBidRecommendationV4": {
        "type": "object",
        "properties": {
          "theme": {
            "$ref": "#/components/schemas/Theme"
          },
          "bidRecommendationsForTargetingExpressions": {
            "description": "The bid recommendations for targeting expressions listed in the request.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BidRecommendationPerTargetingExpressionV4"
            }
          }
        },
        "required": [
          "theme",
          "bidRecommendationsForTargetingExpressions"
        ],
        "example": {
          "theme": "CONVERSION_OPPORTUNITIES",
          "bidRecommendationsForTargetingExpressions": [
            {
              "bidValues": [
                {
                  "suggestedBid": "1"
                },
                {
                  "suggestedBid": "1.5"
                },
                {
                  "suggestedBid": "2"
                }
              ],
              "targetingExpression": {
                "type": "CLOSE_MATCH"
              }
            },
            {
              "bidValues": [
                {
                  "suggestedBid": "1.1"
                },
                {
                  "suggestedBid": "1.4"
                },
                {
                  "suggestedBid": "2.2"
                }
              ],
              "targetingExpression": {
                "type": "LOOSE_MATCH"
              }
            }
          ]
        }
      },
      "SponsoredProductsGlobalBudget": {
        "type": "object",
        "properties": {
          "budgetType": {
            "$ref": "#/components/schemas/SponsoredProductsBudgetType"
          },
          "marketplaceSettings": {
            "minItems": 1,
            "maxItems": 1000,
            "description": "marketplace budget settings.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsMarketplaceBudget"
            }
          },
          "currency": {
            "$ref": "#/components/schemas/SponsoredProductsCurrency"
          }
        },
        "required": [
          "budgetType",
          "currency"
        ]
      },
      "AgeRange": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of Age Range. This field is OPTIONAL if the Age Range object is being used as an input.",
            "type": "string"
          },
          "id": {
            "description": "Id of Age Range. This field is REQUIRED if the Age Range object is being used as an input. Use the GetRefinementsForCategory to retrieve Age Range Node IDs.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsGlobalCampaignServingStatus": {
        "type": "object",
        "properties": {
          "statusReasons": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "Serving status details of campaign",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsGlobalCampaignServingStatusReason"
            }
          },
          "marketplaceCampaignServingStatus": {
            "minItems": 1,
            "maxItems": 1000,
            "description": "The marketplace serving statuses.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsMarketplaceCampaignServingStatus"
            }
          },
          "campaignServingStatus": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalEntityServingStatus"
          }
        }
      },
      "SevenDaysMissedOpportunities": {
        "type": "object",
        "properties": {
          "estimatedMissedSalesLower": {
            "description": "Lower bound estimate of the additional sales the campaign might have generated if it had not run out of budget during the {startDate} to {endDate} period. Provided in local currency.",
            "type": "number"
          },
          "estimatedMissedSalesUpper": {
            "description": "Upper bound estimate of the additional sales the campaign might have generated if it had not run out of budget during the {startDate} to {endDate} period. Provided in local currency.",
            "type": "number"
          },
          "endDate": {
            "description": "End date of the date range for which missed opportunity metrics are provided (YYYYMMDD). Local time",
            "type": "string"
          },
          "estimatedMissedImpressionsLower": {
            "description": "Lower bound estimate of the additional impressions the campaign might have generated if it had not run out of budget during the {startDate} to {endDate} period.",
            "type": "integer"
          },
          "estimatedMissedClicksLower": {
            "description": "Lower bound estimate of the additional clicks the campaign might have generated if it had not run out of budget during the {startDate} to {endDate} period.",
            "type": "integer"
          },
          "estimatedMissedClicksUpper": {
            "description": "Upper bound estimate of the additional clicks the campaign might have generated if it had not run out of budget during the {startDate} to {endDate} period.",
            "type": "integer"
          },
          "estimatedMissedImpressionsUpper": {
            "description": "Upper bound estimate of the additional impressions the campaign might have generated if it had not run out of budget during the {startDate} to {endDate} period.",
            "type": "integer"
          },
          "startDate": {
            "description": "Starting date of the date range for which missed opportunity metrics are provided (YYYYMMDD). Local time",
            "type": "string"
          },
          "percentTimeInBudget": {
            "description": "percentage of time the campaign is active with a budget. Provided as a decimal ranging from 0 to 1 (e.g. 0.76 means the campaign was in budget for 76% of the time between the startDate and endDate period)",
            "type": "number"
          }
        }
      },
      "SponsoredProductsKeywordMutationErrorSelector": {
        "type": "object",
        "properties": {
          "entityStateError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityStateError"
          },
          "missingValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMissingValueError"
          },
          "biddingError": {
            "$ref": "#/components/schemas/SponsoredProductsBiddingError"
          },
          "duplicateValueError": {
            "$ref": "#/components/schemas/SponsoredProductsDuplicateValueError"
          },
          "rangeError": {
            "$ref": "#/components/schemas/SponsoredProductsRangeError"
          },
          "parentEntityError": {
            "$ref": "#/components/schemas/SponsoredProductsParentEntityError"
          },
          "otherError": {
            "$ref": "#/components/schemas/SponsoredProductsOtherError"
          },
          "throttledError": {
            "$ref": "#/components/schemas/SponsoredProductsThrottledError"
          },
          "entityNotFoundError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityNotFoundError"
          },
          "targetingClauseSetupError": {
            "$ref": "#/components/schemas/SponsoredProductsTargetingClauseSetupError"
          },
          "localeError": {
            "$ref": "#/components/schemas/SponsoredProductsLocaleError"
          },
          "malformedValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMalformedValueError"
          },
          "billingError": {
            "$ref": "#/components/schemas/SponsoredProductsBillingError"
          },
          "entityQuotaError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityQuotaError"
          },
          "internalServerError": {
            "$ref": "#/components/schemas/SponsoredProductsInternalServerError"
          }
        }
      },
      "BudgetUsagePortfolioResponse": {
        "type": "object",
        "properties": {
          "success": {
            "description": "List of budget usage percentages that were successfully pulled",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BudgetUsagePortfolio"
            }
          },
          "error": {
            "description": "List of budget usage percentages that failed to pull",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BudgetUsagePortfolioBatchError"
            }
          }
        }
      },
      "GetSPBudgetRuleResponse": {
        "type": "object",
        "properties": {
          "budgetRule": {
            "$ref": "#/components/schemas/SPBudgetRule"
          }
        }
      },
      "SponsoredProductsUpdateTargetPromotionGroupsRequestContent": {
        "description": "Request object for updating target promotion groups.",
        "type": "object",
        "properties": {
          "targetPromotionGroupId": {
            "description": "The id of the target promotion group that will be updated.",
            "type": "string"
          },
          "targetPromotionGroupName": {
            "description": "The updated name of the target promotion group.",
            "type": "string"
          },
          "addNegativeTargetToSourceAdGroup": {
            "description": "If set to true, every promoted target will be added as a negative target to the source Auto-Targeting ad group. This stops the ad group from\n    continuing to select targets that have already been promoted.",
            "type": "boolean"
          }
        },
        "required": [
          "targetPromotionGroupId"
        ]
      },
      "GlobalBudgetRecommendationNewCampaignsError": {
        "required": [
          "code"
        ],
        "properties": {
          "countryCodes": {
            "minItems": 0,
            "maxItems": 50,
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "SponsoredProductsBulkNegativeTargetingClauseOperationResponse": {
        "type": "object",
        "properties": {
          "success": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsNegativeTargetingClauseSuccessResponseItem"
            }
          },
          "error": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsNegativeTargetingClauseFailureResponseItem"
            }
          }
        }
      },
      "SponsoredProductsListSponsoredProductsGlobalNegativeKeywordsResponseContent": {
        "type": "object",
        "properties": {
          "negativeKeywords": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsGlobalNegativeKeyword"
            }
          },
          "totalResults": {
            "format": "int64",
            "description": "The total number of entities",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          }
        }
      },
      "SponsoredProductsCreateOrUpdateNegativeMatchType": {
        "type": "string",
        "enum": [
          "NEGATIVE_EXACT",
          "NEGATIVE_PHRASE",
          "NEGATIVE_BROAD"
        ]
      },
      "SponsoredProductsUpdateGlobalCampaignNegativeKeyword": {
        "type": "object",
        "properties": {
          "keywordId": {
            "description": "The identifier of the keyword.",
            "type": "string"
          },
          "name": {
            "description": "Name for the keyword",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateGlobalEntityState"
          },
          "keywordText": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalNegativeKeywordText"
          }
        },
        "required": [
          "keywordId"
        ]
      },
      "SponsoredProductsListSponsoredProductsTargetingClausesPreviewResponseContent": {
        "type": "object",
        "properties": {
          "totalResults": {
            "format": "int64",
            "description": "The total number of entities",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          },
          "targetingClauses": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsTargetingClause"
            }
          }
        }
      },
      "SponsoredProductsGlobalProductAdSuccessResponseItem": {
        "type": "object",
        "properties": {
          "adId": {
            "description": "the ProductAd ID",
            "type": "string"
          },
          "index": {
            "format": "int32",
            "description": "The index in the original list from the request.",
            "type": "integer",
            "minimum": 0
          },
          "productAd": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalProductAd"
          }
        },
        "required": [
          "index"
        ]
      },
      "SponsoredProductsPlacement": {
        "description": "You can enable controls to adjust your bid based on the placement location. Specify a location where you want to use bid controls. The percentage value set is the percentage of the original bid for which you want to have your bid adjustment increased. For example, a 50% Top of Search adjustment on a $1.00 bid would increase the bid to $1.50 for the opportunity to win a Top of Search placement. A further 100% Amazon Business adjustment would increase the bid to $3.00 for the Amazon Business Top of Search placement and to $2.00 for all other Amazon Business placements.\nThe Amazon Business Bid Adjustment and Reporting for Sponsored Products will be coming soon to Bulksheets.\n| Predicate |  Placement |\n|-----------|------------|\n| `PLACEMENT_TOP` | Top of search (first page) |\n| `PLACEMENT_PRODUCT_PAGE` | Product pages |\n| `PLACEMENT_REST_OF_SEARCH` | Rest of the search |\n| `SITE_AMAZON_BUSINESS` | Site Amazon Business |",
        "type": "string",
        "enum": [
          "PLACEMENT_TOP",
          "PLACEMENT_PRODUCT_PAGE",
          "PLACEMENT_REST_OF_SEARCH",
          "SITE_AMAZON_BUSINESS"
        ]
      },
      "SponsoredProductsAccessDeniedErrorCode": {
        "type": "string",
        "enum": [
          "ACCESS_DENIED"
        ]
      },
      "SponsoredProductsTags": {
        "description": "A list of advertiser-specified custom identifiers for the campaign. Each customer identifier is a key-value pair. You can specify a maximum of 50 identifiers.",
        "additionalProperties": {
          "type": "string"
        },
        "maxProperties": 50,
        "type": "object",
        "minProperties": 0
      },
      "ResultStatus": {
        "default": "SUCCESS",
        "type": "string",
        "enum": [
          "SUCCESS",
          "FAILURE",
          "PARTIAL_FAILURE"
        ]
      },
      "SponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesResponseContent": {
        "type": "object",
        "properties": {
          "campaignNegativeTargetingClauses": {
            "$ref": "#/components/schemas/SponsoredProductsBulkCampaignNegativeTargetingClauseOperationResponse"
          }
        },
        "required": [
          "campaignNegativeTargetingClauses"
        ]
      },
      "SponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent": {
        "type": "object",
        "properties": {
          "negativeKeywordIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          }
        },
        "required": [
          "negativeKeywordIdFilter"
        ]
      },
      "SponsoredProductsObjectIdFilter": {
        "description": "Filter entities by the list of objectIds",
        "type": "object",
        "properties": {
          "include": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "description": "entity object identifier",
              "type": "string"
            }
          }
        },
        "required": [
          "include"
        ]
      },
      "SponsoredProductsUpdateSponsoredProductsCampaignsRequestContent": {
        "type": "object",
        "properties": {
          "campaigns": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "An array of campaigns with updated values. Note: targetingType cannot be updated",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsUpdateCampaign"
            }
          }
        },
        "required": [
          "campaigns"
        ]
      },
      "SponsoredProductsDeleteSponsoredProductsDraftAdGroupsResponseContent": {
        "type": "object",
        "properties": {
          "draftAdGroups": {
            "$ref": "#/components/schemas/SponsoredProductsBulkDraftAdGroupOperationResponse"
          }
        },
        "required": [
          "draftAdGroups"
        ]
      },
      "SponsoredProductsThrottlingExceptionResponseContent": {
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsThrottledErrorCode"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "SponsoredProductsDraftCampaignMutationExceptionResponseContent": {
        "description": "Exception resulting in mutating draft management entities",
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsInvalidArgumentErrorCode"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftCampaignMutationError"
            }
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "CategoryItem": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "The category id of the parent node",
            "type": "string"
          },
          "path": {
            "description": "The path of the category, which contains the current category and all parent categories",
            "type": "string"
          },
          "canBeTargeted": {
            "description": "A flag which indicates if the current node may be targeted",
            "type": "boolean"
          },
          "name": {
            "description": "The name of the category",
            "type": "string"
          },
          "id": {
            "description": "The category id of the current node",
            "type": "string"
          }
        }
      },
      "SponsoredProductsGlobalTargetingClause": {
        "type": "object",
        "properties": {
          "expression": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "The targeting expression.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsGlobalTargetingExpressionPredicate"
            }
          },
          "targetId": {
            "description": "The target identifier",
            "type": "string"
          },
          "resolvedExpression": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "The resolved targeting expression.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsGlobalTargetingExpressionPredicate"
            }
          },
          "campaignId": {
            "description": "The identifier of the campaign to which this target is associated.",
            "type": "string"
          },
          "name": {
            "description": "Name for the targeting clause",
            "type": "string"
          },
          "expressionType": {
            "$ref": "#/components/schemas/SponsoredProductsExpressionType"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalEntityState"
          },
          "bid": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalBid"
          },
          "adGroupId": {
            "description": "The identifier of the ad group to which this target is associated.",
            "type": "string"
          },
          "extendedData": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalTargetingClauseExtendedData"
          }
        },
        "required": [
          "adGroupId",
          "bid",
          "campaignId",
          "expression",
          "expressionType",
          "resolvedExpression",
          "state",
          "targetId"
        ]
      },
      "SponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent": {
        "type": "object",
        "properties": {
          "campaignNegativeKeywordIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          }
        },
        "required": [
          "campaignNegativeKeywordIdFilter"
        ]
      },
      "SponsoredProductsDraftAdGroupFailureResponseItem": {
        "type": "object",
        "properties": {
          "index": {
            "format": "int32",
            "description": "the index of the adGroup in the array from the request body",
            "type": "integer",
            "minimum": 0
          },
          "errors": {
            "description": "A list of validation errors",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftAdGroupMutationError"
            }
          }
        },
        "required": [
          "index"
        ]
      },
      "InitialGlobalBudgetRecommendationRequest": {
        "type": "object",
        "properties": {
          "countryDailyBudgets": {
            "$ref": "#/components/schemas/CountryBudgetsMap"
          },
          "bidding": {
            "$ref": "#/components/schemas/Bidding"
          },
          "adGroups": {
            "minItems": 1,
            "maxItems": 1,
            "description": "The ad group information for this new campaign.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GlobalAdGroup"
            }
          },
          "endDate": {
            "format": "date",
            "description": "The end date of the campaign in YYYYMMDD format.",
            "type": "string"
          },
          "targetingType": {
            "default": "AUTO",
            "description": "Specifies the targeting type.",
            "type": "string",
            "enum": [
              "MANUAL",
              "AUTO"
            ]
          },
          "startDate": {
            "format": "date",
            "description": "The start date of the campaign in YYYYMMDD format.",
            "type": "string"
          }
        },
        "required": [
          "targetingType",
          "bidding",
          "adGroups"
        ],
        "example": {
          "countryDailyBudgets": {
            "UK": "20",
            "US": "18"
          },
          "bidding": {
            "adjustments": [
              {
                "placementAdjustment": {
                  "predicate": "PLACEMENT_TOP",
                  "percentage": "900"
                }
              }
            ],
            "strategy": "LEGACY_FOR_SALES"
          },
          "adGroups": [
            {
              "targetingExpressions": [
                {
                  "expression": {
                    "countryValues": {
                      "UK": "Bag",
                      "US": "Shoe"
                    },
                    "type": "KEYWORD_EXACT_MATCH"
                  },
                  "countryBids": {
                    "UK": "20",
                    "US": "10"
                  }
                }
              ],
              "asins": [
                {
                  "UK": "B07PG156V6",
                  "US": "B0895CQPBW"
                },
                {
                  "US": "B0CPJ7M9Y6"
                }
              ]
            }
          ],
          "targetingType": "MANUAL"
        }
      },
      "TargetingExpressionList": {
        "maxItems": 100,
        "description": "The list of targeting expressions. Maximum of 100 per request, use pagination for more if needed.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/TargetingExpression"
        },
        "example": [
          {
            "type": "CLOSE_MATCH"
          },
          {
            "type": "LOOSE_MATCH"
          },
          {
            "type": "SUBSTITUTES"
          },
          {
            "type": "COMPLEMENTS"
          }
        ]
      },
      "SponsoredProductsCreateSponsoredProductsGlobalCampaignNegativeKeywordsResponseContent": {
        "type": "object",
        "properties": {
          "campaignNegativeKeywords": {
            "$ref": "#/components/schemas/SponsoredProductsBulkGlobalCampaignNegativeKeywordOperationResponse"
          }
        },
        "required": [
          "campaignNegativeKeywords"
        ]
      },
      "OptimizationRulesAPISwaggerActionType": {
        "description": "The action taken when the optimization rule is enabled. Defaults to ADOPT.",
        "type": "string",
        "enum": [
          "ADOPT"
        ]
      },
      "SponsoredProductsCampaignNegativeTargetingClauseSuccessResponseItem": {
        "type": "object",
        "properties": {
          "campaignNegativeTargetingClauseId": {
            "description": "the CampaignNegativeTargets ID",
            "type": "string"
          },
          "campaignNegativeTargetingClauses": {
            "$ref": "#/components/schemas/SponsoredProductsCampaignNegativeTargetingClause"
          },
          "index": {
            "format": "int32",
            "description": "the index of the CampaignNegativeTargets in the array from the request body",
            "type": "integer",
            "minimum": 0
          }
        },
        "required": [
          "index"
        ]
      },
      "MultiCountryThemeBasedBidRecommendation": {
        "type": "object",
        "properties": {
          "theme": {
            "$ref": "#/components/schemas/Theme"
          },
          "bidRecommendationsForTargetingExpressions": {
            "description": "The bid recommendations for targeting expressions listed in the request.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MultiCountryBidRecommendationPerTargetingExpression"
            }
          }
        },
        "required": [
          "theme",
          "bidRecommendationsForTargetingExpressions"
        ],
        "example": {
          "theme": "CONVERSION_OPPORTUNITIES",
          "bidRecommendationsForTargetingExpressions": [
            {
              "countrySuggestedBids": {
                "UK": [
                  {
                    "suggestedBid": "1"
                  },
                  {
                    "suggestedBid": "1.5"
                  },
                  {
                    "suggestedBid": "2"
                  }
                ],
                "US": [
                  {
                    "suggestedBid": "1"
                  },
                  {
                    "suggestedBid": "1.5"
                  },
                  {
                    "suggestedBid": "2"
                  }
                ]
              },
              "expression": {
                "countryValues": {
                  "UK": "Sample2",
                  "US": "Sample1"
                },
                "type": "KEYWORD_BROAD_MATCH"
              }
            }
          ]
        }
      },
      "SDGetAssociatedCampaignsResponse": {
        "type": "object",
        "properties": {
          "associatedCampaigns": {
            "minItems": 0,
            "maxItems": 30,
            "description": "A list of campaigns that are associated to this budget rule.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssociatedCampaign"
            }
          },
          "nextToken": {
            "description": "To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsAdGroupMutationExceptionResponseContent": {
        "description": "Exception resulting in mutating campaign management entities",
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsInvalidArgumentErrorCode"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsAdGroupMutationError"
            }
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "OptimizationRulesAPISwaggerUpdateOptimizationRulesRequest": {
        "description": "Request object for updating one or multiple optimization rules.",
        "type": "object",
        "properties": {
          "optimizationRules": {
            "minItems": 1,
            "maxItems": 25,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptimizationRulesAPISwaggerOptimizationRule"
            }
          }
        },
        "required": [
          "optimizationRules"
        ]
      },
      "SponsoredProductsDeleteSponsoredProductsGlobalNegativeKeywordsResponseContent": {
        "type": "object",
        "properties": {
          "negativeKeywords": {
            "$ref": "#/components/schemas/SponsoredProductsBulkGlobalNegativeKeywordOperationResponse"
          }
        },
        "required": [
          "negativeKeywords"
        ]
      },
      "SponsoredProductsGlobalAdGroupFailureResponseItem": {
        "type": "object",
        "properties": {
          "index": {
            "format": "int32",
            "description": "the index of the adGroup in the array from the request body",
            "type": "integer",
            "minimum": 0
          },
          "errors": {
            "description": "A list of validation errors",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsAdGroupMutationError"
            }
          }
        },
        "required": [
          "index"
        ]
      },
      "SponsoredProductsCreateOrUpdateEntityState": {
        "description": "Entity state for create or update operation",
        "type": "string",
        "enum": [
          "ENABLED",
          "PAUSED",
          "PROPOSED"
        ]
      },
      "SponsoredProductsListSponsoredProductsProductAdsResponseContent": {
        "type": "object",
        "properties": {
          "totalResults": {
            "format": "int64",
            "description": "The total number of entities",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          },
          "productAds": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsProductAd"
            }
          }
        }
      },
      "SPBudgetRulesRecommendationEventResponse": {
        "description": "Special events with date range and suggested budget increase.",
        "type": "object",
        "properties": {
          "recommendedBudgetRuleEvents": {
            "description": "A list of recommended special events with date range and suggested budget increase.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SPBudgetRulesRecommendationEvent"
            }
          }
        }
      },
      "RuleName": {
        "description": "The campaign optimization rule name.",
        "type": "string",
        "maxLength": 355
      },
      "OptimizationRulesAPISwaggerDisassociateOptimizationRulesFromCampaignRequest": {
        "description": "Request body object for deleting campaign to optimization rules association.",
        "type": "object",
        "properties": {
          "optimizationRuleIds": {
            "minItems": 1,
            "maxItems": 25,
            "description": "An array of rule identifiers, all of which to disassociate from the campaign.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "7bf484ff-381c-4703-82ec-66b9eb732705",
              "ed1d58dd-662b-4639-9ee2-85ff1386b946",
              "750fe03c-9884-4a72-a540-3b87521018d9"
            ]
          }
        },
        "required": [
          "optimizationRuleIds"
        ]
      },
      "BudgetRecommendation": {
        "description": "Contains suggested recommendation for the campaign budget.",
        "type": "object",
        "properties": {
          "suggestedBudget": {
            "format": "double",
            "description": "The suggested budget value for the campaign.",
            "type": "number"
          },
          "action": {
            "description": "Type of suggested action.",
            "type": "string",
            "enum": [
              "INCREASE",
              "DECREASE"
            ]
          }
        }
      },
      "SponsoredProductsGlobalTargetingClauseServingStatus": {
        "type": "object",
        "properties": {
          "statusReasons": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "Serving status details of adgroup",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsGlobalKeywordServingStatusReason"
            }
          },
          "targetingClauseServingStatus": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalEntityServingStatus"
          },
          "marketplaceTargetingClauseServingStatus": {
            "minItems": 1,
            "maxItems": 1000,
            "description": "The marketplace serving statuses.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsMarketplaceTargetingClauseServingStatus"
            }
          }
        }
      },
      "SponsoredProductsNegativeKeywordFailureResponseItem": {
        "type": "object",
        "properties": {
          "index": {
            "format": "int32",
            "description": "the index of the negativeKeyword in the array from the request body",
            "type": "integer",
            "minimum": 0
          },
          "errors": {
            "description": "A list of validation errors",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsNegativeKeywordMutationError"
            }
          }
        },
        "required": [
          "index"
        ]
      },
      "SponsoredProductsCampaignServingStatusReason": {
        "type": "string",
        "enum": [
          "CAMPAIGN_STATUS_ENABLED_DETAIL",
          "CAMPAIGN_PAUSED_DETAIL",
          "CAMPAIGN_ARCHIVED_DETAIL",
          "PENDING_REVIEW_DETAIL",
          "REJECTED_DETAIL",
          "PENDING_START_DATE_DETAIL",
          "ENDED_DETAIL",
          "CAMPAIGN_OUT_OF_BUDGET_DETAIL",
          "CAMPAIGN_INCOMPLETE_DETAIL",
          "PORTFOLIO_STATUS_ENABLED_DETAIL",
          "PORTFOLIO_PAUSED_DETAIL",
          "PORTFOLIO_ARCHIVED_DETAIL",
          "PORTFOLIO_OUT_OF_BUDGET_DETAIL",
          "PORTFOLIO_PENDING_START_DATE_DETAIL",
          "PORTFOLIO_ENDED_DETAIL",
          "ADVERTISER_POLICING_SUSPENDED_DETAIL",
          "ADVERTISER_POLICING_PENDING_REVIEW_DETAIL",
          "ADVERTISER_ARCHIVED_DETAIL",
          "ADVERTISER_PAUSED_DETAIL",
          "ADVERTISER_OUT_OF_BUDGET_DETAIL",
          "ADVERTISER_PAYMENT_FAILURE_DETAIL",
          "ACCOUNT_OUT_OF_BUDGET_DETAIL",
          "OTHER"
        ]
      },
      "SponsoredProductsGlobalProductAdMarketplaceServingReason": {
        "type": "string",
        "enum": [
          "AD_GROUP_STATUS_ENABLED_DETAIL",
          "AD_GROUP_PAUSED_DETAIL",
          "AD_GROUP_ARCHIVED_DETAIL",
          "AD_GROUP_INCOMPLETE_DETAIL",
          "AD_GROUP_POLICING_PENDING_REVIEW_DETAIL",
          "AD_GROUP_POLICING_CREATIVE_REJECTED_DETAIL",
          "AD_GROUP_LOW_BID_DETAIL",
          "CAMPAIGN_STATUS_ENABLED_DETAIL",
          "CAMPAIGN_PAUSED_DETAIL",
          "CAMPAIGN_ARCHIVED_DETAIL",
          "PENDING_REVIEW_DETAIL",
          "REJECTED_DETAIL",
          "PENDING_START_DATE_DETAIL",
          "ENDED_DETAIL",
          "CAMPAIGN_OUT_OF_BUDGET_DETAIL",
          "CAMPAIGN_INCOMPLETE_DETAIL",
          "ADVERTISER_POLICING_SUSPENDED_DETAIL",
          "ADVERTISER_POLICING_PENDING_REVIEW_DETAIL",
          "ADVERTISER_ARCHIVED_DETAIL",
          "ADVERTISER_PAUSED_DETAIL",
          "ADVERTISER_OUT_OF_BUDGET_DETAIL",
          "ADVERTISER_PAYMENT_FAILURE_DETAIL",
          "AD_STATUS_LIVE_DETAIL",
          "AD_POLICING_PENDING_REVIEW_DETAIL",
          "AD_POLICING_SUSPENDED_DETAIL",
          "AD_PAUSED_DETAIL",
          "AD_ARCHIVED_DETAIL"
        ]
      },
      "SponsoredProductsAccessDeniedExceptionCode": {
        "type": "string",
        "enum": [
          "ACCESS_DENIED"
        ]
      },
      "SponsoredProductsErrorCode": {
        "description": "Error codes.\n| Error Code |  description |\n|-----------|------------|\n| `BAD_REQUEST` | Received malformed request. |\n| `UNAUTHORIZED` | |\n| `FORBIDDEN` | |\n| `NOT_FOUND` | |\n| `CONTENT_TOO_LARGE` | |\n| `TOO_MANY_REQUESTS` | |\n| `INTERNAL_ERROR` | |\n| `BAD_GATEWAY` | |\n| `SERVICE_UNAVAILABLE` | |\n| `GATEWAY_TIMEOUT` | |",
        "type": "string",
        "enum": [
          "BAD_REQUEST",
          "UNAUTHORIZED",
          "FORBIDDEN",
          "NOT_FOUND",
          "CONTENT_TOO_LARGE",
          "TOO_MANY_REQUESTS",
          "INTERNAL_SERVER_ERROR",
          "BAD_GATEWAY",
          "SERVICE_UNAVAILABLE",
          "GATEWAY_TIMEOUT"
        ]
      },
      "SponsoredProductsAudienceSegment": {
        "type": "object",
        "properties": {
          "audienceId": {
            "minLength": 1,
            "description": "`audienceId` is specified based on the `audienceSegmentType` used.",
            "type": "string",
            "maxLength": 20
          },
          "audienceSegmentType": {
            "$ref": "#/components/schemas/SponsoredProductsAudienceSegmentType"
          }
        },
        "required": [
          "audienceId",
          "audienceSegmentType"
        ]
      },
      "SponsoredProductsBulkDraftTargetingClauseOperationResponse": {
        "type": "object",
        "properties": {
          "success": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftTargetingClauseSuccessResponseItem"
            }
          },
          "error": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftTargetingClauseFailureResponseItem"
            }
          }
        }
      },
      "SponsoredProductsCurrencyCode": {
        "type": "string",
        "enum": [
          "AUD",
          "BRL",
          "CAD",
          "CHF",
          "CNY",
          "DKK",
          "EUR",
          "GBP",
          "INR",
          "JPY",
          "MXN",
          "NOK",
          "SAR",
          "SEK",
          "SGD",
          "TRY",
          "USD"
        ]
      },
      "GlobalRankedKeywordTargetsForAsinsRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AsinsBasedRequest"
          }
        ],
        "description": "This request type is used to retrieve recommended keyword targets for ASINs. Set the recommendationType to KEYWORDS_FOR_ASINS to use this request type.",
        "required": [
          "recommendationType",
          "countryCodes"
        ],
        "properties": {
          "countryCodes": {
            "description": "A list of countries with targets that need to be ranked or ASINs to generate recommended keywords. The 2-letter country code is the key, and an object with ASINs and targets is the value.",
            "additionalProperties": {
              "$ref": "#/components/schemas/CountryWithTargetsAndAsins"
            },
            "type": "object"
          }
        }
      },
      "SponsoredProductsCreateGlobalProductAd": {
        "type": "object",
        "properties": {
          "campaignId": {
            "description": "The campaign identifier.",
            "type": "string"
          },
          "customText": {
            "minLength": 50,
            "pattern": "^[A-Z][^<>\\^]+$",
            "description": "The custom text to use for creating a custom text ad for the associated ASIN. Defined for only KDP Authors and Book Vendors",
            "type": "string",
            "maxLength": 150
          },
          "name": {
            "description": "Name for the product Ad",
            "type": "string"
          },
          "asin": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalProductIdentifiers"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateGlobalEntityState"
          },
          "sku": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalProductIdentifiers"
          },
          "adGroupId": {
            "description": "The ad group identifier.",
            "type": "string"
          }
        },
        "required": [
          "adGroupId",
          "campaignId",
          "state"
        ]
      },
      "SponsoredProductsMarketplaceBid": {
        "type": "object",
        "properties": {
          "marketplace": {
            "$ref": "#/components/schemas/SponsoredProductsMarketplace"
          },
          "bid": {
            "format": "double",
            "description": "Monetary value",
            "type": "number"
          }
        }
      },
      "SponsoredProductsCreateSponsoredProductsProductAdsRequestContent": {
        "type": "object",
        "properties": {
          "productAds": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "An array of ads.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCreateProductAd"
            }
          }
        },
        "required": [
          "productAds"
        ]
      },
      "SponsoredProductsDraftProductAdAccessErrorSelector": {
        "type": "object",
        "properties": {
          "entityNotFoundError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityNotFoundError"
          },
          "missingValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMissingValueError"
          },
          "malformedValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMalformedValueError"
          },
          "internalServerError": {
            "$ref": "#/components/schemas/SponsoredProductsInternalServerError"
          },
          "rangeError": {
            "$ref": "#/components/schemas/SponsoredProductsRangeError"
          },
          "otherError": {
            "$ref": "#/components/schemas/SponsoredProductsOtherError"
          },
          "throttledError": {
            "$ref": "#/components/schemas/SponsoredProductsThrottledError"
          }
        }
      },
      "SponsoredProductsGlobalProductAdServingStatus": {
        "type": "object",
        "properties": {
          "statusReasons": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "Serving status details of Product Ad",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsGlobalProductAServingStatusReason"
            }
          },
          "marketplaceAdServingStatus": {
            "minItems": 1,
            "maxItems": 1000,
            "description": "The marketplace serving statuses.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsMarketplaceProductAdServingStatus"
            }
          },
          "adServingStatus": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalEntityServingStatus"
          }
        }
      },
      "GenreLoP": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of Genre.",
            "type": "string"
          },
          "id": {
            "description": "Id of Genre. Use the POST /sp/targets/category/{categoryId}/refinements endpoint to retrieve Genre Node IDs.",
            "type": "string"
          },
          "translatedName": {
            "description": "Translated name of the Genre based off locale send in the query parameter.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsGlobalNegativeTargetingClause": {
        "type": "object",
        "properties": {
          "expression": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "The NegativeTargeting expression.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsGlobalTargetingExpressionPredicate"
            }
          },
          "targetId": {
            "description": "The target identifier",
            "type": "string"
          },
          "resolvedExpression": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "The resolved NegativeTargeting expression.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsGlobalTargetingExpressionPredicate"
            }
          },
          "campaignId": {
            "description": "The identifier of the campaign to which this target is associated.",
            "type": "string"
          },
          "name": {
            "description": "Name for the negative targeting clause",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalEntityState"
          },
          "adGroupId": {
            "description": "The identifier of the ad group to which this target is associated.",
            "type": "string"
          },
          "extendedData": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalNegativeTargetingClauseExtendedData"
          }
        },
        "required": [
          "adGroupId",
          "campaignId",
          "expression",
          "name",
          "resolvedExpression",
          "state",
          "targetId"
        ]
      },
      "SponsoredProductsListSponsoredProductsGlobalCampaignsResponseContent": {
        "type": "object",
        "properties": {
          "totalResults": {
            "format": "int64",
            "description": "The total number of entities",
            "type": "integer"
          },
          "campaigns": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsGlobalCampaign"
            }
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          }
        }
      },
      "SponsoredProductsDraftTargetingClauseFailureResponseItem": {
        "type": "object",
        "properties": {
          "index": {
            "format": "int32",
            "description": "the index of the draftTargetingClause in the array from the request body",
            "type": "integer",
            "minimum": 0
          },
          "errors": {
            "description": "A list of validation errors",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftTargetMutationError"
            }
          }
        },
        "required": [
          "index"
        ]
      },
      "OptimizationRulesAPISwaggerComparisonOperator": {
        "description": "The comparison operator.",
        "type": "string",
        "enum": [
          "GREATER_THAN",
          "LESS_THAN",
          "EQUAL_TO",
          "LESS_THAN_OR_EQUAL_TO",
          "GREATER_THAN_OR_EQUAL_TO"
        ]
      },
      "BidRecommendationError": {
        "type": "object",
        "properties": {
          "code": {
            "description": "A machine-readable error code.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "details"
        ]
      },
      "SponsoredProductsKeywordSuccessResponseItem": {
        "type": "object",
        "properties": {
          "keywordId": {
            "description": "the keyword ID",
            "type": "string"
          },
          "index": {
            "format": "int32",
            "description": "the index of the keyword in the array from the request body",
            "type": "integer",
            "minimum": 0
          },
          "keyword": {
            "$ref": "#/components/schemas/SponsoredProductsKeyword"
          }
        },
        "required": [
          "index"
        ]
      },
      "SponsoredProductsGlobalProductAdMarketplaceServingStatus": {
        "type": "string",
        "enum": [
          "AD_GROUP_STATUS_ENABLED",
          "AD_GROUP_PAUSED",
          "AD_GROUP_ARCHIVED",
          "AD_GROUP_INCOMPLETE",
          "AD_GROUP_POLICING_PENDING_REVIEW",
          "AD_GROUP_POLICING_CREATIVE_REJECTED",
          "AD_GROUP_LOW_BID",
          "CAMPAIGN_STATUS_ENABLED",
          "CAMPAIGN_PAUSED",
          "CAMPAIGN_ARCHIVED",
          "PENDING_REVIEW",
          "REJECTED",
          "CAMPAIGN_PENDING_START_DATE",
          "CAMPAIGN_ENDED",
          "CAMPAIGN_OUT_OF_BUDGET",
          "CAMPAIGN_INCOMPLETE",
          "ADVERTISER_STATUS_ENABLED",
          "ADVERTISER_POLICING_SUSPENDED",
          "ADVERTISER_POLICING_PENDING_REVIEW",
          "ADVERTISER_ARCHIVED",
          "ADVERTISER_PAUSED",
          "ADVERTISER_PAYMENT_FAILURE",
          "AD_STATUS_LIVE",
          "AD_POLICING_PENDING_REVIEW",
          "AD_POLICING_SUSPENDED",
          "AD_PAUSED",
          "AD_ARCHIVED",
          "AD_CREATION_FAILED",
          "STATUS_UNAVAILABLE",
          "AD_MISSING_IMAGE",
          "AD_MISSING_DECORATION",
          "AD_NOT_BUYABLE",
          "AD_NOT_IN_BUYBOX",
          "AD_OUT_OF_STOCK",
          "AD_LANDING_PAGE_NOT_AVAILABLE",
          "AD_NO_PURCHASABLE_OFFER",
          "AD_INELIGIBLE",
          "AD_ELIGIBLE"
        ]
      },
      "UpdateSDBudgetRulesRequest": {
        "description": "Request object for updating budget rule for SD campaign",
        "type": "object",
        "properties": {
          "budgetRulesDetails": {
            "maxItems": 25,
            "description": "A list of budget rule details.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SDBudgetRule"
            }
          }
        }
      },
      "KeywordTarget": {
        "properties": {
          "matchType": {
            "description": "Keyword match type. The default value will be BROAD.",
            "type": "string",
            "enum": [
              "BROAD",
              "EXACT",
              "PHRASE"
            ]
          },
          "keyword": {
            "description": "The keyword value",
            "type": "string"
          },
          "bid": {
            "format": "double",
            "description": "The bid value for the keyword, in minor currency units (example: cents). The default value will be the suggested bid.",
            "type": "number"
          },
          "userSelectedKeyword": {
            "description": "Flag that tells if keyword was selected by the user or was recommended by KRS",
            "type": "boolean"
          }
        }
      },
      "KeywordTargetingRecommendation": {
        "description": "Contains suggested recommendation for the keyword targeting.",
        "type": "object",
        "properties": {
          "keywordId": {
            "description": "The identifier of the keyword targeting.",
            "type": "string"
          },
          "suggestedBid": {
            "format": "double",
            "description": "The suggested bid value associated with this keyword targeting clause.",
            "type": "number"
          },
          "matchType": {
            "description": "Keyword match type. | Value | Description | | --- | --- | | `BROAD` | Use BROAD to broadly match your keyword targeting ads with search queries.| | `EXACT` | Use EXACT to exactly match your keyword targeting ads with search queries.| | `PHRASE` | Use PHRASE to match your keyword targeting ads with search phrases.|",
            "type": "string",
            "enum": [
              "EXACT",
              "PHRASE",
              "BROAD"
            ]
          },
          "action": {
            "description": "Type of action for the keyword targeting.",
            "type": "string",
            "enum": [
              "ADD",
              "REMOVE",
              "INCREASE",
              "DECREASE",
              "UPDATE"
            ]
          },
          "adGroupId": {
            "description": "The ad group identifier.",
            "type": "string"
          },
          "keywordText": {
            "description": "The keyword text.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsInternalErrorErrorCode": {
        "type": "string",
        "enum": [
          "INTERNAL_ERROR"
        ]
      },
      "SPListAssociatedBudgetRulesResponse": {
        "type": "object",
        "properties": {
          "associatedRules": {
            "description": "A list of associated budget rules.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SPCampaignBudgetRule"
            }
          }
        }
      },
      "CountryBudgetRecommendationMap": {
        "description": "The budget recommendation for each country.",
        "additionalProperties": {
          "$ref": "#/components/schemas/CountryBudgetRecommendation"
        },
        "type": "object"
      },
      "SponsoredProductsDeleteTargetPromotionGroupTargetsInternalRequestContent": {
        "type": "object",
        "properties": {
          "apiGatewayContext": {
            "$ref": "#/components/schemas/SponsoredProductsApiGatewayContext"
          },
          "targetPromotionGroupTargets": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDeleteTargetRequest"
            }
          }
        },
        "required": [
          "apiGatewayContext"
        ]
      },
      "SponsoredProductsGlobalCampaignMutationFailureResponseItem": {
        "type": "object",
        "properties": {
          "index": {
            "format": "int32",
            "description": "the index of the campaign in the array from the request body",
            "type": "integer",
            "minimum": 0
          },
          "errors": {
            "description": "A list of validation errors",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCampaignMutationError"
            }
          }
        },
        "required": [
          "index"
        ]
      },
      "SponsoredProductsListSponsoredProductsGlobalCampaignNegativeKeywordsRequestContent": {
        "type": "object",
        "properties": {
          "campaignNegativeKeywordIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          },
          "maxResults": {
            "format": "int32",
            "description": "Number of records to include in the paginated response. Defaults to max page size for given API",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          },
          "includeExtendedDataFields": {
            "description": "Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus",
            "type": "boolean"
          }
        }
      },
      "AdGroup": {
        "required": [
          "asins",
          "targetingExpressions"
        ],
        "properties": {
          "targetingExpressions": {
            "minItems": 1,
            "maxItems": 100,
            "description": "The list of targeting expressions. Maximum of 100 per request.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TargetingExpression"
            }
          },
          "asins": {
            "minItems": 1,
            "maxItems": 50,
            "description": "The list of ad ASINs in the ad group.",
            "type": "array",
            "items": {
              "pattern": "[a-zA-Z0-9]{10}",
              "type": "string"
            }
          },
          "adGroupId": {
            "description": "The ad group identifier.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsQuotaScope": {
        "type": "string",
        "enum": [
          "ACCOUNT",
          "PARENT_ENTITY"
        ]
      },
      "SponsoredProductsThrottledErrorCode": {
        "type": "string",
        "enum": [
          "THROTTLED"
        ]
      },
      "OptimizationRulesAPISwaggerExpressionType": {
        "description": "The expression types of targets for the rule.",
        "type": "string",
        "enum": [
          "EXACT",
          "EXTENDED",
          "BROAD",
          "PHRASE"
        ]
      },
      "SponsoredProductsDeleteSponsoredProductsGlobalNegativeKeywordsRequestContent": {
        "type": "object",
        "properties": {
          "negativeKeywordIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          }
        }
      },
      "RuleCampaignId": {
        "description": "campaignId",
        "type": "string"
      },
      "SponsoredProductsDraftTargetMutationErrorSelector": {
        "type": "object",
        "properties": {
          "entityNotFoundError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityNotFoundError"
          },
          "entityStateError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityStateError"
          },
          "missingValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMissingValueError"
          },
          "biddingError": {
            "$ref": "#/components/schemas/SponsoredProductsBiddingError"
          },
          "malformedValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMalformedValueError"
          },
          "duplicateValueError": {
            "$ref": "#/components/schemas/SponsoredProductsDuplicateValueError"
          },
          "billingError": {
            "$ref": "#/components/schemas/SponsoredProductsBillingError"
          },
          "entityQuotaError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityQuotaError"
          },
          "internalServerError": {
            "$ref": "#/components/schemas/SponsoredProductsInternalServerError"
          },
          "rangeError": {
            "$ref": "#/components/schemas/SponsoredProductsRangeError"
          },
          "otherError": {
            "$ref": "#/components/schemas/SponsoredProductsOtherError"
          },
          "throttledError": {
            "$ref": "#/components/schemas/SponsoredProductsThrottledError"
          }
        }
      },
      "OptimizationRulesAPISwaggerDisassociateOptimizationRulesFromCampaignResponseErrorItem": {
        "type": "object",
        "properties": {
          "index": {
            "description": "Index of the optimization rule in the request.",
            "type": "integer"
          },
          "optimizationRuleId": {
            "description": "The id that uniquely identifies the optimization rule that was failed to be disassociated.",
            "type": "string"
          },
          "httpStatusCode": {
            "description": "The http status error code for machine use.",
            "type": "string"
          },
          "subErrors": {
            "minItems": 1,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptimizationRulesAPISwaggerOptimizationRuleBatchSubError"
            }
          }
        },
        "required": [
          "httpStatusCode",
          "index",
          "optimizationRuleId",
          "subErrors"
        ]
      },
      "SPGetAssociatedCampaignsResponse": {
        "type": "object",
        "properties": {
          "associatedCampaigns": {
            "minItems": 0,
            "maxItems": 30,
            "description": "A list of campaigns that are associated to this budget rule.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssociatedCampaign"
            }
          },
          "nextToken": {
            "description": "To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsNegativeTargetingClauseFailureResponseItem": {
        "type": "object",
        "properties": {
          "index": {
            "format": "int32",
            "description": "the index of the NegativeTargetingClause in the array from the request body",
            "type": "integer",
            "minimum": 0
          },
          "errors": {
            "description": "A list of validation errors",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsNegativeTargetMutationError"
            }
          }
        },
        "required": [
          "index"
        ]
      },
      "SponsoredProductsTargetingClauseSetupErrorReason": {
        "type": "string",
        "enum": [
          "TARGETING_TYPE_NOT_ALLOWED_FOR_AUTO_TARGETING_CAMPAIGN",
          "TYPE_CONFLICT_IN_AD_GROUP",
          "AUTO_TARGETING_CLAUSE_CANNOT_BE_CREATED_MANUALLY",
          "TARGETING_EXPRESSION_INVALID_VALUE"
        ]
      },
      "SponsoredProductsListTargetPromotionGroupsInternalRequestContent": {
        "type": "object",
        "properties": {
          "maxResults": {
            "default": 1000,
            "format": "int32",
            "description": "Number of records to include in the paginated response. Defaults to max page size for given API",
            "maximum": 1000,
            "type": "integer",
            "minimum": 1
          },
          "nextToken": {
            "description": "Token value allowing to navigate to the next or previous response page",
            "type": "string"
          },
          "targetPromotionGroupIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          },
          "adGroupIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          },
          "apiGatewayContext": {
            "$ref": "#/components/schemas/SponsoredProductsApiGatewayContext"
          }
        },
        "required": [
          "apiGatewayContext"
        ]
      },
      "SponsoredProductsCreateOrUpdateBudgetType": {
        "type": "string",
        "enum": [
          "DAILY"
        ]
      },
      "CountryCodes": {
        "minItems": 0,
        "maxItems": 50,
        "uniqueItems": true,
        "description": "A list of country codes. Supported country codes:\n| Country Code |  Country            |\n|-------------|----------------------|\n| US          | United States        |\n| CA          | Canada               |\n| MX          | Mexico               |\n| BR          | Brazil               |\n| UK          | United Kingdom       |\n| DE          | Germany              |\n| FR          | France               |\n| ES          | Spain                |\n| IT          | Italy                |\n| IN          | India                |\n| AE          | United Arab Emirates |\n| SA          | Saudi Arabia         |\n| NL          | Netherlands          |\n| PL          | Poland               |\n| BE          | Belgium              |\n| SE          | Sweden               |\n| TR          | Turkey               |\n| EG          | Egypt                |\n| JP          | Japan                |\n| AU          | Australia            |\n| SG          | Singapore            |",
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "SponsoredProductsTargetMutationError": {
        "type": "object",
        "properties": {
          "errorType": {
            "description": "The type of the error",
            "type": "string"
          },
          "errorValue": {
            "$ref": "#/components/schemas/SponsoredProductsTargetMutationErrorSelector"
          }
        },
        "required": [
          "errorType",
          "errorValue"
        ]
      },
      "SponsoredProductsTargetType": {
        "type": "string",
        "enum": [
          "AUTO",
          "KEYWORD",
          "PRODUCT",
          "PRODUCT_CATEGORY"
        ]
      },
      "DayOfWeek": {
        "description": "The day of the week.",
        "type": "string",
        "enum": [
          "MONDAY",
          "TUESDAY",
          "WEDNESDAY",
          "THURSDAY",
          "FRIDAY",
          "SATURDAY",
          "SUNDAY"
        ]
      },
      "SponsoredProductsListSponsoredProductsGlobalAdGroupsResponseContent": {
        "type": "object",
        "properties": {
          "totalResults": {
            "format": "int64",
            "description": "The total number of entities",
            "type": "integer"
          },
          "adGroups": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsGlobalAdGroup"
            }
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          }
        }
      },
      "SponsoredProductsCampaignNegativeTargetsAccessErrorSelector": {
        "type": "object",
        "properties": {
          "entityNotFoundError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityNotFoundError"
          },
          "missingValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMissingValueError"
          },
          "malformedValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMalformedValueError"
          },
          "internalServerError": {
            "$ref": "#/components/schemas/SponsoredProductsInternalServerError"
          },
          "rangeError": {
            "$ref": "#/components/schemas/SponsoredProductsRangeError"
          },
          "otherError": {
            "$ref": "#/components/schemas/SponsoredProductsOtherError"
          },
          "throttledError": {
            "$ref": "#/components/schemas/SponsoredProductsThrottledError"
          },
          "invalidInputError": {
            "$ref": "#/components/schemas/SponsoredProductsInvalidInputError"
          }
        }
      },
      "SponsoredProductsListSponsoredProductsTargetingClausesPreviewRequestContent": {
        "type": "object",
        "properties": {
          "campaignIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsReducedObjectIdFilter"
          },
          "stateFilter": {
            "$ref": "#/components/schemas/SponsoredProductsEntityStateFilter"
          },
          "expressionTypeFilter": {
            "$ref": "#/components/schemas/SponsoredProductsExpressionTypeFilter"
          },
          "maxResults": {
            "format": "int32",
            "description": "Number of records to include in the paginated response. Defaults to max page size for given API",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          },
          "targetIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          },
          "asinFilter": {
            "$ref": "#/components/schemas/SponsoredProductsAsinFilter"
          },
          "adGroupIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsReducedObjectIdFilter"
          },
          "includeExtendedDataFields": {
            "description": "Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus",
            "type": "boolean"
          }
        }
      },
      "CountryExpressionValuesMap": {
        "description": "The targeting expression value for each country.",
        "additionalProperties": {
          "description": "The expression value.",
          "type": "string"
        },
        "maxProperties": 50,
        "type": "object"
      },
      "SponsoredProductsDraftKeywordAccessError": {
        "type": "object",
        "properties": {
          "errorType": {
            "description": "The type of the error",
            "type": "string"
          },
          "errorValue": {
            "$ref": "#/components/schemas/SponsoredProductsDraftKeywordAccessErrorSelector"
          }
        },
        "required": [
          "errorType",
          "errorValue"
        ]
      },
      "OptimizationRulesAPISwaggerRuleSubCategory": {
        "description": "The sub-category of the optimization rule.",
        "type": "string",
        "enum": [
          "SCHEDULE"
        ]
      },
      "ImpactMetrics": {
        "nullable": true,
        "description": "For the CONVERSION_OPPORTUNITIES theme, the impact metrics are weekly clicks and orders received for similar products. For other event-based themes, the impact metrics are clicks and orders received for similar products during the event days. <br> Note: This object is nullable",
        "type": "object",
        "properties": {
          "clicks": {
            "$ref": "#/components/schemas/ImpactMetric"
          },
          "orders": {
            "$ref": "#/components/schemas/ImpactMetric"
          }
        }
      },
      "MultiCountryAsinsThemeBasedBidRecommendationRequest": {
        "type": "object",
        "properties": {
          "asins": {
            "minItems": 1,
            "maxItems": 50,
            "description": "The list of multi country asins",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MultiCountryAsin"
            }
          },
          "targetingExpressions": {
            "$ref": "#/components/schemas/MultiCountryTargetingExpressionList"
          },
          "countryCodes": {
            "$ref": "#/components/schemas/CountryCodes"
          },
          "bidding": {
            "description": "Bidding control configuration for the campaign.",
            "type": "object",
            "properties": {
              "adjustments": {
                "minItems": 1,
                "maxItems": 3,
                "description": "Placement adjustment configuration for the campaign.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BidPlacementAdjustment"
                }
              },
              "strategy": {
                "$ref": "#/components/schemas/BiddingStrategy"
              }
            },
            "required": [
              "strategy"
            ]
          },
          "recommendationType": {
            "description": "The bid recommendation type.",
            "type": "string",
            "enum": [
              "BIDS_FOR_NEW_AD_GROUP"
            ]
          }
        },
        "required": [
          "recommendationType",
          "asins",
          "targetingExpressions",
          "bidding",
          "countryCodes"
        ],
        "example": {
          "asins": [
            {
              "UK": "asin2",
              "US": "asin1"
            }
          ],
          "targetingExpressions": [
            {
              "countryValues": {
                "UK": "Sample2",
                "US": "Sample1"
              },
              "type": "KEYWORD_BROAD_MATCH"
            }
          ],
          "countryCodes": [
            "UK",
            "US"
          ],
          "bidding": {
            "adjustments": [
              {
                "predicate": "PLACEMENT_TOP",
                "percentage": "100"
              },
              {
                "predicate": "PLACEMENT_REST_OF_SEARCH",
                "percentage": "75"
              },
              {
                "predicate": "PLACEMENT_PRODUCT_PAGE",
                "percentage": "50"
              }
            ],
            "strategy": "AUTO_FOR_SALES"
          },
          "recommendationType": "BIDS_FOR_NEW_AD_GROUP"
        }
      },
      "SponsoredProductsUnsupportedMediaTypeExceptionResponseContent": {
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsUnsupportedMediaTypeErrorCode"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "SponsoredProductsAdGroupServingStatusReason": {
        "type": "string",
        "enum": [
          "AD_GROUP_STATUS_ENABLED_DETAIL",
          "AD_GROUP_PAUSED_DETAIL",
          "AD_GROUP_ARCHIVED_DETAIL",
          "AD_GROUP_INCOMPLETE_DETAIL",
          "AD_GROUP_POLICING_PENDING_REVIEW_DETAIL",
          "AD_GROUP_POLICING_CREATIVE_REJECTED_DETAIL",
          "AD_GROUP_LOW_BID_DETAIL",
          "CAMPAIGN_STATUS_ENABLED_DETAIL",
          "CAMPAIGN_PAUSED_DETAIL",
          "CAMPAIGN_ARCHIVED_DETAIL",
          "PENDING_REVIEW_DETAIL",
          "REJECTED_DETAIL",
          "PENDING_START_DATE_DETAIL",
          "ENDED_DETAIL",
          "CAMPAIGN_OUT_OF_BUDGET_DETAIL",
          "CAMPAIGN_INCOMPLETE_DETAIL",
          "PORTFOLIO_STATUS_ENABLED_DETAIL",
          "PORTFOLIO_PAUSED_DETAIL",
          "PORTFOLIO_ARCHIVED_DETAIL",
          "PORTFOLIO_OUT_OF_BUDGET_DETAIL",
          "PORTFOLIO_PENDING_START_DATE_DETAIL",
          "PORTFOLIO_ENDED_DETAIL",
          "ADVERTISER_POLICING_SUSPENDED_DETAIL",
          "ADVERTISER_POLICING_PENDING_REVIEW_DETAIL",
          "ADVERTISER_ARCHIVED_DETAIL",
          "ADVERTISER_PAUSED_DETAIL",
          "ADVERTISER_OUT_OF_BUDGET_DETAIL",
          "ADVERTISER_PAYMENT_FAILURE_DETAIL",
          "OTHER"
        ]
      },
      "SponsoredProductsBatchResponseError": {
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsBatchErrorCode"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "SponsoredProductsInvalidArgumentErrorCode": {
        "type": "string",
        "enum": [
          "INVALID_ARGUMENT"
        ]
      },
      "RuleStatus": {
        "description": "The campaign optimization rule status. Read-Only",
        "type": "string",
        "enum": [
          "ACTIVE",
          "ARCHIVED"
        ]
      },
      "SponsoredProductsListSponsoredProductsKeywordsRequestContent": {
        "type": "object",
        "properties": {
          "campaignIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsReducedObjectIdFilter"
          },
          "stateFilter": {
            "$ref": "#/components/schemas/SponsoredProductsEntityStateFilter"
          },
          "maxResults": {
            "format": "int32",
            "description": "Number of records to include in the paginated response. Defaults to max page size for given API",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          },
          "adGroupIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsReducedObjectIdFilter"
          },
          "includeExtendedDataFields": {
            "description": "Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus",
            "type": "boolean"
          },
          "locale": {
            "description": "Restricts results to keywords associated with locale",
            "type": "string"
          },
          "keywordTextFilter": {
            "$ref": "#/components/schemas/SponsoredProductsKeywordTextFilter"
          },
          "keywordIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          },
          "matchTypeFilter": {
            "description": "Only the keyword with match type that is in this list will be listed",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsMatchType"
            }
          }
        }
      },
      "SponsoredProductsCreateSponsoredProductsGlobalNegativeTargetingClausesResponseContent": {
        "type": "object",
        "properties": {
          "negativeTargetingClauses": {
            "$ref": "#/components/schemas/SponsoredProductsBulkGlobalNegativeTargetingClauseOperationResponse"
          }
        },
        "required": [
          "negativeTargetingClauses"
        ]
      },
      "SponsoredProductsProductAdAccessError": {
        "type": "object",
        "properties": {
          "errorType": {
            "description": "The type of the error",
            "type": "string"
          },
          "errorValue": {
            "$ref": "#/components/schemas/SponsoredProductsProductAdAccessErrorSelector"
          }
        },
        "required": [
          "errorType",
          "errorValue"
        ]
      },
      "OptimizationRulesAPISwaggerOptimizationRuleWithoutRuleId": {
        "type": "object",
        "properties": {
          "recurrence": {
            "$ref": "#/components/schemas/OptimizationRulesAPISwaggerRuleRecurrence"
          },
          "ruleCategory": {
            "$ref": "#/components/schemas/OptimizationRulesAPISwaggerRuleCategory"
          },
          "ruleSubCategory": {
            "$ref": "#/components/schemas/OptimizationRulesAPISwaggerRuleSubCategory"
          },
          "ruleName": {
            "description": "The rule name.",
            "type": "string"
          },
          "action": {
            "$ref": "#/components/schemas/OptimizationRulesAPISwaggerRuleAction"
          },
          "conditions": {
            "minItems": 0,
            "maxItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptimizationRulesAPISwaggerRuleCondition"
            }
          },
          "status": {
            "$ref": "#/components/schemas/OptimizationRulesAPISwaggerRuleStatus"
          }
        },
        "required": [
          "ruleCategory",
          "ruleSubCategory",
          "recurrence",
          "action"
        ],
        "example": {
          "recurrence": {
            "duration": {
              "startTime": "2022-11-01T00:00:00Z",
              "endTime": "2023-11-30T23:59:59Z"
            },
            "timesOfDay": [
              {
                "startTime": "21:00",
                "endTime": "24:00"
              }
            ],
            "type": "WEEKLY",
            "daysOfWeek": [
              "SATURDAY",
              "SUNDAY"
            ]
          },
          "ruleCategory": "BID",
          "ruleSubCategory": "SCHEDULE",
          "ruleName": "increase_bids_by_50%_on_weekend_nights",
          "action": {
            "actionType": "ADOPT",
            "actionDetails": {
              "actionUnit": "PERCENT",
              "value": "50",
              "actionOperator": "INCREMENT"
            }
          },
          "optimizationRuleId": "7bf484ff-381c-4703-82ec-66b9eb732705"
        }
      },
      "SponsoredProductsUpdateTargetingClause": {
        "type": "object",
        "properties": {
          "expression": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "The targeting expression.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsTargetingExpressionPredicateWithoutOther"
            }
          },
          "targetId": {
            "description": "The target identifier",
            "type": "string"
          },
          "expressionType": {
            "$ref": "#/components/schemas/SponsoredProductsExpressionTypeWithoutOther"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateEntityState"
          },
          "bid": {
            "nullable": true,
            "format": "double",
            "description": "The bid for ads sourced using the target. Targets that do not have bid values in listTargetingClauses will inherit the defaultBid from the adGroup level. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).",
            "type": "number"
          }
        },
        "required": [
          "targetId"
        ]
      },
      "SponsoredProductsProductTarget": {
        "description": "A product target.",
        "type": "object",
        "properties": {
          "targetPromotionGroupId": {
            "description": "The id of the target promotion group.",
            "type": "string"
          },
          "targetId": {
            "description": "The id of the product target.",
            "type": "string"
          },
          "expressionType": {
            "description": "The the expression type (for PRODUCT). One of PRODUCT_EXACT, PRODUCT_SIMILAR",
            "type": "string"
          },
          "manualTargetingAdGroupId": {
            "description": "The adGroupId of the manual-targeting campaign where the target belongs.",
            "type": "string"
          },
          "target": {
            "description": "The product ASIN of the target.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsTarget": {
        "description": "Target promotion group's target.",
        "type": "object",
        "properties": {
          "targetPromotionGroupId": {
            "description": "The id of the target promotion group.",
            "type": "string"
          },
          "targetId": {
            "description": "The id of the target.",
            "type": "string"
          },
          "expressionType": {
            "description": "The match type (for KEYWORDs) or the expression type (for PRODUCT). One of QUERY_BROAD_MATCHES,\n    QUERY_EXACT_MATCHES, QUERY_PHRASE_MATCHES, ASIN_SAME_AS, ASIN_EXPANDED_FROM",
            "type": "string"
          },
          "manualTargetingAdGroupId": {
            "description": "The adGroupId of the manual-targeting campaign where the target belongs.",
            "type": "string"
          },
          "target": {
            "description": "The keyword text or the product ASIN of the target.",
            "type": "string"
          }
        }
      },
      "TargetingExpressionV4": {
        "description": "The targeting expression. The `type` property specifies the targeting option. Use `CLOSE_MATCH` to match your auto targeting ads closely to the specified value. Use `LOOSE_MATCH` to match your auto targeting ads broadly to the specified value. Use `SUBSTITUTES` to display your auto targeting ads along with substitutable products. Use `COMPLEMENTS` to display your auto targeting ads along with affiliated products. Use `KEYWORD_BROAD_MATCH` to broadly match your keyword targeting ads with search queries. Use `KEYWORD_EXACT_MATCH` to exactly match your keyword targeting ads with search queries. Use `KEYWORD_PHRASE_MATCH` to match your keyword targeting ads with search phrases. your keyword targeting ads with search phrases. Use `PAT_ASIN` to match your product attribute targeting ads with product ASIN. Use `PAT_CATEGORY` to match your product attribute targeting ads with product category. Use `PAT_CATEGORY_REFINEMENT` to match your product attribute targeting ads with product attribute, including brand, price, rating, prime shipping eligible, age range and genre. Use `KEYWORD_GROUP` to match your keyword targeting ads with keyword group.",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "CLOSE_MATCH",
              "LOOSE_MATCH",
              "SUBSTITUTES",
              "COMPLEMENTS",
              "KEYWORD_BROAD_MATCH",
              "KEYWORD_EXACT_MATCH",
              "KEYWORD_PHRASE_MATCH",
              "PAT_ASIN",
              "PAT_CATEGORY",
              "PAT_CATEGORY_REFINEMENT",
              "KEYWORD_GROUP"
            ]
          },
          "value": {
            "description": "The targeting expression value.",
            "type": "string"
          }
        },
        "required": [
          "type"
        ],
        "example": {
          "type": "CLOSE_MATCH"
        }
      },
      "RankedTargetWithThemedBidsList": {
        "minItems": 0,
        "maxItems": 200,
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/RankedTargetWithThemedBids"
        }
      },
      "SponsoredProductsCampaign": {
        "type": "object",
        "properties": {
          "portfolioId": {
            "description": "The identifier of an existing portfolio to which the campaign is associated.",
            "type": "string"
          },
          "offAmazonSettings": {
            "$ref": "#/components/schemas/SponsoredProductsOffAmazonSettings"
          },
          "endDate": {
            "nullable": true,
            "format": "date",
            "description": "The format of the date is YYYY-MM-DD.",
            "type": "string"
          },
          "campaignId": {
            "description": "The identifier of the campaign.",
            "type": "string"
          },
          "name": {
            "description": "The name of the campaign.",
            "type": "string"
          },
          "targetingType": {
            "$ref": "#/components/schemas/SponsoredProductsTargetingType"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsEntityState"
          },
          "dynamicBidding": {
            "$ref": "#/components/schemas/SponsoredProductsDynamicBidding"
          },
          "startDate": {
            "format": "date",
            "description": "The format of the date is YYYY-MM-DD.",
            "type": "string"
          },
          "budget": {
            "$ref": "#/components/schemas/SponsoredProductsBudget"
          },
          "tags": {
            "$ref": "#/components/schemas/SponsoredProductsTags"
          },
          "extendedData": {
            "$ref": "#/components/schemas/SponsoredProductsCampaignExtendedData"
          }
        },
        "required": [
          "budget",
          "campaignId",
          "name",
          "startDate",
          "state",
          "targetingType"
        ]
      },
      "RMSRuleType": {
        "description": "The type of budget rule. SCHEDULE: A budget rule based on a start and end date. PERFORMANCE: A budget rule based on advertising performance criteria.",
        "type": "string",
        "enum": [
          "SCHEDULE",
          "PERFORMANCE"
        ]
      },
      "SponsoredProductsUpdateSponsoredProductsGlobalKeywordsRequestContent": {
        "type": "object",
        "properties": {
          "keywords": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "An array of keywords with updated values.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsUpdateGlobalKeyword"
            }
          }
        },
        "required": [
          "keywords"
        ]
      },
      "SponsoredProductsCreateSponsoredProductsDraftProductAdsRequestContent": {
        "type": "object",
        "properties": {
          "productAds": {
            "minItems": 0,
            "maxItems": 100,
            "description": "An array of ads.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCreateDraftProductAd"
            }
          }
        }
      },
      "GetSPBudgetRulesForAdvertiserResponse": {
        "type": "object",
        "properties": {
          "budgetRulesForAdvertiserResponse": {
            "minItems": 0,
            "maxItems": 30,
            "description": "A list of rules created by the advertiser.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SPBudgetRule"
            }
          },
          "nextToken": {
            "description": "To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsCreateTargetingExpressionPredicate": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/SponsoredProductsCreateTargetingExpressionPredicateType"
          },
          "value": {
            "description": "The expression value",
            "type": "string"
          }
        },
        "required": [
          "type"
        ]
      },
      "SponsoredProductsListTargetPromotionGroupTargetsInternalResponseContent": {
        "description": "Response object for querying target promotion group targets.",
        "type": "object",
        "properties": {
          "totalResults": {
            "format": "int64",
            "description": "The total number of results available.",
            "type": "integer"
          },
          "nextToken": {
            "description": "To retrieve the next page of results, call the same operation and specify this token in the\n    request. If the nextToken field is empty, there are no further results.",
            "type": "string"
          },
          "targets": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsTarget"
            }
          }
        }
      },
      "OptimizationRulesAPISwaggerSingleCampaignRuleAssociationStatus": {
        "description": "Object that describes the association status of an optimization rule and a single campaign.",
        "type": "object",
        "properties": {
          "ruleState": {
            "type": "string"
          },
          "campaignId": {
            "description": "Sp campaign identifier.",
            "type": "string"
          },
          "optimizationRuleId": {
            "description": "The rule identifier.",
            "type": "string"
          },
          "notificationString": {
            "type": "string"
          }
        }
      },
      "SponsoredProductsDraftProductAdSuccessResponseItem": {
        "type": "object",
        "properties": {
          "adId": {
            "description": "the DraftProductAd ID",
            "type": "string"
          },
          "index": {
            "format": "int32",
            "description": "The index in the original list from the request.",
            "type": "integer",
            "minimum": 0
          },
          "productAd": {
            "$ref": "#/components/schemas/SponsoredProductsDraftProductAd"
          }
        },
        "required": [
          "index"
        ]
      },
      "SponsoredProductsListSponsoredProductsTargetingClausesResponseContent": {
        "type": "object",
        "properties": {
          "totalResults": {
            "format": "int64",
            "description": "The total number of entities",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          },
          "targetingClauses": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsTargetingClause"
            }
          }
        }
      },
      "OptimizationRulesAPISwaggerActionDetails": {
        "description": "Details of a rule action.",
        "type": "object",
        "properties": {
          "actionUnit": {
            "type": "string",
            "enum": [
              "PERCENT"
            ]
          },
          "value": {
            "format": "double",
            "type": "number"
          },
          "actionOperator": {
            "$ref": "#/components/schemas/OptimizationRulesAPISwaggerRuleActionOperator"
          }
        },
        "required": [
          "actionOperator",
          "value",
          "actionUnit"
        ],
        "example": {
          "actionUnit": "PERCENT",
          "value": "20",
          "actionOperator": "INCREMENT"
        }
      },
      "SponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent": {
        "type": "object",
        "properties": {
          "campaignNegativeTargetIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          }
        },
        "required": [
          "campaignNegativeTargetIdFilter"
        ]
      },
      "SponsoredProductsEntityQuotaError": {
        "description": "Errors related to exceeding quota in campaign management service",
        "type": "object",
        "properties": {
          "reason": {
            "$ref": "#/components/schemas/SponsoredProductsQuotaErrorReason"
          },
          "quotaScope": {
            "$ref": "#/components/schemas/SponsoredProductsQuotaScope"
          },
          "entityType": {
            "$ref": "#/components/schemas/SponsoredProductsEntityType"
          },
          "quota": {
            "description": "optional current quota",
            "type": "string"
          },
          "cause": {
            "$ref": "#/components/schemas/SponsoredProductsErrorCause"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          }
        },
        "required": [
          "entityType",
          "message",
          "reason"
        ]
      },
      "PerformanceMetricForSB": {
        "description": "The advertising performance metric.",
        "type": "string",
        "enum": [
          "IS",
          "NTB",
          "ROAS"
        ]
      },
      "SponsoredProductsListSponsoredProductsKeywordsPreviewRequestContent": {
        "type": "object",
        "properties": {
          "campaignIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsReducedObjectIdFilter"
          },
          "stateFilter": {
            "$ref": "#/components/schemas/SponsoredProductsEntityStateFilter"
          },
          "maxResults": {
            "format": "int32",
            "description": "Number of records to include in the paginated response. Defaults to max page size for given API",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          },
          "adGroupIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsReducedObjectIdFilter"
          },
          "includeExtendedDataFields": {
            "description": "Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus",
            "type": "boolean"
          },
          "locale": {
            "description": "Restricts results to keywords associated with locale",
            "type": "string"
          },
          "keywordTextFilter": {
            "$ref": "#/components/schemas/SponsoredProductsKeywordTextFilter"
          },
          "keywordIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          },
          "matchTypeFilter": {
            "description": "Only the keyword with match type that is in this list will be listed",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsMatchType"
            }
          }
        }
      },
      "SPCampaignOptimizationNotificationAPIRequest": {
        "type": "object",
        "properties": {
          "campaignIds": {
            "maxItems": 100,
            "description": "A list of campaign ids",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuleCampaignId"
            }
          }
        },
        "required": [
          "campaignIds"
        ]
      },
      "SponsoredProductsTooManyRequestsResponseContent": {
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsErrorCode"
          },
          "message": {
            "type": "string"
          },
          "httpStatusCode": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsResponseContent": {
        "type": "object",
        "properties": {
          "totalResults": {
            "format": "int64",
            "description": "The total number of entities",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          },
          "campaignNegativeKeywords": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCampaignNegativeKeyword"
            }
          }
        }
      },
      "SponsoredProductsUpdateCampaignNegativeTargetingClause": {
        "type": "object",
        "properties": {
          "expression": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "The NegativeTargeting expression.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateNegativeTargetingExpressionPredicate"
            }
          },
          "targetId": {
            "description": "The target identifier",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateEntityState"
          }
        },
        "required": [
          "targetId"
        ]
      },
      "SponsoredProductsDraftNegativeTargetMutationExceptionResponseContent": {
        "description": "Exception resulting in mutating campaign management entities",
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsInvalidArgumentErrorCode"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftNegativeTargetMutationError"
            }
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "SponsoredProductsTargetLevel": {
        "type": "string",
        "enum": [
          "AD_GROUP",
          "CAMPAIGN"
        ]
      },
      "SponsoredProductsCreateProductTarget": {
        "description": "A product target.",
        "type": "object",
        "properties": {
          "matchType": {
            "$ref": "#/components/schemas/SponsoredProductsTargetingExpressionMatchType"
          },
          "bid": {
            "format": "double",
            "description": "Bid associated with the target. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).",
            "type": "number",
            "minimum": 0
          },
          "target": {
            "description": "The product ASIN of the target.",
            "type": "string"
          },
          "addNegativeTargetToSourceAdGroup": {
            "description": "Enable this field to add the product target as a negative target in the source AT ad group. If you do not include this field, the targeting\n    behavior is inherited from the parent TPG object.",
            "type": "boolean"
          }
        }
      },
      "AgeRangeLoP": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of Age Range.",
            "type": "string"
          },
          "id": {
            "description": "Id of Age Range. Use the POST /sp/targets/category/{categoryId}/refinements endpoint to retrieve Age Range Node IDs.",
            "type": "string"
          },
          "translatedName": {
            "description": "Translated name of Age Range based off locale sent in request.",
            "type": "string"
          }
        }
      },
      "BudgetUsagePortfolioBatchError": {
        "type": "object",
        "properties": {
          "portfolioId": {
            "description": "ID of requested resource",
            "type": "string"
          },
          "code": {
            "description": "An enumerated error code for machine use.",
            "type": "string"
          },
          "index": {
            "description": "An index to maintain order of the portfolioIds",
            "type": "number"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsUpdateSponsoredProductsGlobalKeywordsResponseContent": {
        "type": "object",
        "properties": {
          "keywords": {
            "$ref": "#/components/schemas/SponsoredProductsBulkGlobalKeywordOperationResponse"
          }
        },
        "required": [
          "keywords"
        ]
      },
      "SponsoredProductsDraftKeywordAccessErrorSelector": {
        "type": "object",
        "properties": {
          "entityNotFoundError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityNotFoundError"
          },
          "missingValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMissingValueError"
          },
          "localeError": {
            "$ref": "#/components/schemas/SponsoredProductsLocaleError"
          },
          "malformedValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMalformedValueError"
          },
          "internalServerError": {
            "$ref": "#/components/schemas/SponsoredProductsInternalServerError"
          },
          "rangeError": {
            "$ref": "#/components/schemas/SponsoredProductsRangeError"
          },
          "otherError": {
            "$ref": "#/components/schemas/SponsoredProductsOtherError"
          },
          "throttledError": {
            "$ref": "#/components/schemas/SponsoredProductsThrottledError"
          }
        }
      },
      "SponsoredProductsListAllSPTargetsResponseContent": {
        "type": "object",
        "properties": {
          "totalResults": {
            "format": "int64",
            "description": "The total number of entities",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          },
          "targetingClauses": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsAllTargets"
            }
          }
        }
      },
      "SPIndividualEvent": {
        "type": "object",
        "properties": {
          "eventId": {
            "description": "The event identifier.",
            "type": "string"
          },
          "endDate": {
            "format": "date-time",
            "description": "The end date in ISO-8601 format.",
            "type": "string"
          },
          "eventName": {
            "description": "The event name.",
            "type": "string"
          },
          "startDate": {
            "format": "date-time",
            "description": "The start date in ISO-8601 format.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsCreateAllTargets": {
        "description": "Targets allow you to target or exclude criteria at the campaign or ad group level, and to set bids for specific criteria at the ad group level.",
        "type": "object",
        "properties": {
          "negative": {
            "description": "Whether to target (false) or exclude (true) the given target",
            "type": "boolean"
          },
          "campaignId": {
            "description": "The campaign to which the target is associated.",
            "type": "string"
          },
          "targetType": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateTargetType"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateState"
          },
          "bid": {
            "$ref": "#/components/schemas/SponsoredProductsBid"
          },
          "targetDetails": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateTargetDetails"
          },
          "adGroupId": {
            "description": "The ad group to which the target is associated.",
            "type": "string"
          },
          "targetLevel": {
            "$ref": "#/components/schemas/SponsoredProductsTargetLevel"
          }
        },
        "required": [
          "negative",
          "state",
          "targetDetails",
          "targetLevel",
          "targetType"
        ]
      },
      "OptimizationRulesAPISwaggerDisassociateOptimizationRulesResponse": {
        "description": "Response object for deleting optimization rules associations.",
        "type": "object",
        "properties": {
          "success": {
            "minItems": 1,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptimizationRulesAPISwaggerDisassociateOptimizationRulesResponseSuccessItem"
            }
          },
          "error": {
            "minItems": 1,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptimizationRulesAPISwaggerDisassociateOptimizationRulesResponseErrorItem"
            }
          }
        },
        "required": [
          "success",
          "error"
        ]
      },
      "OptimizationRulesAPISwaggerDisassociateOptimizationRulesResponseSuccessItem": {
        "type": "object",
        "properties": {
          "entityType": {
            "$ref": "#/components/schemas/OptimizationRulesAPISwaggerEntityType"
          },
          "index": {
            "description": "Index of the successful disassociation pair in the request.",
            "type": "integer"
          },
          "entityId": {
            "description": "The id that uniquely identifies the advertising entity that was disassociated from.",
            "type": "string"
          },
          "optimizationRuleId": {
            "description": "The id that uniquely identifies the optimization rule that was disassociated.",
            "type": "integer"
          }
        },
        "required": [
          "index",
          "entityId",
          "entityType",
          "optimizationRuleId"
        ]
      },
      "SponsoredProductsCreateSponsoredProductsTargetingClausesResponseContent": {
        "type": "object",
        "properties": {
          "targetingClauses": {
            "$ref": "#/components/schemas/SponsoredProductsBulkTargetingClauseOperationResponse"
          }
        },
        "required": [
          "targetingClauses"
        ]
      },
      "BudgetRuleResponse": {
        "type": "object",
        "properties": {
          "code": {
            "description": "An enumerated success or error code for machine use.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the error, if unsuccessful",
            "type": "string"
          },
          "ruleId": {
            "description": "The rule identifier.",
            "type": "string"
          },
          "associatedCampaignIds": {
            "type": "array",
            "items": {
              "description": "The campaign identifier for which rule based budget may get updated",
              "type": "string"
            }
          }
        }
      },
      "CreateRMSBudgetRulesRequest": {
        "type": "object",
        "properties": {
          "budgetRulesDetails": {
            "maxItems": 25,
            "description": "A list of budget rule details.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RMSBudgetRuleDetails"
            }
          }
        }
      },
      "SponsoredProductsListTargetPromotionGroupTargetsV2RequestContent": {
        "description": "Request object for querying target promotion group targets.",
        "type": "object",
        "properties": {
          "maxResults": {
            "default": 1000,
            "format": "int32",
            "description": "The maximum number of results requested.",
            "maximum": 1000,
            "type": "integer",
            "minimum": 1
          },
          "nextToken": {
            "description": "Token value allowing to navigate to the next or previous response page",
            "type": "string"
          },
          "targetPromotionGroupIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          },
          "adGroupIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          }
        }
      },
      "SponsoredProductsCreateGlobalKeyword": {
        "type": "object",
        "properties": {
          "campaignId": {
            "description": "The identifer of the campaign to which the keyword is associated.",
            "type": "string"
          },
          "matchType": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateMatchType"
          },
          "name": {
            "description": "Name for the Keyword",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateGlobalEntityState"
          },
          "bid": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalBid"
          },
          "adGroupId": {
            "description": "The identifier of the ad group to which this keyword is associated.",
            "type": "string"
          },
          "keywordText": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalKeywordText"
          }
        },
        "required": [
          "adGroupId",
          "campaignId",
          "keywordText",
          "matchType",
          "state"
        ]
      },
      "TargetableCategoriesLoP": {
        "description": "Response object containing all targetable categories for the advertiser's marketplace in a language of preference (LoP) provide by the locale query parameter. ID is the category ID. NA is the name. TN is the translated name in the language of preference. CH is the list of child categories. TA is if the category is targetable. AsinCountRange is the AsinCounts of the node. Version 4 adds the number of targetable ASINs to each category.",
        "type": "object",
        "properties": {
          "categoryTree": {
            "type": "string"
          }
        },
        "example": "[{\"id\":2748212011,\"na\":\"Art Paper\",\"tn\":\"Papel de arte\",\"ch\":[{\"id\":8090742011,\"na\":\"Palette Paper\",\"tn\":\"Papel de paleta\",\"ch\":[],\"ta\":true, \"asinCountRange\":{\"min\":11,\"max\":19}},{\"id\":8090734011,\"na\":\"Sketchbooks & Notebooks\",\"tn\":\"Cuadernos de bocetos y cuadernos\",\"ch\":[],\"ta\":true, \"asinCountRange\":{\"min\":3,\"max\":5}}],\"ta\":true,\"asinCountRange\":{\"min\":57,\"max\":84}},{\"id\":12898291,\"na\":\"Tracing Paper\",\"tn\":\"Papel de trazar\",\"ch\":[],\"ta\":true, \"asinCountRange\":{\"min\":24,\"max\":40}}]"
      },
      "SponsoredProductsCreateCampaignNegativeTargetingClause": {
        "type": "object",
        "properties": {
          "expression": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "The NegativeTargeting expression.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateNegativeTargetingExpressionPredicate"
            }
          },
          "campaignId": {
            "description": "The identifier of the campaign to which this target is associated. CampaignNegativeTargetingClauses are only available for AUTO campaigns",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateEntityState"
          }
        },
        "required": [
          "campaignId",
          "expression",
          "state"
        ]
      },
      "SponsoredProductsCreateOrUpdateOffAmazonSettings": {
        "description": "Settings that apply to ads served off Amazon. `OffAmazonSettings` is optional for both Create and Update requests.\nThis field is upcoming and is not ready for use.",
        "type": "object",
        "properties": {
          "offAmazonBudgetControlStrategy": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateOffAmazonBudgetControlStrategy"
          }
        }
      },
      "SponsoredProductsCreateTargetErrorSelector": {
        "oneOf": [
          {
            "type": "object",
            "title": "biddingError",
            "properties": {
              "biddingError": {
                "$ref": "#/components/schemas/SponsoredProductsBiddingError"
              }
            },
            "required": [
              "biddingError"
            ]
          },
          {
            "type": "object",
            "title": "billingError",
            "properties": {
              "billingError": {
                "$ref": "#/components/schemas/SponsoredProductsBillingError"
              }
            },
            "required": [
              "billingError"
            ]
          },
          {
            "type": "object",
            "title": "duplicateValueError",
            "properties": {
              "duplicateValueError": {
                "$ref": "#/components/schemas/SponsoredProductsDuplicateValueError"
              }
            },
            "required": [
              "duplicateValueError"
            ]
          },
          {
            "type": "object",
            "title": "entityNotFoundError",
            "properties": {
              "entityNotFoundError": {
                "$ref": "#/components/schemas/SponsoredProductsEntityNotFoundError"
              }
            },
            "required": [
              "entityNotFoundError"
            ]
          },
          {
            "type": "object",
            "title": "entityQuotaError",
            "properties": {
              "entityQuotaError": {
                "$ref": "#/components/schemas/SponsoredProductsEntityQuotaError"
              }
            },
            "required": [
              "entityQuotaError"
            ]
          },
          {
            "type": "object",
            "title": "entityStateError",
            "properties": {
              "entityStateError": {
                "$ref": "#/components/schemas/SponsoredProductsEntityStateError"
              }
            },
            "required": [
              "entityStateError"
            ]
          },
          {
            "type": "object",
            "title": "expressionTypeError",
            "properties": {
              "expressionTypeError": {
                "$ref": "#/components/schemas/SponsoredProductsExpressionTypeError"
              }
            },
            "required": [
              "expressionTypeError"
            ]
          },
          {
            "type": "object",
            "title": "localeError",
            "properties": {
              "localeError": {
                "$ref": "#/components/schemas/SponsoredProductsLocaleError"
              }
            },
            "required": [
              "localeError"
            ]
          },
          {
            "type": "object",
            "title": "malformedValueError",
            "properties": {
              "malformedValueError": {
                "$ref": "#/components/schemas/SponsoredProductsMalformedValueError"
              }
            },
            "required": [
              "malformedValueError"
            ]
          },
          {
            "type": "object",
            "title": "missingValueError",
            "properties": {
              "missingValueError": {
                "$ref": "#/components/schemas/SponsoredProductsMissingValueError"
              }
            },
            "required": [
              "missingValueError"
            ]
          },
          {
            "type": "object",
            "title": "parentEntityError",
            "properties": {
              "parentEntityError": {
                "$ref": "#/components/schemas/SponsoredProductsParentEntityError"
              }
            },
            "required": [
              "parentEntityError"
            ]
          },
          {
            "type": "object",
            "title": "rangeError",
            "properties": {
              "rangeError": {
                "$ref": "#/components/schemas/SponsoredProductsRangeError"
              }
            },
            "required": [
              "rangeError"
            ]
          },
          {
            "type": "object",
            "title": "otherError",
            "properties": {
              "otherError": {
                "$ref": "#/components/schemas/SponsoredProductsOtherError"
              }
            },
            "required": [
              "otherError"
            ]
          },
          {
            "type": "object",
            "title": "internalServerError",
            "properties": {
              "internalServerError": {
                "$ref": "#/components/schemas/SponsoredProductsInternalServerError"
              }
            },
            "required": [
              "internalServerError"
            ]
          },
          {
            "type": "object",
            "title": "invalidInputError",
            "properties": {
              "invalidInputError": {
                "$ref": "#/components/schemas/SponsoredProductsInvalidInputError"
              }
            },
            "required": [
              "invalidInputError"
            ]
          },
          {
            "type": "object",
            "title": "throttledError",
            "properties": {
              "throttledError": {
                "$ref": "#/components/schemas/SponsoredProductsThrottledError"
              }
            },
            "required": [
              "throttledError"
            ]
          },
          {
            "type": "object",
            "title": "targetingClauseSetupError",
            "properties": {
              "targetingClauseSetupError": {
                "$ref": "#/components/schemas/SponsoredProductsTargetingClauseSetupError"
              }
            },
            "required": [
              "targetingClauseSetupError"
            ]
          }
        ]
      },
      "SponsoredProductsCreateTargetPromotionGroupTargetsBatchError": {
        "description": "Response object of failed target promotion group target.",
        "type": "object",
        "properties": {
          "index": {
            "description": "index of the item in the request.",
            "type": "string"
          },
          "subErrors": {
            "minItems": 1,
            "maxItems": 100,
            "description": "A list of the errors encountered.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsError"
            }
          }
        }
      },
      "SponsoredProductsUpdateSponsoredProductsGlobalTargetingClausesResponseContent": {
        "type": "object",
        "properties": {
          "targetingClauses": {
            "$ref": "#/components/schemas/SponsoredProductsBulkGlobalTargetingClauseOperationResponse"
          }
        },
        "required": [
          "targetingClauses"
        ]
      },
      "SponsoredProductsCreateGlobalNegativeTargetingClause": {
        "type": "object",
        "properties": {
          "expression": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "The NegativeTargeting expression.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsGlobalTargetingExpressionPredicate"
            }
          },
          "campaignId": {
            "description": "The identifier of the campaign to which this target is associated.",
            "type": "string"
          },
          "name": {
            "description": "Name for the negative targeting clause",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateGlobalEntityState"
          },
          "adGroupId": {
            "description": "The identifier of the ad group to which this target is associated.",
            "type": "string"
          }
        },
        "required": [
          "adGroupId",
          "campaignId",
          "expression",
          "name",
          "state"
        ]
      },
      "TargetableAsinCounts": {
        "description": "Response object to get number of targetable asins for refinements provided by the user",
        "type": "object",
        "properties": {
          "asinCounts": {
            "$ref": "#/components/schemas/IntegerRange"
          }
        }
      },
      "SponsoredProductsListTargetPromotionGroupTargetsInternalRequestContent": {
        "type": "object",
        "properties": {
          "maxResults": {
            "default": 1000,
            "format": "int32",
            "description": "Number of records to include in the paginated response. Defaults to max page size for given API",
            "maximum": 1000,
            "type": "integer",
            "minimum": 1
          },
          "nextToken": {
            "description": "Token value allowing to navigate to the next or previous response page",
            "type": "string"
          },
          "targetPromotionGroupIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          },
          "adGroupIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          },
          "apiGatewayContext": {
            "$ref": "#/components/schemas/SponsoredProductsApiGatewayContext"
          }
        },
        "required": [
          "apiGatewayContext"
        ]
      },
      "SponsoredProductsCampaignNegativeTargetsAccessError": {
        "type": "object",
        "properties": {
          "errorType": {
            "description": "The type of the error",
            "type": "string"
          },
          "errorValue": {
            "$ref": "#/components/schemas/SponsoredProductsCampaignNegativeTargetsAccessErrorSelector"
          }
        },
        "required": [
          "errorType",
          "errorValue"
        ]
      },
      "SponsoredProductsDraftNegativeKeywordMutationErrorSelector": {
        "type": "object",
        "properties": {
          "entityNotFoundError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityNotFoundError"
          },
          "entityStateError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityStateError"
          },
          "missingValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMissingValueError"
          },
          "malformedValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMalformedValueError"
          },
          "duplicateValueError": {
            "$ref": "#/components/schemas/SponsoredProductsDuplicateValueError"
          },
          "billingError": {
            "$ref": "#/components/schemas/SponsoredProductsBillingError"
          },
          "entityQuotaError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityQuotaError"
          },
          "internalServerError": {
            "$ref": "#/components/schemas/SponsoredProductsInternalServerError"
          },
          "rangeError": {
            "$ref": "#/components/schemas/SponsoredProductsRangeError"
          },
          "otherError": {
            "$ref": "#/components/schemas/SponsoredProductsOtherError"
          },
          "throttledError": {
            "$ref": "#/components/schemas/SponsoredProductsThrottledError"
          }
        }
      },
      "SponsoredProductsCreateTargetRequestV2": {
        "oneOf": [
          {
            "type": "object",
            "title": "keywordTarget",
            "properties": {
              "keywordTarget": {
                "$ref": "#/components/schemas/SponsoredProductsCreateKeywordTarget"
              }
            },
            "required": [
              "keywordTarget"
            ]
          },
          {
            "type": "object",
            "title": "productTarget",
            "properties": {
              "productTarget": {
                "$ref": "#/components/schemas/SponsoredProductsCreateProductTarget"
              }
            },
            "required": [
              "productTarget"
            ]
          }
        ],
        "description": "Request object for target promotion group's target."
      },
      "SponsoredProductsListSponsoredProductsCampaignsResponseContent": {
        "type": "object",
        "properties": {
          "totalResults": {
            "format": "int64",
            "description": "The total number of entities",
            "type": "integer"
          },
          "campaigns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCampaign"
            }
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          }
        }
      },
      "RatingRange": {
        "description": "Rating range is restricted to integers between 0 and 5, inclusive. Min must be less than or equal to max. We use this to retrieve the number of targetable ASINs that falls within this rating range.",
        "type": "object",
        "properties": {
          "min": {
            "format": "int32",
            "type": "integer"
          },
          "max": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "SponsoredProductsCreateOrUpdateNegativeTargetingExpressionPredicateType": {
        "description": "The type of nagative targeting expression. You can only specify values for the following predicates:\n| Predicate | Description |\n| --- | --- |\n| `ASIN_BRAND_SAME_AS` | Target the brand that is the same as the brand expressed. |\n| `ASIN_SAME_AS` | Target an ASIN that is the same as the ASIN expressed. |",
        "type": "string",
        "enum": [
          "ASIN_BRAND_SAME_AS",
          "ASIN_SAME_AS"
        ]
      },
      "SponsoredProductsListSponsoredProductsDraftCampaignsPromotionStatusResponseContent": {
        "type": "object",
        "properties": {
          "totalResults": {
            "format": "int64",
            "description": "The total number of entities",
            "type": "integer"
          },
          "campaignStatuses": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftCampaignPromotionStatus"
            }
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          }
        }
      },
      "SponsoredProductsUnauthorizedErrorCode": {
        "type": "string",
        "enum": [
          "UNAUTHORIZED"
        ]
      },
      "OptimizationRulesAPISwaggerCreateOptimizationRulesRequest": {
        "description": "Request object for creating one or multiple optimization rules.",
        "type": "object",
        "properties": {
          "optimizationRules": {
            "minItems": 1,
            "maxItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptimizationRulesAPISwaggerOptimizationRuleWithoutRuleId"
            }
          }
        },
        "required": [
          "optimizationRules"
        ]
      },
      "SponsoredProductsAccessDeniedExceptionResponseContent": {
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsAccessDeniedErrorCode"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "BiddingStrategyRecommendation": {
        "description": "Contains suggested recommendation for the campaign bidding strategy.",
        "type": "object",
        "properties": {
          "suggestedBiddingStrategy": {
            "description": "The suggested bidding strategy value for the campaign.\n| Value | Strategy name | Description |\n|----------------|---------------|-------------|\n| `LEGACY_FOR_SALES` | Dynamic bids - down only | Lowers your bids in real time when your ad may be less likely to convert to a sale. Campaigns created before the release of the bidding controls feature used this setting by default. |\n| `AUTO_FOR_SALES` | Dynamic bids - up and down | Increases or decreases your bids in real time by a maximum of 100%. With this setting bids increase when your ad is more likely to convert to a sale, and bids decrease when less likely to convert to a sale. |\n| `MANUAL` | Fixed bid | Uses your exact bid and any placement adjustments you set, and is not subject to dynamic bidding. |",
            "type": "string",
            "enum": [
              "LEGACY_FOR_SALES",
              "AUTO_FOR_SALES",
              "MANUAL"
            ]
          },
          "action": {
            "description": "Type of suggested action.",
            "type": "string",
            "enum": [
              "UPDATE"
            ]
          }
        }
      },
      "SponsoredProductsGlobalKeyword": {
        "type": "object",
        "properties": {
          "keywordId": {
            "description": "The identifier of the keyword.",
            "type": "string"
          },
          "campaignId": {
            "description": "The identifier of the campaign to which the keyword is associated.",
            "type": "string"
          },
          "matchType": {
            "$ref": "#/components/schemas/SponsoredProductsMatchType"
          },
          "name": {
            "description": "Name for the Keyword",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalEntityState"
          },
          "bid": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalBid"
          },
          "adGroupId": {
            "description": "The identifier of the ad group to which this keyword is associated.",
            "type": "string"
          },
          "keywordText": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalKeywordText"
          },
          "extendedData": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalKeywordExtendedData"
          }
        },
        "required": [
          "adGroupId",
          "bid",
          "campaignId",
          "keywordId",
          "keywordText",
          "matchType",
          "state"
        ]
      },
      "SponsoredProductsCreateProductAd": {
        "type": "object",
        "properties": {
          "globalStoreSetting": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalStoreSetting"
          },
          "campaignId": {
            "description": "The campaign identifier.",
            "type": "string"
          },
          "customText": {
            "minLength": 50,
            "pattern": "^[^a-z<>^][^<>^]+$",
            "description": "The custom text to use for creating a custom text ad for the associated ASIN. Defined only for KDP Authors and Book Vendors in US marketplace.",
            "type": "string",
            "maxLength": 150
          },
          "asin": {
            "description": "The ASIN associated with the product. Defined for vendors only.",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateEntityState"
          },
          "sku": {
            "description": "The SKU associated with the product. Defined for seller accounts only.",
            "type": "string"
          },
          "adGroupId": {
            "description": "The ad group identifier.",
            "type": "string"
          }
        },
        "required": [
          "adGroupId",
          "campaignId",
          "state"
        ]
      },
      "CreateAssociatedBudgetRulesRequest": {
        "type": "object",
        "properties": {
          "budgetRuleIds": {
            "maxItems": 25,
            "description": "A list of budget rule identifiers.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "BidValues": {
        "description": "Suggested bid range",
        "properties": {
          "suggested": {
            "format": "double",
            "description": "The suggested bid",
            "type": "number"
          },
          "rangeStart": {
            "format": "double",
            "description": "The bid range start",
            "type": "number"
          },
          "rangeEnd": {
            "format": "double",
            "description": "The bid range end",
            "type": "number"
          }
        }
      },
      "SponsoredProductsDraftCampaignPlacementBidding": {
        "type": "object",
        "properties": {
          "percentage": {
            "format": "int32",
            "maximum": 900,
            "type": "integer",
            "minimum": 0
          },
          "placement": {
            "$ref": "#/components/schemas/SponsoredProductsPlacement"
          }
        }
      },
      "SponsoredProductsCreateSponsoredProductsDraftKeywordsResponseContent": {
        "type": "object",
        "properties": {
          "keywords": {
            "$ref": "#/components/schemas/SponsoredProductsBulkDraftKeywordOperationResponse"
          }
        },
        "required": [
          "keywords"
        ]
      },
      "SponsoredProductsInvalidInputErrorReason": {
        "type": "string",
        "enum": [
          "INVALID_TOKEN"
        ]
      },
      "SponsoredProductsListSponsoredProductsAdGroupsRequestContent": {
        "type": "object",
        "properties": {
          "campaignIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsReducedObjectIdFilter"
          },
          "stateFilter": {
            "$ref": "#/components/schemas/SponsoredProductsEntityStateFilter"
          },
          "maxResults": {
            "format": "int32",
            "description": "Number of records to include in the paginated response. Defaults to max page size for given API",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          },
          "adGroupIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          },
          "includeExtendedDataFields": {
            "description": "Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus",
            "type": "boolean"
          },
          "nameFilter": {
            "$ref": "#/components/schemas/SponsoredProductsNameFilter"
          },
          "campaignTargetingTypeFilter": {
            "$ref": "#/components/schemas/SponsoredProductsTargetingType"
          }
        }
      },
      "SponsoredProductsCampaignNegativeTargetingClause": {
        "type": "object",
        "properties": {
          "expression": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "The CampaignNegativeTargetingClause expression.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsNegativeTargetingExpressionPredicate"
            }
          },
          "targetId": {
            "description": "The target identifier",
            "type": "string"
          },
          "resolvedExpression": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "The resolved CampaignNegativeTargetingClause expression.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsNegativeTargetingExpressionPredicate"
            }
          },
          "campaignId": {
            "description": "The identifier of the campaign to which this target is associated.",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsEntityState"
          },
          "extendedData": {
            "$ref": "#/components/schemas/SponsoredProductsCampaignNegativeTargetingClauseExtendedData"
          }
        },
        "required": [
          "campaignId",
          "expression",
          "resolvedExpression",
          "state",
          "targetId"
        ]
      },
      "BudgetRecommendationRequest": {
        "type": "object",
        "required": [
          "campaignIds"
        ],
        "properties": {
          "campaignIds": {
            "minItems": 1,
            "maxItems": 100,
            "description": "List of campaigns.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SponsoredProductsBid": {
        "type": "object",
        "properties": {
          "currency": {
            "$ref": "#/components/schemas/SponsoredProductsCurrencyCode"
          },
          "bid": {
            "format": "double",
            "description": "The monetary amount of the bid applied to this target.",
            "type": "number"
          }
        }
      },
      "SponsoredProductsCreateSponsoredProductsCampaignsRequestContent": {
        "type": "object",
        "properties": {
          "campaigns": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "An array of campaigns.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCreateCampaign"
            }
          }
        },
        "required": [
          "campaigns"
        ]
      },
      "SponsoredProductsMarketplaceState": {
        "type": "object",
        "properties": {
          "marketplace": {
            "$ref": "#/components/schemas/SponsoredProductsMarketplace"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsEntityState"
          }
        },
        "required": [
          "marketplace",
          "state"
        ]
      },
      "SponsoredProductsUpdateDraftCampaign": {
        "type": "object",
        "properties": {
          "portfolioId": {
            "nullable": true,
            "description": "The identifier of an existing portfolio to which the draft is associated.",
            "type": "string"
          },
          "endDate": {
            "nullable": true,
            "format": "date",
            "description": "The format of the date is YYYY-MM-DD.",
            "type": "string"
          },
          "campaignId": {
            "description": "The identifier of the draft.",
            "type": "string"
          },
          "name": {
            "description": "The name of the draft.",
            "type": "string"
          },
          "targetingType": {
            "$ref": "#/components/schemas/SponsoredProductsTargetingType"
          },
          "dynamicBidding": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateDraftCampaignDynamicBidding"
          },
          "startDate": {
            "format": "date",
            "description": "The format of the date is YYYY-MM-DD.",
            "type": "string"
          },
          "budget": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateDraftCampaignBudget"
          },
          "tags": {
            "$ref": "#/components/schemas/SponsoredProductsTags"
          }
        },
        "required": [
          "campaignId"
        ]
      },
      "SponsoredProductsNegativeTargetAccessExceptionResponseContent": {
        "description": "Exception resulting in accessing campaign management entities",
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsInvalidArgumentErrorCode"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsNegativeTargetAccessError"
            }
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "SponsoredProductsNegativeTargetSuccessItem": {
        "description": "The negative target id added to the AT ad group.",
        "type": "object",
        "properties": {
          "negativeTargetId": {
            "description": "Entity object identifier",
            "type": "string"
          }
        }
      },
      "SponsoredProductsCampaignNegativeTargetsAccessExceptionResponseContent": {
        "description": "Exception resulting in accessing campaign management entities",
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsInvalidArgumentErrorCode"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCampaignNegativeTargetsAccessError"
            }
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "SponsoredProductsCreateOrUpdateDraftCampaignDynamicBidding": {
        "type": "object",
        "properties": {
          "shopperCohortBidding": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftCampaignShopperCohortBidding"
            }
          },
          "placementBidding": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftCampaignPlacementBidding"
            }
          },
          "strategy": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateBiddingStrategy"
          }
        },
        "required": [
          "strategy"
        ]
      },
      "SponsoredProductsCreateSponsoredProductsKeywordsResponseContent": {
        "type": "object",
        "properties": {
          "keywords": {
            "$ref": "#/components/schemas/SponsoredProductsBulkKeywordOperationResponse"
          }
        },
        "required": [
          "keywords"
        ]
      },
      "SponsoredProductsGlobalCampaignMarketplaceServingStatus": {
        "type": "string",
        "enum": [
          "CAMPAIGN_STATUS_ENABLED",
          "CAMPAIGN_PAUSED",
          "CAMPAIGN_ARCHIVED",
          "PENDING_REVIEW",
          "REJECTED",
          "PENDING_START_DATE",
          "ENDED",
          "CAMPAIGN_OUT_OF_BUDGET",
          "CAMPAIGN_INCOMPLETE",
          "ADVERTISER_POLICING_SUSPENDED",
          "ADVERTISER_POLICING_PENDING_REVIEW",
          "ADVERTISER_ARCHIVED",
          "ADVERTISER_PAUSED",
          "ADVERTISER_PAYMENT_FAILURE"
        ]
      },
      "CategoryItemWithAsinCounts": {
        "type": "object",
        "properties": {
          "categoryPath": {
            "description": "The path of the category, which contains the current category and all parent categories",
            "type": "string"
          },
          "name": {
            "description": "The name of the category",
            "type": "string"
          },
          "asinCounts": {
            "description": "An integer range between min and max",
            "$ref": "#/components/schemas/IntegerRange"
          },
          "parentCategoryId": {
            "description": "The category id of the parent node",
            "type": "string"
          },
          "id": {
            "description": "The category id of the current node",
            "type": "string"
          }
        }
      },
      "SponsoredProductsCampaignServingStatusDetail": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/SponsoredProductsCampaignServingStatusReason"
          },
          "helpUrl": {
            "description": "A URL with additional information about the status identifier.",
            "type": "string"
          },
          "message": {
            "description": "A human-readable description of the status identifier specified in the name field.",
            "type": "string"
          }
        }
      },
      "GlobalBudgetRecommendationResponse": {
        "type": "object",
        "required": [
          "budgetRecommendationsResults"
        ],
        "properties": {
          "budgetRecommendationsResults": {
            "minItems": 1,
            "maxItems": 100,
            "description": "List of global budget recommendation results for campaigns.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GlobalBudgetRecommendationResult"
            }
          }
        },
        "example": {
          "budgetRecommendationsResults": [
            {
              "resultStatus": "SUCCESS",
              "countryBudgetRecommendations": {
                "US": {
                  "suggestedBudget": 64,
                  "sevenDaysMissedOpportunities": {
                    "estimatedMissedSalesLower": "205.5,",
                    "estimatedMissedSalesUpper": 330.5,
                    "endDate": "20201007,",
                    "estimatedMissedImpressionsLower": "9,",
                    "estimatedMissedClicksLower": "7,",
                    "estimatedMissedClicksUpper": "3,",
                    "estimatedMissedImpressionsUpper": "1,",
                    "startDate": "20200801,",
                    "percentTimeInBudget": "20,"
                  }
                }
              },
              "campaignId": "A3REPY26ZXDFSZ",
              "index": 0,
              "errors": []
            },
            {
              "resultStatus": "PARTIAL_FAILURE",
              "countryBudgetRecommendations": {
                "UK": {
                  "suggestedBudget": 78,
                  "sevenDaysMissedOpportunities": {
                    "estimatedMissedSalesLower": "110.5,",
                    "estimatedMissedSalesUpper": 135.5,
                    "endDate": "20200807,",
                    "estimatedMissedImpressionsLower": "4,",
                    "estimatedMissedClicksLower": "7,",
                    "estimatedMissedClicksUpper": "3,",
                    "estimatedMissedImpressionsUpper": "9,",
                    "startDate": "20205801,",
                    "percentTimeInBudget": "81,"
                  }
                },
                "US": {
                  "suggestedBudget": 89,
                  "sevenDaysMissedOpportunities": {
                    "estimatedMissedSalesLower": "105.5,",
                    "estimatedMissedSalesUpper": 130.5,
                    "endDate": "20200807,",
                    "estimatedMissedImpressionsLower": "1,",
                    "estimatedMissedClicksLower": "3,",
                    "estimatedMissedClicksUpper": "7,",
                    "estimatedMissedImpressionsUpper": "5,",
                    "startDate": "20200801,",
                    "percentTimeInBudget": "80,"
                  }
                }
              },
              "campaignId": "A3REPY26ZX1BSY",
              "index": 1,
              "errors": [
                {
                  "countryCodes": [
                    "JP"
                  ],
                  "errorMessage": "Request is not authorised for JP",
                  "errorCode": "UNAUTHORIZED",
                  "errorId": 1106
                }
              ]
            }
          ]
        }
      },
      "SponsoredProductsDraftCampaignExtendedData": {
        "type": "object",
        "properties": {
          "lastUpdateDateTime": {
            "format": "date-time",
            "description": "Last updated date in ISO 8601.",
            "type": "string"
          },
          "servingStatus": {
            "$ref": "#/components/schemas/SponsoredProductsCampaignServingStatus"
          },
          "creationDateTime": {
            "format": "date-time",
            "description": "Creation date in ISO 8601.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsNegativeTargetingClauseExtendedData": {
        "type": "object",
        "properties": {
          "lastUpdateDateTime": {
            "format": "date-time",
            "description": "Last updated date in ISO 8601.",
            "type": "string"
          },
          "servingStatus": {
            "$ref": "#/components/schemas/SponsoredProductsKeywordServingStatus"
          },
          "servingStatusDetails": {
            "description": "The serving status reasons of the NegativeTargetingClause",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsKeywordServingStatusDetail"
            }
          },
          "creationDateTime": {
            "format": "date-time",
            "description": "Creation date in ISO 8601.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsAdGroupFailureResponseItem": {
        "type": "object",
        "properties": {
          "index": {
            "format": "int32",
            "description": "the index of the adGroup in the array from the request body",
            "type": "integer",
            "minimum": 0
          },
          "errors": {
            "description": "A list of validation errors",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsAdGroupMutationError"
            }
          }
        },
        "required": [
          "index"
        ]
      },
      "OptimizationRulesAPISwaggerUpdateRuleRecommendationStatusResponseErrorItem": {
        "type": "object",
        "properties": {
          "index": {
            "description": "Index of the recommendation id in the request.",
            "type": "integer"
          },
          "recommendationId": {
            "description": "The id that uniquely identifies the recommendation rule that failed to be updated.",
            "type": "string"
          },
          "httpStatusCode": {
            "description": "The http status error code for machine use.",
            "type": "string"
          },
          "subErrors": {
            "minItems": 1,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptimizationRulesAPISwaggerOptimizationRuleBatchSubError"
            }
          }
        },
        "required": [
          "httpStatusCode",
          "index",
          "recommendationId",
          "subErrors"
        ]
      },
      "SPBudgetRulesRecommendationError": {
        "description": "The Error Response Object.",
        "type": "object",
        "properties": {
          "code": {
            "description": "The HTTP status code of the response.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        }
      },
      "DateRangeTypeRuleDuration": {
        "description": "Object representing date range type rule duration.",
        "type": "object",
        "required": [
          "startDate"
        ],
        "properties": {
          "endDate": {
            "description": "The end date of the budget rule in YYYYMMDD format. The end date is inclusive. Required to be equal or greater than `startDate`.",
            "type": "string"
          },
          "startDate": {
            "description": "The start date of the budget rule in YYYYMMDD format. The start date is inclusive. Required to be greater than or equal to current date.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsTargetingClauseFailureResponseItem": {
        "type": "object",
        "properties": {
          "index": {
            "format": "int32",
            "description": "the index of the targetingClause in the array from the request body",
            "type": "integer",
            "minimum": 0
          },
          "errors": {
            "description": "A list of validation errors",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsTargetMutationError"
            }
          }
        },
        "required": [
          "index"
        ]
      },
      "SponsoredProductsGlobalAdGroupServingStatusReason": {
        "type": "string",
        "enum": [
          "AD_GROUP_DELIVERING_IN_ALL_MARKETPLACES",
          "AD_GROUP_PAUSED_IN_AT_LEAST_ONE_MARKETPLACE",
          "AD_GROUP_INCOMPLETE_IN_AT_LEAST_ONE_MARKETPLACE",
          "AD_GROUP_ARCHIVED",
          "AD_GROUP_POLICING_PENDING_REVIEW_IN_AT_LEAST_ONE_MARKETPLACE",
          "AD_GROUP_POLICING_CREATIVE_REJECTED_IN_AT_LEAST_ONE_MARKETPLACE",
          "AD_GROUP_LOW_BID_IN_AT_LEAST_ONE_MARKETPLACE",
          "CAMPAIGN_ARCHIVED",
          "CAMPAIGN_PAUSED_IN_AT_LEAST_ONE_MARKETPLACE",
          "CAMPAIGN_INCOMPLETE_IN_AT_LEAST_ONE_MARKETPLACE",
          "CAMPAIGN_PENDING_START",
          "CAMPAIGN_ENDED",
          "CAMPAIGN_OUT_OF_BUDGET_IN_AT_LEAST_ONE_MARKETPLACE",
          "PAYMENT_FAILED_IN_ATLEAST_ONE_MARKETPLACE",
          "ADVERTISER_POLICING_PENDING_REVIEW_IN_ATLEAST_ONE_MARKETPLACES",
          "ADVERTISER_POLICING_SUSPENDED_IN_ATLEAST_ONE_MARKETPLACES",
          "ADVERTISER_PAUSED_IN_ATLEAST_ONE_MARKETPLACES",
          "ADVERTISER_ARCHIVED_IN_ATLEAST_ONE_MARKETPLACES"
        ]
      },
      "SponsoredProductsCampaignMutationFailureResponseItem": {
        "type": "object",
        "properties": {
          "index": {
            "format": "int32",
            "description": "the index of the campaign in the array from the request body",
            "type": "integer",
            "minimum": 0
          },
          "errors": {
            "description": "A list of validation errors",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCampaignMutationError"
            }
          }
        },
        "required": [
          "index"
        ]
      },
      "SponsoredProductsCampaignNegativeKeywordFailureResponseItem": {
        "type": "object",
        "properties": {
          "index": {
            "format": "int32",
            "description": "the index of the campaign in the array from the request body",
            "type": "integer",
            "minimum": 0
          },
          "errors": {
            "description": "A list of validation errors",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCampaignNegativeKeywordMutationError"
            }
          }
        },
        "required": [
          "index"
        ]
      },
      "SponsoredProductsCreateSponsoredProductsGlobalNegativeKeywordsResponseContent": {
        "type": "object",
        "properties": {
          "negativeKeywords": {
            "$ref": "#/components/schemas/SponsoredProductsBulkGlobalNegativeKeywordOperationResponse"
          }
        },
        "required": [
          "negativeKeywords"
        ]
      },
      "SponsoredProductsCreateSponsoredProductsGlobalAdGroupsResponseContent": {
        "type": "object",
        "properties": {
          "adGroups": {
            "$ref": "#/components/schemas/SponsoredProductsBulkGlobalAdGroupOperationResponse"
          }
        },
        "required": [
          "adGroups"
        ]
      },
      "SponsoredProductsUpdateSponsoredProductsGlobalCampaignsRequestContent": {
        "type": "object",
        "properties": {
          "campaigns": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "An array of campaigns with updated values.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsUpdateGlobalCampaign"
            }
          }
        },
        "required": [
          "campaigns"
        ]
      },
      "SponsoredProductsNegativeTargetingExpressionPredicateType": {
        "description": "The type of nagative targeting expression. You can only specify values for the following predicates:\n| Predicate | Description |\n| --- | --- |\n| `ASIN_BRAND_SAME_AS` | Target the brand that is the same as the brand expressed. |\n| `ASIN_SAME_AS` | Target an ASIN that is the same as the ASIN expressed. |\n| `OTHER` | Other Type.   |",
        "type": "string",
        "enum": [
          "ASIN_BRAND_SAME_AS",
          "ASIN_SAME_AS",
          "OTHER"
        ]
      },
      "SponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesResponseContent": {
        "type": "object",
        "properties": {
          "campaignNegativeTargetingClauses": {
            "$ref": "#/components/schemas/SponsoredProductsBulkCampaignNegativeTargetingClauseOperationResponse"
          }
        },
        "required": [
          "campaignNegativeTargetingClauses"
        ]
      },
      "SponsoredProductsDeleteSponsoredProductsGlobalKeywordsRequestContent": {
        "type": "object",
        "properties": {
          "keywordIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          }
        }
      },
      "SponsoredProductsGlobalProductAServingStatusReason": {
        "type": "string",
        "enum": [
          "PRODUCT_AD_DELIVERING_IN_ALL_MARKETPLACES",
          "ADVERTISER_PAYMENT_FAILURE_IN_AT_LEAST_ONE_MARKETPLACE",
          "ADVERTISER_POLICING_PENDING_REVIEW_IN_ATLEAST_ONE_MARKETPLACES",
          "ADVERTISER_POLICING_SUSPENDED_IN_ATLEAST_ONE_MARKETPLACES",
          "ADVERTISER_PAUSED_IN_ATLEAST_ONE_MARKETPLACES",
          "ADVERTISER_ARCHIVED_IN_ATLEAST_ONE_MARKETPLACES",
          "CAMPAIGN_OUT_OF_BUDGET_IN_AT_LEAST_ONE_MARKETPLACE",
          "CAMPAIGN_PAUSED_IN_AT_LEAST_ONE_MARKETPLACE",
          "CAMPAIGN_ARCHIVED",
          "CAMPAIGN_INCOMPLETE_IN_AT_LEAST_ONE_MARKETPLACE",
          "CAMPAIGN_PENDING_START_DATE",
          "CAMPAIGN_ENDED",
          "AD_GROUP_PAUSED_IN_AT_LEAST_ONE_MARKETPLACE",
          "AD_GROUP_ARCHIVED",
          "AD_GROUP_INCOMPLETE_IN_AT_LEAST_ONE_MARKETPLACE",
          "AD_GROUP_CREATION_FAILED_IN_AT_LEAST_ONE_MARKETPLACE",
          "AD_GROUP_POLICING_PENDING_REVIEW_IN_AT_LEAST_ONE_MARKETPLACE",
          "AD_GROUP_POLICING_CREATIVE_REJECTED_IN_AT_LEAST_ONE_MARKETPLACE",
          "AD_GROUP_LOW_BID_IN_AT_LEAST_ONE_MARKETPLACE",
          "AD_ARCHIVED",
          "AD_PAUSED_IN_AT_LEAST_ONE_MARKETPLACE",
          "AD_POLICING_SUSPENDED_IN_AT_LEAST_ONE_MARKETPLACE",
          "AD_MISSING_DECORATION_IN_AT_LEAST_ONE_MARKETPLACE",
          "AD_MISSING_IMAGE_IN_AT_LEAST_ONE_MARKETPLACE",
          "AD_POLICING_PENDING_REVIEW_IN_AT_LEAST_ONE_MARKETPLACE",
          "AD_NOT_BUYABLE_IN_AT_LEAST_ONE_MARKETPLACE",
          "AD_NOT_IN_BUYBOX_IN_AT_LEAST_ONE_MARKETPLACE",
          "AD_OUT_OF_STOCK_IN_AT_LEAST_ONE_MARKETPLACE",
          "AD_LANDING_PAGE_NOT_AVAILABLE_IN_AT_LEAST_ONE_MARKETPLACE",
          "AD_STATUS_UNAVAILABLE_IN_AT_LEAST_ONE_MARKETPLACE",
          "AD_NO_PURCHASABLE_OFFER_IN_AT_LEAST_ONE_MARKETPLACE",
          "AD_INELIGIBLE_IN_AT_LEAST_ONE_MARKETPLACE",
          "AD_CREATION_FAILED_IN_AT_LEAST_ONE_MARKETPLACE"
        ]
      },
      "SponsoredProductsMarketplaceCampaignServingStatus": {
        "type": "object",
        "properties": {
          "statusReasons": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsGlobalCampaignMarketplaceServingReason"
            }
          },
          "marketplace": {
            "$ref": "#/components/schemas/SponsoredProductsMarketplace"
          },
          "servingStatus": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalCampaignMarketplaceServingStatus"
          }
        },
        "required": [
          "servingStatus"
        ]
      },
      "SponsoredProductsDraftCampaignAccessErrorSelector": {
        "type": "object",
        "properties": {
          "entityNotFoundError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityNotFoundError"
          },
          "missingValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMissingValueError"
          },
          "dateError": {
            "$ref": "#/components/schemas/SponsoredProductsDateError"
          },
          "malformedValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMalformedValueError"
          },
          "internalServerError": {
            "$ref": "#/components/schemas/SponsoredProductsInternalServerError"
          },
          "rangeError": {
            "$ref": "#/components/schemas/SponsoredProductsRangeError"
          },
          "otherError": {
            "$ref": "#/components/schemas/SponsoredProductsOtherError"
          },
          "throttledError": {
            "$ref": "#/components/schemas/SponsoredProductsThrottledError"
          }
        }
      },
      "SponsoredProductsListSponsoredProductsNegativeTargetingClausesResponseContent": {
        "type": "object",
        "properties": {
          "totalResults": {
            "format": "int64",
            "description": "The total number of entities",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          },
          "negativeTargetingClauses": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsNegativeTargetingClause"
            }
          }
        }
      },
      "ThemedBid": {
        "type": "object",
        "properties": {
          "suggestedBid": {
            "$ref": "#/components/schemas/BidValues"
          },
          "matchType": {
            "description": "Keyword match type. The default value will be BROAD.",
            "type": "string",
            "enum": [
              "BROAD",
              "EXACT",
              "PHRASE"
            ]
          },
          "rank": {
            "description": "The keyword target rank.",
            "type": "number"
          },
          "theme": {
            "description": "The theme of the bid recommendation. The default theme is CONVERSION_OPPORTUNITIES.",
            "type": "string"
          },
          "bid": {
            "format": "Double",
            "description": "The bid value for the keyword, in minor currency units (example: cents). The default value will be the suggested bid.",
            "type": "number"
          }
        }
      },
      "SponsoredProductsDraftNegativeTargetingClause": {
        "type": "object",
        "properties": {
          "expression": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "The DraftNegativeTargeting expression.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsNegativeTargetingExpressionPredicate"
            }
          },
          "targetId": {
            "description": "The target identifier",
            "type": "string"
          },
          "resolvedExpression": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "The resolved DraftNegativeTargeting expression.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsNegativeTargetingExpressionPredicate"
            }
          },
          "campaignId": {
            "description": "The identifier of the campaign to which this target is associated.",
            "type": "string"
          },
          "adGroupId": {
            "description": "The identifier of the ad group to which this target is associated.",
            "type": "string"
          },
          "extendedData": {
            "$ref": "#/components/schemas/SponsoredProductsDraftNegativeTargetingClauseExtendedData"
          }
        },
        "required": [
          "adGroupId",
          "campaignId",
          "expression",
          "resolvedExpression",
          "targetId"
        ]
      },
      "BidRecommendationPerTargetingExpressionV4": {
        "type": "object",
        "properties": {
          "bidValues": {
            "maxItems": 3,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BidValue"
            }
          },
          "targetingExpression": {
            "$ref": "#/components/schemas/TargetingExpressionV4"
          }
        },
        "required": [
          "targetingExpression",
          "bidValues"
        ],
        "example": {
          "bidValues": [
            {
              "suggestedBid": "1"
            },
            {
              "suggestedBid": "1.5"
            },
            {
              "suggestedBid": "2"
            }
          ],
          "targetingExpression": {
            "type": "CLOSE_MATCH"
          }
        }
      },
      "SponsoredProductsBudget": {
        "type": "object",
        "properties": {
          "budgetType": {
            "$ref": "#/components/schemas/SponsoredProductsBudgetType"
          },
          "budget": {
            "format": "double",
            "description": "Monetary value",
            "type": "number"
          },
          "effectiveBudget": {
            "format": "double",
            "description": "Monetary value",
            "type": "number"
          }
        },
        "required": [
          "budget",
          "budgetType"
        ]
      },
      "SponsoredProductsGlobalKeywordExtendedData": {
        "type": "object",
        "properties": {
          "servingStatus": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalKeywordServingStatus"
          }
        }
      },
      "SBRuleDuration": {
        "type": "object",
        "required": [
          "dateRangeTypeRuleDuration"
        ],
        "properties": {
          "dateRangeTypeRuleDuration": {
            "$ref": "#/components/schemas/DateRangeTypeRuleDuration"
          }
        }
      },
      "SponsoredProductsUpdateNegativeTargetingClause": {
        "type": "object",
        "properties": {
          "expression": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "The NegativeTargeting expression.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateNegativeTargetingExpressionPredicate"
            }
          },
          "targetId": {
            "description": "The target identifier",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateEntityState"
          }
        },
        "required": [
          "targetId"
        ]
      },
      "MultiCountryThemeBasedBidRecommendationResponse": {
        "description": "A list of multi country bid recommendation themes and associated bid recommendations.",
        "type": "object",
        "properties": {
          "bidRecommendations": {
            "minItems": 0,
            "maxItems": 2,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MultiCountryThemeBasedBidRecommendation"
            }
          },
          "errors": {
            "description": "List of errors occurred while processing multi country request.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MultiCountryBidRecommendationError"
            }
          }
        },
        "required": [
          "bidRecommendations"
        ],
        "example": {
          "bidRecommendations": [
            {
              "theme": "CONVERSION_OPPORTUNITIES",
              "bidRecommendationsForTargetingExpressions": [
                {
                  "countrySuggestedBids": {
                    "UK": [
                      {
                        "suggestedBid": "1"
                      },
                      {
                        "suggestedBid": "1.5"
                      },
                      {
                        "suggestedBid": "2"
                      }
                    ],
                    "US": [
                      {
                        "suggestedBid": "1"
                      },
                      {
                        "suggestedBid": "1.5"
                      },
                      {
                        "suggestedBid": "2"
                      }
                    ]
                  },
                  "expression": {
                    "countryValues": {
                      "UK": "Sample2",
                      "US": "Sample1"
                    },
                    "type": "KEYWORD_BROAD_MATCH"
                  }
                }
              ]
            },
            {
              "theme": "PRIME_DAY",
              "bidRecommendationsForTargetingExpressions": [
                {
                  "countrySuggestedBids": {
                    "UK": [
                      {
                        "suggestedBid": "1"
                      },
                      {
                        "suggestedBid": "1.5"
                      },
                      {
                        "suggestedBid": "2"
                      }
                    ],
                    "US": [
                      {
                        "suggestedBid": "1.2"
                      },
                      {
                        "suggestedBid": "1.2"
                      },
                      {
                        "suggestedBid": "2"
                      }
                    ]
                  },
                  "expression": {
                    "countryValues": {
                      "UK": "Sample2",
                      "US": "Sample1"
                    },
                    "type": "KEYWORD_BROAD_MATCH"
                  }
                }
              ]
            }
          ]
        }
      },
      "SponsoredProductsCreateSponsoredProductsGlobalNegativeKeywordsRequestContent": {
        "type": "object",
        "properties": {
          "negativeKeywords": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "An array of negativeKeywords.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCreateGlobalNegativeKeyword"
            }
          }
        }
      },
      "OptimizationRulesAPISwaggerOptimizationRulesResponse": {
        "description": "Response object for CreateOptimizationRules and UpdateOptimizationRules API.",
        "type": "object",
        "properties": {
          "code": {
            "description": "An enumerated error code for machine use.",
            "type": "string"
          },
          "responses": {
            "minItems": 1,
            "maxItems": 25,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptimizationRulesAPISwaggerSingleOptimizationRuleResponse"
            }
          }
        }
      },
      "OptimizationRulesAPISwaggerGetRuleRecommendationsResponse": {
        "description": "Response object for GetRuleRecommendations API",
        "type": "object",
        "properties": {
          "code": {
            "description": "An enumerated success or error code for machine use.",
            "type": "string"
          },
          "nextToken": {
            "description": "To retrieve the next page of results, call the same operation and specify this token in the request. If the field is empty, the first page of results will be returned.",
            "type": "string"
          },
          "responses": {
            "minItems": 1,
            "maxItems": 500,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptimizationRulesAPISwaggerRuleRecommendation"
            }
          }
        }
      },
      "SponsoredProductsDraftCampaignPromotionState": {
        "type": "string",
        "enum": [
          "IN_PROGRESS",
          "FAILED",
          "SUCCEEDED"
        ]
      },
      "SponsoredProductsTargetingExpressionMatchType": {
        "type": "string",
        "enum": [
          "PRODUCT_EXACT",
          "PRODUCT_SIMILAR"
        ]
      },
      "MultiCountryTargetingExpression": {
        "description": "The targeting expression. The `type` property specifies the targeting option. Use `CLOSE_MATCH` to match your auto targeting ads closely to the specified value. Use `LOOSE_MATCH` to match your auto targeting ads broadly to the specified value. Use `SUBSTITUTES` to display your auto targeting ads along with substitutable products. Use `COMPLEMENTS` to display your auto targeting ads along with affiliated products. Use `KEYWORD_BROAD_MATCH` to broadly match your keyword targeting ads with search queries. Use `KEYWORD_EXACT_MATCH` to exactly match your keyword targeting ads with search queries. Use `KEYWORD_PHRASE_MATCH` to match your keyword targeting ads with search phrases. your keyword targeting ads with search phrases. Use `PAT_ASIN` to match your product attribute targeting ads with product ASIN. Use `PAT_CATEGORY` to match your product attribute targeting ads with product category. Use `PAT_CATEGORY_REFINEMENT` to match your product attribute targeting ads with product attribute, including brand, price, rating, prime shipping eligible, age range and genre. Use `KEYWORD_GROUP` to match your keyword targeting ads with keyword group.",
        "type": "object",
        "properties": {
          "countryValues": {
            "additionalProperties": {
              "description": "The expression value",
              "type": "string"
            }
          },
          "type": {
            "$ref": "#/components/schemas/MultiCountryTargetingExpressionType"
          }
        },
        "required": [
          "type"
        ],
        "example": {
          "type": "CLOSE_MATCH"
        }
      },
      "GetSBBudgetRuleResponse": {
        "type": "object",
        "properties": {
          "budgetRule": {
            "$ref": "#/components/schemas/SBBudgetRule"
          }
        }
      },
      "AssociatedBudgetRuleResponse": {
        "type": "object",
        "properties": {
          "code": {
            "description": "An enumerated success or error code for machine use.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the error, if unsuccessful",
            "type": "string"
          },
          "ruleId": {
            "description": "The budget rule identifier.",
            "type": "string"
          }
        }
      },
      "RMSListAssociatedBudgetRulesResponse": {
        "type": "object",
        "properties": {
          "associatedRules": {
            "description": "A list of associated budget rules.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RMSBudgetRule"
            }
          }
        }
      },
      "SponsoredProductsDraftAdGroupMutationExceptionResponseContent": {
        "description": "Exception resulting in mutating campaign management entities",
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsInvalidArgumentErrorCode"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftAdGroupMutationError"
            }
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "SponsoredProductsDraftNegativeKeywordMutationError": {
        "type": "object",
        "properties": {
          "errorType": {
            "description": "The type of the error",
            "type": "string"
          },
          "errorValue": {
            "$ref": "#/components/schemas/SponsoredProductsDraftNegativeKeywordMutationErrorSelector"
          }
        },
        "required": [
          "errorType",
          "errorValue"
        ]
      },
      "SponsoredProductsCreateSponsoredProductsProductAdsResponseContent": {
        "type": "object",
        "properties": {
          "productAds": {
            "$ref": "#/components/schemas/SponsoredProductsBulkProductAdOperationResponse"
          }
        },
        "required": [
          "productAds"
        ]
      },
      "SponsoredProductsListSponsoredProductsDraftProductAdsRequestContent": {
        "type": "object",
        "properties": {
          "campaignIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsReducedObjectIdFilter"
          },
          "maxResults": {
            "format": "int32",
            "description": "Number of records to include in the paginated response. Defaults to max page size for given API",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          },
          "adIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          },
          "adGroupIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsReducedObjectIdFilter"
          },
          "includeExtendedDataFields": {
            "description": "Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus",
            "type": "boolean"
          }
        }
      },
      "OptimizationRulesAPISwaggerRuleAttribute": {
        "description": "The attribute of the rule.",
        "type": "string",
        "enum": [
          "ROAS"
        ]
      },
      "OptimizationRulesAPISwaggerUpdateRuleRecommendationStatusResponse": {
        "description": "Response object for UpdateRuleRecommendationStatus API.",
        "type": "object",
        "properties": {
          "success": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptimizationRulesAPISwaggerUpdateRuleRecommendationStatusResponseSuccessItem"
            }
          },
          "error": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptimizationRulesAPISwaggerUpdateRuleRecommendationStatusResponseErrorItem"
            }
          }
        }
      },
      "SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesResponseContent": {
        "type": "object",
        "properties": {
          "totalResults": {
            "format": "int64",
            "description": "The total number of entities",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          },
          "campaignNegativeTargetingClauses": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCampaignNegativeTargetingClause"
            }
          }
        }
      },
      "SponsoredProductsServiceUnavailableExceptionErrorCode": {
        "type": "string",
        "enum": [
          "SERVICE_UNAVAILABLE_EXCEPTION"
        ]
      },
      "SponsoredProductsTargetDetails": {
        "type": "object",
        "properties": {
          "keywordTarget": {
            "$ref": "#/components/schemas/SponsoredProductsSPKeywordTargetDetails"
          },
          "productCategoryTarget": {
            "$ref": "#/components/schemas/SponsoredProductsSPProductCategoryTargetDetails"
          },
          "autoTarget": {
            "$ref": "#/components/schemas/SponsoredProductsSPAutoTargetDetails"
          },
          "productTarget": {
            "$ref": "#/components/schemas/SponsoredProductsSPProductTargetDetails"
          }
        }
      },
      "SPGroupedEvent": {
        "type": "object",
        "properties": {
          "groupedEventId": {
            "description": "The grouped event identifier.",
            "type": "string"
          },
          "groupedEventName": {
            "description": "The grouped event name.",
            "type": "string"
          },
          "endDate": {
            "format": "date-time",
            "description": "The end date in ISO-8601 format.",
            "type": "string"
          },
          "startDate": {
            "format": "date-time",
            "description": "The start date in ISO-8601 format.",
            "type": "string"
          }
        }
      },
      "DeleteSPCampaignOptimizationRuleResponse": {
        "type": "object",
        "properties": {
          "campaignOptimizationId": {
            "$ref": "#/components/schemas/campaignOptimizationId"
          },
          "code": {
            "description": "An enumerated success or error code for machine use.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the error, if unsuccessful",
            "type": "string"
          }
        }
      },
      "SponsoredProductsServiceUnavailableExceptionResponseContent": {
        "description": "Server unable to process request. Please retry later.",
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsServiceUnavailableExceptionErrorCode"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "SponsoredProductsExistingCampaignDetails": {
        "description": "The request object for creating a new target promotion group with existing campaigns. Please note that the adGroupIds provided need to\ncontain the same Ad ASINs/SKUs combination as the Auto-Targeting adGroup for the target promotion group.",
        "type": "object",
        "properties": {
          "productCampaignAdGroupIds": {
            "minItems": 1,
            "maxItems": 1,
            "description": "AdGroupIds of existing manual campaigns to be used as part of the Target Promotion Group for\n    promoting product targets.",
            "type": "array",
            "items": {
              "description": "Entity object identifier",
              "type": "string"
            }
          },
          "keywordCampaignAdGroupIds": {
            "minItems": 1,
            "maxItems": 1,
            "description": "AdGroupIds of existing manual campaigns to be used as part of the Target Promotion Group for\n    promoting keyword targets.",
            "type": "array",
            "items": {
              "description": "Entity object identifier",
              "type": "string"
            }
          }
        }
      },
      "SponsoredProductsDeleteSponsoredProductsKeywordsRequestContent": {
        "type": "object",
        "properties": {
          "keywordIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          }
        },
        "required": [
          "keywordIdFilter"
        ]
      },
      "BudgetUsageCampaign": {
        "type": "object",
        "properties": {
          "budgetUsagePercent": {
            "description": "Budget usage percentage (spend / available budget) for the given budget policy.",
            "type": "number"
          },
          "campaignId": {
            "description": "ID of requested resource",
            "type": "string"
          },
          "usageUpdatedTimestamp": {
            "format": "date-time",
            "description": "Last evaluation time for budget usage",
            "type": "string"
          },
          "index": {
            "description": "An index to maintain order of the campaignIds",
            "type": "number"
          },
          "budget": {
            "description": "Budget amount of resource requested",
            "type": "number"
          }
        }
      },
      "SponsoredProductsDraftKeyword": {
        "type": "object",
        "properties": {
          "keywordId": {
            "description": "The identifier of the draft keyword.",
            "type": "string"
          },
          "nativeLanguageLocale": {
            "description": "The locale preference of the advertiser. For example, if the advertiser\u2019s preferred language is Simplified Chinese, set the locale to zh_CN. Supported locales include: Simplified Chinese (locale: zh_CN) for US, UK and CA. English (locale: en_GB) for DE, FR, IT and ES.",
            "type": "string"
          },
          "campaignId": {
            "description": "The identifier of the campaign to which the draft keyword is associated.",
            "type": "string"
          },
          "matchType": {
            "$ref": "#/components/schemas/SponsoredProductsMatchType"
          },
          "nativeLanguageDraftKeyword": {
            "description": "The unlocalized draft keyword text in the preferred locale of the advertiser.",
            "type": "string"
          },
          "bid": {
            "nullable": true,
            "format": "double",
            "description": "Bid associated with this draft keyword. Applicable to biddable match types only. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).",
            "type": "number"
          },
          "adGroupId": {
            "description": "The identifier of the ad group to which this draft keyword is associated.",
            "type": "string"
          },
          "keywordText": {
            "description": "The draft keyword text.",
            "type": "string"
          },
          "extendedData": {
            "$ref": "#/components/schemas/SponsoredProductsDraftKeywordExtendedData"
          }
        },
        "required": [
          "adGroupId",
          "campaignId",
          "keywordId",
          "keywordText",
          "matchType"
        ]
      },
      "OptimizationRulesAPISwaggerRuleCategory": {
        "description": "The type of the optimization rule.",
        "type": "string",
        "enum": [
          "BID"
        ]
      },
      "SponsoredProductsCreateSponsoredProductsDraftCampaignsResponseContent": {
        "type": "object",
        "properties": {
          "campaigns": {
            "$ref": "#/components/schemas/SponsoredProductsBulkDraftCampaignOperationResponse"
          }
        },
        "required": [
          "campaigns"
        ]
      },
      "OptimizationRulesAPISwaggerEntityFieldFilter": {
        "description": "Filter type and value pair.",
        "type": "object",
        "properties": {
          "values": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "filterType": {
            "$ref": "#/components/schemas/OptimizationRulesAPISwaggerFilterType"
          }
        },
        "example": {
          "values": [
            "29aeb716-2ba7-4fae-9f9a-3e8306e0ca0f",
            "c735308f-fd6c-49a6-b2a8-e53f354265bc"
          ],
          "filterType": "EXACT_MATCH"
        }
      },
      "OptimizationRulesAPISwaggerOptimizationRule": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OptimizationRulesAPISwaggerOptimizationRuleWithoutRuleId"
          },
          {
            "type": "object",
            "properties": {
              "optimizationRuleId": {
                "description": "The rule identifier.",
                "type": "string"
              }
            }
          }
        ]
      },
      "SponsoredProductsOtherError": {
        "description": "Errors not related to any of the other error types",
        "type": "object",
        "properties": {
          "reason": {
            "$ref": "#/components/schemas/SponsoredProductsOtherErrorReason"
          },
          "marketplace": {
            "$ref": "#/components/schemas/SponsoredProductsMarketplace"
          },
          "cause": {
            "$ref": "#/components/schemas/SponsoredProductsErrorCause"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          }
        },
        "required": [
          "message",
          "reason"
        ]
      },
      "SponsoredProductsKeywordMutationError": {
        "type": "object",
        "properties": {
          "errorType": {
            "description": "The type of the error",
            "type": "string"
          },
          "errorValue": {
            "$ref": "#/components/schemas/SponsoredProductsKeywordMutationErrorSelector"
          }
        },
        "required": [
          "errorType",
          "errorValue"
        ]
      },
      "UpdateSBBudgetRulesRequest": {
        "type": "object",
        "properties": {
          "budgetRulesDetails": {
            "maxItems": 25,
            "description": "A list of budget rule details.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SBBudgetRule"
            }
          }
        }
      },
      "SponsoredProductsShopperCohortType": {
        "description": "This field specifies the type of shopper cohort used to apply bid adjustments. `AUDIENCE_SEGMENT` is the only supported type currently.\n| Value |  Description |\n|-----------|------------|\n| `AUDIENCE_SEGMENT` | A predefined list of the shopper ids. |",
        "type": "string",
        "enum": [
          "AUDIENCE_SEGMENT"
        ]
      },
      "SponsoredProductsListSponsoredProductsProductAdsRequestContent": {
        "type": "object",
        "properties": {
          "campaignIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsReducedObjectIdFilter"
          },
          "stateFilter": {
            "$ref": "#/components/schemas/SponsoredProductsEntityStateFilter"
          },
          "maxResults": {
            "format": "int32",
            "description": "Number of records to include in the paginated response. Defaults to max page size for given API",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          },
          "adIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          },
          "adGroupIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsReducedObjectIdFilter"
          },
          "includeExtendedDataFields": {
            "description": "Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus",
            "type": "boolean"
          }
        }
      },
      "SponsoredProductsGlobalEntityServingStatus": {
        "type": "string",
        "enum": [
          "ACTIVE",
          "INACTIVE",
          "ACTIVE_WITH_EXCEPTIONS",
          "ARCHIVED"
        ]
      },
      "UpdateSPBudgetRulesRequest": {
        "description": "Request object for updating budget rule for SP campaign",
        "type": "object",
        "properties": {
          "budgetRulesDetails": {
            "maxItems": 25,
            "description": "A list of budget rule details.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SPBudgetRule"
            }
          }
        }
      },
      "SponsoredProductsDraftNegativeTargetMutationError": {
        "type": "object",
        "properties": {
          "errorType": {
            "description": "The type of the error",
            "type": "string"
          },
          "errorValue": {
            "$ref": "#/components/schemas/SponsoredProductsDraftNegativeTargetMutationErrorSelector"
          }
        },
        "required": [
          "errorType",
          "errorValue"
        ]
      },
      "PlacementAdjustment": {
        "description": "Specifies bid adjustments based on the placement location. Use `PLACEMENT_TOP` for the top of the search page. Use `PLACEMENT_REST_OF_SEARCH` for the rest of the search page. Use `PLACEMENT_PRODUCT_PAGE` for a product page.",
        "type": "object",
        "properties": {
          "predicate": {
            "type": "string",
            "enum": [
              "PLACEMENT_TOP",
              "PLACEMENT_REST_OF_SEARCH",
              "PLACEMENT_PRODUCT_PAGE"
            ]
          },
          "percentage": {
            "maximum": 900,
            "type": "integer",
            "minimum": 0
          }
        },
        "example": {
          "predicate": "PLACEMENT_TOP",
          "percentage": "100"
        }
      },
      "SponsoredProductsBulkGlobalCampaignOperationResponse": {
        "type": "object",
        "properties": {
          "success": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsGlobalCampaignMutationSuccessResponseItem"
            }
          },
          "error": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsGlobalCampaignMutationFailureResponseItem"
            }
          }
        }
      },
      "SponsoredProductsAdGroup": {
        "type": "object",
        "properties": {
          "campaignId": {
            "description": "The identifier of the campaign to which the keyword is associated.",
            "type": "string"
          },
          "name": {
            "description": "The name of the ad group.",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsEntityState"
          },
          "adGroupId": {
            "description": "The identifier of the keyword.",
            "type": "string"
          },
          "defaultBid": {
            "format": "double",
            "description": "A bid value for use when no bid is specified for keywords in the ad group. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).",
            "type": "number"
          },
          "extendedData": {
            "$ref": "#/components/schemas/SponsoredProductsAdGroupExtendedData"
          }
        },
        "required": [
          "adGroupId",
          "campaignId",
          "defaultBid",
          "name",
          "state"
        ]
      },
      "SponsoredProductsLocale": {
        "type": "string",
        "enum": [
          "en_AE",
          "de_DE",
          "ar_EG",
          "es_ES",
          "fr_FR",
          "en_GB",
          "it_IT",
          "nl_NL",
          "pl_PL",
          "en_SA",
          "sv_SE",
          "tr_TR",
          "en_AU",
          "en_IN",
          "ja_JP",
          "en_SG",
          "pt_BR",
          "en_CA",
          "es_MX",
          "en_US"
        ]
      },
      "SponsoredProductsDeleteSponsoredProductsGlobalCampaignNegativeKeywordsRequestContent": {
        "type": "object",
        "properties": {
          "campaignNegativeKeywordIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          }
        }
      },
      "DisassociateAssociatedBudgetRuleResponse": {
        "type": "object"
      },
      "SponsoredProductsCreateAllSPTargetsRequestContent": {
        "type": "object",
        "properties": {
          "targets": {
            "minItems": 1,
            "maxItems": 1000,
            "description": "An array of targets.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCreateAllTargets"
            }
          }
        },
        "required": [
          "targets"
        ]
      },
      "SponsoredProductsCreateOrUpdateMatchType": {
        "type": "string",
        "enum": [
          "EXACT",
          "PHRASE",
          "BROAD"
        ]
      },
      "SponsoredProductsDraftCampaignNegativeKeywordMutationExceptionResponseContent": {
        "description": "Exception resulting in mutating draft management entities",
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsInvalidArgumentErrorCode"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftCampaignNegativeKeywordMutationError"
            }
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "OptimizationRulesAPISwaggerSearchOptimizationRulesRequest": {
        "description": "Request object for searching or getting optimization rules.",
        "type": "object",
        "properties": {
          "nextToken": {
            "type": "string"
          },
          "optimizationRuleFilter": {
            "$ref": "#/components/schemas/OptimizationRulesAPISwaggerOptimizationRuleFilter"
          },
          "pageSize": {
            "type": "number"
          },
          "campaignFilter": {
            "$ref": "#/components/schemas/OptimizationRulesAPISwaggerCampaignFilter"
          }
        }
      },
      "SponsoredProductsInternalServerErrorCode": {
        "type": "string",
        "enum": [
          "INTERNAL_SERVER_EXCEPTION"
        ]
      },
      "InitialGlobalBudgetRecommendationResponse": {
        "type": "object",
        "required": [
          "countryBudgetRecommendations"
        ],
        "properties": {
          "countryBudgetRecommendations": {
            "$ref": "#/components/schemas/CountryBudgetRecommendationMap"
          },
          "recommendationId": {
            "description": "Unique identifier for each recommendation.",
            "type": "string"
          },
          "errors": {
            "minItems": 1,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GlobalBudgetRecommendationNewCampaignsError"
            }
          }
        },
        "example": {
          "countryBudgetRecommendations": {
            "UK": {
              "specialEvents": [
                {
                  "dailyBudget": "15",
                  "endDate": "20240612",
                  "eventKey": "PRIME_DAY",
                  "eventName": "Prime Day",
                  "benchmark": {
                    "benchmarkStatus": "failed",
                    "values": {
                      "conversions": "",
                      "clicks": "",
                      "impressions": ""
                    }
                  },
                  "startDate": "20240612"
                }
              ],
              "dailyBudget": "20",
              "suggestedMinimumBudget": "true",
              "benchmark": {
                "benchmarkStatus": "failed",
                "values": {
                  "conversions": "",
                  "clicks": "",
                  "impressions": ""
                }
              }
            },
            "US": {
              "specialEvents": [
                {
                  "budgetModifier": "1.50",
                  "dailyBudget": "15",
                  "endDate": "20240612",
                  "eventKey": "PRIME_DAY",
                  "eventName": "Prime Day",
                  "benchmark": {
                    "benchmarkStatus": "failed",
                    "values": {
                      "conversions": "",
                      "clicks": "",
                      "impressions": ""
                    }
                  },
                  "startDate": "20240612"
                }
              ],
              "dailyBudget": "20",
              "suggestedMinimumBudget": "true",
              "benchmark": {
                "benchmarkStatus": "failed",
                "values": {
                  "conversions": "",
                  "clicks": "",
                  "impressions": ""
                }
              }
            }
          },
          "recommendationId": "4f8cca6f-9ca2-4579-a19d-ee2d9e30e17e",
          "errors": [
            {
              "countryCodes": [
                "JP"
              ],
              "code": "UNAUTHORIZED",
              "message": "Request is not authorised for JP"
            }
          ]
        }
      },
      "SponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent": {
        "type": "object",
        "properties": {
          "campaignNegativeKeywords": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "An array of campaignNegativeKeywords.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCreateCampaignNegativeKeyword"
            }
          }
        },
        "required": [
          "campaignNegativeKeywords"
        ]
      },
      "SponsoredProductsBulkCampaignNegativeKeywordOperationResponse": {
        "type": "object",
        "properties": {
          "success": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCampaignNegativeKeywordSuccessResponseItem"
            }
          },
          "error": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCampaignNegativeKeywordFailureResponseItem"
            }
          }
        }
      },
      "AsinsKeywordTargetRankRecommendationRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/KeywordTargetRankRecommendationRequest"
          }
        ],
        "description": "This request type is used to retrieve recommended keyword targets for ASINs. Set the recommendationType to KEYWORDS_FOR_ASINS to use this request type.",
        "required": [
          "recommendationType",
          "asins"
        ],
        "properties": {
          "asins": {
            "minItems": 0,
            "maxItems": 50,
            "description": "An array list of Asins",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "recommendationType": {
            "description": "The recommendationType to retrieve recommended keyword targets for a list of ASINs.",
            "type": "string",
            "enum": [
              "KEYWORDS_FOR_ASINS"
            ]
          }
        }
      },
      "SponsoredProductsListTargetPromotionGroupsV2RequestContent": {
        "description": "Request object for querying target promotion groups.",
        "type": "object",
        "properties": {
          "maxResults": {
            "default": 1000,
            "format": "int32",
            "description": "The maximum number of results requested.",
            "maximum": 1000,
            "type": "integer",
            "minimum": 1
          },
          "nextToken": {
            "description": "Token value allowing to navigate to the next or previous response page",
            "type": "string"
          },
          "targetPromotionGroupIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          },
          "adGroupIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          }
        }
      },
      "SponsoredProductsUpdateSponsoredProductsGlobalNegativeTargetingClausesRequestContent": {
        "type": "object",
        "properties": {
          "negativeTargetingClauses": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "An array of negativeTargeting with updated values.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsUpdateGlobalNegativeTargetingClause"
            }
          }
        },
        "required": [
          "negativeTargetingClauses"
        ]
      },
      "SDBudgetRule": {
        "type": "object",
        "required": [
          "ruleId"
        ],
        "properties": {
          "ruleState": {
            "$ref": "#/components/schemas/state"
          },
          "lastUpdatedDate": {
            "format": "int64",
            "description": "Epoch time of budget rule update. Read-only.",
            "type": "number"
          },
          "createdDate": {
            "format": "int64",
            "description": "Epoch time of budget rule creation. Read-only.",
            "type": "number"
          },
          "ruleDetails": {
            "$ref": "#/components/schemas/SDBudgetRuleDetails"
          },
          "ruleId": {
            "description": "The budget rule identifier.",
            "type": "string"
          },
          "ruleStatus": {
            "description": "The budget rule status. Read-only.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsKeywordExtendedData": {
        "type": "object",
        "properties": {
          "lastUpdateDateTime": {
            "format": "date-time",
            "description": "Last updated date in ISO 8601.",
            "type": "string"
          },
          "servingStatus": {
            "$ref": "#/components/schemas/SponsoredProductsKeywordServingStatus"
          },
          "servingStatusDetails": {
            "description": "The serving status reasons of the Keyword",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsKeywordServingStatusDetail"
            }
          },
          "creationDateTime": {
            "format": "date-time",
            "description": "Creation date in ISO 8601.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsListTargetPromotionGroupsV2ResponseContent": {
        "description": "Response object for querying target promotion groups.",
        "type": "object",
        "properties": {
          "totalResults": {
            "format": "int64",
            "description": "The total number of results available.",
            "type": "integer"
          },
          "nextToken": {
            "description": "To retrieve the next page of results, call the same operation and specify this token in the\n    request. If the nextToken field is empty, there are no further results.",
            "type": "string"
          },
          "targetPromotionGroups": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsTargetPromotionGroupV2"
            }
          }
        }
      },
      "SponsoredProductsCreateTargetPromotionGroupTargetsResponseContent": {
        "description": "Response object for creating target promotion group targets.",
        "type": "object",
        "properties": {
          "success": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "List of successfully created targets.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCreateTargetPromotionGroupTargetsSuccessResponseItem"
            }
          },
          "errors": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "List of targets that failed to create.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCreateTargetPromotionGroupTargetsFailureResponseItem"
            }
          }
        }
      },
      "ImpactMetric": {
        "nullable": true,
        "description": "The impact metrics are given in the same order of suggested bids. <br> Note: This object is nullable",
        "type": "object",
        "properties": {
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RangeMetricValue"
            }
          }
        }
      },
      "SponsoredProductsExpressionTypeErrorReason": {
        "type": "string",
        "enum": [
          "UNSUPPORTED_EXPRESSION_TYPE"
        ]
      },
      "SBGetAssociatedCampaignsResponse": {
        "type": "object",
        "properties": {
          "associatedCampaigns": {
            "minItems": 0,
            "maxItems": 30,
            "description": "A list of campaigns that are associated to this budget rule.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssociatedCampaign"
            }
          },
          "nextToken": {
            "description": "To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsRangeError": {
        "description": "Errors related to range constraints violations",
        "type": "object",
        "properties": {
          "reason": {
            "$ref": "#/components/schemas/SponsoredProductsValueLimitErrorReason"
          },
          "marketplace": {
            "$ref": "#/components/schemas/SponsoredProductsMarketplace"
          },
          "allowed": {
            "description": "allowed values",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "cause": {
            "$ref": "#/components/schemas/SponsoredProductsErrorCause"
          },
          "upperLimit": {
            "description": "optional upper limit",
            "type": "string"
          },
          "lowerLimit": {
            "description": "optional lower limit",
            "type": "string"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          }
        },
        "required": [
          "message",
          "reason"
        ]
      },
      "EventTypeRuleDuration": {
        "description": "Object representing event type rule duration.",
        "type": "object",
        "required": [
          "eventId"
        ],
        "properties": {
          "eventId": {
            "description": "The event identifier. This value is available from the budget rules recommendation API.",
            "type": "string"
          },
          "endDate": {
            "description": "The event end date in YYYYMMDD format. Read-only.",
            "type": "string"
          },
          "eventName": {
            "description": "The event name. Read-only.",
            "type": "string"
          },
          "startDate": {
            "description": "The event start date in YYYYMMDD format. Read-only. Note that this field is present only for announced events.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsAllTargetsSuccessResponseItem": {
        "type": "object",
        "properties": {
          "index": {
            "format": "int32",
            "description": "the index of the targetingClause in the array from the request body",
            "type": "integer"
          },
          "target": {
            "$ref": "#/components/schemas/SponsoredProductsAllTargets"
          }
        },
        "required": [
          "index"
        ]
      },
      "SponsoredProductsDraftCampaignMutationErrorSelector": {
        "type": "object",
        "properties": {
          "entityStateError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityStateError"
          },
          "missingValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMissingValueError"
          },
          "dateError": {
            "$ref": "#/components/schemas/SponsoredProductsDateError"
          },
          "biddingError": {
            "$ref": "#/components/schemas/SponsoredProductsBiddingError"
          },
          "duplicateValueError": {
            "$ref": "#/components/schemas/SponsoredProductsDuplicateValueError"
          },
          "rangeError": {
            "$ref": "#/components/schemas/SponsoredProductsRangeError"
          },
          "otherError": {
            "$ref": "#/components/schemas/SponsoredProductsOtherError"
          },
          "throttledError": {
            "$ref": "#/components/schemas/SponsoredProductsThrottledError"
          },
          "entityNotFoundError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityNotFoundError"
          },
          "malformedValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMalformedValueError"
          },
          "budgetError": {
            "$ref": "#/components/schemas/SponsoredProductsBudgetError"
          },
          "billingError": {
            "$ref": "#/components/schemas/SponsoredProductsBillingError"
          },
          "entityQuotaError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityQuotaError"
          },
          "internalServerError": {
            "$ref": "#/components/schemas/SponsoredProductsInternalServerError"
          }
        }
      },
      "SponsoredProductsNegativeTargetAccessErrorSelector": {
        "type": "object",
        "properties": {
          "entityNotFoundError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityNotFoundError"
          },
          "missingValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMissingValueError"
          },
          "malformedValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMalformedValueError"
          },
          "internalServerError": {
            "$ref": "#/components/schemas/SponsoredProductsInternalServerError"
          },
          "rangeError": {
            "$ref": "#/components/schemas/SponsoredProductsRangeError"
          },
          "otherError": {
            "$ref": "#/components/schemas/SponsoredProductsOtherError"
          },
          "invalidInputError": {
            "$ref": "#/components/schemas/SponsoredProductsInvalidInputError"
          },
          "throttledError": {
            "$ref": "#/components/schemas/SponsoredProductsThrottledError"
          }
        }
      },
      "KeywordBidInfo": {
        "type": "object",
        "properties": {
          "suggestedBid": {
            "$ref": "#/components/schemas/BidSuggestion"
          },
          "matchType": {
            "description": "Keyword match type. The default value will be BROAD.",
            "type": "string",
            "enum": [
              "BROAD",
              "EXACT",
              "PHRASE"
            ]
          },
          "rank": {
            "description": "The keyword target rank",
            "type": "number"
          },
          "bid": {
            "format": "Double",
            "description": "The bid value for the keyword, in minor currency units (example: cents). The default value will be the suggested bid.",
            "type": "number"
          }
        }
      },
      "SponsoredProductsValueLimitErrorReason": {
        "type": "string",
        "enum": [
          "TOO_LOW",
          "TOO_HIGH",
          "INVALID_ENUM_VALUE",
          "NOT_IN_LIST"
        ]
      },
      "SponsoredProductsDraftAdGroupSuccessResponseItem": {
        "type": "object",
        "properties": {
          "adGroup": {
            "$ref": "#/components/schemas/SponsoredProductsDraftAdGroup"
          },
          "index": {
            "format": "int32",
            "description": "the index of the draftAdGroup in the array from the request body",
            "type": "integer",
            "minimum": 0
          },
          "adGroupId": {
            "description": "the adGroup ID",
            "type": "string"
          }
        },
        "required": [
          "index"
        ]
      },
      "SponsoredProductsCreateAdGroup": {
        "type": "object",
        "properties": {
          "campaignId": {
            "description": "The identifier of the campaign to which the keyword is associated.",
            "type": "string"
          },
          "name": {
            "description": "The name of the ad group.",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateEntityState"
          },
          "defaultBid": {
            "format": "double",
            "description": "A bid value for use when no bid is specified for keywords in the ad group. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).",
            "type": "number"
          }
        },
        "required": [
          "campaignId",
          "defaultBid",
          "name",
          "state"
        ]
      },
      "RecommendationOptions": {
        "properties": {
          "maxRecommendations": {
            "default": "200",
            "description": "The max size of recommended target. Set it to 0 if you only want to rank user-defined keywords.",
            "maximum": 200,
            "type": "number",
            "minimum": 0
          },
          "sortDimension": {
            "description": "The ranking metric value. Supported values: CLICKS, CONVERSIONS, DEFAULT. DEFAULT will be applied if no value passed in.",
            "type": "string",
            "enum": [
              "CLICKS",
              "CONVERSIONS",
              "DEFAULT"
            ]
          },
          "locale": {
            "description": "Translations are for readability and do not affect the targeting of ads. Supported marketplace to locale mappings can be found at the <a href='https://advertising.amazon.com/API/docs/en-us/localization/#/Keyword%20Localization'>POST /keywords/localize<\/a> endpoint. Note: Translations will be null if locale is unsupported.",
            "type": "string",
            "enum": [
              "ar_EG",
              "de_DE",
              "en_AE",
              "en_AU",
              "en_CA",
              "en_GB",
              "en_IN",
              "en_SA",
              "en_SG",
              "en_US",
              "es_ES",
              "es_MX",
              "fr_FR",
              "it_IT",
              "ja_JP",
              "nl_NL",
              "pl_PL",
              "pt_BR",
              "sv_SE",
              "tr_TR",
              "zh_CN"
            ]
          }
        }
      },
      "SponsoredProductsAdGroupTargetingType": {
        "description": "Targeting type of an adGroup.",
        "type": "string",
        "enum": [
          "KEYWORD",
          "PRODUCT",
          "AUTO",
          "OTHER"
        ]
      },
      "SponsoredProductsCampaignNegativeKeyword": {
        "type": "object",
        "properties": {
          "keywordId": {
            "description": "The identifier of the keyword.",
            "type": "string"
          },
          "campaignId": {
            "description": "The identifier of the campaign to which the keyword is associated.",
            "type": "string"
          },
          "matchType": {
            "$ref": "#/components/schemas/SponsoredProductsNegativeMatchType"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsEntityState"
          },
          "keywordText": {
            "description": "The keyword text.",
            "type": "string"
          },
          "extendedData": {
            "$ref": "#/components/schemas/SponsoredProductsCampaignNegativeKeywordExtendedData"
          }
        },
        "required": [
          "campaignId",
          "keywordId",
          "keywordText",
          "matchType",
          "state"
        ]
      },
      "CreateSPBudgetRulesRequest": {
        "type": "object",
        "properties": {
          "budgetRulesDetails": {
            "maxItems": 25,
            "description": "A list of budget rule details.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SPBudgetRuleDetails"
            }
          }
        }
      },
      "SponsoredProductsCurrencyError": {
        "description": "Errors related to currency",
        "type": "object",
        "properties": {
          "reason": {
            "$ref": "#/components/schemas/SponsoredProductsCurrencyErrorReason"
          },
          "cause": {
            "$ref": "#/components/schemas/SponsoredProductsErrorCause"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          }
        },
        "required": [
          "message",
          "reason"
        ]
      },
      "SponsoredProductsCampaignNegativeTargetingClauseExtendedData": {
        "type": "object",
        "properties": {
          "lastUpdateDateTime": {
            "format": "date-time",
            "description": "Last updated date in ISO 8601.",
            "type": "string"
          },
          "servingStatus": {
            "$ref": "#/components/schemas/SponsoredProductsKeywordServingStatus"
          },
          "servingStatusDetails": {
            "description": "The serving status reasons of the CampaignNegativeTargetingClause",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsKeywordServingStatusDetail"
            }
          },
          "creationDateTime": {
            "format": "date-time",
            "description": "Creation date in ISO 8601.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsCreateNegativeKeyword": {
        "type": "object",
        "properties": {
          "nativeLanguageKeyword": {
            "description": "The unlocalized keyword text in the preferred locale of the advertiser",
            "type": "string"
          },
          "nativeLanguageLocale": {
            "description": "The locale preference of the advertiser.",
            "type": "string"
          },
          "campaignId": {
            "description": "The identifer of the campaign to which the keyword is associated.",
            "type": "string"
          },
          "matchType": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateNegativeMatchType"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateEntityState"
          },
          "adGroupId": {
            "description": "The identifier of the ad group to which this keyword is associated.",
            "type": "string"
          },
          "keywordText": {
            "description": "The keyword text.",
            "type": "string"
          }
        },
        "required": [
          "adGroupId",
          "campaignId",
          "keywordText",
          "matchType",
          "state"
        ]
      },
      "SponsoredProductsCampaignNegativeKeywordExtendedData": {
        "type": "object",
        "properties": {
          "lastUpdateDateTime": {
            "format": "date-time",
            "description": "Last updated date in ISO 8601.",
            "type": "string"
          },
          "servingStatus": {
            "$ref": "#/components/schemas/SponsoredProductsKeywordServingStatus"
          },
          "servingStatusDetails": {
            "description": "The serving status reasons of the Keyword",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsKeywordServingStatusDetail"
            }
          },
          "creationDateTime": {
            "format": "date-time",
            "description": "Creation date in ISO 8601.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsDeleteAllSPTargetsResponseContent": {
        "type": "object",
        "properties": {
          "success": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsAllTargetsSuccessResponseItem"
            }
          },
          "error": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsAllTargetsFailureResponseItem"
            }
          }
        },
        "required": [
          "success"
        ]
      },
      "SponsoredProductsDraftProductAdFailureResponseItem": {
        "type": "object",
        "properties": {
          "index": {
            "format": "int32",
            "description": "the index of the campaign in the array from the request body",
            "type": "integer",
            "minimum": 0
          },
          "errors": {
            "description": "A list of validation errors",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftProductAdMutationError"
            }
          }
        },
        "required": [
          "index"
        ]
      },
      "SponsoredProductsCreateSponsoredProductsDraftAdGroupsRequestContent": {
        "type": "object",
        "properties": {
          "adGroups": {
            "minItems": 0,
            "maxItems": 100,
            "description": "An array of draftAdGroups.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCreateDraftAdGroup"
            }
          }
        },
        "required": [
          "adGroups"
        ]
      },
      "SponsoredProductsCreateTargetingClause": {
        "type": "object",
        "properties": {
          "expression": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "The targeting expression.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCreateTargetingExpressionPredicate"
            }
          },
          "campaignId": {
            "description": "The identifier of the campaign to which this target is associated.",
            "type": "string"
          },
          "expressionType": {
            "$ref": "#/components/schemas/SponsoredProductsCreateExpressionType"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateEntityState"
          },
          "bid": {
            "nullable": true,
            "format": "double",
            "description": "The bid for ads sourced using the target. Targets that do not have bid values in listTargetingClauses will inherit the defaultBid from the adGroup level. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).",
            "type": "number"
          },
          "adGroupId": {
            "description": "The identifier of the ad group to which this target is associated.",
            "type": "string"
          }
        },
        "required": [
          "adGroupId",
          "campaignId",
          "expression",
          "expressionType",
          "state"
        ]
      },
      "SponsoredProductsKeyword": {
        "type": "object",
        "properties": {
          "keywordId": {
            "description": "The identifier of the keyword.",
            "type": "string"
          },
          "nativeLanguageKeyword": {
            "description": "The unlocalized keyword text in the preferred locale of the advertiser.",
            "type": "string"
          },
          "nativeLanguageLocale": {
            "description": "The locale preference of the advertiser. For example, if the advertiser\u2019s preferred language is Simplified Chinese, set the locale to zh_CN. Supported locales include: Simplified Chinese (locale: zh_CN) for US, UK and CA. English (locale: en_GB) for DE, FR, IT and ES.",
            "type": "string"
          },
          "campaignId": {
            "description": "The identifier of the campaign to which the keyword is associated.",
            "type": "string"
          },
          "matchType": {
            "$ref": "#/components/schemas/SponsoredProductsMatchType"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsEntityState"
          },
          "bid": {
            "format": "double",
            "description": "Bid associated with this keyword. Applicable to biddable match types only. Keywords that do not have bid values in listKeywords will inherit the defaultBid from the adGroup level. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).",
            "type": "number"
          },
          "adGroupId": {
            "description": "The identifier of the ad group to which this keyword is associated.",
            "type": "string"
          },
          "keywordText": {
            "description": "The keyword text.",
            "type": "string"
          },
          "extendedData": {
            "$ref": "#/components/schemas/SponsoredProductsKeywordExtendedData"
          }
        },
        "required": [
          "adGroupId",
          "campaignId",
          "keywordId",
          "keywordText",
          "matchType",
          "state"
        ]
      },
      "SponsoredProductsTargetingExpressionPredicateMarketValue": {
        "type": "object",
        "properties": {
          "marketplace": {
            "$ref": "#/components/schemas/SponsoredProductsMarketplace"
          },
          "value": {
            "description": "The expression value",
            "type": "string"
          }
        }
      },
      "AdGroupKeywordTargetRankRecommendationRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/KeywordTargetRankRecommendationRequest"
          }
        ],
        "description": "This request type is used to retrieve recommended keyword targets for an existing ad group. Set the recommendationType to KEYWORDS_FOR_ADGROUP to use this request type.",
        "required": [
          "recommendationType",
          "adGroupId",
          "campaignId"
        ],
        "properties": {
          "campaignId": {
            "description": "The identifier of the campaign",
            "type": "string"
          },
          "recommendationType": {
            "description": "The recommendationType to retrieve recommended keyword targets for an existing ad group.",
            "type": "string",
            "enum": [
              "KEYWORDS_FOR_ADGROUP"
            ]
          },
          "adGroupId": {
            "description": "The identifier of the ad group",
            "type": "string"
          }
        }
      },
      "SponsoredProductsCreateSponsoredProductsGlobalTargetingClausesRequestContent": {
        "type": "object",
        "properties": {
          "targetingClauses": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "An array of targetingClauses.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCreateGlobalTargetingClause"
            }
          }
        }
      },
      "SponsoredProductsAdGroupExtendedData": {
        "type": "object",
        "properties": {
          "lastUpdateDateTime": {
            "format": "date-time",
            "description": "Last updated date in ISO 8601.",
            "type": "string"
          },
          "servingStatus": {
            "$ref": "#/components/schemas/SponsoredProductsAdGroupServingStatus"
          },
          "servingStatusDetails": {
            "description": "The serving status reasons of the AdGroup",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsAdGroupServingStatusDetail"
            }
          },
          "creationDateTime": {
            "format": "date-time",
            "description": "Creation date in ISO 8601.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsBulkGlobalCampaignNegativeKeywordOperationResponse": {
        "type": "object",
        "properties": {
          "success": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsGlobalCampaignNegativeKeywordSuccessResponseItem"
            }
          },
          "error": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsGlobalCampaignNegativeKeywordFailureResponseItem"
            }
          }
        }
      },
      "SponsoredProductsCreateSponsoredProductsDraftCampaignsRequestContent": {
        "type": "object",
        "properties": {
          "campaigns": {
            "minItems": 0,
            "maxItems": 100,
            "description": "An array of drafts.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCreateDraftCampaign"
            }
          }
        },
        "required": [
          "campaigns"
        ]
      },
      "ProductRecommendationsByASIN": {
        "description": "Product recommendations supplemented with relevant information.",
        "type": "object",
        "properties": {
          "nextCursor": {
            "description": "An identifier to fetch next set of `ProductRecommendation` records in the result set if available. This will be null when at the end of result set.",
            "type": "string",
            "example": "MTAxNTExOTQ1MjAwNzI5NDE="
          },
          "previousCursor": {
            "description": "Optional parameter that links to the previous result set served. This parameter will be null on the first request.",
            "type": "string",
            "example": "TQ1MjAwNzI5NDE="
          },
          "recommendations": {
            "description": "An array of `ProductRecommendation` objects.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductRecommendation"
            }
          }
        }
      },
      "SponsoredProductsNewCampaignDetails": {
        "description": "The request object for creating a new target promotion group with new campaigns.",
        "type": "object",
        "properties": {
          "endDate": {
            "format": "date",
            "description": "The end date of the new target promotion group entities. The format of the date is YYYY-MM-DD.",
            "type": "string"
          },
          "namePrefix": {
            "description": "The name prefix to be used for the entities under the target promotion group. e.g. if the namePrefix\n    is ABC, we will create a keyword campaign with the name 'ABC-ManualKeywordTargeting-Campaign-AutoGenerated'",
            "type": "string"
          },
          "dynamicBidding": {
            "$ref": "#/components/schemas/SponsoredProductsNewCampaignDynamicBidding"
          },
          "startDate": {
            "format": "date",
            "description": "The start date of the new target promotion group entities. Default is today's date. The format of the date is YYYY-MM-DD.",
            "type": "string"
          },
          "defaultBid": {
            "format": "double",
            "description": "The default bid value that gets applied if no bid is provided for the target. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).",
            "type": "number",
            "minimum": 0
          },
          "budget": {
            "$ref": "#/components/schemas/SponsoredProductsNewCampaignBudget"
          },
          "tags": {
            "$ref": "#/components/schemas/SponsoredProductsTags"
          }
        },
        "required": [
          "budget",
          "defaultBid",
          "namePrefix"
        ]
      },
      "GetRMSBudgetRulesForAdvertiserResponse": {
        "type": "object",
        "properties": {
          "budgetRulesForAdvertiserResponse": {
            "minItems": 0,
            "maxItems": 30,
            "description": "A list of rules created by the advertiser.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RMSBudgetRule"
            }
          },
          "nextToken": {
            "description": "To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsDraftNegativeKeywordAccessError": {
        "type": "object",
        "properties": {
          "errorType": {
            "description": "The type of the error",
            "type": "string"
          },
          "errorValue": {
            "$ref": "#/components/schemas/SponsoredProductsDraftNegativeKeywordAccessErrorSelector"
          }
        },
        "required": [
          "errorType",
          "errorValue"
        ]
      },
      "SponsoredProductsCreateTargetPromotionGroupTargetsBatchSuccess": {
        "description": "Response object of successfully created target promotion group target.",
        "type": "object",
        "properties": {
          "index": {
            "description": "index of the item in the request.",
            "type": "string"
          },
          "targetDetails": {
            "$ref": "#/components/schemas/SponsoredProductsTargetPromotionGroupTargetDetails"
          },
          "negativeTargetDetails": {
            "$ref": "#/components/schemas/SponsoredProductsTargetPromotionGroupNegativeTargetDetails"
          }
        }
      },
      "SponsoredProductsListSponsoredProductsGlobalTargetingClausesResponseContent": {
        "type": "object",
        "properties": {
          "totalResults": {
            "format": "int64",
            "description": "The total number of entities",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          },
          "targetingClauses": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsGlobalTargetingClause"
            }
          }
        }
      },
      "SponsoredProductsCreateOrUpdateGlobalEntityState": {
        "type": "object",
        "properties": {
          "marketplaceSettings": {
            "minItems": 1,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateMarketplaceState"
            }
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateEntityState"
          }
        },
        "required": [
          "state"
        ]
      },
      "SponsoredProductsDraftProductAdAccessExceptionResponseContent": {
        "description": "Exception resulting in accessing campaign management entities",
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsInvalidArgumentErrorCode"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftProductAdAccessError"
            }
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "SponsoredProductsListSponsoredProductsDraftCampaignsResponseContent": {
        "type": "object",
        "properties": {
          "totalResults": {
            "format": "int64",
            "description": "The total number of entities",
            "type": "integer"
          },
          "campaigns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftCampaign"
            }
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          }
        }
      },
      "OptimizationRulesAPISwaggerDisassociateOptimizationRulesFromCampaignResponse": {
        "description": "Response object for deleting campaign to optimization rules association.",
        "type": "object",
        "properties": {
          "success": {
            "minItems": 0,
            "maxItems": 25,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptimizationRulesAPISwaggerDisassociateOptimizationRulesFromCampaignResponseSuccessItem"
            }
          },
          "error": {
            "minItems": 0,
            "maxItems": 25,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptimizationRulesAPISwaggerDisassociateOptimizationRulesFromCampaignResponseErrorItem"
            }
          }
        }
      },
      "BudgetUsagePortfolio": {
        "type": "object",
        "properties": {
          "budgetUsagePercent": {
            "description": "Budget usage percentage (spend / available budget) for the given budget policy.",
            "type": "number"
          },
          "portfolioId": {
            "description": "ID of requested resource",
            "type": "string"
          },
          "usageUpdatedTimestamp": {
            "format": "date-time",
            "description": "Last evaluation time for budget usage",
            "type": "string"
          },
          "index": {
            "description": "An index to maintain order of the portfolioIds",
            "type": "number"
          },
          "budget": {
            "description": "Budget amount of resource requested",
            "type": "number"
          }
        }
      },
      "MultiCountryBidRecommendationError": {
        "type": "object",
        "properties": {
          "countryCodes": {
            "description": "Countries where error have occurred",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "code": {
            "description": "Machine readable error code.",
            "type": "string"
          },
          "message": {
            "description": "Human readable 1 liner error message",
            "type": "string"
          }
        }
      },
      "SponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent": {
        "type": "object",
        "properties": {
          "campaignNegativeTargetingClauses": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "An array of Campaign Negative TargetingClauses.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCreateCampaignNegativeTargetingClause"
            }
          }
        },
        "required": [
          "campaignNegativeTargetingClauses"
        ]
      },
      "SponsoredProductsCreateOrUpdateOffAmazonBudgetControlStrategy": {
        "description": "The budget control strategy for ads served off Amazon . `OffAmazonBudgetControlStrategy` is optional for create and update requests.\nValue |  Description |\n|-----------|------------|\n| `MAXIMIZE_REACH` | Prioritize more reach using your target settings. This setting may result in more impressions and opportunities for sales off Amazon. |\n| `MINIMIZE_SPEND` | Optimize ad delivery to minimize spending. This setting may result in fewer impressions off Amazon, but it can help control spend. |",
        "type": "string",
        "enum": [
          "MAXIMIZE_REACH",
          "MINIMIZE_SPEND"
        ]
      },
      "SponsoredProductsDeleteSponsoredProductsDraftTargetingClausesRequestContent": {
        "type": "object",
        "properties": {
          "targetIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          }
        },
        "required": [
          "targetIdFilter"
        ]
      },
      "SponsoredProductsExpressionTypeFilter": {
        "description": "Filter entities by ExpressionType",
        "type": "object",
        "properties": {
          "include": {
            "minItems": 0,
            "maxItems": 2,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsExpressionType"
            }
          }
        },
        "required": [
          "include"
        ]
      },
      "RuleRecommendationError": {
        "type": "object",
        "properties": {
          "campaignId": {
            "$ref": "#/components/schemas/RuleCampaignId"
          },
          "Error": {
            "$ref": "#/components/schemas/CampaignOptimizationRuleError"
          }
        }
      },
      "SponsoredProductsListAllSPTargetsRequestContent": {
        "type": "object",
        "properties": {
          "campaignIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          },
          "stateFilter": {
            "$ref": "#/components/schemas/SponsoredProductsEntityStateFilter"
          },
          "maxResults": {
            "format": "int32",
            "description": "Number of records to include in the paginated response. Defaults to max page size for given API",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          },
          "targetIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          },
          "adGroupIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          }
        }
      },
      "GlobalBudgetRecommendationResult": {
        "type": "object",
        "required": [
          "campaignId",
          "countryBudgetRecommendations",
          "index",
          "resultStatus"
        ],
        "properties": {
          "resultStatus": {
            "$ref": "#/components/schemas/ResultStatus"
          },
          "countryBudgetRecommendations": {
            "$ref": "#/components/schemas/CountryBudgetRecommendationMap"
          },
          "campaignId": {
            "description": "The campaign Id.",
            "type": "string"
          },
          "index": {
            "description": "Correlate the recommendations to the campaign index in the request. Zero-based.",
            "type": "integer"
          },
          "errors": {
            "minItems": 1,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GlobalBudgetRecommendationError"
            }
          }
        }
      },
      "SponsoredProductsGlobalCampaignNegativeKeywordFailureResponseItem": {
        "type": "object",
        "properties": {
          "index": {
            "format": "int32",
            "description": "the index of the campaign in the array from the request body",
            "type": "integer",
            "minimum": 0
          },
          "errors": {
            "description": "A list of validation errors",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCampaignNegativeKeywordMutationError"
            }
          }
        },
        "required": [
          "index"
        ]
      },
      "SBListAssociatedBudgetRulesResponse": {
        "type": "object",
        "properties": {
          "associatedRules": {
            "description": "A list of associated budget rules.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SBCampaignBudgetRule"
            }
          }
        }
      },
      "GlobalBudgetRecommendationNewCampaignsException": {
        "type": "object",
        "properties": {
          "errors": {
            "minItems": 1,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GlobalBudgetRecommendationNewCampaignsError"
            }
          }
        }
      },
      "OptimizationRulesAPISwaggerRuleTargeting": {
        "type": "object",
        "properties": {
          "expressionTypes": {
            "minItems": 1,
            "maxItems": 3,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptimizationRulesAPISwaggerExpressionType"
            }
          },
          "targetingType": {
            "$ref": "#/components/schemas/OptimizationRulesAPISwaggerTargetingType"
          },
          "lookbackDays": {
            "description": "The number of days of data to look back on for the rule.",
            "type": "integer"
          }
        },
        "required": [
          "targetingType",
          "expressionTypes",
          "lookbackDays"
        ]
      },
      "SponsoredProductsGlobalKeywordMarketplaceServingStatus": {
        "type": "string",
        "enum": [
          "TARGETING_CLAUSE_STATUS_LIVE",
          "TARGETING_CLAUSE_POLICING_SUSPENDED",
          "TARGETING_CLAUSE_PAUSED",
          "TARGETING_CLAUSE_ARCHIVED",
          "TARGETING_CLAUSE_BLOCKED",
          "AD_GROUP_STATUS_ENABLED",
          "AD_GROUP_PAUSED",
          "AD_GROUP_ARCHIVED",
          "AD_GROUP_INCOMPLETE",
          "AD_GROUP_POLICING_PENDING_REVIEW",
          "AD_GROUP_POLICING_CREATIVE_REJECTED",
          "AD_GROUP_LOW_BID",
          "CAMPAIGN_STATUS_ENABLED",
          "CAMPAIGN_PAUSED",
          "CAMPAIGN_ARCHIVED",
          "PENDING_REVIEW",
          "REJECTED",
          "PENDING_START_DATE",
          "ENDED",
          "CAMPAIGN_OUT_OF_BUDGET",
          "CAMPAIGN_INCOMPLETE",
          "PORTFOLIO_STATUS_ENABLED",
          "ADVERTISER_POLICING_SUSPENDED",
          "ADVERTISER_POLICING_PENDING_REVIEW",
          "ADVERTISER_ARCHIVED",
          "ADVERTISER_PAUSED",
          "ADVERTISER_OUT_OF_BUDGET",
          "ADVERTISER_PAYMENT_FAILURE"
        ]
      },
      "SponsoredProductsGlobalProductIdentifiers": {
        "type": "object",
        "properties": {
          "marketplaceSettings": {
            "minItems": 1,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsMarketplaceLevelProductIdentifier"
            }
          }
        }
      },
      "SponsoredProductsListSponsoredProductsDraftNegativeKeywordsRequestContent": {
        "type": "object",
        "properties": {
          "campaignIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsReducedObjectIdFilter"
          },
          "negativeKeywordTextFilter": {
            "$ref": "#/components/schemas/SponsoredProductsKeywordTextFilter"
          },
          "maxResults": {
            "format": "int32",
            "description": "Number of records to include in the paginated response. Defaults to max page size for given API",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          },
          "adGroupIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsReducedObjectIdFilter"
          },
          "includeExtendedDataFields": {
            "description": "Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus",
            "type": "boolean"
          },
          "locale": {
            "description": "The locale preference of the advertiser.",
            "type": "string"
          },
          "negativeKeywordIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          },
          "matchTypeFilter": {
            "description": "Restricts results to resources with the selected matchType",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsNegativeMatchType"
            }
          }
        }
      },
      "SponsoredProductsAdGroupServingStatusDetail": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/SponsoredProductsAdGroupServingStatusReason"
          },
          "helpUrl": {
            "description": "A URL with additional information about the status identifier.",
            "type": "string"
          },
          "message": {
            "description": "A human-readable description of the status identifier specified in the name field.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsTargetingExpressionPredicateTypeWithoutOther": {
        "description": "The type of targeting expression. You can specify values for the following predicates:\n| Predicate | Description |\n| --- | --- |\n| `QUERY_BROAD_REL_MATCHES` | Auto Targeting - cannot be manually created - corresponds to the `Loose match` target type in the UI, this will show your ad to shoppers who use search terms loosely related to your products.|\n| `QUERY_HIGH_REL_MATCHES` | Auto Targeting - cannot be manually created - corresponds to the `Close match` target type in the UI, this will show your ad to shoppers who use search terms closely related to your products.|\n| `ASIN_ACCESSORY_RELATED` | Auto Targeting - cannot be manually created - corresponds to the `Complements` target type in the UI, this will show your ad to shoppers who view the detail pages of products that complement your product.|\n| `ASIN_SUBSTITUTE_RELATED` | Auto Targeting - cannot be manually created - corresponds to the `Substitutes` target type in the UI, this will show your ad to shoppers who use detail pages of products similar to yours.|\n| `ASIN_CATEGORY_SAME_AS` | Target the category that is the same as the category expressed |\n| `ASIN_BRAND_SAME_AS` | Target the brand that is the same as the brand expressed. |\n| `ASIN_PRICE_LESS_THAN` | Target a price that is less than the price expressed. |\n| `ASIN_PRICE_BETWEEN` | Target a price that is between the prices expressed. |\n| `ASIN_PRICE_GREATER_THAN` | Target a price that is greater than the price expressed. |\n| `ASIN_REVIEW_RATING_LESS_THAN` | Target a review rating less than the review rating that is expressed. |\n| `ASIN_REVIEW_RATING_BETWEEN` | Target a review rating that is between the review ratings expressed. |\n| `ASIN_REVIEW_RATING_GREATER_THAN` | Target a review rating that is greater than the review rating expressed. |\n| `ASIN_SAME_AS` | Target an ASIN that is the same as the ASIN expressed. |\n| `ASIN_IS_PRIME_SHIPPING_ELIGIBLE` | Target products that are Prime Shipping Eligible. This refinement can be applied at a category or brand level only. |\n| `ASIN_AGE_RANGE_SAME_AS` | Target an age range that is in the expressed range. This refinement can be applied for toys and games categories only. |\n| `ASIN_GENRE_SAME_AS` | Target products related to the expressed genre. This refinement can be applied for Books and eBooks categories only.   |\n| `ASIN_EXPANDED_FROM` | Target products similar in performance to the ASIN expressed.   |\n| `KEYWORD_GROUP_SAME_AS` | Target the keyword group that is the same as the keyword group expressed (Beta coming soon). |\n| `OTHER` | Other Type.   |",
        "type": "string",
        "enum": [
          "ASIN_CATEGORY_SAME_AS",
          "ASIN_BRAND_SAME_AS",
          "ASIN_PRICE_LESS_THAN",
          "ASIN_PRICE_BETWEEN",
          "ASIN_PRICE_GREATER_THAN",
          "ASIN_REVIEW_RATING_LESS_THAN",
          "ASIN_REVIEW_RATING_BETWEEN",
          "ASIN_REVIEW_RATING_GREATER_THAN",
          "ASIN_SAME_AS",
          "QUERY_BROAD_REL_MATCHES",
          "QUERY_HIGH_REL_MATCHES",
          "ASIN_SUBSTITUTE_RELATED",
          "ASIN_ACCESSORY_RELATED",
          "ASIN_AGE_RANGE_SAME_AS",
          "ASIN_GENRE_SAME_AS",
          "ASIN_IS_PRIME_SHIPPING_ELIGIBLE",
          "ASIN_EXPANDED_FROM",
          "KEYWORD_GROUP_SAME_AS"
        ]
      },
      "SponsoredProductsDraftCampaignNegativeKeywordAccessError": {
        "type": "object",
        "properties": {
          "errorType": {
            "description": "The type of the error",
            "type": "string"
          },
          "errorValue": {
            "$ref": "#/components/schemas/SponsoredProductsDraftCampaignNegativeKeywordAccessErrorSelector"
          }
        },
        "required": [
          "errorType",
          "errorValue"
        ]
      },
      "SponsoredProductsDeleteSponsoredProductsGlobalProductAdsRequestContent": {
        "type": "object",
        "properties": {
          "adIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          }
        }
      },
      "SponsoredProductsAdServingStatus": {
        "type": "string",
        "enum": [
          "AD_GROUP_STATUS_ENABLED",
          "AD_GROUP_PAUSED",
          "AD_GROUP_ARCHIVED",
          "AD_GROUP_INCOMPLETE",
          "AD_GROUP_POLICING_PENDING_REVIEW",
          "AD_GROUP_POLICING_CREATIVE_REJECTED",
          "AD_GROUP_LOW_BID",
          "CAMPAIGN_STATUS_ENABLED",
          "CAMPAIGN_PAUSED",
          "CAMPAIGN_ARCHIVED",
          "PENDING_REVIEW",
          "REJECTED",
          "PENDING_START_DATE",
          "ENDED",
          "CAMPAIGN_OUT_OF_BUDGET",
          "CAMPAIGN_INCOMPLETE",
          "PORTFOLIO_STATUS_ENABLED",
          "PORTFOLIO_PAUSED",
          "PORTFOLIO_ARCHIVED",
          "PORTFOLIO_OUT_OF_BUDGET",
          "PORTFOLIO_PENDING_START_DATE",
          "PORTFOLIO_ENDED",
          "ADVERTISER_POLICING_SUSPENDED",
          "ADVERTISER_POLICING_PENDING_REVIEW",
          "ADVERTISER_ARCHIVED",
          "ADVERTISER_PAUSED",
          "ADVERTISER_OUT_OF_BUDGET",
          "ADVERTISER_PAYMENT_FAILURE",
          "AD_STATUS_LIVE",
          "AD_POLICING_PENDING_REVIEW",
          "AD_POLICING_SUSPENDED",
          "AD_PAUSED",
          "AD_ARCHIVED",
          "ACCOUNT_OUT_OF_BUDGET",
          "ADVERTISER_ACCOUNT_OUT_OF_BUDGET",
          "ADVERTISER_EXCEED_SPENDS_LIMIT",
          "ADVERTISER_STATUS_ENABLED",
          "AD_CREATION_OFFLINE_FAILED",
          "AD_CREATION_OFFLINE_IN_PROGRESS",
          "AD_CREATION_OFFLINE_PENDING",
          "CAMPAIGN_ADS_NOT_DELIVERING",
          "LANDING_PAGE_NOT_AVAILABLE",
          "MISSING_DECORATION",
          "MISSING_IMAGE",
          "NOT_BUYABLE",
          "NOT_IN_BUYBOX",
          "OUT_OF_STOCK",
          "SECURITY_SCAN_PENDING_REVIEW",
          "SECURITY_SCAN_REJECTED",
          "STATUS_UNAVAILABLE",
          "TARGETING_CLAUSE_ARCHIVED",
          "TARGETING_CLAUSE_BLOCKED",
          "TARGETING_CLAUSE_PAUSED",
          "TARGETING_CLAUSE_POLICING_SUSPENDED",
          "TARGETING_CLAUSE_STATUS_LIVE",
          "ELIGIBLE",
          "INELIGIBLE",
          "NO_INVENTORY",
          "NO_PURCHASABLE_OFFER",
          "PIR_RULE_EXCLUDED",
          "CAMPAIGN_PENDING_START_DATE",
          "CAMPAIGN_ENDED",
          "AD_MISSING_IMAGE",
          "AD_MISSING_DECORATION",
          "AD_NOT_BUYABLE",
          "AD_NOT_IN_BUYBOX",
          "AD_OUT_OF_STOCK",
          "AD_LANDING_PAGE_NOT_AVAILABLE",
          "AD_NO_PURCHASABLE_OFFER",
          "AD_INELIGIBLE",
          "AD_ELIGIBLE",
          "AD_CREATION_FAILED",
          "OTHER"
        ]
      },
      "SponsoredProductsDraftCampaign": {
        "type": "object",
        "properties": {
          "portfolioId": {
            "description": "The identifier of an existing portfolio to which the draft is associated.",
            "type": "string"
          },
          "endDate": {
            "nullable": true,
            "format": "date",
            "description": "The format of the date is YYYY-MM-DD.",
            "type": "string"
          },
          "campaignId": {
            "description": "The identifier of the draft.",
            "type": "string"
          },
          "name": {
            "description": "The name of the draft.",
            "type": "string"
          },
          "targetingType": {
            "$ref": "#/components/schemas/SponsoredProductsTargetingType"
          },
          "dynamicBidding": {
            "$ref": "#/components/schemas/SponsoredProductsDraftCampaignDynamicBidding"
          },
          "startDate": {
            "format": "date",
            "description": "The format of the date is YYYY-MM-DD.",
            "type": "string"
          },
          "budget": {
            "$ref": "#/components/schemas/SponsoredProductsDraftCampaignBudget"
          },
          "tags": {
            "$ref": "#/components/schemas/SponsoredProductsTags"
          },
          "extendedData": {
            "$ref": "#/components/schemas/SponsoredProductsDraftCampaignExtendedData"
          }
        },
        "required": [
          "budget",
          "campaignId",
          "name",
          "targetingType"
        ]
      },
      "SponsoredProductsGatewayTimeoutResponseContent": {
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsErrorCode"
          },
          "message": {
            "type": "string"
          },
          "httpStatusCode": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "OptimizationRulesAPISwaggerCampaignFilter": {
        "description": "Filter on campaigns.",
        "type": "object",
        "properties": {
          "campaignId": {
            "$ref": "#/components/schemas/OptimizationRulesAPISwaggerEntityFieldFilter"
          }
        }
      },
      "SponsoredProductsEntityNotFoundErrorReason": {
        "type": "string",
        "enum": [
          "ENTITY_NOT_FOUND"
        ]
      },
      "SponsoredProductsDeleteSponsoredProductsGlobalNegativeTargetingClausesResponseContent": {
        "type": "object",
        "properties": {
          "negativeTargetingClauses": {
            "$ref": "#/components/schemas/SponsoredProductsBulkGlobalNegativeTargetingClauseOperationResponse"
          }
        },
        "required": [
          "negativeTargetingClauses"
        ]
      },
      "SponsoredProductsAutoTargetMatchType": {
        "description": "Entity State.\n| Type |  description |\n|-----------|------------|\n| `SEARCH_LOOSE_MATCH` | Search terms loosely matching advertised product. |\n| `SEARCH_CLOSE_MATCH` | Search terms closely matching advertised product. |\n| `PRODUCT_SUBSTITUTES` | Products that can be substituted for advertised product. |\n| `PRODUCT_COMPLEMENTS` | Products that complement advertised product. |\n| `PRODUCT_SIMILAR` | Products similar to advertised product. |",
        "type": "string",
        "enum": [
          "SEARCH_LOOSE_MATCH",
          "SEARCH_CLOSE_MATCH",
          "PRODUCT_SUBSTITUTES",
          "PRODUCT_COMPLEMENTS",
          "PRODUCT_SIMILAR"
        ]
      },
      "GlobalRankedKeywordTargetsForAdGroupRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AdGroupBasedRequest"
          }
        ],
        "description": "This request type is used to retrieve recommended keyword targets for an existing ad group. Set the recommendationType to KEYWORDS_FOR_ADGROUP to use this request type.",
        "required": [
          "recommendationType",
          "adGroupId",
          "campaignId"
        ],
        "properties": {
          "countryCodes": {
            "description": "A list of countries with targets that need to be ranked. The 2-letter country code is the key, and an object with targets is the value.",
            "additionalProperties": {
              "$ref": "#/components/schemas/CountryWithTargets"
            },
            "type": "object"
          }
        }
      },
      "SponsoredProductsUpdateSponsoredProductsProductAdsRequestContent": {
        "type": "object",
        "properties": {
          "productAds": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "An array of ads with updated values.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsUpdateProductAd"
            }
          }
        },
        "required": [
          "productAds"
        ]
      },
      "SponsoredProductsListSponsoredProductsCampaignsRequestContent": {
        "type": "object",
        "properties": {
          "campaignIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          },
          "portfolioIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsReducedObjectIdFilter"
          },
          "stateFilter": {
            "$ref": "#/components/schemas/SponsoredProductsEntityStateFilter"
          },
          "maxResults": {
            "format": "int32",
            "description": "Number of records to include in the paginated response. Defaults to max page size for given API",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          },
          "includeExtendedDataFields": {
            "description": "Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus",
            "type": "boolean"
          },
          "nameFilter": {
            "$ref": "#/components/schemas/SponsoredProductsNameFilter"
          }
        }
      },
      "BidValue": {
        "description": "Bid value of the bid recommendations.",
        "type": "object",
        "properties": {
          "suggestedBid": {
            "format": "double",
            "description": "The suggested bid.",
            "type": "number",
            "minimum": 0
          }
        },
        "required": [
          "suggestedBid"
        ],
        "example": {
          "suggestedBid": "1.2"
        }
      },
      "SponsoredProductsCreateSponsoredProductsDraftNegativeKeywordsRequestContent": {
        "type": "object",
        "properties": {
          "negativeKeywords": {
            "minItems": 0,
            "maxItems": 100,
            "description": "An array of negativeKeywords.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCreateDraftNegativeKeyword"
            }
          }
        },
        "required": [
          "negativeKeywords"
        ]
      },
      "MultiCountryAdGroupThemeBasedBidRecommendationRequest": {
        "type": "object",
        "properties": {
          "targetingExpressions": {
            "$ref": "#/components/schemas/MultiCountryTargetingExpressionList"
          },
          "countryCodes": {
            "$ref": "#/components/schemas/CountryCodes"
          },
          "campaignId": {
            "description": "The campaign identifier.",
            "type": "string"
          },
          "recommendationType": {
            "description": "The bid recommendation type.",
            "type": "string",
            "enum": [
              "BIDS_FOR_EXISTING_AD_GROUP"
            ]
          },
          "adGroupId": {
            "description": "The ad group identifier.",
            "type": "string"
          }
        },
        "required": [
          "recommendationType",
          "targetingExpressions",
          "campaignId",
          "adGroupId"
        ],
        "example": {
          "targetingExpressions": [
            {
              "countryValues": {
                "UK": "Sample2",
                "US": "Sample1"
              },
              "type": "KEYWORD_BROAD_MATCH"
            }
          ],
          "countryCodes": [
            "US",
            "UK"
          ],
          "campaignId": "ABCD1234",
          "recommendationType": "BIDS_FOR_EXISTING_AD_GROUP",
          "adGroupId": "EFGH5678"
        }
      },
      "SponsoredProductsNewAdGroup": {
        "type": "object",
        "properties": {
          "adGroupName": {
            "description": "The name of the new ad group.",
            "type": "string"
          },
          "targetingTypes": {
            "minItems": 1,
            "maxItems": 1,
            "description": "List of targeting types to be used for targets in the ad group. Supported types are KEYWORD and PRODUCT.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "defaultBid": {
            "format": "double",
            "description": "The default bid value that gets applied if no bid is provided for the target. For more information about bid constraints by marketplace,\n    see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).",
            "type": "number",
            "minimum": 0
          }
        },
        "required": [
          "adGroupName",
          "defaultBid",
          "targetingTypes"
        ]
      },
      "SponsoredProductsAdGroupMutationErrorSelector": {
        "type": "object",
        "properties": {
          "entityStateError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityStateError"
          },
          "missingValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMissingValueError"
          },
          "biddingError": {
            "$ref": "#/components/schemas/SponsoredProductsBiddingError"
          },
          "duplicateValueError": {
            "$ref": "#/components/schemas/SponsoredProductsDuplicateValueError"
          },
          "rangeError": {
            "$ref": "#/components/schemas/SponsoredProductsRangeError"
          },
          "otherError": {
            "$ref": "#/components/schemas/SponsoredProductsOtherError"
          },
          "parentEntityError": {
            "$ref": "#/components/schemas/SponsoredProductsParentEntityError"
          },
          "throttledError": {
            "$ref": "#/components/schemas/SponsoredProductsThrottledError"
          },
          "entityNotFoundError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityNotFoundError"
          },
          "applicableMarketplacesError": {
            "$ref": "#/components/schemas/SponsoredProductsApplicableMarketplacesError"
          },
          "malformedValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMalformedValueError"
          },
          "billingError": {
            "$ref": "#/components/schemas/SponsoredProductsBillingError"
          },
          "entityQuotaError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityQuotaError"
          },
          "internalServerError": {
            "$ref": "#/components/schemas/SponsoredProductsInternalServerError"
          }
        }
      },
      "SponsoredProductsGlobalTargetingClauseExtendedData": {
        "type": "object",
        "properties": {
          "servingStatus": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalTargetingClauseServingStatus"
          }
        }
      },
      "SponsoredProductsUpdateSponsoredProductsGlobalAdGroupsRequestContent": {
        "type": "object",
        "properties": {
          "adGroups": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "An array of adGroups with updated values.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsUpdateGlobalAdGroup"
            }
          }
        },
        "required": [
          "adGroups"
        ]
      },
      "RuleNotification": {
        "type": "object",
        "properties": {
          "ruleState": {
            "$ref": "#/components/schemas/RuleState"
          },
          "campaignOptimizationId": {
            "$ref": "#/components/schemas/campaignOptimizationId"
          },
          "campaignId": {
            "$ref": "#/components/schemas/RuleCampaignId"
          },
          "notificationString": {
            "description": "Explains why the rule state is disabled",
            "type": "string"
          }
        }
      },
      "SponsoredProductsCreateSponsoredProductsGlobalCampaignNegativeKeywordsRequestContent": {
        "type": "object",
        "properties": {
          "campaignNegativeKeywords": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "An array of campaignNegativeKeywords.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCreateGlobalCampaignNegativeKeyword"
            }
          }
        }
      },
      "SPCampaignOptimizationRecommendationAPIResponse": {
        "type": "object",
        "properties": {
          "CampaignOptimizationRecommendations": {
            "maxItems": 100,
            "description": "List of campaigns eligible for optimization rule.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuleRecommendation"
            }
          },
          "CampaignOptimizationRecommendationsError": {
            "maxItems": 100,
            "description": "List of campaigns not eligible for optimization rule.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuleRecommendationError"
            }
          }
        }
      },
      "AdGroupThemeBasedBidRecommendationRequest": {
        "type": "object",
        "properties": {
          "targetingExpressions": {
            "$ref": "#/components/schemas/TargetingExpressionList"
          },
          "campaignId": {
            "description": "The campaign identifier.",
            "type": "string"
          },
          "recommendationType": {
            "description": "The bid recommendation type.",
            "type": "string",
            "enum": [
              "BIDS_FOR_EXISTING_AD_GROUP"
            ]
          },
          "adGroupId": {
            "description": "The ad group identifier.",
            "type": "string"
          }
        },
        "required": [
          "recommendationType",
          "targetingExpressions",
          "campaignId",
          "adGroupId"
        ],
        "example": {
          "targetingExpressions": [
            {
              "type": "CLOSE_MATCH"
            },
            {
              "type": "LOOSE_MATCH"
            },
            {
              "type": "SUBSTITUTES"
            },
            {
              "type": "COMPLEMENTS"
            }
          ],
          "campaignId": "ABCD1234",
          "recommendationType": "BIDS_FOR_EXISTING_AD_GROUP",
          "adGroupId": "EFGH5678"
        }
      },
      "SponsoredProductsGlobalCampaignNegativeKeyword": {
        "type": "object",
        "properties": {
          "keywordId": {
            "description": "The identifier of the keyword.",
            "type": "string"
          },
          "campaignId": {
            "description": "The identifier of the campaign to which the keyword is associated.",
            "type": "string"
          },
          "matchType": {
            "$ref": "#/components/schemas/SponsoredProductsNegativeMatchType"
          },
          "name": {
            "description": "Name for the keyword",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalEntityState"
          },
          "keywordText": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalNegativeKeywordText"
          },
          "extendedData": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalCampaignNegativeKeywordExtendedData"
          }
        },
        "required": [
          "campaignId",
          "keywordId",
          "keywordText",
          "matchType",
          "state"
        ]
      },
      "SponsoredProductsDeleteSponsoredProductsDraftNegativeKeywordsRequestContent": {
        "type": "object",
        "properties": {
          "negativeKeywordIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          }
        },
        "required": [
          "negativeKeywordIdFilter"
        ]
      },
      "SponsoredProductsCampaignNegativeTargetsMutationError": {
        "type": "object",
        "properties": {
          "errorType": {
            "description": "The type of the error",
            "type": "string"
          },
          "errorValue": {
            "$ref": "#/components/schemas/SponsoredProductsCampaignNegativeTargetsMutationErrorSelector"
          }
        },
        "required": [
          "errorType",
          "errorValue"
        ]
      },
      "SponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent": {
        "type": "object",
        "properties": {
          "adGroups": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "An array of adGroups with updated values.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsUpdateAdGroup"
            }
          }
        },
        "required": [
          "adGroups"
        ]
      },
      "SponsoredProductsListTargetPromotionGroupsRequestContent": {
        "description": "Request object for querying target promotion groups.",
        "type": "object",
        "properties": {
          "maxResults": {
            "default": 1000,
            "format": "int32",
            "description": "The maximum number of results requested.",
            "maximum": 1000,
            "type": "integer",
            "minimum": 1
          },
          "nextToken": {
            "description": "Token value allowing to navigate to the next or previous response page",
            "type": "string"
          },
          "targetPromotionGroupIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          },
          "adGroupIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          }
        }
      },
      "SponsoredProductsGlobalNegativeTargetingClauseExtendedData": {
        "type": "object",
        "properties": {
          "servingStatus": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalTargetingClauseServingStatus"
          }
        }
      },
      "SponsoredProductsListSponsoredProductsDraftCampaignsPromotionStatusRequestContent": {
        "type": "object",
        "properties": {
          "campaignIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          },
          "maxResults": {
            "format": "int32",
            "description": "Number of records to include in the paginated response. Defaults to max page size for given API",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          }
        },
        "required": [
          "campaignIdFilter"
        ]
      },
      "OptimizationRulesAPISwaggerRuleAction": {
        "description": "Action to be taken by the rule.",
        "type": "object",
        "properties": {
          "actionType": {
            "$ref": "#/components/schemas/OptimizationRulesAPISwaggerActionType"
          },
          "actionDetails": {
            "$ref": "#/components/schemas/OptimizationRulesAPISwaggerActionDetails"
          }
        },
        "required": [
          "actionType",
          "actionDetails"
        ],
        "example": {
          "actionType": "ADOPT",
          "actionDetails": {
            "actionUnit": "PERCENT",
            "value": "50",
            "actionOperator": "INCREMENT"
          }
        }
      },
      "SponsoredProductsDraftCampaignPromotionStatus": {
        "type": "object",
        "properties": {
          "promotionState": {
            "$ref": "#/components/schemas/SponsoredProductsDraftCampaignPromotionState"
          },
          "campaignId": {
            "description": "entity object identifier",
            "type": "string"
          },
          "destinationId": {
            "description": "entity object identifier",
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftCampaignPromotionError"
            }
          }
        },
        "required": [
          "campaignId",
          "destinationId",
          "promotionState"
        ]
      },
      "SponsoredProductsCampaignMutationExceptionResponseContent": {
        "description": "Exception resulting in mutating campaign management entities",
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsInvalidArgumentErrorCode"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCampaignMutationError"
            }
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "SponsoredProductsGlobalAdGroupServingStatus": {
        "type": "object",
        "properties": {
          "statusReasons": {
            "minItems": 1,
            "maxItems": 18,
            "description": "Serving status details of adgroup",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsGlobalAdGroupServingStatusReason"
            }
          },
          "adGroupServingStatus": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalEntityServingStatus"
          },
          "marketplaceAdGroupServingStatus": {
            "minItems": 1,
            "maxItems": 1000,
            "description": "The marketplace serving statuses.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsMarketplaceAdGroupServingStatus"
            }
          }
        }
      },
      "SponsoredProductsMatchType": {
        "type": "string",
        "enum": [
          "EXACT",
          "PHRASE",
          "BROAD",
          "OTHER"
        ]
      },
      "SponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsResponseContent": {
        "type": "object",
        "properties": {
          "campaignNegativeKeywords": {
            "$ref": "#/components/schemas/SponsoredProductsBulkCampaignNegativeKeywordOperationResponse"
          }
        },
        "required": [
          "campaignNegativeKeywords"
        ]
      },
      "SponsoredProductsRecommendationReason": {
        "description": "Provides a reason for why this target is being recommended for harvesting",
        "type": "object",
        "properties": {
          "reason": {
            "description": "The reason for the recommendation",
            "type": "string"
          },
          "data": {
            "description": "The data supporting the recommendation reason",
            "type": "string"
          }
        }
      },
      "SponsoredProductsThrottledErrorReason": {
        "type": "string",
        "enum": [
          "THROTTLED"
        ]
      },
      "ThemeBasedBidRecommendationResponse": {
        "description": "A list of bid recommendation themes and associated bid recommendations.",
        "type": "object",
        "properties": {
          "bidRecommendations": {
            "maxItems": 2,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ThemeBasedBidRecommendation"
            }
          }
        },
        "required": [
          "bidRecommendations"
        ],
        "example": {
          "bidRecommendations": [
            {
              "theme": "CONVERSION_OPPORTUNITIES",
              "bidRecommendationsForTargetingExpressions": [
                {
                  "bidValues": [
                    {
                      "suggestedBid": "1"
                    },
                    {
                      "suggestedBid": "1.5"
                    },
                    {
                      "suggestedBid": "2"
                    }
                  ],
                  "targetingExpression": {
                    "type": "CLOSE_MATCH"
                  }
                },
                {
                  "bidValues": [
                    {
                      "suggestedBid": "1.1"
                    },
                    {
                      "suggestedBid": "1.4"
                    },
                    {
                      "suggestedBid": "2.2"
                    }
                  ],
                  "targetingExpression": {
                    "type": "LOOSE_MATCH"
                  }
                }
              ],
              "impactMetrics": {
                "clicks": {
                  "values": [
                    {
                      "lower": "30",
                      "upper": "70"
                    },
                    {
                      "lower": "80",
                      "upper": "90"
                    },
                    {
                      "lower": "95",
                      "upper": "120"
                    }
                  ]
                },
                "orders": {
                  "values": [
                    {
                      "lower": "3",
                      "upper": "6"
                    },
                    {
                      "lower": "7",
                      "upper": "10"
                    },
                    {
                      "lower": "11",
                      "upper": "15"
                    }
                  ]
                }
              }
            }
          ]
        }
      },
      "OptimizationRulesAPISwaggerOptimizationRuleBatchSubError": {
        "description": "Response object for operations involving a single optimization rule.",
        "type": "object",
        "properties": {
          "errorMessage": {
            "description": "A human-readable description of the error.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsDraftNegativeKeywordMutationExceptionResponseContent": {
        "description": "Exception resulting in mutating campaign management entities",
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsInvalidArgumentErrorCode"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftNegativeKeywordMutationError"
            }
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "SponsoredProductsCreateOrUpdateBudget": {
        "type": "object",
        "properties": {
          "budgetType": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateBudgetType"
          },
          "budget": {
            "format": "double",
            "description": "Monetary value",
            "type": "number"
          }
        },
        "required": [
          "budget",
          "budgetType"
        ]
      },
      "SponsoredProductsDeliveryReasons": {
        "description": "DeliveryReasons provides a description for the DeliveryStatus.",
        "type": "string",
        "enum": [
          "CAMPAIGN_PAUSED",
          "CAMPAIGN_ARCHIVED",
          "CAMPAIGN_PENDING_START_DATE",
          "CAMPAIGN_END_DATE_REACHED",
          "CAMPAIGN_REJECTED",
          "CAMPAIGN_PENDING_REVIEW",
          "CAMPAIGN_INCOMPLETE",
          "CAMPAIGN_OUT_OF_BUDGET",
          "PORTFOLIO_OUT_OF_BUDGET",
          "PORTFOLIO_END_DATE_REACHED",
          "PORTFOLIO_ARCHIVED",
          "PORTFOLIO_PAUSED",
          "PORTFOLIO_PENDING_START_DATE",
          "ADVERTISER_POLICING_SUSPENDED",
          "ADVERTISER_POLICING_PENDING_REVIEW",
          "ADVERTISER_ARCHIVED",
          "ADVERTISER_OUT_OF_BUDGET",
          "ADVERTISER_PAUSED",
          "ADVERTISER_PAYMENT_FAILURE",
          "ADVERTISER_OUT_OF_PREPAY_BALANCE",
          "ADVERTISER_INELIGIBLE",
          "AD_GROUP_PAUSED",
          "AD_GROUP_ARCHIVED",
          "AD_GROUP_INCOMPLETE",
          "AD_GROUP_POLICING_PENDING_REVIEW",
          "AD_GROUP_LOW_BID",
          "AD_GROUP_PENDING_REVIEW",
          "AD_GROUP_REJECTED",
          "TARGET_POLICING_SUSPENDED",
          "TARGET_PAUSED",
          "TARGET_ARCHIVED",
          "TARGET_BLOCKED",
          "AD_PAUSED",
          "AD_ARCHIVED",
          "AD_POLICING_PENDING_REVIEW",
          "AD_POLICING_SUSPENDED",
          "AD_CREATION_FAILED",
          "AD_CREATION_IN_PROGRESS",
          "LANDING_PAGE_NOT_AVAILABLE",
          "NOT_BUYABLE",
          "NOT_IN_BUYBOX",
          "NOT_IN_POLICY",
          "OUT_OF_STOCK",
          "AD_MISSING_IMAGE",
          "SECURITY_SCAN_PENDING_REVIEW",
          "SECURITY_SCAN_REJECTED",
          "STATUS_UNAVAILABLE",
          "NO_INVENTORY",
          "NO_PURCHASABLE_OFFER",
          "AD_INELIGIBLE",
          "CREATIVE_MISSING_ASSET",
          "CREATIVE_PENDING_REVIEW",
          "CREATIVE_REJECTED",
          "AD_MISSING_DECORATION",
          "PIR_RULE_EXCLUDED",
          "AD_NOT_DELIVERING",
          "OTHER"
        ]
      },
      "CreateSPCampaignOptimizationRulesResponse": {
        "type": "object",
        "properties": {
          "campaignOptimizationId": {
            "$ref": "#/components/schemas/campaignOptimizationId"
          },
          "code": {
            "description": "An enumerated success or error code for machine use.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the error, if unsuccessful",
            "type": "string"
          }
        }
      },
      "SponsoredProductsDraftCampaignNegativeKeywordAccessExceptionResponseContent": {
        "description": "Exception resulting in accessing draft management entities",
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsInvalidArgumentErrorCode"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftCampaignNegativeKeywordAccessError"
            }
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "SponsoredProductsBulkNegativeKeywordOperationResponse": {
        "type": "object",
        "properties": {
          "success": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsNegativeKeywordSuccessResponseItem"
            }
          },
          "error": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsNegativeKeywordFailureResponseItem"
            }
          }
        }
      },
      "SponsoredProductsListMatchedAdGroupsResponseContent": {
        "description": "Response object for querying adGroups with ASIN/SKU matches.",
        "type": "object",
        "properties": {
          "totalResults": {
            "format": "int64",
            "description": "The total number of results available.",
            "type": "integer"
          },
          "nextToken": {
            "description": "To retrieve the next page of results, call the same operation and specify this token in the\n    request. If the nextToken field is empty, there are no further results.",
            "type": "string"
          },
          "matchedAdGroups": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsMatchedAdGroup"
            }
          }
        }
      },
      "GlobalProductAttributeTargetingUnauthorizedException": {
        "type": "object",
        "properties": {
          "errors": {
            "minItems": 1,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GlobalProductAttributeTargetingErrorModel"
            }
          }
        }
      },
      "SponsoredProductsKeywordTextFilter": {
        "description": "Filter by keywordText",
        "type": "object",
        "properties": {
          "queryTermMatchType": {
            "$ref": "#/components/schemas/SponsoredProductsQueryTermMatchType"
          },
          "include": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SponsoredProductsDraftNegativeTargetAccessError": {
        "type": "object",
        "properties": {
          "errorType": {
            "description": "The type of the error",
            "type": "string"
          },
          "errorValue": {
            "$ref": "#/components/schemas/SponsoredProductsDraftNegativeTargetAccessErrorSelector"
          }
        },
        "required": [
          "errorType",
          "errorValue"
        ]
      },
      "OptimizationRulesAPISwaggerRangeTypeRuleCriteria": {
        "description": "Represents the range of rule attribute value.",
        "type": "object",
        "properties": {
          "minValue": {
            "format": "double",
            "type": "number"
          },
          "maxValue": {
            "format": "double",
            "type": "number"
          }
        },
        "required": [
          "minValue",
          "maxValue"
        ]
      },
      "MultiCountryAsin": {
        "description": "The multi country asin",
        "additionalProperties": {
          "description": "Asin value",
          "type": "string"
        },
        "type": "object"
      },
      "SponsoredProductsExpressionTypeError": {
        "type": "object",
        "properties": {
          "reason": {
            "$ref": "#/components/schemas/SponsoredProductsExpressionTypeErrorReason"
          },
          "cause": {
            "$ref": "#/components/schemas/SponsoredProductsErrorCause"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          }
        },
        "required": [
          "message",
          "reason"
        ]
      },
      "SponsoredProductsBulkGlobalNegativeKeywordOperationResponse": {
        "type": "object",
        "properties": {
          "success": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsGlobalNegativeKeywordSuccessResponseItem"
            }
          },
          "error": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsGlobalNegativeKeywordFailureResponseItem"
            }
          }
        }
      },
      "SponsoredProductsListSponsoredProductsGlobalAdGroupsRequestContent": {
        "type": "object",
        "properties": {
          "maxResults": {
            "format": "int32",
            "description": "Number of records to include in the paginated response. Defaults to max page size for given API",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          },
          "adGroupIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          },
          "includeExtendedDataFields": {
            "description": "Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus",
            "type": "boolean"
          }
        }
      },
      "SponsoredProductsOffAmazonSettings": {
        "type": "object",
        "properties": {
          "offAmazonBudgetControlStrategy": {
            "$ref": "#/components/schemas/SponsoredProductsOffAmazonBudgetControlStrategy"
          }
        }
      },
      "SponsoredProductsUpdateAllTargets": {
        "description": "Targets allow you to target or exclude criteria at the campaign or ad group level, and to set bids for specific criteria at the ad group level.",
        "type": "object",
        "properties": {
          "targetId": {
            "description": "The identifier for this target.",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateState"
          },
          "bid": {
            "$ref": "#/components/schemas/SponsoredProductsBid"
          },
          "targetDetails": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateTargetDetails"
          }
        },
        "required": [
          "targetId"
        ]
      },
      "SponsoredProductsNewCampaignBudget": {
        "description": "The budget for the campaigns in the target promotion group.",
        "type": "object",
        "properties": {
          "budgetType": {
            "description": "DAILY.",
            "type": "string"
          },
          "budget": {
            "format": "double",
            "description": "The value of the budget.",
            "type": "number",
            "minimum": 0
          }
        },
        "required": [
          "budget",
          "budgetType"
        ]
      },
      "SponsoredProductsCreateSponsoredProductsAdGroupsRequestContent": {
        "type": "object",
        "properties": {
          "adGroups": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "An array of adGroups.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCreateAdGroup"
            }
          }
        },
        "required": [
          "adGroups"
        ]
      },
      "TargetingGroupBidRecommendation": {
        "description": "Contains suggested recommendation for the auto targeting group.",
        "type": "object",
        "properties": {
          "suggestedBid": {
            "format": "double",
            "description": "The suggested bid value associated with this targeting.",
            "type": "number"
          },
          "targetId": {
            "description": "The target identifier.",
            "type": "string"
          },
          "targetingGroupExpression": {
            "description": "The type of targeting group expression.\n| Value | Description |\n| --- | --- |\n| `LOOSE_MATCH` | This will show your ad to shoppers who use search terms loosely related to your products.|\n| `CLOSE_MATCH` | This will show your ad to shoppers who use search terms closely related to your products.|\n| `COMPLEMENTS` | This will show your ad to shoppers who view the detail pages of products that complement your product.|\n| `SUBSTITUTES` | This will show your ad to shoppers who use detail pages of products similar to yours.|",
            "type": "string",
            "enum": [
              "CLOSE_MATCH",
              "LOOSE_MATCH",
              "SUBSTITUTES",
              "COMPLEMENTS"
            ]
          },
          "action": {
            "description": "Type of suggested action.",
            "type": "string",
            "enum": [
              "ADD",
              "REMOVE",
              "INCREASE",
              "DECREASE"
            ]
          },
          "adGroupId": {
            "description": "The ad group identifier.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsMissingValueErrorReason": {
        "type": "string",
        "enum": [
          "MISSING_VALUE"
        ]
      },
      "SponsoredProductsCreateKeyword": {
        "type": "object",
        "properties": {
          "nativeLanguageKeyword": {
            "description": "The unlocalized keyword text in the preferred locale of the advertiser.",
            "type": "string"
          },
          "nativeLanguageLocale": {
            "description": "The locale preference of the advertiser. For example, if the advertiser\u2019s preferred language is Simplified Chinese, set the locale to zh_CN. Supported locales include: Simplified Chinese (locale: zh_CN) for US, UK and CA. English (locale: en_GB) for DE, FR, IT and ES.",
            "type": "string"
          },
          "campaignId": {
            "description": "The identifer of the campaign to which the keyword is associated.",
            "type": "string"
          },
          "matchType": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateMatchType"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateEntityState"
          },
          "bid": {
            "nullable": true,
            "format": "double",
            "description": "Bid associated with this keyword. Applicable to biddable match types only. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).",
            "type": "number"
          },
          "adGroupId": {
            "description": "The identifier of the ad group to which this keyword is associated.",
            "type": "string"
          },
          "keywordText": {
            "description": "The keyword text.",
            "type": "string"
          }
        },
        "required": [
          "adGroupId",
          "campaignId",
          "keywordText",
          "matchType",
          "state"
        ]
      },
      "SponsoredProductsDeleteSponsoredProductsDraftAdGroupsRequestContent": {
        "type": "object",
        "properties": {
          "adGroupIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          }
        },
        "required": [
          "adGroupIdFilter"
        ]
      },
      "SponsoredProductsDraftKeywordAccessExceptionResponseContent": {
        "description": "Exception resulting in accessing campaign management entities",
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsInvalidArgumentErrorCode"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftKeywordAccessError"
            }
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "SDBudgetRuleDetails": {
        "description": "Object representing details of a budget rule for SD campaign",
        "type": "object",
        "properties": {
          "duration": {
            "$ref": "#/components/schemas/RuleDuration"
          },
          "recurrence": {
            "$ref": "#/components/schemas/Recurrence"
          },
          "ruleType": {
            "$ref": "#/components/schemas/SDRuleType"
          },
          "budgetIncreaseBy": {
            "$ref": "#/components/schemas/budgetIncreaseBy"
          },
          "name": {
            "description": "The budget rule name. Required to be unique within a campaign.",
            "type": "string",
            "maxLength": 355
          },
          "performanceMeasureCondition": {
            "$ref": "#/components/schemas/PerformanceMeasureCondition"
          }
        }
      },
      "SponsoredProductsListTargetPromotionGroupTargetsV2ResponseContent": {
        "description": "Response object for querying target promotion group targets.",
        "type": "object",
        "properties": {
          "totalResults": {
            "format": "int64",
            "description": "The total number of results available.",
            "type": "integer"
          },
          "nextToken": {
            "description": "To retrieve the next page of results, call the same operation and specify this token in the\n    request. If the nextToken field is empty, there are no further results.",
            "type": "string"
          },
          "targets": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsTargetPromotionGroupTargetDetails"
            }
          }
        }
      },
      "CampaignOptimizationRule": {
        "type": "object",
        "properties": {
          "recurrence": {
            "$ref": "#/components/schemas/RecurrenceType"
          },
          "ruleAction": {
            "$ref": "#/components/schemas/RuleAction"
          },
          "campaignOptimizationId": {
            "$ref": "#/components/schemas/campaignOptimizationId"
          },
          "createdDate": {
            "$ref": "#/components/schemas/RuleCreationDate"
          },
          "ruleCondition": {
            "$ref": "#/components/schemas/RuleConditionList"
          },
          "ruleType": {
            "$ref": "#/components/schemas/RuleType"
          },
          "ruleName": {
            "$ref": "#/components/schemas/RuleName"
          },
          "campaignIds": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuleCampaignId"
            }
          },
          "ruleStatus": {
            "$ref": "#/components/schemas/RuleStatus"
          }
        },
        "required": [
          "campaignOptimizationId"
        ]
      },
      "SponsoredProductsCreateTargetError": {
        "description": "Response object of failed target promotion group target.",
        "type": "object",
        "properties": {
          "errorType": {
            "description": "The type of the error.",
            "type": "string"
          },
          "errorValue": {
            "$ref": "#/components/schemas/SponsoredProductsCreateTargetErrorSelector"
          }
        }
      },
      "SponsoredProductsCreateSponsoredProductsNegativeKeywordsResponseContent": {
        "type": "object",
        "properties": {
          "negativeKeywords": {
            "$ref": "#/components/schemas/SponsoredProductsBulkNegativeKeywordOperationResponse"
          }
        },
        "required": [
          "negativeKeywords"
        ]
      },
      "SponsoredProductsNegativeTargetingClauseSuccessResponseItem": {
        "type": "object",
        "properties": {
          "targetId": {
            "description": "the NegativeTargetingClause ID",
            "type": "string"
          },
          "index": {
            "format": "int32",
            "description": "the index of the NegativeTargetingClause in the array from the request body",
            "type": "integer",
            "minimum": 0
          },
          "negativeTargetingClause": {
            "$ref": "#/components/schemas/SponsoredProductsNegativeTargetingClause"
          }
        },
        "required": [
          "index"
        ]
      },
      "SponsoredProductsUpdateProductAd": {
        "type": "object",
        "properties": {
          "adId": {
            "description": "The product ad identifier.",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateEntityState"
          }
        },
        "required": [
          "adId"
        ]
      },
      "UpdateSPCampaignOptimizationRuleResponse": {
        "type": "object",
        "properties": {
          "campaignOptimizationId": {
            "$ref": "#/components/schemas/campaignOptimizationId"
          },
          "code": {
            "description": "An enumerated success or error code for machine use.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the error, if unsuccessful",
            "type": "string"
          }
        }
      },
      "GlobalBudgetRulesRecommendationError": {
        "type": "object",
        "properties": {
          "countryCodes": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "code"
        ]
      },
      "SponsoredProductsDraftProductAdAccessError": {
        "type": "object",
        "properties": {
          "errorType": {
            "description": "The type of the error",
            "type": "string"
          },
          "errorValue": {
            "$ref": "#/components/schemas/SponsoredProductsDraftProductAdAccessErrorSelector"
          }
        },
        "required": [
          "errorType",
          "errorValue"
        ]
      },
      "RuleRecommendationMetrics": {
        "description": "Performance Metrics supported by the rule recommendation",
        "type": "object",
        "properties": {
          "roas": {
            "format": "double",
            "description": "return on ad spend value",
            "type": "number"
          }
        }
      },
      "SponsoredProductsProductAdMutationErrorSelector": {
        "type": "object",
        "properties": {
          "entityStateError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityStateError"
          },
          "missingValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMissingValueError"
          },
          "asinOwnershipError": {
            "$ref": "#/components/schemas/SponsoredProductsAsinOwnershipError"
          },
          "duplicateValueError": {
            "$ref": "#/components/schemas/SponsoredProductsDuplicateValueError"
          },
          "rangeError": {
            "$ref": "#/components/schemas/SponsoredProductsRangeError"
          },
          "unsupportedOperationError": {
            "$ref": "#/components/schemas/SponsoredProductsUnsupportedOperationError"
          },
          "parentEntityError": {
            "$ref": "#/components/schemas/SponsoredProductsParentEntityError"
          },
          "otherError": {
            "$ref": "#/components/schemas/SponsoredProductsOtherError"
          },
          "throttledError": {
            "$ref": "#/components/schemas/SponsoredProductsThrottledError"
          },
          "entityNotFoundError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityNotFoundError"
          },
          "malformedValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMalformedValueError"
          },
          "productIdentifierError": {
            "$ref": "#/components/schemas/SponsoredProductsProductIdentifierError"
          },
          "adEligibilityError": {
            "$ref": "#/components/schemas/SponsoredProductsAdEligibilityError"
          },
          "billingError": {
            "$ref": "#/components/schemas/SponsoredProductsBillingError"
          },
          "entityQuotaError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityQuotaError"
          },
          "internalServerError": {
            "$ref": "#/components/schemas/SponsoredProductsInternalServerError"
          }
        }
      },
      "OptimizationRulesAPISwaggerTargetingType": {
        "description": "The type of targets for the rule.",
        "type": "string",
        "enum": [
          "PRODUCT",
          "KEYWORD"
        ]
      },
      "SponsoredProductsEntityStateFilter": {
        "description": "Filter entities by state. To filter live entities, only 'ENABLED', 'PAUSED' and 'ARCHIVED' can be used",
        "type": "object",
        "properties": {
          "include": {
            "minItems": 0,
            "maxItems": 10,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsEntityState"
            }
          }
        },
        "required": [
          "include"
        ]
      },
      "SponsoredProductsDraftCampaignBudgetType": {
        "type": "string",
        "enum": [
          "DAILY",
          "OTHER"
        ]
      },
      "GetCampaignRecommendationsResponse": {
        "type": "object",
        "required": [
          "recommendations"
        ],
        "properties": {
          "nextToken": {
            "description": "An identifier to fetch next set of campaign recommendations records in the result set if available. This will be null when at the end of result set.",
            "type": "string",
            "example": "MTAxNTExtY5NDE="
          },
          "recommendations": {
            "minItems": 0,
            "maxItems": 50,
            "description": "List of campaign recommendations.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CampaignRecommendation"
            }
          }
        }
      },
      "BudgetRecommendationForExistingCampaign": {
        "type": "object",
        "required": [
          "budgetRuleRecommendation",
          "campaignId",
          "index",
          "sevenDaysMissedOpportunities",
          "suggestedBudget"
        ],
        "properties": {
          "campaignId": {
            "description": "encrypted campaignId",
            "type": "string"
          },
          "suggestedBudget": {
            "description": "recommended budget for the campaign.",
            "type": "number"
          },
          "index": {
            "description": "Correlate the recommendation to the campaign index in the request. Zero-based",
            "type": "integer"
          },
          "sevenDaysMissedOpportunities": {
            "$ref": "#/components/schemas/SevenDaysMissedOpportunities"
          },
          "budgetRuleRecommendation": {
            "$ref": "#/components/schemas/BudgetRuleRecommendation"
          }
        }
      },
      "SBRuleType": {
        "description": "The type of budget rule. SCHEDULE: A budget rule based on a start and end date. PERFORMANCE: A budget rule based on advertising performance criteria.",
        "type": "string",
        "enum": [
          "SCHEDULE",
          "PERFORMANCE"
        ]
      },
      "SponsoredProductsGlobalProductAdFailureResponseItem": {
        "type": "object",
        "properties": {
          "index": {
            "format": "int32",
            "description": "the index of the product ad in the array from the request body",
            "type": "integer",
            "minimum": 0
          },
          "errors": {
            "description": "A list of validation errors",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsProductAdMutationError"
            }
          }
        },
        "required": [
          "index"
        ]
      },
      "BudgetUsageCampaignBatchError": {
        "type": "object",
        "properties": {
          "code": {
            "description": "An enumerated error code for machine use.",
            "type": "string"
          },
          "campaignId": {
            "description": "ID of requested resource",
            "type": "string"
          },
          "index": {
            "description": "An index to maintain order of the campaignIds",
            "type": "number"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsCreateDraftNegativeTargetingClause": {
        "type": "object",
        "properties": {
          "expression": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "The DraftNegativeTargeting expression.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateNegativeTargetingExpressionPredicate"
            }
          },
          "campaignId": {
            "description": "The identifier of the campaign to which this target is associated.",
            "type": "string"
          },
          "adGroupId": {
            "description": "The identifier of the ad group to which this target is associated.",
            "type": "string"
          }
        },
        "required": [
          "adGroupId",
          "campaignId",
          "expression"
        ]
      },
      "Impressions": {
        "description": "Impressions benchmark.",
        "properties": {
          "lower": {
            "description": "lower bound.",
            "type": "integer"
          },
          "upper": {
            "description": "upper bound.",
            "type": "integer"
          }
        }
      },
      "SponsoredProductsUpdateGlobalCampaign": {
        "type": "object",
        "properties": {
          "endDate": {
            "format": "date",
            "description": "The format of the date is YYYY-MM-DD.",
            "type": "string"
          },
          "campaignId": {
            "description": "The identifier of the campaign.",
            "type": "string"
          },
          "name": {
            "description": "The name of the campaign.",
            "type": "string"
          },
          "targetingType": {
            "$ref": "#/components/schemas/SponsoredProductsTargetingType"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateGlobalEntityState"
          },
          "dynamicBidding": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateDynamicBidding"
          },
          "startDate": {
            "format": "date",
            "description": "The format of the date is YYYY-MM-DD.",
            "type": "string"
          },
          "budget": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalBudget"
          },
          "tags": {
            "$ref": "#/components/schemas/SponsoredProductsTags"
          }
        },
        "required": [
          "campaignId"
        ]
      },
      "OptimizationRulesAPISwaggerRuleCondition": {
        "type": "object",
        "properties": {
          "criteria": {
            "$ref": "#/components/schemas/OptimizationRulesAPISwaggerRuleCriteria"
          },
          "attributeName": {
            "$ref": "#/components/schemas/OptimizationRulesAPISwaggerRuleAttribute"
          }
        }
      },
      "CreateSDBudgetRulesRequest": {
        "type": "object",
        "properties": {
          "budgetRulesDetails": {
            "maxItems": 25,
            "description": "A list of budget rule details.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SDBudgetRuleDetails"
            }
          }
        }
      },
      "SponsoredProductsCreateTargetPromotionGroupTargetsV2ResponseContent": {
        "description": "Response object for creating target promotion group targets.",
        "type": "object",
        "properties": {
          "success": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCreateTargetPromotionGroupTargetsBatchSuccess"
            }
          },
          "error": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCreateTargetPromotionGroupTargetsBatchError"
            }
          }
        }
      },
      "Adjustment": {
        "properties": {
          "placementAdjustment": {
            "$ref": "#/components/schemas/PlacementAdjustment"
          }
        }
      },
      "SponsoredProductsNegativeKeywordMutationErrorSelector": {
        "type": "object",
        "properties": {
          "entityStateError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityStateError"
          },
          "missingValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMissingValueError"
          },
          "duplicateValueError": {
            "$ref": "#/components/schemas/SponsoredProductsDuplicateValueError"
          },
          "rangeError": {
            "$ref": "#/components/schemas/SponsoredProductsRangeError"
          },
          "parentEntityError": {
            "$ref": "#/components/schemas/SponsoredProductsParentEntityError"
          },
          "otherError": {
            "$ref": "#/components/schemas/SponsoredProductsOtherError"
          },
          "throttledError": {
            "$ref": "#/components/schemas/SponsoredProductsThrottledError"
          },
          "entityNotFoundError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityNotFoundError"
          },
          "targetingClauseSetupError": {
            "$ref": "#/components/schemas/SponsoredProductsTargetingClauseSetupError"
          },
          "malformedValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMalformedValueError"
          },
          "billingError": {
            "$ref": "#/components/schemas/SponsoredProductsBillingError"
          },
          "entityQuotaError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityQuotaError"
          },
          "internalServerError": {
            "$ref": "#/components/schemas/SponsoredProductsInternalServerError"
          }
        }
      },
      "SponsoredProductsServiceUnavailableExceptionCode": {
        "type": "string",
        "enum": [
          "SERVICE_UNAVAILABLE"
        ]
      },
      "SponsoredProductsBulkDraftProductAdOperationResponse": {
        "type": "object",
        "properties": {
          "success": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftProductAdSuccessResponseItem"
            }
          },
          "error": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftProductAdFailureResponseItem"
            }
          }
        }
      },
      "SponsoredProductsGlobalKeywordServingStatusReason": {
        "type": "string",
        "enum": [
          "TARGETING_CLAUSE_DELIVERING_IN_ALL_MARKETPLACES",
          "ADVERTISER_PAYMENT_FAILURE_IN_AT_LEAST_ONE_MARKETPLACE",
          "ACCOUNT_OUT_OF_BUDGET_IN_AT_LEAST_ONE_MARKETPLACE",
          "ADVERTISER_POLICING_PENDING_REVIEW_IN_ATLEAST_ONE_MARKETPLACES",
          "ADVERTISER_POLICING_SUSPENDED_IN_ATLEAST_ONE_MARKETPLACES",
          "ADVERTISER_PAUSED_IN_ATLEAST_ONE_MARKETPLACES",
          "ADVERTISER_ARCHIVED_IN_ATLEAST_ONE_MARKETPLACES",
          "CAMPAIGN_OUT_OF_BUDGET_IN_AT_LEAST_ONE_MARKETPLACE",
          "CAMPAIGN_PAUSED_IN_AT_LEAST_ONE_MARKETPLACE",
          "CAMPAIGN_ARCHIVED",
          "CAMPAIGN_INCOMPLETE_IN_AT_LEAST_ONE_MARKETPLACE",
          "CAMPAIGN_CREATION_FAILED_IN_AT_LEAST_ONE_MARKETPLACE",
          "CAMPAIGN_PENDING_START_DATE",
          "CAMPAIGN_ENDED",
          "AD_GROUP_PAUSED_IN_AT_LEAST_ONE_MARKETPLACE",
          "AD_GROUP_ARCHIVED",
          "AD_GROUP_INCOMPLETE_IN_AT_LEAST_ONE_MARKETPLACE",
          "AD_GROUP_CREATION_IN_PROGRESS_IN_AT_LEAST_ONE_MARKETPLACE",
          "AD_GROUP_CREATION_FAILED_IN_AT_LEAST_ONE_MARKETPLACE",
          "AD_GROUP_POLICING_PENDING_REVIEW_IN_AT_LEAST_ONE_MARKETPLACE",
          "AD_GROUP_POLICING_CREATIVE_REJECTED_IN_AT_LEAST_ONE_MARKETPLACE",
          "AD_GROUP_LOW_BID_IN_AT_LEAST_ONE_MARKETPLACE",
          "TARGETING_CLAUSE_PAUSED_IN_AT_LEAST_ONE_MARKETPLACE",
          "TARGETING_CLAUSE_ARCHIVED",
          "TARGETING_CLAUSE_POLICING_SUSPENDED_IN_AT_LEAST_ONE_MARKETPLACE",
          "TARGETING_CLAUSE_CREATION_FAILED_IN_AT_LEAST_ONE_MARKETPLACE",
          "TARGETING_CLAUSE_BLOCKED_IN_AT_LEAST_ONE_MARKETPLACE"
        ]
      },
      "SponsoredProductsCreateSponsoredProductsGlobalProductAdsResponseContent": {
        "type": "object",
        "properties": {
          "productAds": {
            "$ref": "#/components/schemas/SponsoredProductsBulkGlobalProductAdOperationResponse"
          }
        },
        "required": [
          "productAds"
        ]
      },
      "SponsoredProductsNewCampaignPlacementBidding": {
        "description": "The product placement.",
        "type": "object",
        "properties": {
          "percentage": {
            "format": "int32",
            "description": "The bidding placement percentage.",
            "type": "integer"
          },
          "placement": {
            "description": "The bidding placement. One of PLACEMENT_TOP, PLACEMENT_PRODUCT_PAGE, PLACEMENT_REST_OF_SEARCH.",
            "type": "string"
          }
        },
        "required": [
          "percentage",
          "placement"
        ]
      },
      "OptimizationRulesAPISwaggerSearchOptimizationRuleAssociationsResponse": {
        "description": "Response object for searching optimization rules associations.",
        "type": "object",
        "properties": {
          "associations": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptimizationRulesAPISwaggerSearchOptimizationRuleAssociationsResponseItem"
            }
          },
          "nextToken": {
            "description": "To retrieve the next page of results, call the same operation and specify this token in the request. If the field is empty, the first page of results will be returned.",
            "type": "string"
          }
        },
        "required": [
          "associations"
        ]
      },
      "SponsoredProductsCampaignAccessExceptionResponseContent": {
        "description": "Exception resulting in accessing campaign management entities",
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsInvalidArgumentErrorCode"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCampaignAccessError"
            }
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "SponsoredProductsDuplicateValueError": {
        "type": "object",
        "properties": {
          "reason": {
            "$ref": "#/components/schemas/SponsoredProductsDuplicateValueErrorReason"
          },
          "marketplace": {
            "$ref": "#/components/schemas/SponsoredProductsMarketplace"
          },
          "cause": {
            "$ref": "#/components/schemas/SponsoredProductsErrorCause"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          }
        },
        "required": [
          "message",
          "reason"
        ]
      },
      "SponsoredProductsTargetCampaignAttributes": {
        "type": "object",
        "properties": {
          "marketplaceId": {
            "description": "The identifier of the target marketplace.",
            "type": "string"
          },
          "endDate": {
            "format": "date",
            "description": "The end date for the campaign in formats according to https://tools.ietf.org/html/rfc3339#section-5.6.",
            "type": "string"
          },
          "nameSuffix": {
            "description": "The name to be appended to the campaign. If new name already exists, a number will be appended i.e. if \"Campaign Name Copy\" exist, we will name it \"Campaign Name Copy 1\"",
            "type": "string"
          },
          "startDate": {
            "format": "date",
            "description": "The start date of the campaign in formats according to https://tools.ietf.org/html/rfc3339#section-5.6.",
            "type": "string"
          },
          "advertiserId": {
            "description": "The advertiser id per the targeted marketplace. Advertiser id per marketplace can fetched through /v2/profiles API.",
            "type": "string"
          },
          "budget": {
            "format": "double",
            "description": "The budget for the campaign.",
            "type": "number"
          },
          "status": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateEntityState"
          }
        },
        "required": [
          "advertiserId",
          "marketplaceId",
          "nameSuffix",
          "status"
        ]
      },
      "ThrottlingException": {
        "description": "Returns information about a ThrottlingException.",
        "type": "object",
        "properties": {
          "code": {
            "description": "The HTTP status code of the response.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsListTargetPromotionGroupTargetsResponseContent": {
        "description": "Response object for querying target promotion group targets.",
        "type": "object",
        "properties": {
          "totalResults": {
            "format": "int64",
            "description": "The total number of results available.",
            "type": "integer"
          },
          "nextToken": {
            "description": "To retrieve the next page of results, call the same operation and specify this token in the\n    request. If the nextToken field is empty, there are no further results.",
            "type": "string"
          },
          "targets": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsTarget"
            }
          }
        }
      },
      "SponsoredProductsGlobalCampaignNegativeKeywordSuccessResponseItem": {
        "type": "object",
        "properties": {
          "campaignNegativeKeyword": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalCampaignNegativeKeyword"
          },
          "campaignNegativeKeywordId": {
            "description": "the campaignNegativeKeyword ID",
            "type": "string"
          },
          "index": {
            "format": "int32",
            "description": "the index of the campaign in the array from the request body",
            "type": "integer",
            "minimum": 0
          }
        },
        "required": [
          "index"
        ]
      },
      "GetSDBudgetRuleResponse": {
        "type": "object",
        "properties": {
          "budgetRule": {
            "$ref": "#/components/schemas/SDBudgetRule"
          }
        }
      },
      "KeywordTargetRankRecommendationRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RecommendationOptions"
          }
        ],
        "properties": {
          "targets": {
            "minItems": 0,
            "maxItems": 100,
            "description": "A list of targets that need to be ranked",
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/KeywordTarget"
                }
              ]
            }
          }
        }
      },
      "SponsoredProductsCampaignNegativeKeywordAccessErrorSelector": {
        "type": "object",
        "properties": {
          "entityNotFoundError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityNotFoundError"
          },
          "missingValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMissingValueError"
          },
          "malformedValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMalformedValueError"
          },
          "internalServerError": {
            "$ref": "#/components/schemas/SponsoredProductsInternalServerError"
          },
          "rangeError": {
            "$ref": "#/components/schemas/SponsoredProductsRangeError"
          },
          "otherError": {
            "$ref": "#/components/schemas/SponsoredProductsOtherError"
          },
          "invalidInputError": {
            "$ref": "#/components/schemas/SponsoredProductsInvalidInputError"
          },
          "throttledError": {
            "$ref": "#/components/schemas/SponsoredProductsThrottledError"
          }
        }
      },
      "OptimizationRulesAPISwaggerAssociateOptimizationRulesResponse": {
        "description": "Response object for creating rules associations.",
        "type": "object",
        "properties": {
          "success": {
            "minItems": 1,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptimizationRulesAPISwaggerAssociateOptimizationRulesResponseSuccessItem"
            }
          },
          "error": {
            "minItems": 1,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptimizationRulesAPISwaggerAssociateOptimizationRulesResponseErrorItem"
            }
          }
        },
        "required": [
          "success",
          "error"
        ]
      },
      "OptimizationRulesAPISwaggerDayOfTheWeek": {
        "description": "Day of the week.",
        "type": "string",
        "enum": [
          "MONDAY",
          "TUESDAY",
          "WEDNESDAY",
          "THURSDAY",
          "FRIDAY",
          "SATURDAY",
          "SUNDAY"
        ],
        "example": "FRIDAY"
      },
      "SponsoredProductsDraftProductAdMutationErrorSelector": {
        "type": "object",
        "properties": {
          "entityStateError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityStateError"
          },
          "missingValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMissingValueError"
          },
          "asinOwnershipError": {
            "$ref": "#/components/schemas/SponsoredProductsAsinOwnershipError"
          },
          "duplicateValueError": {
            "$ref": "#/components/schemas/SponsoredProductsDuplicateValueError"
          },
          "rangeError": {
            "$ref": "#/components/schemas/SponsoredProductsRangeError"
          },
          "otherError": {
            "$ref": "#/components/schemas/SponsoredProductsOtherError"
          },
          "throttledError": {
            "$ref": "#/components/schemas/SponsoredProductsThrottledError"
          },
          "entityNotFoundError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityNotFoundError"
          },
          "malformedValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMalformedValueError"
          },
          "adEligibilityError": {
            "$ref": "#/components/schemas/SponsoredProductsAdEligibilityError"
          },
          "billingError": {
            "$ref": "#/components/schemas/SponsoredProductsBillingError"
          },
          "entityQuotaError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityQuotaError"
          },
          "internalServerError": {
            "$ref": "#/components/schemas/SponsoredProductsInternalServerError"
          }
        }
      },
      "OptimizationRulesAPISwaggerGetAssociatedCampaignsResponse": {
        "description": "Response object for getting campaigns associated with a rule.",
        "type": "object",
        "properties": {
          "associatedCampaigns": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptimizationRulesAPISwaggerSingleCampaignRuleAssociationStatus"
            }
          },
          "code": {
            "description": "An enumerated error code for machine use.",
            "type": "string"
          },
          "nextToken": {
            "description": "To retrieve the next page of results, call the same operation and specify this token in the request. If the nextToken field is empty, there are no further results.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsListSponsoredProductsGlobalProductAdsRequestContent": {
        "type": "object",
        "properties": {
          "maxResults": {
            "format": "int32",
            "description": "Number of records to include in the paginated response. Defaults to max page size for given API",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          },
          "adIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          },
          "includeExtendedDataFields": {
            "description": "Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus",
            "type": "boolean"
          }
        }
      },
      "SponsoredProductsUpdateAllSPTargetsRequestContent": {
        "type": "object",
        "properties": {
          "targets": {
            "minItems": 1,
            "maxItems": 1000,
            "description": "An array of targets.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsUpdateAllTargets"
            }
          }
        },
        "required": [
          "targets"
        ]
      },
      "GlobalExpression": {
        "properties": {
          "countryValues": {
            "$ref": "#/components/schemas/CountryExpressionValuesMap"
          },
          "type": {
            "description": "The targeting expression. The type property specifies the targeting option. Use CLOSE_MATCH to match your auto targeting ads closely to the specified value. Use LOOSE_MATCH to match your auto targeting ads broadly to the specified value. Use SUBSTITUTES to display your auto targeting ads along with substitutable products. Use COMPLEMENTS to display your auto targeting ads along with affiliated products. Use KEYWORD_BROAD_MATCH to broadly match your keyword targeting ads with search queries. Use KEYWORD_EXACT_MATCH to exactly match your keyword targeting ads with search queries. Use KEYWORD_PHRASE_MATCH to match your keyword targeting ads with search phrases. Use PAT_ASIN to target an ASIN that is the same as the ASIN expressed. Use PAT_CATEGORY to target the same category as the category expressed. Use PAT_CATEGORY_REFINEMENT to target all of the category refinements. These refinements allows users to specify a brand, price, rating, age range, genre and prime shipping eligibility.",
            "type": "string",
            "enum": [
              "CLOSE_MATCH",
              "LOOSE_MATCH",
              "SUBSTITUTES",
              "COMPLEMENTS",
              "KEYWORD_BROAD_MATCH",
              "KEYWORD_EXACT_MATCH",
              "KEYWORD_PHRASE_MATCH",
              "PAT_ASIN",
              "PAT_CATEGORY",
              "PAT_CATEGORY_REFINEMENT"
            ]
          }
        },
        "required": [
          "type"
        ]
      },
      "OptimizationRulesAPISwaggerOptimizationRuleError": {
        "description": "Object defining one reason for a failure of a optimization rule operation.",
        "type": "object",
        "properties": {
          "code": {
            "description": "The http status error code for machine use.",
            "type": "string"
          },
          "message": {
            "description": "A human-readable description of the error.",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "OptimizationRulesAPISwaggerDuration": {
        "description": "The duration of an optimization rule.",
        "type": "object",
        "properties": {
          "eventId": {
            "description": "Identifier for the event during which the rule is applied.",
            "type": "string"
          },
          "eventName": {
            "description": "Name of the event during which the rule is applied.",
            "type": "string"
          },
          "startTime": {
            "description": "Time of optimization rule creation in ISO 8061.",
            "type": "string"
          },
          "endTime": {
            "description": "Time of optimization rule completion in ISO 8061.",
            "type": "string"
          }
        },
        "required": [
          "startTime"
        ]
      },
      "GlobalProductAttributeTargetingInternalServerException": {
        "type": "object",
        "properties": {
          "errors": {
            "minItems": 1,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GlobalProductAttributeTargetingErrorModel"
            }
          }
        }
      },
      "SponsoredProductsCreateSponsoredProductsDraftNegativeTargetingClausesResponseContent": {
        "type": "object",
        "properties": {
          "negativeTargetingClauses": {
            "$ref": "#/components/schemas/SponsoredProductsBulkDraftNegativeTargetingClauseOperationResponse"
          }
        },
        "required": [
          "negativeTargetingClauses"
        ]
      },
      "SponsoredProductsUpdateSponsoredProductsDraftCampaignsResponseContent": {
        "type": "object",
        "properties": {
          "campaigns": {
            "$ref": "#/components/schemas/SponsoredProductsBulkDraftCampaignOperationResponse"
          }
        },
        "required": [
          "campaigns"
        ]
      },
      "SuggestedBidValues": {
        "maxItems": 3,
        "type": "array",
        "items": {
          "format": "double",
          "description": "The suggested bid.",
          "type": "number",
          "minimum": 0
        }
      },
      "SponsoredProductsDraftCampaignMutationFailureResponseItem": {
        "type": "object",
        "properties": {
          "index": {
            "format": "int32",
            "description": "the index of the draft in the array from the request body",
            "type": "integer",
            "minimum": 0
          },
          "errors": {
            "description": "A list of validation errors",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftCampaignMutationError"
            }
          }
        },
        "required": [
          "index"
        ]
      },
      "SponsoredProductsDraftNegativeTargetingClauseFailureResponseItem": {
        "type": "object",
        "properties": {
          "index": {
            "format": "int32",
            "description": "the index of the DraftNegativeTargetingClause in the array from the request body",
            "type": "integer",
            "minimum": 0
          },
          "errors": {
            "description": "A list of validation errors",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftNegativeTargetMutationError"
            }
          }
        },
        "required": [
          "index"
        ]
      },
      "KeywordRankedTargetsResponse": {
        "type": "object",
        "properties": {
          "targets": {
            "minItems": 0,
            "maxItems": 200,
            "description": "A list of ranked keyword targets",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeywordTargetResponse"
            }
          }
        }
      },
      "SponsoredProductsCreateSponsoredProductsGlobalKeywordsRequestContent": {
        "type": "object",
        "properties": {
          "keywords": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "An array of keywords.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCreateGlobalKeyword"
            }
          }
        },
        "required": [
          "keywords"
        ]
      },
      "CategoryItemWithAsinCountsLoP": {
        "type": "object",
        "properties": {
          "categoryPath": {
            "description": "The path of the category, which contains the current category and all parent categories",
            "type": "string"
          },
          "name": {
            "description": "The name of the category",
            "type": "string"
          },
          "translatedCategoryPath": {
            "description": "The translated path of the category, which contains the current category and all parent categories.",
            "type": "string"
          },
          "asinCounts": {
            "description": "The number of asins belonging to the category.",
            "$ref": "#/components/schemas/IntegerRange"
          },
          "parentCategoryId": {
            "description": "The category id of the parent node",
            "type": "string"
          },
          "id": {
            "description": "The category id of the current node",
            "type": "string"
          },
          "translatedName": {
            "description": "The translated name of the category.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsCreateTargetPromotionGroupsRequestContent": {
        "description": "Request object for creating a Target Promotion Group.",
        "type": "object",
        "properties": {
          "adIds": {
            "minItems": 1,
            "maxItems": 1000,
            "description": "The list of adIds (optional) of the Ad Group of the Auto-Targeting campaign, that will be part of the Target Promotion Group. If this\n    list is empty, all the Product Ads under the Ad Group will be part of the Target Promotion Group.",
            "type": "array",
            "items": {
              "description": "Entity object identifier",
              "type": "string"
            }
          },
          "existingCampaignDetails": {
            "$ref": "#/components/schemas/SponsoredProductsExistingCampaignDetails"
          },
          "adGroupId": {
            "description": "The adGroupId of the Ad Group of an Auto-Targeting campaign that will be part of the Target Promotion Group.",
            "type": "string"
          },
          "newCampaignDetails": {
            "$ref": "#/components/schemas/SponsoredProductsNewCampaignDetails"
          }
        },
        "required": [
          "adGroupId"
        ]
      },
      "GetCategoryRecommendationsForAsinsRequest": {
        "description": "Request object to retrieve Category Recommendations based on the input ASINs.",
        "type": "object",
        "properties": {
          "asins": {
            "maxItems": 10000,
            "description": "List of input ASINs. This API does not check if the ASINs are valid ASINs.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "includeAncestor": {
            "description": "Enable this if you would like to retrieve categories which are ancestor nodes of the original recommended categories. This may increase the number of categories returned, but decrease the relevancy of those categories.",
            "type": "boolean"
          }
        }
      },
      "SponsoredProductsNewCampaign": {
        "type": "object",
        "properties": {
          "adGroups": {
            "minItems": 1,
            "maxItems": 1,
            "description": "List of ad groups to be created inside the new campaign.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsNewAdGroup"
            }
          },
          "endDate": {
            "format": "date",
            "description": "The end date of the new target promotion group entities. The format of the date is YYYY-MM-DD.",
            "type": "string"
          },
          "campaignName": {
            "description": "The campaign name.",
            "type": "string"
          },
          "dynamicBidding": {
            "$ref": "#/components/schemas/SponsoredProductsNewCampaignDynamicBidding"
          },
          "startDate": {
            "format": "date",
            "description": "The start date of the new target promotion group entities. Default is today's date. The format of the date is YYYY-MM-DD.",
            "type": "string"
          },
          "budget": {
            "$ref": "#/components/schemas/SponsoredProductsNewCampaignBudget"
          },
          "tags": {
            "$ref": "#/components/schemas/SponsoredProductsTags"
          }
        },
        "required": [
          "adGroups",
          "budget",
          "campaignName"
        ]
      },
      "SponsoredProductsCreateSponsoredProductsCampaignsResponseContent": {
        "type": "object",
        "properties": {
          "campaigns": {
            "$ref": "#/components/schemas/SponsoredProductsBulkCampaignOperationResponse"
          }
        },
        "required": [
          "campaigns"
        ]
      },
      "SponsoredProductsUpdateSponsoredProductsKeywordsResponseContent": {
        "type": "object",
        "properties": {
          "keywords": {
            "$ref": "#/components/schemas/SponsoredProductsBulkKeywordOperationResponse"
          }
        },
        "required": [
          "keywords"
        ]
      },
      "SponsoredProductsNewCampaignDynamicBidding": {
        "description": "Specifies bidding controls.",
        "type": "object",
        "properties": {
          "placementBidding": {
            "minItems": 0,
            "maxItems": 3,
            "description": "The product placement.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsNewCampaignPlacementBidding"
            }
          },
          "strategy": {
            "description": "One of LEGACY_FOR_SALES, AUTO_FOR_SALES, MANUAL, RULE_BASED.",
            "type": "string"
          }
        },
        "required": [
          "strategy"
        ]
      },
      "SponsoredProductsCampaignTargetingType": {
        "description": "Targeting type of a campaign.",
        "type": "string",
        "enum": [
          "MANUAL",
          "AUTO"
        ]
      },
      "SponsoredProductsAudienceSegmentType": {
        "description": "This field specifies the type of audience used.\n| Value               | Description|\n|---------------------|------------|\n| `SPONSORED_ADS_AMC` | This type refers to the Audience Segments created in AMC for Sponsored Ads. See [AMC API](https://advertising.amazon.com/API/docs/en-us/amc-rba#tag/Rule-based-audience) for details on how to create AMC Audiences. Once the AMC Audiences are created, the Audience Ids can be retrieved using the Discovery API [ListTargetableEntities](https://advertising.amazon.com/API/docs/en-us/targetable-entities#operation/ListTargetableEntities) with parameters; `adProduct`=`SPONSORED_PRODUCTS`, `targetTypeFilter`=`AUDIENCE` and `pathsFilter` = `[[\"Audience Category\", \"Custom-built\", \"AMC\"]]`. Only the audiences retrieved using these filters are usable.|",
        "type": "string",
        "enum": [
          "SPONSORED_ADS_AMC"
        ]
      },
      "SponsoredProductsNegativeTargetAccessError": {
        "type": "object",
        "properties": {
          "errorType": {
            "description": "The type of the error",
            "type": "string"
          },
          "errorValue": {
            "$ref": "#/components/schemas/SponsoredProductsNegativeTargetAccessErrorSelector"
          }
        },
        "required": [
          "errorType",
          "errorValue"
        ]
      },
      "SponsoredProductsListSponsoredProductsDraftNegativeKeywordsResponseContent": {
        "type": "object",
        "properties": {
          "negativeKeywords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftNegativeKeyword"
            }
          },
          "totalResults": {
            "format": "int64",
            "description": "The total number of entities",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          }
        }
      },
      "SponsoredProductsNegativeTargetErrorItem": {
        "description": "Response object of failed negative target.",
        "type": "object",
        "properties": {
          "errorType": {
            "description": "The type of the error.",
            "type": "string"
          },
          "errorValue": {
            "$ref": "#/components/schemas/SponsoredProductsCreateTargetErrorSelector"
          }
        }
      },
      "SponsoredProductsCreateGlobalTargetingClause": {
        "type": "object",
        "properties": {
          "expression": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "The targeting expression.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsGlobalTargetingExpressionPredicate"
            }
          },
          "campaignId": {
            "description": "The identifier of the campaign to which this target is associated.",
            "type": "string"
          },
          "name": {
            "description": "Name for the targeting clause",
            "type": "string"
          },
          "expressionType": {
            "$ref": "#/components/schemas/SponsoredProductsCreateExpressionType"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateGlobalEntityState"
          },
          "bid": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalBid"
          },
          "adGroupId": {
            "description": "The identifier of the ad group to which this target is associated.",
            "type": "string"
          }
        },
        "required": [
          "adGroupId",
          "campaignId",
          "expression",
          "expressionType",
          "state"
        ]
      },
      "SponsoredProductsGlobalKeywordMarketplaceServingStatusReason": {
        "type": "string",
        "enum": [
          "TARGETING_CLAUSE_STATUS_LIVE_DETAIL",
          "TARGETING_CLAUSE_POLICING_SUSPENDED_DETAIL",
          "TARGETING_CLAUSE_PAUSED_DETAIL",
          "TARGETING_CLAUSE_ARCHIVED_DETAIL",
          "TARGETING_CLAUSE_BLOCKED_DETAIL",
          "AD_GROUP_STATUS_ENABLED_DETAIL",
          "AD_GROUP_PAUSED_DETAIL",
          "AD_GROUP_ARCHIVED_DETAIL",
          "AD_GROUP_INCOMPLETE_DETAIL",
          "AD_GROUP_POLICING_PENDING_REVIEW_DETAIL",
          "AD_GROUP_POLICING_CREATIVE_REJECTED_DETAIL",
          "AD_GROUP_LOW_BID_DETAIL",
          "CAMPAIGN_STATUS_ENABLED_DETAIL",
          "CAMPAIGN_PAUSED_DETAIL",
          "CAMPAIGN_ARCHIVED_DETAIL",
          "PENDING_REVIEW_DETAIL",
          "REJECTED_DETAIL",
          "PENDING_START_DATE_DETAIL",
          "ENDED_DETAIL",
          "CAMPAIGN_OUT_OF_BUDGET_DETAIL",
          "CAMPAIGN_INCOMPLETE_DETAIL",
          "ADVERTISER_POLICING_SUSPENDED_DETAIL",
          "ADVERTISER_POLICING_PENDING_REVIEW_DETAIL",
          "ADVERTISER_ARCHIVED_DETAIL",
          "ADVERTISER_PAUSED_DETAIL",
          "ADVERTISER_OUT_OF_BUDGET_DETAIL",
          "ADVERTISER_PAYMENT_FAILURE_DETAIL"
        ]
      },
      "TargetableCategories": {
        "description": "Response object containing all targetable categories for the advertiser's marketplace. ID is the category ID. NA is the name. CH is the list of child categories. TA is if the category is targetable. AsinCountRange is the AsinCounts of the node. Version 4 adds the number of targetable ASINs to each category.",
        "type": "object",
        "properties": {
          "categoryTree": {
            "type": "string"
          }
        },
        "example": "[{\"id\":2748212011,\"na\":\"Art Paper\",\"ch\":[{\"id\":8090742011,\"na\":\"Palette Paper\",\"ch\":[],\"ta\":true, \"asinCountRange\":{\"min\":11,\"max\":19}},{\"id\":8090734011,\"na\":\"Sketchbooks & Notebooks\",\"ch\":[],\"ta\":true, \"asinCountRange\":{\"min\":3,\"max\":5}}],\"ta\":true,\"asinCountRange\":{\"min\":57,\"max\":84}},{\"id\":12898291,\"na\":\"Tracing Paper\",\"ch\":[],\"ta\":true, \"asinCountRange\":{\"min\":24,\"max\":40}}]"
      },
      "GetSDBudgetRulesForAdvertiserResponse": {
        "type": "object",
        "properties": {
          "budgetRulesForAdvertiserResponse": {
            "minItems": 0,
            "maxItems": 30,
            "description": "A list of rules created by the advertiser.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SDBudgetRule"
            }
          },
          "nextToken": {
            "description": "To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.",
            "type": "string"
          }
        }
      },
      "OptimizationRulesAPISwaggerGetRuleRecommendationsRequest": {
        "description": "Request object for getting rule recommendation. All the filters in the request are used in conjunction with one another.",
        "type": "object",
        "properties": {
          "ruleSubCategoryFilter": {
            "$ref": "#/components/schemas/OptimizationRulesAPISwaggerEntityFieldFilter"
          },
          "recommendationIdFilter": {
            "type": "string"
          },
          "campaignIdListFilter": {
            "minItems": 1,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptimizationRulesAPISwaggerCampaignFilter"
            }
          },
          "maxResults": {
            "type": "number"
          },
          "nextToken": {
            "type": "string"
          },
          "ruleCategoryFilter": {
            "$ref": "#/components/schemas/OptimizationRulesAPISwaggerEntityFieldFilter"
          }
        },
        "required": [
          "ruleCategoryFilter",
          "ruleSubCategoryFilter"
        ]
      },
      "SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent": {
        "type": "object",
        "properties": {
          "campaignIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsReducedObjectIdFilter"
          },
          "campaignNegativeTargetIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          },
          "stateFilter": {
            "$ref": "#/components/schemas/SponsoredProductsEntityStateFilter"
          },
          "maxResults": {
            "format": "int32",
            "description": "Number of records to include in the paginated response. Defaults to max page size for given API",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          },
          "asinFilter": {
            "$ref": "#/components/schemas/SponsoredProductsAsinFilter"
          },
          "includeExtendedDataFields": {
            "description": "Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus",
            "type": "boolean"
          }
        }
      },
      "SponsoredProductsAsinOwnershipErrorReason": {
        "type": "string",
        "enum": [
          "ASIN_NOT_OWNED_BY_AUTHOR"
        ]
      },
      "SponsoredProductsUpdateKeyword": {
        "type": "object",
        "properties": {
          "keywordId": {
            "description": "The identifier of the keyword.",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateEntityState"
          },
          "bid": {
            "nullable": true,
            "format": "double",
            "description": "Bid associated with this keyword. Applicable to biddable match types only. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).",
            "type": "number"
          }
        },
        "required": [
          "keywordId"
        ]
      },
      "BudgetRecommendationResponse": {
        "type": "object",
        "required": [
          "budgetRecommendationsErrorResults",
          "budgetRecommendationsSuccessResults"
        ],
        "properties": {
          "budgetRecommendationsSuccessResults": {
            "description": "List of successful budget recomendation for campagins.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BudgetRecommendationForExistingCampaign"
            }
          },
          "budgetRecommendationsErrorResults": {
            "description": "List of errors that occured when generating bduget recommendation.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BudgetRecommendationError"
            }
          }
        },
        "example": {
          "budgetRecommendationsSuccessResults": [
            {
              "campaignId": "A3REPY26ZX1BSY",
              "suggestedBudget": 3,
              "index": 1,
              "sevenDaysMissedOpportunities": {
                "estimatedMissedSalesLower": 105.5,
                "estimatedMissedSalesUpper": 130.5,
                "endDate": "20200807",
                "estimatedMissedImpressionsLower": 1,
                "estimatedMissedClicksLower": 3,
                "estimatedMissedClicksUpper": 7,
                "estimatedMissedImpressionsUpper": 5,
                "startDate": "20200801",
                "percentTimeInBudget": 80
              }
            },
            {
              "campaignId": "A7X89CAWZZAX89",
              "suggestedBudget": "-1",
              "index": 3,
              "sevenDaysMissedOpportunities": {
                "estimatedMissedSalesLower": 78.5,
                "estimatedMissedSalesUpper": 98.5,
                "endDate": "20200807",
                "estimatedMissedImpressionsLower": 3,
                "estimatedMissedClicksLower": 1,
                "estimatedMissedClicksUpper": 3,
                "estimatedMissedImpressionsUpper": 8,
                "startDate": "20200801",
                "percentTimeInBudget": 65.2
              },
              "budgetRuleRecommendation": {
                "suggestedBudgetIncreasePercent": 5,
                "ruleName": "sample rule",
                "ruleId": "123"
              }
            }
          ],
          "budgetRecommendationsErrorResults": [
            {
              "campaignId": "A1N2ZCAWZZAX89",
              "index": 2,
              "Error": {
                "code": "400",
                "details": "Bad Request."
              }
            }
          ]
        }
      },
      "SponsoredProductsDateErrorReason": {
        "type": "string",
        "enum": [
          "INVALID_DATE",
          "START_DATE_EARLIER_THAN_TODAY",
          "END_DATE_EARLIER_THAN_TODAY",
          "START_DATE_LATER_THAN_MAXIMUM",
          "END_DATE_LATER_THAN_MAXIMUM",
          "START_DATE_AFTER_END_DATE",
          "UPDATING_READ_ONLY_START_DATE",
          "UPDATING_READ_ONLY_END_DATE",
          "UPDATING_ENDED_CAMPAIGN_WITHOUT_EXTENSION"
        ]
      },
      "SponsoredProductsGlobalNegativeKeywordFailureResponseItem": {
        "type": "object",
        "properties": {
          "index": {
            "format": "int32",
            "description": "the index of the negativeKeyword in the array from the request body",
            "type": "integer",
            "minimum": 0
          },
          "errors": {
            "description": "A list of validation errors",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsNegativeKeywordMutationError"
            }
          }
        },
        "required": [
          "index"
        ]
      },
      "Genre": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of Genre. This field is OPTIONAL if the Genre object is being used as an input.",
            "type": "string"
          },
          "id": {
            "description": "Id of Genre. This field is REQUIRED if the Genre object is being used as an input. Use the GetRefinementsForCategory to retrieve Genre Node IDs.",
            "type": "string"
          }
        }
      },
      "SPBudgetRulesRecommendationEventsList": {
        "description": "A list of recommended special events with date range and suggested budget increase.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SPBudgetRulesRecommendationEvent"
        }
      },
      "SpecialEvent": {
        "properties": {
          "budgetModifier": {
            "description": "Deprecated. The factor used to boost the recommended budget.",
            "type": "number"
          },
          "endDate": {
            "description": "The end date of the special event in YYYYMMDD format.",
            "type": "string"
          },
          "dailyBudget": {
            "description": "Recommended daily budget for the new campaign during the special event period.",
            "type": "number"
          },
          "eventKey": {
            "description": "The key of the special event.",
            "type": "string"
          },
          "eventName": {
            "description": "The name of the special event.",
            "type": "string"
          },
          "startDate": {
            "description": "The start date of the special event in YYYYMMDD format.",
            "type": "string"
          },
          "benchmark": {
            "$ref": "#/components/schemas/Benchmark"
          }
        }
      },
      "BiddingStrategy": {
        "description": "The bidding strategy selected for the campaign. Use `LEGACY_FOR_SALES` to lower your bid in real time when your ad may be less likely to convert to a sale. Use `AUTO_FOR_SALES` to increase your bid in real time when your ad may be more likely to convert to a sale or lower your bid when less likely to convert to a sale. Use `MANUAL` to use your exact bid along with any manual adjustments.",
        "type": "string",
        "enum": [
          "LEGACY_FOR_SALES",
          "AUTO_FOR_SALES",
          "MANUAL",
          "RULE_BASED"
        ],
        "example": "AUTO_FOR_SALES"
      },
      "SponsoredProductsUpdateNegativeKeyword": {
        "type": "object",
        "properties": {
          "keywordId": {
            "description": "The identifier of the keyword.",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateEntityState"
          }
        },
        "required": [
          "keywordId"
        ]
      },
      "SponsoredProductsCreateOrUpdateState": {
        "description": "Entity State.\n| State |  description |\n|-----------|------------|\n| `ENABLED` | The entity is enabled. |\n| `PAUSED` | The entity is disabled. |\n| `PROPOSED` | The entity is proposed. (Upcoming Feature) |",
        "type": "string",
        "enum": [
          "ENABLED",
          "PAUSED",
          "PROPOSED"
        ]
      },
      "OptimizationRulesAPISwaggerValueTypeRuleCriteria": {
        "description": "Represents a criteria by comparing with the rule attribute value.",
        "type": "object",
        "properties": {
          "comparisonOperator": {
            "$ref": "#/components/schemas/OptimizationRulesAPISwaggerComparisonOperator"
          },
          "value": {
            "format": "double",
            "type": "number"
          }
        },
        "required": [
          "value",
          "comparisonOperator"
        ]
      },
      "GlobalProductAttributeTargetingErrorModel": {
        "type": "object",
        "required": [
          "code"
        ],
        "properties": {
          "countryCodes": {
            "minItems": 0,
            "maxItems": 50,
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "SponsoredProductsBillingErrorReason": {
        "type": "string",
        "enum": [
          "ADVERTISER_SUSPENDED",
          "BILLING_ACCOUNT_NOT_FOUND",
          "PAYMENT_PROFILE_NOT_FOUND",
          "EXPIRED_PAYMENT_METHOD",
          "VETTING_FAILURE",
          "ADVERTISER_BILLING_SETUP_INCOMPLETE"
        ]
      },
      "SponsoredProductsNegativeTargetMutationErrorSelector": {
        "type": "object",
        "properties": {
          "entityStateError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityStateError"
          },
          "missingValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMissingValueError"
          },
          "duplicateValueError": {
            "$ref": "#/components/schemas/SponsoredProductsDuplicateValueError"
          },
          "rangeError": {
            "$ref": "#/components/schemas/SponsoredProductsRangeError"
          },
          "parentEntityError": {
            "$ref": "#/components/schemas/SponsoredProductsParentEntityError"
          },
          "otherError": {
            "$ref": "#/components/schemas/SponsoredProductsOtherError"
          },
          "throttledError": {
            "$ref": "#/components/schemas/SponsoredProductsThrottledError"
          },
          "entityNotFoundError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityNotFoundError"
          },
          "targetingClauseSetupError": {
            "$ref": "#/components/schemas/SponsoredProductsTargetingClauseSetupError"
          },
          "malformedValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMalformedValueError"
          },
          "billingError": {
            "$ref": "#/components/schemas/SponsoredProductsBillingError"
          },
          "entityQuotaError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityQuotaError"
          },
          "internalServerError": {
            "$ref": "#/components/schemas/SponsoredProductsInternalServerError"
          }
        }
      },
      "GlobalProductAttributeTargetingTooManyRequestsException": {
        "type": "object",
        "properties": {
          "errors": {
            "minItems": 1,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GlobalProductAttributeTargetingErrorModel"
            }
          }
        }
      },
      "SponsoredProductsDeleteSponsoredProductsNegativeKeywordsResponseContent": {
        "type": "object",
        "properties": {
          "negativeKeywords": {
            "$ref": "#/components/schemas/SponsoredProductsBulkNegativeKeywordOperationResponse"
          }
        },
        "required": [
          "negativeKeywords"
        ]
      },
      "GlobalProductRecommendation": {
        "description": "Recommended asin and related information.",
        "type": "object",
        "properties": {
          "themes": {
            "description": "List of themes associated with this recommended ASIN.",
            "type": "array",
            "items": {
              "type": "string",
              "example": "Top Converting ASINs"
            }
          },
          "recommendedAsin": {
            "minLength": 10,
            "description": "Recommended ASIN",
            "type": "string",
            "maxLength": 10,
            "example": "BX20002121"
          }
        }
      },
      "SponsoredProductsCreateSponsoredProductsDraftTargetingClausesRequestContent": {
        "type": "object",
        "properties": {
          "targetingClauses": {
            "minItems": 0,
            "maxItems": 100,
            "description": "An array of draftTargetingClauses.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCreateDraftTargetingClause"
            }
          }
        },
        "required": [
          "targetingClauses"
        ]
      },
      "SponsoredProductsSPKeywordTargetDetails": {
        "type": "object",
        "properties": {
          "nativeLanguageKeyword": {
            "description": "The unlocalized keyword text in the preferred locale of the advertiser.",
            "type": "string"
          },
          "nativeLanguageLocale": {
            "description": "The locale preference of the advertiser. For example, if the advertiser\u2019s preferred language is Simplified Chinese, set the locale to zh_CN. Supported locales include: Simplified Chinese (locale: zh_CN) for US, UK and CA. English (locale: en_GB) for DE, FR, IT and ES.",
            "type": "string"
          },
          "matchType": {
            "$ref": "#/components/schemas/SponsoredProductsKeywordMatchType"
          },
          "keyword": {
            "description": "The keyword text to target.",
            "type": "string"
          }
        },
        "required": [
          "keyword",
          "matchType"
        ]
      },
      "OptimizationRulesAPISwaggerRuleRecurrence": {
        "description": "The recurrence of the optimization rule application.",
        "type": "object",
        "properties": {
          "duration": {
            "$ref": "#/components/schemas/OptimizationRulesAPISwaggerDuration"
          },
          "timesOfDay": {
            "minItems": 0,
            "maxItems": 1,
            "description": "List of times of the day.",
            "type": "array",
            "items": {
              "description": "List of times of the day.",
              "type": "object",
              "properties": {
                "startTime": {
                  "pattern": "^\\d{2}:\\d{2}$",
                  "description": "Time of the day in HH:MM.",
                  "type": "string"
                },
                "endTime": {
                  "pattern": "^\\d{2}:\\d{2}$",
                  "description": "Time of the day in HH:MM.",
                  "type": "string"
                }
              },
              "required": [
                "startTime",
                "endTime"
              ]
            }
          },
          "type": {
            "$ref": "#/components/schemas/OptimizationRulesAPISwaggerRuleRecurrenceType"
          },
          "daysOfWeek": {
            "minItems": 0,
            "maxItems": 7,
            "description": "A list of days of the week.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptimizationRulesAPISwaggerDayOfTheWeek"
            }
          }
        },
        "required": [
          "type",
          "duration"
        ]
      },
      "RuleRecommendation": {
        "type": "object",
        "properties": {
          "performanceMetricsExists": {
            "description": "If true, performance metrics for the campaign are available in performanceMetrics response field.",
            "type": "boolean"
          },
          "campaignId": {
            "$ref": "#/components/schemas/RuleCampaignId"
          },
          "performanceMetrics": {
            "$ref": "#/components/schemas/RuleRecommendationMetrics"
          }
        }
      },
      "Genres": {
        "description": "List of Genres. Use the GetRefinementsForCategory to retrieve Genre Node IDs. Genres are only available for categories related to books.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Genre"
        }
      },
      "SponsoredProductsCreateSponsoredProductsAdGroupsResponseContent": {
        "type": "object",
        "properties": {
          "adGroups": {
            "$ref": "#/components/schemas/SponsoredProductsBulkAdGroupOperationResponse"
          }
        },
        "required": [
          "adGroups"
        ]
      },
      "SponsoredProductsExistingAdGroup": {
        "type": "object",
        "properties": {
          "adGroupId": {
            "description": "The id of the Ad Group.",
            "type": "string"
          }
        },
        "required": [
          "adGroupId"
        ]
      },
      "SponsoredProductsUpdateAllSPTargetsResponseContent": {
        "type": "object",
        "properties": {
          "success": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsAllTargetsSuccessResponseItem"
            }
          },
          "error": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsAllTargetsFailureResponseItem"
            }
          }
        }
      },
      "UnprocessableEntityException": {
        "description": "Returns information about UnprocessableEntityException.",
        "type": "object",
        "properties": {
          "code": {
            "description": "The HTTP status code of the response.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsSchemaValidationExceptionCode": {
        "type": "string",
        "enum": [
          "INVALID_SCHEMA"
        ]
      },
      "SponsoredProductsBadGatewayResponseContent": {
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsErrorCode"
          },
          "message": {
            "type": "string"
          },
          "httpStatusCode": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "SponsoredProductsCurrency": {
        "type": "string",
        "enum": [
          "USD",
          "EUR",
          "GBP",
          "MXN",
          "JPY",
          "INR",
          "PLN",
          "SGD",
          "AUD",
          "CAD",
          "BRL",
          "SEK",
          "TRY",
          "AED",
          "SAR",
          "EGP"
        ]
      },
      "SponsoredProductsGlobalKeywordSuccessResponseItem": {
        "type": "object",
        "properties": {
          "keywordId": {
            "description": "the keyword ID",
            "type": "string"
          },
          "index": {
            "format": "int32",
            "description": "the index of the keyword in the array from the request body",
            "type": "integer",
            "minimum": 0
          },
          "keyword": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalKeyword"
          }
        },
        "required": [
          "index"
        ]
      },
      "SponsoredProductsCreateKeywordTarget": {
        "description": "A keyword target.",
        "type": "object",
        "properties": {
          "matchType": {
            "$ref": "#/components/schemas/SponsoredProductsKeywordMatchType"
          },
          "bid": {
            "format": "double",
            "description": "Bid associated with the target. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).",
            "type": "number",
            "minimum": 0
          },
          "keyword": {
            "description": "The keyword text.",
            "type": "string"
          },
          "addNegativeTargetToSourceAdGroup": {
            "description": "This field defines whether the keyword will be added as a negative keyword to the source AT ad group. If not\n    present, the behavior defined in the parent TPG object will occur.",
            "type": "boolean"
          }
        }
      },
      "SponsoredProductsListSponsoredProductsDraftProductAdsResponseContent": {
        "type": "object",
        "properties": {
          "totalResults": {
            "format": "int64",
            "description": "The total number of entities",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          },
          "productAds": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftProductAd"
            }
          }
        }
      },
      "SponsoredProductsListSponsoredProductsDraftTargetingClausesRequestContent": {
        "type": "object",
        "properties": {
          "campaignIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsReducedObjectIdFilter"
          },
          "expressionTypeFilter": {
            "$ref": "#/components/schemas/SponsoredProductsExpressionTypeFilter"
          },
          "maxResults": {
            "format": "int32",
            "description": "Number of records to include in the paginated response. Defaults to max page size for given API",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          },
          "targetIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          },
          "asinFilter": {
            "$ref": "#/components/schemas/SponsoredProductsAsinFilter"
          },
          "adGroupIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsReducedObjectIdFilter"
          },
          "includeExtendedDataFields": {
            "description": "Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus",
            "type": "boolean"
          }
        }
      },
      "SponsoredProductsDateError": {
        "type": "object",
        "properties": {
          "reason": {
            "$ref": "#/components/schemas/SponsoredProductsDateErrorReason"
          },
          "cause": {
            "$ref": "#/components/schemas/SponsoredProductsErrorCause"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          }
        },
        "required": [
          "message",
          "reason"
        ]
      },
      "Range": {
        "type": "object",
        "properties": {
          "min": {
            "format": "double",
            "type": "number"
          },
          "max": {
            "format": "double",
            "type": "number"
          }
        }
      },
      "SponsoredProductsListSponsoredProductsNegativeTargetingClausesPreviewRequestContent": {
        "type": "object",
        "properties": {
          "negativeTargetIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          },
          "campaignIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsReducedObjectIdFilter"
          },
          "stateFilter": {
            "$ref": "#/components/schemas/SponsoredProductsEntityStateFilter"
          },
          "maxResults": {
            "format": "int32",
            "description": "Number of records to include in the paginated response. Defaults to max page size for given API",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          },
          "asinFilter": {
            "$ref": "#/components/schemas/SponsoredProductsAsinFilter"
          },
          "adGroupIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsReducedObjectIdFilter"
          },
          "includeExtendedDataFields": {
            "description": "Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus",
            "type": "boolean"
          }
        }
      },
      "SponsoredProductsUpdateSponsoredProductsGlobalProductAdsRequestContent": {
        "type": "object",
        "properties": {
          "productAds": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "An array of ads with updated values.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsUpdateGlobalProductAd"
            }
          }
        },
        "required": [
          "productAds"
        ]
      },
      "OptimizationRulesAPISwaggerDisassociateOptimizationRulesFromCampaignResponseSuccessItem": {
        "type": "object",
        "properties": {
          "index": {
            "description": "Index of the optimization rule in the request.",
            "type": "integer"
          },
          "optimizationRuleId": {
            "description": "The id that uniquely identifies the optimization rule that was disassociated.",
            "type": "string"
          }
        },
        "required": [
          "index",
          "optimizationRuleId"
        ]
      },
      "SearchBrandsRequest": {
        "description": "Request object for SearchBrands API.",
        "type": "object",
        "required": [
          "keyword"
        ],
        "properties": {
          "keyword": {
            "type": "string"
          }
        }
      },
      "SponsoredProductsBulkGlobalNegativeTargetingClauseOperationResponse": {
        "type": "object",
        "properties": {
          "success": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsGlobalNegativeTargetingClauseSuccessResponseItem"
            }
          },
          "error": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsGlobalNegativeTargetingClauseFailureResponseItem"
            }
          }
        }
      },
      "SponsoredProductsUpdateSponsoredProductsGlobalNegativeKeywordsResponseContent": {
        "type": "object",
        "properties": {
          "negativeKeywords": {
            "$ref": "#/components/schemas/SponsoredProductsBulkGlobalNegativeKeywordOperationResponse"
          }
        },
        "required": [
          "negativeKeywords"
        ]
      },
      "SponsoredProductsUpdateSponsoredProductsGlobalTargetingClausesRequestContent": {
        "type": "object",
        "properties": {
          "targetingClauses": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "An array of targetingClauses with updated values.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsUpdateGlobalTargetingClause"
            }
          }
        },
        "required": [
          "targetingClauses"
        ]
      },
      "SponsoredProductsGlobalKeywordServingStatus": {
        "type": "object",
        "properties": {
          "statusReasons": {
            "minItems": 0,
            "maxItems": 27,
            "description": "Serving status details of Keyword",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsGlobalKeywordServingStatusReason"
            }
          },
          "marketplaceKeywordServingStatus": {
            "minItems": 1,
            "maxItems": 1000,
            "description": "The marketplace serving statuses.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsMarketplaceLevelKeywordServingStatus"
            }
          },
          "keywordServingStatus": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalEntityServingStatus"
          }
        }
      },
      "SponsoredProductsUpdateAdGroup": {
        "type": "object",
        "properties": {
          "name": {
            "description": "The name of the ad group.",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateEntityState"
          },
          "adGroupId": {
            "description": "The identifier of the keyword.",
            "type": "string"
          },
          "defaultBid": {
            "format": "double",
            "description": "A bid value for use when no bid is specified for keywords in the ad group. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).",
            "type": "number"
          }
        },
        "required": [
          "adGroupId"
        ]
      },
      "SponsoredProductsNegativeKeywordAccessErrorSelector": {
        "type": "object",
        "properties": {
          "entityNotFoundError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityNotFoundError"
          },
          "missingValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMissingValueError"
          },
          "malformedValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMalformedValueError"
          },
          "internalServerError": {
            "$ref": "#/components/schemas/SponsoredProductsInternalServerError"
          },
          "rangeError": {
            "$ref": "#/components/schemas/SponsoredProductsRangeError"
          },
          "otherError": {
            "$ref": "#/components/schemas/SponsoredProductsOtherError"
          },
          "invalidInputError": {
            "$ref": "#/components/schemas/SponsoredProductsInvalidInputError"
          },
          "throttledError": {
            "$ref": "#/components/schemas/SponsoredProductsThrottledError"
          }
        }
      },
      "SponsoredProductsCreateTargetPromotionGroupsV2ResponseContent": {
        "description": "Response object for creating a target promotion group.",
        "type": "object",
        "properties": {
          "targetPromotionGroup": {
            "$ref": "#/components/schemas/SponsoredProductsTargetPromotionGroupV2"
          }
        }
      },
      "SponsoredProductsAdGroupAccessErrorSelector": {
        "type": "object",
        "properties": {
          "entityNotFoundError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityNotFoundError"
          },
          "missingValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMissingValueError"
          },
          "malformedValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMalformedValueError"
          },
          "internalServerError": {
            "$ref": "#/components/schemas/SponsoredProductsInternalServerError"
          },
          "rangeError": {
            "$ref": "#/components/schemas/SponsoredProductsRangeError"
          },
          "otherError": {
            "$ref": "#/components/schemas/SponsoredProductsOtherError"
          },
          "throttledError": {
            "$ref": "#/components/schemas/SponsoredProductsThrottledError"
          },
          "invalidInputError": {
            "$ref": "#/components/schemas/SponsoredProductsInvalidInputError"
          }
        }
      },
      "PerformanceMeasureConditionForSB": {
        "type": "object",
        "required": [
          "comparisonOperator",
          "metricName",
          "threshold"
        ],
        "properties": {
          "metricName": {
            "$ref": "#/components/schemas/PerformanceMetricForSB"
          },
          "comparisonOperator": {
            "$ref": "#/components/schemas/ComparisonOperator"
          },
          "threshold": {
            "format": "double",
            "description": "The performance threshold value.",
            "type": "number"
          }
        }
      },
      "SponsoredProductsCampaignNegativeKeywordMutationExceptionResponseContent": {
        "description": "Exception resulting in mutating campaign management entities",
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsInvalidArgumentErrorCode"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCampaignNegativeKeywordMutationError"
            }
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "SponsoredProductsDraftTargetMutationError": {
        "type": "object",
        "properties": {
          "errorType": {
            "description": "The type of the error",
            "type": "string"
          },
          "errorValue": {
            "$ref": "#/components/schemas/SponsoredProductsDraftTargetMutationErrorSelector"
          }
        },
        "required": [
          "errorType",
          "errorValue"
        ]
      },
      "SponsoredProductsTargetingExpressionPredicate": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/SponsoredProductsTargetingExpressionPredicateType"
          },
          "value": {
            "description": "The expression value",
            "type": "string"
          }
        }
      },
      "SponsoredProductsDeliveryStatus": {
        "description": "DeliveryStatus enum defines if this entity is being used to serve ads.",
        "type": "string",
        "enum": [
          "DELIVERING",
          "NOT_DELIVERING",
          "UNAVAILABLE"
        ]
      },
      "OptimizationRulesAPISwaggerDeleteOptimizationRulesResponseSuccessItem": {
        "type": "object",
        "properties": {
          "index": {
            "description": "Index of the optimization rule in the request.",
            "type": "integer"
          },
          "optimizationRuleId": {
            "description": "The id that uniquely identified the optimization rule that succeeded in deletion.",
            "type": "string"
          }
        },
        "required": [
          "index",
          "optimizationRuleId"
        ]
      },
      "SponsoredProductsCreateOrUpdateMarketplaceState": {
        "type": "object",
        "properties": {
          "marketplace": {
            "$ref": "#/components/schemas/SponsoredProductsMarketplace"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateEntityState"
          }
        },
        "required": [
          "marketplace",
          "state"
        ]
      },
      "SponsoredProductsEntityStateError": {
        "description": "entity state update errors",
        "type": "object",
        "properties": {
          "reason": {
            "$ref": "#/components/schemas/SponsoredProductsEntityStateErrorReason"
          },
          "marketplace": {
            "$ref": "#/components/schemas/SponsoredProductsMarketplace"
          },
          "entityType": {
            "$ref": "#/components/schemas/SponsoredProductsEntityType"
          },
          "cause": {
            "$ref": "#/components/schemas/SponsoredProductsErrorCause"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          }
        },
        "required": [
          "entityType",
          "message",
          "reason"
        ]
      },
      "SponsoredProductsListSponsoredProductsDraftAdGroupsRequestContent": {
        "type": "object",
        "properties": {
          "campaignIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsReducedObjectIdFilter"
          },
          "maxResults": {
            "format": "int32",
            "description": "Number of records to include in the paginated response. Defaults to max page size for given API",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          },
          "adGroupIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          },
          "includeExtendedDataFields": {
            "description": "Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus",
            "type": "boolean"
          },
          "nameFilter": {
            "$ref": "#/components/schemas/SponsoredProductsNameFilter"
          },
          "campaignTargetingTypeFilter": {
            "$ref": "#/components/schemas/SponsoredProductsTargetingType"
          }
        }
      },
      "SponsoredProductsDraftNegativeTargetingClauseExtendedData": {
        "type": "object",
        "properties": {
          "lastUpdateDateTime": {
            "format": "date-time",
            "description": "Last updated date in ISO 8601.",
            "type": "string"
          },
          "servingStatus": {
            "$ref": "#/components/schemas/SponsoredProductsKeywordServingStatus"
          },
          "creationDateTime": {
            "format": "date-time",
            "description": "Creation date in ISO 8601.",
            "type": "string"
          }
        }
      },
      "OptimizationRulesAPISwaggerAssociateOptimizationRulesToCampaignResponse": {
        "description": "Response object for create campaign to optimization rules association.",
        "type": "object",
        "properties": {
          "code": {
            "description": "An enumerated error code for machine use.",
            "type": "string"
          },
          "responses": {
            "minItems": 1,
            "maxItems": 25,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptimizationRulesAPISwaggerSingleOptimizationRuleAssociationResponse"
            }
          }
        }
      },
      "SponsoredProductsInternalServerExceptionResponseContent": {
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsInternalErrorErrorCode"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "SponsoredProductsDeleteSponsoredProductsGlobalCampaignsResponseContent": {
        "type": "object",
        "properties": {
          "campaigns": {
            "$ref": "#/components/schemas/SponsoredProductsBulkGlobalCampaignOperationResponse"
          }
        },
        "required": [
          "campaigns"
        ]
      },
      "BidRecommendationPerTargetingExpression": {
        "type": "object",
        "properties": {
          "bidValues": {
            "maxItems": 3,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BidValue"
            }
          },
          "targetingExpression": {
            "$ref": "#/components/schemas/TargetingExpression"
          }
        },
        "required": [
          "targetingExpression",
          "bidValues"
        ],
        "example": {
          "bidValues": [
            {
              "suggestedBid": "1"
            },
            {
              "suggestedBid": "1.5"
            },
            {
              "suggestedBid": "2"
            }
          ],
          "targetingExpression": {
            "type": "CLOSE_MATCH"
          }
        }
      },
      "SponsoredProductsBulkCampaignOperationResponse": {
        "type": "object",
        "properties": {
          "success": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCampaignMutationSuccessResponseItem"
            }
          },
          "error": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCampaignMutationFailureResponseItem"
            }
          }
        }
      },
      "OptimizationRulesAPISwaggerAssociateOptimizationRulesRequest": {
        "description": "Request body for creating optimization rules associations, in bulk.",
        "type": "object",
        "properties": {
          "associations": {
            "minItems": 1,
            "maxItems": 1000,
            "description": "Pairs of a rule with an advertising entity to associate together.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptimizationRulesAPISwaggerRuleAssociationDefinition"
            }
          }
        },
        "required": [
          "associations"
        ]
      },
      "SponsoredProductsDeleteSponsoredProductsDraftCampaignsRequestContent": {
        "type": "object",
        "properties": {
          "campaignIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          }
        },
        "required": [
          "campaignIdFilter"
        ]
      },
      "SponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent": {
        "type": "object",
        "properties": {
          "campaignNegativeTargetingClauses": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "An array of Campaign Negative TargetingClauses with updated values.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsUpdateCampaignNegativeTargetingClause"
            }
          }
        },
        "required": [
          "campaignNegativeTargetingClauses"
        ]
      },
      "SPBudgetRule": {
        "type": "object",
        "required": [
          "ruleId"
        ],
        "properties": {
          "ruleState": {
            "$ref": "#/components/schemas/state"
          },
          "lastUpdatedDate": {
            "format": "int64",
            "description": "Epoch time of budget rule update. Read-only.",
            "type": "number"
          },
          "createdDate": {
            "format": "int64",
            "description": "Epoch time of budget rule creation. Read-only.",
            "type": "number"
          },
          "ruleDetails": {
            "$ref": "#/components/schemas/SPBudgetRuleDetails"
          },
          "ruleId": {
            "description": "The budget rule identifier.",
            "type": "string"
          },
          "ruleStatus": {
            "description": "The budget rule status. Read-only.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsUnsupportedOperationErrorReason": {
        "type": "string",
        "enum": [
          "UNSUPPORTED_OPERATION"
        ]
      },
      "SPTargetingError": {
        "description": "The Error Response Object.",
        "type": "object",
        "properties": {
          "code": {
            "description": "The HTTP status code of the response.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        }
      },
      "RuleCreationDate": {
        "description": "Time of campaign optimization rule creation in ISO 8061. Read-only.",
        "type": "string"
      },
      "SponsoredProductsListTargetPromotionGroupTargetsRequestContent": {
        "description": "Request object for querying target promotion group targets.",
        "type": "object",
        "properties": {
          "maxResults": {
            "default": 1000,
            "format": "int32",
            "description": "The maximum number of results requested.",
            "maximum": 1000,
            "type": "integer",
            "minimum": 1
          },
          "nextToken": {
            "description": "Token value allowing to navigate to the next or previous response page",
            "type": "string"
          },
          "targetPromotionGroupIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          },
          "adGroupIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          }
        }
      },
      "SPKeywordGroupsException": {
        "description": "Custom Exception message.",
        "type": "object",
        "properties": {
          "requestId": {
            "type": "string",
            "maxLength": 32
          },
          "details": {
            "description": "Human Readable message.",
            "type": "string",
            "maxLength": 64
          },
          "errors": {
            "minItems": 1,
            "maxItems": 25,
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "errorMessage": {
                  "description": "human readable error message for each error.",
                  "type": "string",
                  "maxLength": 255
                },
                "errorCode": {
                  "description": "Error Code. For informational purpose only.",
                  "type": "string",
                  "enum": [
                    "DEPENDENCY_FAILURE",
                    "INTERNAL_ERROR",
                    "INVALID_REQUEST",
                    "NOT_FOUND",
                    "NOT_IMPLEMENTED",
                    "RATE_EXCEEDED",
                    "TIMEOUT",
                    "UNAUTHENTICATED",
                    "UNAUTHORIZED",
                    "UNAVAILABLE",
                    "UNSUPPORTED_MEDIA"
                  ],
                  "maxLength": 24
                },
                "errorId": {
                  "description": "ID to indicate the granular error. Rely only on this to programmatically handle errors.",
                  "type": "integer"
                }
              }
            }
          },
          "httpStatusCode": {
            "description": "http status code.",
            "type": "string",
            "maxLength": 4
          }
        }
      },
      "OptimizationRulesAPISwaggerDeleteOptimizationRulesRequest": {
        "description": "Request body for deleting optimization rules.",
        "type": "object",
        "properties": {
          "optimizationRuleIds": {
            "minItems": 1,
            "maxItems": 100,
            "description": "An array of rule identifiers.",
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "7bf484ff-381c-4703-82ec-66b9eb732705",
              "ed1d58dd-662b-4639-9ee2-85ff1386b946",
              "750fe03c-9884-4a72-a540-3b87521018d9"
            ]
          }
        },
        "required": [
          "optimizationRuleIds"
        ]
      },
      "SponsoredProductsCreateSponsoredProductsDraftAdGroupsResponseContent": {
        "type": "object",
        "properties": {
          "adGroups": {
            "$ref": "#/components/schemas/SponsoredProductsBulkDraftAdGroupOperationResponse"
          }
        },
        "required": [
          "adGroups"
        ]
      },
      "SponsoredProductsKeywordMatchType": {
        "type": "string",
        "enum": [
          "BROAD",
          "PHRASE",
          "EXACT"
        ]
      },
      "SponsoredProductsListSponsoredProductsNegativeKeywordsResponseContent": {
        "type": "object",
        "properties": {
          "negativeKeywords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsNegativeKeyword"
            }
          },
          "totalResults": {
            "format": "int64",
            "description": "The total number of entities",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          }
        }
      },
      "SponsoredProductsTargetingClause": {
        "type": "object",
        "properties": {
          "expression": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "The targeting expression.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsTargetingExpressionPredicate"
            }
          },
          "targetId": {
            "description": "The target identifier",
            "type": "string"
          },
          "resolvedExpression": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "The resolved targeting expression.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsTargetingExpressionPredicate"
            }
          },
          "campaignId": {
            "description": "The identifier of the campaign to which this target is associated.",
            "type": "string"
          },
          "expressionType": {
            "$ref": "#/components/schemas/SponsoredProductsExpressionType"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsEntityState"
          },
          "bid": {
            "format": "double",
            "description": "The bid for ads sourced using the target. Targets that do not have bid values in listTargetingClauses will inherit the defaultBid from the adGroup level. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).",
            "type": "number"
          },
          "adGroupId": {
            "description": "The identifier of the ad group to which this target is associated.",
            "type": "string"
          },
          "extendedData": {
            "$ref": "#/components/schemas/SponsoredProductsTargetingClauseExtendedData"
          }
        },
        "required": [
          "adGroupId",
          "campaignId",
          "expression",
          "expressionType",
          "resolvedExpression",
          "state",
          "targetId"
        ]
      },
      "SponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesResponseContent": {
        "type": "object",
        "properties": {
          "campaignNegativeTargetingClauses": {
            "$ref": "#/components/schemas/SponsoredProductsBulkCampaignNegativeTargetingClauseOperationResponse"
          }
        },
        "required": [
          "campaignNegativeTargetingClauses"
        ]
      },
      "SponsoredProductsDraftCampaignShopperCohortBidding": {
        "type": "object",
        "properties": {
          "shopperCohortType": {
            "$ref": "#/components/schemas/SponsoredProductsShopperCohortType"
          },
          "percentage": {
            "format": "int32",
            "maximum": 900,
            "type": "integer",
            "minimum": 0
          },
          "audienceSegments": {
            "minItems": 1,
            "maxItems": 1,
            "description": "Required when \"AUDIENCE_SEGMENT\" is used for shopperCohortType.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsAudienceSegment"
            }
          }
        },
        "required": [
          "shopperCohortType"
        ]
      },
      "AssociatedCampaign": {
        "type": "object",
        "required": [
          "campaignId",
          "campaignName",
          "ruleStatus"
        ],
        "properties": {
          "campaignId": {
            "description": "The campaign identifier.",
            "type": "string"
          },
          "ruleStatus": {
            "description": "The budget rule evaluation status for this campaign. Read-only.",
            "type": "string"
          },
          "campaignName": {
            "description": "The campaign name.",
            "type": "string"
          }
        }
      },
      "BadRequestException": {
        "description": "Returns information about a BadRequestException.",
        "type": "object",
        "properties": {
          "code": {
            "description": "The HTTP status code of the response.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsUpdateGlobalAdGroup": {
        "type": "object",
        "properties": {
          "applicableMarketplaces": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "description": "The name of the ad group.",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateGlobalEntityState"
          },
          "adGroupId": {
            "description": "The identifier of the keyword.",
            "type": "string"
          },
          "defaultBid": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalBid"
          }
        },
        "required": [
          "adGroupId"
        ]
      },
      "SponsoredProductsUpdateSponsoredProductsGlobalCampaignNegativeKeywordsRequestContent": {
        "type": "object",
        "properties": {
          "campaignNegativeKeywords": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "An array of campaignNegativeKeywords with updated values.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsUpdateGlobalCampaignNegativeKeyword"
            }
          }
        },
        "required": [
          "campaignNegativeKeywords"
        ]
      },
      "SponsoredProductsListSponsoredProductsKeywordsResponseContent": {
        "type": "object",
        "properties": {
          "totalResults": {
            "format": "int64",
            "description": "The total number of entities",
            "type": "integer"
          },
          "keywords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsKeyword"
            }
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          }
        }
      },
      "SponsoredProductsListSponsoredProductsGlobalCampaignNegativeKeywordsResponseContent": {
        "type": "object",
        "properties": {
          "totalResults": {
            "format": "int64",
            "description": "The total number of entities",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          },
          "campaignNegativeKeywords": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsGlobalCampaignNegativeKeyword"
            }
          }
        }
      },
      "SponsoredProductsTargetingClauseSetupError": {
        "description": "Errors related to targeting clause setup",
        "type": "object",
        "properties": {
          "reason": {
            "$ref": "#/components/schemas/SponsoredProductsTargetingClauseSetupErrorReason"
          },
          "marketplace": {
            "$ref": "#/components/schemas/SponsoredProductsMarketplace"
          },
          "cause": {
            "$ref": "#/components/schemas/SponsoredProductsErrorCause"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          }
        },
        "required": [
          "message",
          "reason"
        ]
      },
      "SponsoredProductsThrottlingExceptionCode": {
        "type": "string",
        "enum": [
          "THROTTLED"
        ]
      },
      "SponsoredProductsUpdateSponsoredProductsGlobalNegativeTargetingClausesResponseContent": {
        "type": "object",
        "properties": {
          "negativeTargetingClauses": {
            "$ref": "#/components/schemas/SponsoredProductsBulkGlobalNegativeTargetingClauseOperationResponse"
          }
        },
        "required": [
          "negativeTargetingClauses"
        ]
      },
      "SponsoredProductsCampaignMutationErrorSelector": {
        "type": "object",
        "properties": {
          "entityStateError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityStateError"
          },
          "missingValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMissingValueError"
          },
          "dateError": {
            "$ref": "#/components/schemas/SponsoredProductsDateError"
          },
          "biddingError": {
            "$ref": "#/components/schemas/SponsoredProductsBiddingError"
          },
          "duplicateValueError": {
            "$ref": "#/components/schemas/SponsoredProductsDuplicateValueError"
          },
          "rangeError": {
            "$ref": "#/components/schemas/SponsoredProductsRangeError"
          },
          "parentEntityError": {
            "$ref": "#/components/schemas/SponsoredProductsParentEntityError"
          },
          "otherError": {
            "$ref": "#/components/schemas/SponsoredProductsOtherError"
          },
          "throttledError": {
            "$ref": "#/components/schemas/SponsoredProductsThrottledError"
          },
          "entityNotFoundError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityNotFoundError"
          },
          "malformedValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMalformedValueError"
          },
          "budgetError": {
            "$ref": "#/components/schemas/SponsoredProductsBudgetError"
          },
          "currencyError": {
            "$ref": "#/components/schemas/SponsoredProductsCurrencyError"
          },
          "billingError": {
            "$ref": "#/components/schemas/SponsoredProductsBillingError"
          },
          "entityQuotaError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityQuotaError"
          },
          "internalServerError": {
            "$ref": "#/components/schemas/SponsoredProductsInternalServerError"
          }
        }
      },
      "OptimizationRulesAPISwaggerSearchOptimizationRuleAssociationsResponseItem": {
        "type": "object",
        "properties": {
          "entityType": {
            "$ref": "#/components/schemas/OptimizationRulesAPISwaggerEntityType"
          },
          "entityName": {
            "description": "The name of the advertising entity in the association.",
            "type": "string"
          },
          "entityId": {
            "description": "The id that uniquely identifies the advertising entity in the association.",
            "type": "string"
          },
          "optimizationRuleId": {
            "description": "The id that uniquely identifies the optimization rule in the association.",
            "type": "integer"
          }
        },
        "required": [
          "entityName",
          "entityId",
          "entityType",
          "optimizationRuleId"
        ]
      },
      "SponsoredProductsTargetingType": {
        "type": "string",
        "enum": [
          "AUTO",
          "MANUAL"
        ]
      },
      "SponsoredProductsDraftTargetingClauseExtendedData": {
        "type": "object",
        "properties": {
          "lastUpdateDateTime": {
            "format": "date-time",
            "description": "Last updated date in ISO 8601.",
            "type": "string"
          },
          "servingStatus": {
            "$ref": "#/components/schemas/SponsoredProductsKeywordServingStatus"
          },
          "creationDateTime": {
            "format": "date-time",
            "description": "Creation date in ISO 8601.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsKeywordTextMarketplaceSettings": {
        "type": "object",
        "properties": {
          "marketplace": {
            "$ref": "#/components/schemas/SponsoredProductsMarketplace"
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "value"
        ]
      },
      "SponsoredProductsCreateTargetPromotionGroupTargetsV2RequestContent": {
        "description": "Request object for creating target promotion group targets in a target promotion group.",
        "type": "object",
        "properties": {
          "targetPromotionGroupId": {
            "description": "The id of the target promotion group where the targets are being added.",
            "type": "string"
          },
          "targets": {
            "minItems": 1,
            "maxItems": 1000,
            "description": "List of targets to be added to the target promotion group.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCreateTargetRequestV2"
            }
          }
        },
        "required": [
          "targetPromotionGroupId"
        ]
      },
      "SponsoredProductsListSponsoredProductsDraftCampaignNegativeKeywordsRequestContent": {
        "type": "object",
        "properties": {
          "campaignIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsReducedObjectIdFilter"
          },
          "campaignNegativeKeywordIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          },
          "maxResults": {
            "format": "int32",
            "description": "Number of records to include in the paginated response. Defaults to max page size for given API",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          },
          "includeExtendedDataFields": {
            "description": "Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus",
            "type": "boolean"
          },
          "campaignNegativeKeywordTextFilter": {
            "$ref": "#/components/schemas/SponsoredProductsKeywordTextFilter"
          },
          "matchTypeFilter": {
            "$ref": "#/components/schemas/SponsoredProductsNegativeMatchType"
          }
        }
      },
      "SponsoredProductsCreateCampaign": {
        "type": "object",
        "properties": {
          "portfolioId": {
            "description": "The identifier of an existing portfolio to which the campaign is associated.",
            "type": "string"
          },
          "offAmazonSettings": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateOffAmazonSettings"
          },
          "endDate": {
            "nullable": true,
            "format": "date",
            "description": "The format of the date is YYYY-MM-DD.",
            "type": "string"
          },
          "name": {
            "description": "The name of the campaign.",
            "type": "string"
          },
          "targetingType": {
            "$ref": "#/components/schemas/SponsoredProductsTargetingType"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateEntityState"
          },
          "dynamicBidding": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateDynamicBidding"
          },
          "startDate": {
            "format": "date",
            "description": "Default: today's date. The format of the date is YYYY-MM-DD.",
            "type": "string"
          },
          "budget": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateBudget"
          },
          "tags": {
            "$ref": "#/components/schemas/SponsoredProductsTags"
          }
        },
        "required": [
          "budget",
          "name",
          "state",
          "targetingType"
        ]
      },
      "OptimizationRulesAPISwaggerUpdateOptimizationRulesResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OptimizationRulesAPISwaggerOptimizationRulesResponse"
          }
        ],
        "description": "Response object for UpdateOptimizationRules API.",
        "type": "object"
      },
      "SponsoredProductsDraftCampaignMutationSuccessResponseItem": {
        "type": "object",
        "properties": {
          "campaignId": {
            "description": "the draft ID",
            "type": "string"
          },
          "index": {
            "format": "int32",
            "description": "the index of the draft in the array from the request body",
            "type": "integer",
            "minimum": 0
          },
          "campaign": {
            "$ref": "#/components/schemas/SponsoredProductsDraftCampaign"
          }
        },
        "required": [
          "index"
        ]
      },
      "SponsoredProductsNegativeKeyword": {
        "type": "object",
        "properties": {
          "keywordId": {
            "description": "The identifier of the keyword.",
            "type": "string"
          },
          "nativeLanguageKeyword": {
            "description": "The unlocalized keyword text in the preferred locale of the advertiser",
            "type": "string"
          },
          "nativeLanguageLocale": {
            "description": "The locale preference of the advertiser.",
            "type": "string"
          },
          "campaignId": {
            "description": "The identifier of the campaign to which the keyword is associated.",
            "type": "string"
          },
          "matchType": {
            "$ref": "#/components/schemas/SponsoredProductsNegativeMatchType"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsEntityState"
          },
          "adGroupId": {
            "description": "The identifier of the ad group to which this keyword is associated.",
            "type": "string"
          },
          "keywordText": {
            "description": "The keyword text.",
            "type": "string"
          },
          "extendedData": {
            "$ref": "#/components/schemas/SponsoredProductsNegativeKeywordExtendedData"
          }
        },
        "required": [
          "adGroupId",
          "campaignId",
          "keywordId",
          "keywordText",
          "matchType",
          "state"
        ]
      },
      "SponsoredProductsDraftNegativeKeywordSuccessResponseItem": {
        "type": "object",
        "properties": {
          "index": {
            "format": "int32",
            "description": "the index of the negativeKeyword in the array from the request body",
            "type": "integer",
            "minimum": 0
          },
          "negativeKeyword": {
            "$ref": "#/components/schemas/SponsoredProductsDraftNegativeKeyword"
          },
          "negativeKeywordId": {
            "description": "the negativeKeyword ID",
            "type": "string"
          }
        },
        "required": [
          "index"
        ]
      },
      "SponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent": {
        "type": "object",
        "properties": {
          "campaignNegativeKeywords": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "An array of campaignNegativeKeywords with updated values.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsUpdateCampaignNegativeKeyword"
            }
          }
        },
        "required": [
          "campaignNegativeKeywords"
        ]
      },
      "SponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent": {
        "type": "object",
        "properties": {
          "targetingClauses": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "An array of targetingClauses.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCreateTargetingClause"
            }
          }
        },
        "required": [
          "targetingClauses"
        ]
      },
      "SponsoredProductsGlobalNegativeKeywordSuccessResponseItem": {
        "type": "object",
        "properties": {
          "index": {
            "format": "int32",
            "description": "the index of the negativeKeyword in the array from the request body",
            "type": "integer",
            "minimum": 0
          },
          "negativeKeyword": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalNegativeKeyword"
          },
          "negativeKeywordId": {
            "description": "the negativeKeyword ID",
            "type": "string"
          }
        },
        "required": [
          "index"
        ]
      },
      "Refinements": {
        "description": "Response object for the GetRefinementsForCategory API, containing information on Brand Nodes, Age Range Nodes, and Genre Nodes.",
        "type": "object",
        "properties": {
          "ageRanges": {
            "$ref": "#/components/schemas/AgeRanges"
          },
          "brands": {
            "$ref": "#/components/schemas/Brands"
          },
          "genres": {
            "$ref": "#/components/schemas/Genres"
          }
        }
      },
      "SponsoredProductsCreateOrUpdateTargetDetails": {
        "type": "object",
        "properties": {
          "keywordTarget": {
            "$ref": "#/components/schemas/SponsoredProductsSPKeywordTargetDetails"
          },
          "productCategoryTarget": {
            "$ref": "#/components/schemas/SponsoredProductsSPProductCategoryTargetDetails"
          },
          "productTarget": {
            "$ref": "#/components/schemas/SponsoredProductsSPProductTargetDetails"
          }
        }
      },
      "SponsoredProductsDraftCampaignNegativeKeywordMutationError": {
        "type": "object",
        "properties": {
          "errorType": {
            "description": "The type of the error",
            "type": "string"
          },
          "errorValue": {
            "$ref": "#/components/schemas/SponsoredProductsDraftCampaignNegativeKeywordMutationErrorSelector"
          }
        },
        "required": [
          "errorType",
          "errorValue"
        ]
      },
      "SponsoredProductsGlobalNegativeTargetingClauseSuccessResponseItem": {
        "type": "object",
        "properties": {
          "targetId": {
            "description": "the NegativeTargetingClause ID",
            "type": "string"
          },
          "index": {
            "format": "int32",
            "description": "the index of the NegativeTargetingClause in the array from the request body",
            "type": "integer",
            "minimum": 0
          },
          "negativeTargetingClause": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalNegativeTargetingClause"
          }
        },
        "required": [
          "index"
        ]
      },
      "GlobalBrands": {
        "description": "List of Brands for the countries provided in the request.",
        "type": "object",
        "properties": {
          "countryBrands": {
            "description": "Map containing Brands for countries passed in the request.",
            "additionalProperties": {
              "description": "List of Brands.",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Brand"
              }
            },
            "type": "object"
          },
          "errors": {
            "description": "List of errors encountered while processing the response.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GlobalProductAttributeTargetingErrorModel"
            }
          }
        }
      },
      "SponsoredProductsUnauthenticatedExceptionCode": {
        "type": "string",
        "enum": [
          "UNAUTHENTICATED"
        ]
      },
      "timeOfDay": {
        "type": "object",
        "properties": {
          "startTime": {
            "description": "The start time of intra-day budget rule window in the format 'hh:mm:ss' ",
            "type": "string"
          },
          "endTime": {
            "description": "The end time of intra-day budget rule window in the format 'hh:mm:ss'. Required to be greater than start-time. ",
            "type": "string"
          }
        }
      },
      "CampaignRecommendation": {
        "description": "This object contains a set of recommendations for a campaign across bid, budget, targeting.",
        "type": "object",
        "properties": {
          "sevenDaysEstimatedOpportunities": {
            "$ref": "#/components/schemas/SevenDaysEstimatedOpportunities"
          },
          "biddingStrategyRecommendation": {
            "$ref": "#/components/schemas/BiddingStrategyRecommendation"
          },
          "campaignId": {
            "description": "The identifier of the campaign.",
            "type": "string"
          },
          "keywordTargetingRecommendations": {
            "minItems": 0,
            "maxItems": 50,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeywordTargetingRecommendation"
            }
          },
          "budgetRecommendation": {
            "$ref": "#/components/schemas/BudgetRecommendation"
          },
          "targetingGroupBidRecommendations": {
            "minItems": 0,
            "maxItems": 50,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TargetingGroupBidRecommendation"
            }
          }
        }
      },
      "SPCampaignOptimizationNotificationAPIResponse": {
        "type": "object",
        "properties": {
          "CampaignOptimizationRecommendationsError": {
            "maxItems": 100,
            "description": "List of errors that occured when generating campaign optimization notifications.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuleNotificationError"
            }
          },
          "CampaignOptimizationNotifications": {
            "maxItems": 100,
            "description": "List of successful campaign optimization notifications for campaigns.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuleNotification"
            }
          }
        }
      },
      "SponsoredProductsBiddingStrategy": {
        "description": "The bidding strategy.\n| Value | Strategy name | Description |\n|----------------|---------------|-------------|\n| `LEGACY_FOR_SALES` | Dynamic bids - down only | Lowers your bids in real time when your ad may be less likely to convert to a sale. Campaigns created before the release of the bidding controls feature used this setting by default. |\n| `AUTO_FOR_SALES` | Dynamic bids - up and down | Increases or decreases your bids in real time by a maximum of 100%. With this setting bids increase when your ad is more likely to convert to a sale, and bids decrease when less likely to convert to a sale. |\n| `MANUAL` | Fixed bid | Uses your exact bid and any placement adjustments you set, and is not subject to dynamic bidding. |\n| `RULE_BASED` | Rule based bidding | See Rule based bidding documentation https://advertising.amazon.com/API/docs/en-us/sponsored-products/rule-based-bidding/overview |",
        "type": "string",
        "enum": [
          "LEGACY_FOR_SALES",
          "AUTO_FOR_SALES",
          "MANUAL",
          "RULE_BASED",
          "OTHER"
        ]
      },
      "RefinementsLoP": {
        "description": "Response object for the POST /sp/targets/category/{categoryId}/refinements endpoint, containing information on Brand Nodes, Age Range Nodes, and Genre Nodes.",
        "type": "object",
        "properties": {
          "ageRanges": {
            "$ref": "#/components/schemas/AgeRangesLoP"
          },
          "brands": {
            "$ref": "#/components/schemas/BrandsLoP"
          },
          "genres": {
            "$ref": "#/components/schemas/GenresLoP"
          }
        }
      },
      "SPGetAllRuleEventRequest": {
        "type": "object",
        "properties": {}
      },
      "SponsoredProductsCopyCampaignErrorDetail": {
        "type": "object",
        "properties": {
          "code": {
            "description": "An enumerated success or error code for machine use",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the error, if unsuccessful",
            "type": "string"
          }
        }
      },
      "SponsoredProductsDraftKeywordMutationErrorSelector": {
        "type": "object",
        "properties": {
          "entityStateError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityStateError"
          },
          "missingValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMissingValueError"
          },
          "biddingError": {
            "$ref": "#/components/schemas/SponsoredProductsBiddingError"
          },
          "duplicateValueError": {
            "$ref": "#/components/schemas/SponsoredProductsDuplicateValueError"
          },
          "rangeError": {
            "$ref": "#/components/schemas/SponsoredProductsRangeError"
          },
          "otherError": {
            "$ref": "#/components/schemas/SponsoredProductsOtherError"
          },
          "throttledError": {
            "$ref": "#/components/schemas/SponsoredProductsThrottledError"
          },
          "entityNotFoundError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityNotFoundError"
          },
          "localeError": {
            "$ref": "#/components/schemas/SponsoredProductsLocaleError"
          },
          "malformedValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMalformedValueError"
          },
          "billingError": {
            "$ref": "#/components/schemas/SponsoredProductsBillingError"
          },
          "entityQuotaError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityQuotaError"
          },
          "internalServerError": {
            "$ref": "#/components/schemas/SponsoredProductsInternalServerError"
          }
        }
      },
      "SponsoredProductsGlobalAdGroupMarketplaceServingReason": {
        "type": "string",
        "enum": [
          "AD_GROUP_STATUS_ENABLED_DETAIL",
          "AD_GROUP_PAUSED_DETAIL",
          "AD_GROUP_ARCHIVED_DETAIL",
          "AD_GROUP_INCOMPLETE_DETAIL",
          "AD_GROUP_POLICING_PENDING_REVIEW_DETAIL",
          "AD_GROUP_POLICING_CREATIVE_REJECTED_DETAIL",
          "AD_GROUP_LOW_BID_DETAIL",
          "CAMPAIGN_STATUS_ENABLED_DETAIL",
          "CAMPAIGN_PAUSED_DETAIL",
          "CAMPAIGN_ARCHIVED_DETAIL",
          "PENDING_REVIEW_DETAIL",
          "REJECTED_DETAIL",
          "PENDING_START_DATE_DETAIL",
          "ENDED_DETAIL",
          "CAMPAIGN_OUT_OF_BUDGET_DETAIL",
          "CAMPAIGN_INCOMPLETE_DETAIL",
          "ADVERTISER_POLICING_SUSPENDED_DETAIL",
          "ADVERTISER_POLICING_PENDING_REVIEW_DETAIL",
          "ADVERTISER_ARCHIVED_DETAIL",
          "ADVERTISER_PAUSED_DETAIL",
          "ADVERTISER_OUT_OF_BUDGET_DETAIL",
          "ADVERTISER_PAYMENT_FAILURE_DETAIL",
          "ADVERTISER_STATUS_ENABLED_DETAIL"
        ]
      },
      "SponsoredProductsDraftAdGroup": {
        "type": "object",
        "properties": {
          "campaignId": {
            "description": "The identifier of the campaign to which the keyword is associated.",
            "type": "string"
          },
          "name": {
            "description": "The name of the ad group.",
            "type": "string"
          },
          "adGroupId": {
            "description": "The identifier of the keyword.",
            "type": "string"
          },
          "defaultBid": {
            "format": "double",
            "description": "A bid value for use when no bid is specified for keywords in the ad group. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).",
            "type": "number"
          },
          "extendedData": {
            "$ref": "#/components/schemas/SponsoredProductsDraftAdGroupExtendedData"
          }
        },
        "required": [
          "adGroupId",
          "campaignId",
          "defaultBid",
          "name"
        ]
      },
      "SponsoredProductsEntityState": {
        "description": "The current resource state.\n| State | Description |\n| --- | --- |\n| `ENABLED` | Enabled State |\n| `PAUSED` | Paused State |\n| `PROPOSED` | Proposed State (Upcoming Feature) |\n| `ARCHIVED` | ARCHIVED State |\n| `ENABLING` | State for Draft Entity Only |\n| `USER_DELETED` | State for Draft Entity Only |\n| `OTHER` | Read Only |",
        "type": "string",
        "enum": [
          "ENABLED",
          "PAUSED",
          "PROPOSED",
          "ARCHIVED",
          "ENABLING",
          "USER_DELETED",
          "OTHER"
        ]
      },
      "SponsoredProductsProductAd": {
        "type": "object",
        "properties": {
          "globalStoreSetting": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalStoreSetting"
          },
          "adId": {
            "description": "The product ad identifier.",
            "type": "string"
          },
          "campaignId": {
            "description": "The campaign identifier.",
            "type": "string"
          },
          "customText": {
            "description": "The custom text that is associated with this ad. Defined for custom text ads only.",
            "type": "string"
          },
          "asin": {
            "description": "The ASIN associated with the product. Defined for vendors only.",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsEntityState"
          },
          "sku": {
            "description": "The SKU associated with the product. Defined for seller accounts only.",
            "type": "string"
          },
          "adGroupId": {
            "description": "The ad group identifier.",
            "type": "string"
          },
          "extendedData": {
            "$ref": "#/components/schemas/SponsoredProductsProductAdExtendedData"
          }
        },
        "required": [
          "adGroupId",
          "adId",
          "campaignId",
          "state"
        ]
      },
      "OptimizationRulesAPISwaggerRuleCriteria": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/OptimizationRulesAPISwaggerRangeTypeRuleCriteria"
          },
          {
            "$ref": "#/components/schemas/OptimizationRulesAPISwaggerValueTypeRuleCriteria"
          }
        ]
      },
      "RuleDuration": {
        "type": "object",
        "properties": {
          "eventTypeRuleDuration": {
            "$ref": "#/components/schemas/EventTypeRuleDuration"
          },
          "dateRangeTypeRuleDuration": {
            "$ref": "#/components/schemas/DateRangeTypeRuleDuration"
          }
        }
      },
      "SponsoredProductsListSponsoredProductsDraftKeywordsResponseContent": {
        "type": "object",
        "properties": {
          "totalResults": {
            "format": "int64",
            "description": "The total number of entities",
            "type": "integer"
          },
          "keywords": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftKeyword"
            }
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          }
        }
      },
      "SponsoredProductsNegativeKeywordExtendedData": {
        "type": "object",
        "properties": {
          "lastUpdateDateTime": {
            "format": "date-time",
            "description": "Last updated date in ISO 8601.",
            "type": "string"
          },
          "servingStatus": {
            "$ref": "#/components/schemas/SponsoredProductsKeywordServingStatus"
          },
          "servingStatusDetails": {
            "description": "The serving status reasons of the Keyword",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsKeywordServingStatusDetail"
            }
          },
          "creationDateTime": {
            "format": "date-time",
            "description": "Creation date in ISO 8601.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsCreateCampaignNegativeKeyword": {
        "type": "object",
        "properties": {
          "campaignId": {
            "description": "The identifier of the campaign to which the keyword is associated.",
            "type": "string"
          },
          "matchType": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateNegativeMatchType"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateEntityState"
          },
          "keywordText": {
            "description": "The keyword text.",
            "type": "string"
          }
        },
        "required": [
          "campaignId",
          "keywordText",
          "matchType",
          "state"
        ]
      },
      "OptimizationRulesAPISwaggerSingleOptimizationRuleAssociationResponse": {
        "description": "Response object for operations involving associating a single optimization rule.",
        "type": "object",
        "properties": {
          "code": {
            "description": "An enumerated success or error code for machine use.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the error, if unsuccessful.",
            "type": "string"
          },
          "optimizationRuleId": {
            "description": "The rule identifier.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsCreateTargetPromotionGroupsInternalResponseContent": {
        "description": "Response object for creating a target promotion group.",
        "type": "object",
        "properties": {
          "targetPromotionGroup": {
            "$ref": "#/components/schemas/SponsoredProductsTargetPromotionGroup"
          }
        }
      },
      "SponsoredProductsListSponsoredProductsGlobalTargetingClausesRequestContent": {
        "type": "object",
        "properties": {
          "maxResults": {
            "format": "int32",
            "description": "Number of records to include in the paginated response. Defaults to max page size for given API",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          },
          "targetIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          },
          "includeExtendedDataFields": {
            "description": "Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus",
            "type": "boolean"
          }
        }
      },
      "SponsoredProductsUnsupportedMediaTypeErrorCode": {
        "type": "string",
        "enum": [
          "UNSUPPORTED_MEDIA_TYPE"
        ]
      },
      "SponsoredProductsKeywordAccessExceptionResponseContent": {
        "description": "Exception resulting in accessing campaign management entities",
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsInvalidArgumentErrorCode"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsKeywordAccessError"
            }
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "SponsoredProductsLocaleError": {
        "type": "object",
        "properties": {
          "reason": {
            "$ref": "#/components/schemas/SponsoredProductsLocaleErrorReason"
          },
          "cause": {
            "$ref": "#/components/schemas/SponsoredProductsErrorCause"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          }
        },
        "required": [
          "message",
          "reason"
        ]
      },
      "SponsoredProductsDraftCampaignPromotionErrorSelector": {
        "type": "object",
        "properties": {
          "entityStateError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityStateError"
          },
          "missingValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMissingValueError"
          },
          "dateError": {
            "$ref": "#/components/schemas/SponsoredProductsDateError"
          },
          "biddingError": {
            "$ref": "#/components/schemas/SponsoredProductsBiddingError"
          },
          "duplicateValueError": {
            "$ref": "#/components/schemas/SponsoredProductsDuplicateValueError"
          },
          "rangeError": {
            "$ref": "#/components/schemas/SponsoredProductsRangeError"
          },
          "otherError": {
            "$ref": "#/components/schemas/SponsoredProductsOtherError"
          },
          "throttledError": {
            "$ref": "#/components/schemas/SponsoredProductsThrottledError"
          },
          "entityNotFoundError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityNotFoundError"
          },
          "malformedValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMalformedValueError"
          },
          "budgetError": {
            "$ref": "#/components/schemas/SponsoredProductsBudgetError"
          },
          "billingError": {
            "$ref": "#/components/schemas/SponsoredProductsBillingError"
          },
          "entityQuotaError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityQuotaError"
          },
          "internalServerError": {
            "$ref": "#/components/schemas/SponsoredProductsInternalServerError"
          }
        }
      },
      "SponsoredProductsUpdateSponsoredProductsGlobalNegativeKeywordsRequestContent": {
        "type": "object",
        "properties": {
          "negativeKeywords": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "An array of negativeKeywords with updated values.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsUpdateGlobalNegativeKeyword"
            }
          }
        },
        "required": [
          "negativeKeywords"
        ]
      },
      "SponsoredProductsEntityStateErrorReason": {
        "type": "string",
        "enum": [
          "INVALID_TARGET_STATE",
          "PARENT_ENTITY_FORBIDS_CREATION",
          "MARKETPLACE_STATE_CANNOT_BE_ARCHIVED",
          "AUTO_TARGETING_CLAUSE_CANNOT_BE_ARCHIVED_MANUALLY",
          "ARCHIVED_ENTITY_CANNOT_BE_MODIFIED",
          "PARENT_ARCHIVED_FORBIDS_UPDATES",
          "PARENT_STATUS_FORBIDS_UPDATES_AND_CREATES"
        ]
      },
      "SponsoredProductsDynamicBidding": {
        "type": "object",
        "properties": {
          "shopperCohortBidding": {
            "minItems": 0,
            "maxItems": 1,
            "description": "Specifies Shopper Cohorts based bid adjustment controls. `shopperCohortBidding` is optional for both Create and Update requests.\nYou can enable this control to adjust your bid based on the shopper cohorts. The percentage value set is the percentage of the original bid including any other bid adjustments such as `placementBidding`. For example, a `placementBidding` with 50% adjustment on a $1.00 bid would increase the bid to $1.50, and a `shopperCohortBidding` with 100% adjustment would further increase the bid to $3.00.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsShopperCohortBidding"
            }
          },
          "placementBidding": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsPlacementBidding"
            }
          },
          "strategy": {
            "$ref": "#/components/schemas/SponsoredProductsBiddingStrategy"
          }
        },
        "required": [
          "strategy"
        ]
      },
      "SponsoredProductsNegativeKeywordMutationError": {
        "type": "object",
        "properties": {
          "errorType": {
            "description": "The type of the error",
            "type": "string"
          },
          "errorValue": {
            "$ref": "#/components/schemas/SponsoredProductsNegativeKeywordMutationErrorSelector"
          }
        },
        "required": [
          "errorType",
          "errorValue"
        ]
      },
      "SponsoredProductsTargetMutationErrorSelector": {
        "type": "object",
        "properties": {
          "entityStateError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityStateError"
          },
          "missingValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMissingValueError"
          },
          "biddingError": {
            "$ref": "#/components/schemas/SponsoredProductsBiddingError"
          },
          "duplicateValueError": {
            "$ref": "#/components/schemas/SponsoredProductsDuplicateValueError"
          },
          "rangeError": {
            "$ref": "#/components/schemas/SponsoredProductsRangeError"
          },
          "parentEntityError": {
            "$ref": "#/components/schemas/SponsoredProductsParentEntityError"
          },
          "otherError": {
            "$ref": "#/components/schemas/SponsoredProductsOtherError"
          },
          "expressionTypeError": {
            "$ref": "#/components/schemas/SponsoredProductsExpressionTypeError"
          },
          "throttledError": {
            "$ref": "#/components/schemas/SponsoredProductsThrottledError"
          },
          "entityNotFoundError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityNotFoundError"
          },
          "targetingClauseSetupError": {
            "$ref": "#/components/schemas/SponsoredProductsTargetingClauseSetupError"
          },
          "malformedValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMalformedValueError"
          },
          "billingError": {
            "$ref": "#/components/schemas/SponsoredProductsBillingError"
          },
          "entityQuotaError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityQuotaError"
          },
          "internalServerError": {
            "$ref": "#/components/schemas/SponsoredProductsInternalServerError"
          }
        }
      },
      "SponsoredProductsListSponsoredProductsGlobalNegativeTargetingClausesResponseContent": {
        "type": "object",
        "properties": {
          "totalResults": {
            "format": "int64",
            "description": "The total number of entities",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          },
          "negativeTargetingClauses": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsGlobalNegativeTargetingClause"
            }
          }
        }
      },
      "SponsoredProductsDraftCampaignNegativeKeywordExtendedData": {
        "type": "object",
        "properties": {
          "lastUpdateDateTime": {
            "format": "date-time",
            "description": "Last updated date in ISO 8601.",
            "type": "string"
          },
          "servingStatus": {
            "$ref": "#/components/schemas/SponsoredProductsKeywordServingStatus"
          },
          "creationDateTime": {
            "format": "date-time",
            "description": "Creation date in ISO 8601.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsCreateOrUpdateDraftCampaignBudgetType": {
        "type": "string",
        "enum": [
          "DAILY"
        ]
      },
      "SponsoredProductsUpdateGlobalNegativeTargetingClause": {
        "type": "object",
        "properties": {
          "expression": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "The NegativeTargeting expression.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsGlobalTargetingExpressionPredicate"
            }
          },
          "targetId": {
            "description": "The target identifier",
            "type": "string"
          },
          "name": {
            "description": "Name for the negative targeting clause",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateGlobalEntityState"
          }
        },
        "required": [
          "targetId"
        ]
      },
      "SponsoredProductsDeleteSponsoredProductsDraftNegativeTargetingClausesResponseContent": {
        "type": "object",
        "properties": {
          "negativeTargetingClauses": {
            "$ref": "#/components/schemas/SponsoredProductsBulkDraftNegativeTargetingClauseOperationResponse"
          }
        },
        "required": [
          "negativeTargetingClauses"
        ]
      },
      "SponsoredProductsEntityType": {
        "type": "string",
        "enum": [
          "CAMPAIGN",
          "AD_GROUP",
          "KEYWORD",
          "PRODUCT_AD",
          "CAMPAIGN_NEGATIVE_KEYWORD",
          "NEGATIVE_KEYWORD",
          "TARGETING_CLAUSE",
          "NEGATIVE_TARGETING_CLAUSE",
          "CAMPAIGN_NEGATIVE_TARGETING_CLAUSE"
        ]
      },
      "SponsoredProductsKeywordAccessError": {
        "type": "object",
        "properties": {
          "errorType": {
            "description": "The type of the error",
            "type": "string"
          },
          "errorValue": {
            "$ref": "#/components/schemas/SponsoredProductsKeywordAccessErrorSelector"
          }
        },
        "required": [
          "errorType",
          "errorValue"
        ]
      },
      "SponsoredProductsDraftNegativeTargetingClauseSuccessResponseItem": {
        "type": "object",
        "properties": {
          "targetId": {
            "description": "the DraftNegativeTargetingClause ID",
            "type": "string"
          },
          "index": {
            "format": "int32",
            "description": "the index of the DraftNegativeTargetingClause in the array from the request body",
            "type": "integer",
            "minimum": 0
          },
          "negativeTargetingClause": {
            "$ref": "#/components/schemas/SponsoredProductsDraftNegativeTargetingClause"
          }
        },
        "required": [
          "index"
        ]
      },
      "SponsoredProductsMarketplaceLevelKeywordServingStatus": {
        "type": "object",
        "properties": {
          "statusReasons": {
            "minItems": 0,
            "maxItems": 27,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsGlobalKeywordMarketplaceServingStatusReason"
            }
          },
          "marketplace": {
            "$ref": "#/components/schemas/SponsoredProductsMarketplace"
          },
          "servingStatus": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalKeywordMarketplaceServingStatus"
          }
        },
        "required": [
          "servingStatus"
        ]
      },
      "SponsoredProductsGlobalAdGroupExtendedData": {
        "type": "object",
        "properties": {
          "servingStatus": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalAdGroupServingStatus"
          }
        }
      },
      "SDRuleType": {
        "description": "The type of budget rule. SCHEDULE: A budget rule based on a start and end date. PERFORMANCE: A budget rule based on advertising performance criteria.",
        "type": "string",
        "enum": [
          "SCHEDULE",
          "PERFORMANCE"
        ]
      },
      "SponsoredProductsAdGroupAccessExceptionResponseContent": {
        "description": "Exception resulting in accessing campaign management entities",
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsInvalidArgumentErrorCode"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsAdGroupAccessError"
            }
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "SponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesResponseContent": {
        "type": "object",
        "properties": {
          "negativeTargetingClauses": {
            "$ref": "#/components/schemas/SponsoredProductsBulkNegativeTargetingClauseOperationResponse"
          }
        },
        "required": [
          "negativeTargetingClauses"
        ]
      },
      "SponsoredProductsCreateSponsoredProductsGlobalTargetingClausesResponseContent": {
        "type": "object",
        "properties": {
          "targetingClauses": {
            "$ref": "#/components/schemas/SponsoredProductsBulkGlobalTargetingClauseOperationResponse"
          }
        },
        "required": [
          "targetingClauses"
        ]
      },
      "SponsoredProductsCreateDraftNegativeKeyword": {
        "type": "object",
        "properties": {
          "nativeLanguageKeyword": {
            "description": "The unlocalized keyword text in the preferred locale of the advertiser",
            "type": "string"
          },
          "nativeLanguageLocale": {
            "description": "The locale preference of the advertiser.",
            "type": "string"
          },
          "campaignId": {
            "description": "The identifer of the campaign to which the keyword is associated.",
            "type": "string"
          },
          "matchType": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateNegativeMatchType"
          },
          "adGroupId": {
            "description": "The identifier of the ad group to which this keyword is associated.",
            "type": "string"
          },
          "keywordText": {
            "description": "The keyword text.",
            "type": "string"
          }
        },
        "required": [
          "adGroupId",
          "campaignId",
          "keywordText",
          "matchType"
        ]
      },
      "SponsoredProductsNotImplementedExceptionCode": {
        "type": "string",
        "enum": [
          "NOT_IMPLEMENTED"
        ]
      },
      "MultiCountryTargetingExpressionList": {
        "maxItems": 100,
        "description": "The list of targeting expressions. Maximum of 100 per request per country, use pagination for more if needed.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MultiCountryTargetingExpression"
        },
        "example": [
          {
            "type": "CLOSE_MATCH"
          },
          {
            "type": "LOOSE_MATCH"
          },
          {
            "type": "SUBSTITUTES"
          },
          {
            "type": "COMPLEMENTS"
          }
        ]
      },
      "CountryWithTargetsAndAsins": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CountryWithTargets"
          }
        ],
        "properties": {
          "asins": {
            "minItems": 0,
            "maxItems": 100,
            "description": "An array list of Asins",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SponsoredProductsGlobalNegativeKeywordText": {
        "type": "object",
        "properties": {
          "marketplaceSettings": {
            "minItems": 1,
            "maxItems": 1000,
            "description": "The marketplace settings for keyword text to be overridden for marketplace.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsKeywordTextMarketplaceSettings"
            }
          },
          "value": {
            "type": "string"
          }
        },
        "required": [
          "value"
        ]
      },
      "SponsoredProductsListSponsoredProductsGlobalNegativeKeywordsRequestContent": {
        "type": "object",
        "properties": {
          "maxResults": {
            "format": "int32",
            "description": "Number of records to include in the paginated response. Defaults to max page size for given API",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          },
          "includeExtendedDataFields": {
            "description": "Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus",
            "type": "boolean"
          },
          "negativeKeywordIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          }
        }
      },
      "SponsoredProductsListTargetPromotionGroupsInternalResponseContent": {
        "description": "Response object for querying target promotion groups.",
        "type": "object",
        "properties": {
          "totalResults": {
            "format": "int64",
            "description": "The total number of results available.",
            "type": "integer"
          },
          "nextToken": {
            "description": "To retrieve the next page of results, call the same operation and specify this token in the\n    request. If the nextToken field is empty, there are no further results.",
            "type": "string"
          },
          "targetPromotionGroups": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsTargetPromotionGroup"
            }
          }
        }
      },
      "SponsoredProductsShopperCohortBidding": {
        "type": "object",
        "properties": {
          "shopperCohortType": {
            "$ref": "#/components/schemas/SponsoredProductsShopperCohortType"
          },
          "percentage": {
            "format": "int32",
            "maximum": 900,
            "type": "integer",
            "minimum": 0
          },
          "audienceSegments": {
            "minItems": 1,
            "maxItems": 1,
            "description": "A list of Audience Segments. Shoppers belonging to these segments will be selected for applying the bid adjustments. This is a required field when using \"AUDIENCE_SEGMENT\" option for `shopperCohortType`.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsAudienceSegment"
            }
          }
        },
        "required": [
          "shopperCohortType"
        ]
      },
      "GetProductRecommendationsRequest": {
        "description": "Request structure to get ASIN recommendations for a set of input ASINs.",
        "type": "object",
        "required": [
          "adAsins"
        ],
        "properties": {
          "cursor": {
            "description": "A optional cursor value that can be used to fetch next or previous set of records.",
            "type": "string",
            "example": "MTAxNTwNzI5NDE="
          },
          "adAsins": {
            "description": "List of input ASINs.",
            "type": "array",
            "items": {
              "minLength": 10,
              "type": "string",
              "maxLength": 10,
              "example": "BX20002121"
            }
          },
          "count": {
            "description": "Count of objects requested in the response. The count will be applied on the objects returned under `recommendations` array in response body.  <ul> <li>Requesting `application/vnd.spproductrecommendationresponse.themes.v3+json` mediatype applies the count on `ThemeRecommendation` objects.If no count value is passed a default of `5` is assumed. The API will return a maximum of `10` themes irrespective of how large the count is set. <\/li> <li>Requesting `application/vnd.spproductrecommendationresponse.asins.v3+json` mediatype applies count on the `ProductRecommendation` objects in response body.If no count value is passed a default of `100` is assumed. The API will return a maximum of `1000` recommendations irrespective of how large the count is set. <\/li> <\/ul> Please refer the response Schemas for more info.",
            "type": "integer",
            "minimum": 1,
            "example": "5"
          },
          "locale": {
            "description": "Theme names and descriptions will be provided in the language for your supported locale. Available options are en_US (U.S. English), en_GB (UK English), zh_CN (Chinese), es_ES (Spanish), jp_JP (Japanese), de_DE (German), fr_FR (French), it_IT(Italian). If locale is not provided or unsupported, the theme names and descriptions will be returned in U.S. English (en_US).",
            "type": "string",
            "example": "en_US"
          }
        }
      },
      "SPCampaignOptimizationRecommendationsAPIRequest": {
        "type": "object",
        "properties": {
          "requirePerformanceMetrics": {
            "default": "true",
            "description": "If set to false, eligible campaigns without a recommendation for performanceMetrics are also provided in response.Check performanceMetricsExists response field to know if performanceMetrics is available for eligible campaign.",
            "type": "boolean"
          },
          "campaignIds": {
            "maxItems": 100,
            "description": "A list of campaign ids",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuleCampaignId"
            }
          }
        },
        "required": [
          "campaignIds"
        ]
      },
      "SponsoredProductsCreateSponsoredProductsGlobalProductAdsRequestContent": {
        "type": "object",
        "properties": {
          "productAds": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "An array of ads.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCreateGlobalProductAd"
            }
          }
        }
      },
      "SponsoredProductsBulkCampaignNegativeTargetingClauseOperationResponse": {
        "type": "object",
        "properties": {
          "success": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCampaignNegativeTargetingClauseSuccessResponseItem"
            }
          },
          "error": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCampaignNegativeTargetingClauseFailureResponseItem"
            }
          }
        }
      },
      "SponsoredProductsGlobalAdGroupMarketplaceServingStatus": {
        "type": "string",
        "enum": [
          "AD_GROUP_STATUS_ENABLED",
          "AD_GROUP_PAUSED",
          "AD_GROUP_ARCHIVED",
          "AD_GROUP_INCOMPLETE",
          "AD_GROUP_POLICING_PENDING_REVIEW",
          "AD_GROUP_POLICING_CREATIVE_REJECTED",
          "AD_GROUP_LOW_BID",
          "CAMPAIGN_STATUS_ENABLED",
          "CAMPAIGN_PAUSED",
          "CAMPAIGN_ARCHIVED",
          "PENDING_REVIEW",
          "REJECTED",
          "PENDING_START_DATE",
          "ENDED",
          "CAMPAIGN_OUT_OF_BUDGET",
          "CAMPAIGN_INCOMPLETE",
          "ADVERTISER_POLICING_SUSPENDED",
          "ADVERTISER_POLICING_PENDING_REVIEW",
          "ADVERTISER_ARCHIVED",
          "ADVERTISER_PAUSED",
          "ADVERTISER_PAYMENT_FAILURE",
          "ADVERTISER_STATUS_ENABLED"
        ]
      },
      "SponsoredProductsKeywordMutationExceptionResponseContent": {
        "description": "Exception resulting in mutating campaign management entities",
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsInvalidArgumentErrorCode"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsKeywordMutationError"
            }
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "SponsoredProductsError": {
        "type": "object",
        "properties": {
          "errorMessage": {
            "type": "string"
          },
          "errorCode": {
            "type": "string"
          }
        }
      },
      "SponsoredProductsCreateTargetPromotionGroupsV2RequestContent": {
        "description": "Request object for creating a Target Promotion Group.",
        "type": "object",
        "properties": {
          "adIds": {
            "minItems": 1,
            "maxItems": 1000,
            "description": "The list of adIds (optional) of the Ad Group of the Auto-Targeting campaign, that will be part of the Target Promotion Group. If this\n    list is not provided, all the Product Ads under the Auto-Targeting Ad Group will be part of the Target Promotion Group.",
            "type": "array",
            "items": {
              "description": "Entity object identifier",
              "type": "string"
            }
          },
          "existingCampaignDetails": {
            "minItems": 1,
            "maxItems": 2,
            "description": "List of existing manual campaign ad groups to be added in the Target Promotion Group. It must contain one keyword ad group, or one\n    product ad group, or both. The request will fail if this field is provided alongside newCampaignDetails.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsExistingAdGroup"
            }
          },
          "targetPromotionGroupName": {
            "description": "The name of the target promotion group that will be created.",
            "type": "string"
          },
          "adGroupId": {
            "description": "The adGroupId of the Ad Group of an Auto-Targeting campaign that will be part of the Target Promotion Group.",
            "type": "string"
          },
          "newCampaignDetails": {
            "minItems": 1,
            "maxItems": 2,
            "description": "List of new manual campaigns to be created as part of the Target Promotion Group. It must contain setting for the creation of one\n    keyword ad group, or one product ad group, or both. The request will fail if this field is provided alongside existingCampaignDetails.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsNewCampaign"
            }
          },
          "addNegativeTargetToSourceAdGroup": {
            "description": "If selected, every promoted target will be added as a negative target to the source Auto-Targeting ad group. This stops the ad group from\n    continuing to select targets that have already been promoted.",
            "type": "boolean"
          }
        },
        "required": [
          "adGroupId",
          "targetPromotionGroupName"
        ]
      },
      "SponsoredProductsCreateOrUpdateNegativeTargetingExpressionPredicate": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateNegativeTargetingExpressionPredicateType"
          },
          "value": {
            "description": "The expression value",
            "type": "string"
          }
        },
        "required": [
          "type"
        ]
      },
      "CategoryRecommendations": {
        "description": "Response object for the GetCategoryRecommendationsForAsins API.",
        "type": "object",
        "properties": {
          "categories": {
            "description": "List of category recommendations",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryItem"
            }
          }
        }
      },
      "AsinsThemeBasedBidRecommendationRequest": {
        "type": "object",
        "properties": {
          "asins": {
            "maxItems": 50,
            "description": "The list of ad ASINs in the ad group.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "targetingExpressions": {
            "$ref": "#/components/schemas/TargetingExpressionList"
          },
          "bidding": {
            "description": "Bidding control configuration for the campaign.",
            "type": "object",
            "properties": {
              "adjustments": {
                "maxItems": 3,
                "description": "Placement adjustment configuration for the campaign.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PlacementAdjustment"
                }
              },
              "strategy": {
                "$ref": "#/components/schemas/BiddingStrategy"
              }
            },
            "required": [
              "strategy"
            ]
          },
          "recommendationType": {
            "description": "The bid recommendation type.",
            "type": "string",
            "enum": [
              "BIDS_FOR_NEW_AD_GROUP"
            ]
          }
        },
        "required": [
          "recommendationType",
          "asins",
          "targetingExpressions",
          "bidding"
        ],
        "example": {
          "asins": [
            "asin1",
            "asin2"
          ],
          "targetingExpressions": [
            {
              "type": "CLOSE_MATCH"
            },
            {
              "type": "LOOSE_MATCH"
            },
            {
              "type": "SUBSTITUTES"
            },
            {
              "type": "COMPLEMENTS"
            }
          ],
          "bidding": {
            "adjustments": [
              {
                "predicate": "PLACEMENT_TOP",
                "percentage": "100"
              },
              {
                "predicate": "PLACEMENT_REST_OF_SEARCH",
                "percentage": "75"
              },
              {
                "predicate": "PLACEMENT_PRODUCT_PAGE",
                "percentage": "50"
              }
            ],
            "strategy": "AUTO_FOR_SALES"
          },
          "recommendationType": "BIDS_FOR_NEW_AD_GROUP"
        }
      },
      "CategoryRecommendationsWithAsinCountsLoP": {
        "description": "Response object for the GetCategoryRecommendationsForAsins API.",
        "type": "object",
        "properties": {
          "categories": {
            "description": "List of category recommendations",
            "type": "array",
            "items": {
              "minItems": 0,
              "maxItems": 50,
              "$ref": "#/components/schemas/CategoryItemWithAsinCountsLoP"
            }
          }
        }
      },
      "SponsoredProductsCreateTargetRequest": {
        "description": "Request object for the target promotion group's target.",
        "type": "object",
        "properties": {
          "expressionType": {
            "description": "The match type (for KEYWORDs) or the expression type (for PRODUCT). One of QUERY_BROAD_MATCHES,\n    QUERY_EXACT_MATCHES, QUERY_PHRASE_MATCHES, ASIN_SAME_AS, ASIN_EXPANDED_FROM",
            "type": "string"
          },
          "bid": {
            "format": "double",
            "description": "Bid associated with the target. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).",
            "type": "number",
            "minimum": 0
          },
          "target": {
            "description": "The keyword or the product ASIN to be targeted.",
            "type": "string"
          }
        },
        "required": [
          "expressionType",
          "target"
        ]
      },
      "SponsoredProductsListSponsoredProductsKeywordsPreviewResponseContent": {
        "type": "object",
        "properties": {
          "totalResults": {
            "format": "int64",
            "description": "The total number of entities",
            "type": "integer"
          },
          "keywords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsKeyword"
            }
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          }
        }
      },
      "SponsoredProductsExpressionTypeWithoutOther": {
        "type": "string",
        "enum": [
          "AUTO",
          "MANUAL"
        ]
      },
      "SPGetRuleEventError": {
        "description": "The Error Response Object.",
        "type": "object",
        "properties": {
          "code": {
            "description": "The HTTP status code of the response.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsParentEntityErrorReason": {
        "type": "string",
        "enum": [
          "PARENT_ENTITY_DOES_NOT_TARGET_THESE_MARKETPLACES",
          "PARENT_ENTITY_ARCHIVED",
          "PARENT_ENTITY_NOT_FOUND"
        ]
      },
      "SponsoredProductsAdServingStatusDetail": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/SponsoredProductsAdServingStatusReason"
          },
          "helpUrl": {
            "description": "A URL with additional information about the status identifier.",
            "type": "string"
          },
          "message": {
            "description": "A human-readable description of the status identifier specified in the name field.",
            "type": "string"
          }
        }
      },
      "GlobalBudgetRecommendationException": {
        "type": "object",
        "properties": {
          "errors": {
            "minItems": 1,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GlobalBudgetRecommendationError"
            }
          }
        }
      },
      "SponsoredProductsCampaignAccessError": {
        "type": "object",
        "properties": {
          "errorType": {
            "description": "The type of the error",
            "type": "string"
          },
          "errorValue": {
            "$ref": "#/components/schemas/SponsoredProductsCampaignAccessErrorSelector"
          }
        },
        "required": [
          "errorType",
          "errorValue"
        ]
      },
      "SponsoredProductsCampaignNegativeKeywordSuccessResponseItem": {
        "type": "object",
        "properties": {
          "campaignNegativeKeyword": {
            "$ref": "#/components/schemas/SponsoredProductsCampaignNegativeKeyword"
          },
          "campaignNegativeKeywordId": {
            "description": "the campaignNegativeKeyword ID",
            "type": "string"
          },
          "index": {
            "format": "int32",
            "description": "the index of the campaign in the array from the request body",
            "type": "integer",
            "minimum": 0
          }
        },
        "required": [
          "index"
        ]
      },
      "SponsoredProductsUnsupportedOperationError": {
        "description": "Errors being used to represent an unsupported operation\ne.g. Seller are not supported to create custom text product ads.",
        "type": "object",
        "properties": {
          "reason": {
            "$ref": "#/components/schemas/SponsoredProductsUnsupportedOperationErrorReason"
          },
          "cause": {
            "$ref": "#/components/schemas/SponsoredProductsErrorCause"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          }
        },
        "required": [
          "message",
          "reason"
        ]
      },
      "SponsoredProductsNegativeTargetMutationExceptionResponseContent": {
        "description": "Exception resulting in mutating campaign management entities",
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsInvalidArgumentErrorCode"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsNegativeTargetMutationError"
            }
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "SponsoredProductsUpdateSponsoredProductsAdGroupsResponseContent": {
        "type": "object",
        "properties": {
          "adGroups": {
            "$ref": "#/components/schemas/SponsoredProductsBulkAdGroupOperationResponse"
          }
        },
        "required": [
          "adGroups"
        ]
      },
      "SponsoredProductsAllTargetsFailureResponseItem": {
        "type": "object",
        "properties": {
          "index": {
            "format": "int32",
            "description": "the index of the targetingClause in the array from the request body",
            "type": "integer"
          },
          "errors": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "A list of validation errors",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsBatchResponseError"
            }
          }
        },
        "required": [
          "index"
        ]
      },
      "SponsoredProductsCopySponsoredProductsCampaignsRequestContent": {
        "type": "object",
        "properties": {
          "copyCampaignsItems": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "An array of campaigns.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCopyCampaign"
            }
          }
        },
        "required": [
          "copyCampaignsItems"
        ]
      },
      "SponsoredProductsDeleteSponsoredProductsDraftCampaignNegativeKeywordsResponseContent": {
        "type": "object",
        "properties": {
          "campaignNegativeKeywords": {
            "$ref": "#/components/schemas/SponsoredProductsBulkDraftCampaignNegativeKeywordOperationResponse"
          }
        },
        "required": [
          "campaignNegativeKeywords"
        ]
      },
      "SponsoredProductsSPAutoTargetDetails": {
        "type": "object",
        "properties": {
          "matchType": {
            "$ref": "#/components/schemas/SponsoredProductsAutoTargetMatchType"
          }
        },
        "required": [
          "matchType"
        ]
      },
      "RuleCondition": {
        "type": "object",
        "properties": {
          "metricName": {
            "$ref": "#/components/schemas/RuleConditionMetric"
          },
          "comparisonOperator": {
            "$ref": "#/components/schemas/ComparisonOperator"
          },
          "threshold": {
            "format": "double",
            "description": "The performance threshold value.",
            "type": "number"
          }
        },
        "required": [
          "metricName",
          "threshold",
          "comparisonOperator"
        ]
      },
      "SponsoredProductsGlobalBid": {
        "type": "object",
        "properties": {
          "marketplaceSettings": {
            "minItems": 1,
            "maxItems": 1000,
            "description": "marketplace bid settings.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsMarketplaceBid"
            }
          },
          "currency": {
            "$ref": "#/components/schemas/SponsoredProductsCurrency"
          }
        }
      },
      "SponsoredProductsUnauthenticatedExceptionResponseContent": {
        "description": "Unauthenticated. Request failed because user is not authenticated.",
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsUnauthenticatedExceptionCode"
          },
          "message": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsBulkDraftCampaignOperationResponse": {
        "type": "object",
        "properties": {
          "success": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftCampaignMutationSuccessResponseItem"
            }
          },
          "error": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftCampaignMutationFailureResponseItem"
            }
          }
        }
      },
      "SponsoredProductsMissingValueError": {
        "description": "Error describing missing values in API payloads",
        "type": "object",
        "properties": {
          "reason": {
            "$ref": "#/components/schemas/SponsoredProductsMissingValueErrorReason"
          },
          "marketplace": {
            "$ref": "#/components/schemas/SponsoredProductsMarketplace"
          },
          "cause": {
            "$ref": "#/components/schemas/SponsoredProductsErrorCause"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          }
        },
        "required": [
          "message",
          "reason"
        ]
      },
      "SponsoredProductsDeleteSponsoredProductsCampaignsRequestContent": {
        "type": "object",
        "properties": {
          "campaignIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          }
        },
        "required": [
          "campaignIdFilter"
        ]
      },
      "SponsoredProductsCreateTargetPromotionGroupTargetsFailureResponseItem": {
        "description": "Response object of failed target promotion group target.",
        "type": "object",
        "properties": {
          "expressionType": {
            "description": "The expression type of the target that was requested to be created.",
            "type": "string"
          },
          "errors": {
            "minItems": 0,
            "maxItems": 10000,
            "description": "Response object of failed target promotion group target.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCreateTargetError"
            }
          },
          "target": {
            "description": "The target that was requested to be created.",
            "type": "string"
          }
        }
      },
      "OptimizationRulesAPISwaggerSingleOptimizationRuleResponse": {
        "description": "Response object for operations involving a single optimization rule.",
        "type": "object",
        "properties": {
          "code": {
            "description": "An enumerated success or error code for machine use.",
            "type": "string"
          },
          "optimizationRule": {
            "$ref": "#/components/schemas/OptimizationRulesAPISwaggerOptimizationRule"
          },
          "details": {
            "description": "A human-readable description of the error, if unsuccessful.",
            "type": "string"
          }
        }
      },
      "Brands": {
        "description": "List of Brands.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Brand"
        }
      },
      "SponsoredProductsApplicableMarketplacesErrorReason": {
        "type": "string",
        "enum": [
          "APPLICABLE_MARKETPLACES_MISMATCH_ERROR"
        ]
      },
      "SponsoredProductsBulkDraftNegativeKeywordOperationResponse": {
        "type": "object",
        "properties": {
          "success": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftNegativeKeywordSuccessResponseItem"
            }
          },
          "error": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftNegativeKeywordFailureResponseItem"
            }
          }
        }
      },
      "BudgetChangeType": {
        "description": "The value by which to update the budget of the budget rule.",
        "type": "string",
        "enum": [
          "PERCENT"
        ]
      },
      "SponsoredProductsDeleteSponsoredProductsDraftTargetingClausesResponseContent": {
        "type": "object",
        "properties": {
          "targetingClauses": {
            "$ref": "#/components/schemas/SponsoredProductsBulkDraftTargetingClauseOperationResponse"
          }
        },
        "required": [
          "targetingClauses"
        ]
      },
      "SponsoredProductsProductTargetMatchType": {
        "type": "string",
        "enum": [
          "PRODUCT_EXACT",
          "PRODUCT_SIMILAR"
        ]
      },
      "CategoryRecommendationsWithAsinCounts": {
        "description": "Response object for the GetCategoryRecommendationsForAsins API.",
        "type": "object",
        "properties": {
          "categories": {
            "description": "List of category recommendations",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryItemWithAsinCounts"
            }
          }
        }
      },
      "SponsoredProductsListSponsoredProductsAdGroupsResponseContent": {
        "type": "object",
        "properties": {
          "totalResults": {
            "format": "int64",
            "description": "The total number of entities",
            "type": "integer"
          },
          "adGroups": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsAdGroup"
            }
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          }
        }
      },
      "SponsoredProductsInternalServerError": {
        "description": "Error that represents non-retryable API service error. Sending the same request will result in another error.",
        "type": "object",
        "properties": {
          "reason": {
            "$ref": "#/components/schemas/SponsoredProductsInternalServerErrorReason"
          },
          "cause": {
            "$ref": "#/components/schemas/SponsoredProductsErrorCause"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          }
        },
        "required": [
          "message",
          "reason"
        ]
      },
      "MultiCountryBidRecommendationPerTargetingExpression": {
        "type": "object",
        "properties": {
          "countrySuggestedBids": {
            "additionalProperties": {
              "$ref": "#/components/schemas/SuggestedBidValues"
            }
          },
          "expression": {
            "$ref": "#/components/schemas/MultiCountryTargetingExpression"
          }
        },
        "required": [
          "expression",
          "countrySuggestedBids"
        ],
        "example": {
          "countrySuggestedBids": {
            "UK": [
              {
                "suggestedBid": "1"
              },
              {
                "suggestedBid": "1.5"
              },
              {
                "suggestedBid": "2"
              }
            ],
            "US": [
              {
                "suggestedBid": "1"
              },
              {
                "suggestedBid": "1.5"
              },
              {
                "suggestedBid": "2"
              }
            ]
          },
          "expression": {
            "countryValues": {
              "UK": "Sample2",
              "US": "Sample1"
            },
            "type": "KEYWORD_BROAD_MATCH"
          }
        }
      },
      "SponsoredProductsKeywordServingStatusReason": {
        "type": "string",
        "enum": [
          "TARGETING_CLAUSE_STATUS_LIVE_DETAIL",
          "TARGETING_CLAUSE_POLICING_SUSPENDED_DETAIL",
          "TARGETING_CLAUSE_PAUSED_DETAIL",
          "TARGETING_CLAUSE_ARCHIVED_DETAIL",
          "TARGETING_CLAUSE_BLOCKED_DETAIL",
          "AD_GROUP_STATUS_ENABLED_DETAIL",
          "AD_GROUP_PAUSED_DETAIL",
          "AD_GROUP_ARCHIVED_DETAIL",
          "AD_GROUP_INCOMPLETE_DETAIL",
          "AD_GROUP_POLICING_PENDING_REVIEW_DETAIL",
          "AD_GROUP_POLICING_CREATIVE_REJECTED_DETAIL",
          "AD_GROUP_LOW_BID_DETAIL",
          "CAMPAIGN_STATUS_ENABLED_DETAIL",
          "CAMPAIGN_PAUSED_DETAIL",
          "CAMPAIGN_ARCHIVED_DETAIL",
          "PENDING_REVIEW_DETAIL",
          "REJECTED_DETAIL",
          "PENDING_START_DATE_DETAIL",
          "ENDED_DETAIL",
          "CAMPAIGN_OUT_OF_BUDGET_DETAIL",
          "CAMPAIGN_INCOMPLETE_DETAIL",
          "PORTFOLIO_STATUS_ENABLED_DETAIL",
          "PORTFOLIO_PAUSED_DETAIL",
          "PORTFOLIO_ARCHIVED_DETAIL",
          "PORTFOLIO_OUT_OF_BUDGET_DETAIL",
          "PORTFOLIO_PENDING_START_DATE_DETAIL",
          "PORTFOLIO_ENDED_DETAIL",
          "ADVERTISER_POLICING_SUSPENDED_DETAIL",
          "ADVERTISER_POLICING_PENDING_REVIEW_DETAIL",
          "ADVERTISER_ARCHIVED_DETAIL",
          "ADVERTISER_PAUSED_DETAIL",
          "ADVERTISER_OUT_OF_BUDGET_DETAIL",
          "ADVERTISER_PAYMENT_FAILURE_DETAIL",
          "ACCOUNT_OUT_OF_BUDGET_DETAIL",
          "OTHER"
        ]
      },
      "SponsoredProductsUnauthorizedResponseContent": {
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsErrorCode"
          },
          "message": {
            "type": "string"
          },
          "httpStatusCode": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "SponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsResponseContent": {
        "type": "object",
        "properties": {
          "campaignNegativeKeywords": {
            "$ref": "#/components/schemas/SponsoredProductsBulkCampaignNegativeKeywordOperationResponse"
          }
        },
        "required": [
          "campaignNegativeKeywords"
        ]
      },
      "MultiCountryThemeBasedBidRecommendationCompleteFailureResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "description": "List of errors occurred while processing multi country request.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MultiCountryBidRecommendationError"
            }
          }
        },
        "required": [
          "errors"
        ],
        "example": {
          "errors": [
            {
              "countryCodes": [
                "US"
              ],
              "code": "001",
              "message": "Some error occurred."
            }
          ]
        }
      },
      "SponsoredProductsNegativeMatchType": {
        "type": "string",
        "enum": [
          "NEGATIVE_EXACT",
          "NEGATIVE_PHRASE",
          "NEGATIVE_BROAD",
          "OTHER"
        ]
      },
      "SponsoredProductsListSponsoredProductsTargetingClausesRequestContent": {
        "type": "object",
        "properties": {
          "campaignIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsReducedObjectIdFilter"
          },
          "stateFilter": {
            "$ref": "#/components/schemas/SponsoredProductsEntityStateFilter"
          },
          "expressionTypeFilter": {
            "$ref": "#/components/schemas/SponsoredProductsExpressionTypeFilter"
          },
          "maxResults": {
            "format": "int32",
            "description": "Number of records to include in the paginated response. Defaults to max page size for given API",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          },
          "targetIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          },
          "asinFilter": {
            "$ref": "#/components/schemas/SponsoredProductsAsinFilter"
          },
          "adGroupIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsReducedObjectIdFilter"
          },
          "includeExtendedDataFields": {
            "description": "Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus",
            "type": "boolean"
          }
        }
      },
      "OptimizationRulesAPISwaggerUpdateRuleRecommendationStatusRequest": {
        "description": "Request object for getting rule recommendation. All the filters in the request are used in conjunction with one another.",
        "type": "object",
        "properties": {
          "recommendations": {
            "minItems": 1,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptimizationRulesAPISwaggerRecommendationStatusUpdate"
            }
          }
        }
      },
      "SponsoredProductsGetTargetPromotionGroupsRecommendationsRequestContent": {
        "type": "object",
        "properties": {
          "campaignIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          },
          "maxResults": {
            "description": "Number of records to include in the paginated response. Defaults to 1000.",
            "maximum": 1000,
            "type": "integer",
            "minimum": 1
          },
          "nextToken": {
            "description": "Token for fetching the next page",
            "type": "string"
          },
          "adIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          },
          "adGroupIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          }
        }
      },
      "SponsoredProductsCreateGlobalNegativeKeyword": {
        "type": "object",
        "properties": {
          "campaignId": {
            "description": "The identifier of the campaign to which the keyword is associated.",
            "type": "string"
          },
          "matchType": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateNegativeMatchType"
          },
          "name": {
            "description": "Name for the keyword",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateGlobalEntityState"
          },
          "adGroupId": {
            "description": "The identifier of the ad group to which this keyword is associated.",
            "type": "string"
          },
          "keywordText": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalNegativeKeywordText"
          }
        },
        "required": [
          "adGroupId",
          "campaignId",
          "keywordText",
          "matchType",
          "state"
        ]
      },
      "BudgetRecommendationError": {
        "type": "object",
        "required": [
          "Error",
          "campaignId",
          "index"
        ],
        "properties": {
          "campaignId": {
            "description": "encrypted campaignId",
            "type": "string"
          },
          "index": {
            "description": "Correlate the recommendation to the campaign index in the request. Zero-based",
            "type": "integer"
          },
          "Error": {
            "$ref": "#/components/schemas/SPTORBudgetRecommendationError"
          }
        }
      },
      "SPGetAllRuleEventResponse": {
        "description": "All Special individual and grouped events with date range.",
        "type": "object",
        "properties": {
          "groupedEvents": {
            "description": "A list of grouped events with date range.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SPGroupedEvent"
            }
          },
          "events": {
            "description": "A list of individual events with date range.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SPIndividualEvent"
            }
          }
        }
      },
      "RecurrenceType": {
        "description": "The frequency of the rule application.",
        "type": "string",
        "enum": [
          "DAILY"
        ]
      },
      "RuleNotificationError": {
        "type": "object",
        "properties": {
          "campaignId": {
            "$ref": "#/components/schemas/RuleCampaignId"
          },
          "Error": {
            "$ref": "#/components/schemas/CampaignOptimizationRuleError"
          }
        }
      },
      "SponsoredProductsDeleteSponsoredProductsDraftNegativeTargetingClausesRequestContent": {
        "type": "object",
        "properties": {
          "negativeTargetIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          }
        },
        "required": [
          "negativeTargetIdFilter"
        ]
      },
      "SponsoredProductsListSponsoredProductsGlobalNegativeTargetingClausesRequestContent": {
        "type": "object",
        "properties": {
          "negativeTargetIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          },
          "maxResults": {
            "format": "int32",
            "description": "Number of records to include in the paginated response. Defaults to max page size for given API",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          },
          "includeExtendedDataFields": {
            "description": "Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus",
            "type": "boolean"
          }
        }
      },
      "BudgetUsagePortfolioRequest": {
        "type": "object",
        "properties": {
          "portfolioIds": {
            "minItems": 1,
            "maxItems": 100,
            "description": "A list of portfolio IDs.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "OptimizationRulesAPISwaggerCreateOptimizationRulesResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OptimizationRulesAPISwaggerOptimizationRulesResponse"
          }
        ],
        "description": "Response object for CreateOptimizationRules API.",
        "type": "object"
      },
      "OptimizationRulesAPISwaggerUpdateRuleRecommendationStatusResponseSuccessItem": {
        "type": "object",
        "properties": {
          "index": {
            "description": "Index of the recommendation id in the request.",
            "type": "integer"
          },
          "recommendationId": {
            "description": "The id that uniquely identifies the recommendation that was updated successfully",
            "type": "string"
          }
        },
        "required": [
          "index",
          "recommendationId"
        ]
      },
      "SponsoredProductsListTargetPromotionGroupsResponseContent": {
        "description": "Response object for querying target promotion groups.",
        "type": "object",
        "properties": {
          "totalResults": {
            "format": "int64",
            "description": "The total number of results available.",
            "type": "integer"
          },
          "nextToken": {
            "description": "To retrieve the next page of results, call the same operation and specify this token in the\n    request. If the nextToken field is empty, there are no further results.",
            "type": "string"
          },
          "targetPromotionGroups": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsTargetPromotionGroup"
            }
          }
        }
      },
      "SponsoredProductsDraftProductAd": {
        "type": "object",
        "properties": {
          "globalStoreSetting": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalStoreSetting"
          },
          "adId": {
            "description": "The product ad identifier.",
            "type": "string"
          },
          "campaignId": {
            "description": "The campaign identifier.",
            "type": "string"
          },
          "customText": {
            "description": "The custom text that is associated with this ad. Defined for custom text ads only.",
            "type": "string"
          },
          "asin": {
            "description": "The ASIN associated with the product. Defined for vendors only.",
            "type": "string"
          },
          "sku": {
            "description": "The SKU associated with the product. Defined for seller accounts only.",
            "type": "string"
          },
          "adGroupId": {
            "description": "The ad group identifier.",
            "type": "string"
          },
          "extendedData": {
            "$ref": "#/components/schemas/SponsoredProductsDraftProductAdExtendedData"
          }
        },
        "required": [
          "adGroupId",
          "adId",
          "campaignId"
        ]
      },
      "SponsoredProductsCreateTargetingExpressionPredicateType": {
        "description": "The type of targeting expression. You can specify values for the following predicates:\n| Predicate | Description |\n| --- | --- |\n| `ASIN_CATEGORY_SAME_AS` | Target the category that is the same as the category expressed. |\n| `ASIN_BRAND_SAME_AS` | Target the brand that is the same as the brand expressed. |\n| `ASIN_PRICE_LESS_THAN` | Target a price that is less than the price expressed. |\n| `ASIN_PRICE_BETWEEN` | Target a price that is between the prices expressed. |\n| `ASIN_PRICE_GREATER_THAN` | Target a price that is greater than the price expressed. |\n| `ASIN_REVIEW_RATING_LESS_THAN` | Target a review rating less than the review rating that is expressed. |\n| `ASIN_REVIEW_RATING_BETWEEN` | Target a review rating that is between the review ratings expressed. |\n| `ASIN_REVIEW_RATING_GREATER_THAN` | Target a review rating that is greater than the review rating expressed. |\n| `ASIN_SAME_AS` | Target an ASIN that is the same as the ASIN expressed. |\n| `ASIN_IS_PRIME_SHIPPING_ELIGIBLE` | Target products that are Prime Shipping Eligible. This refinement can be applied at a category or brand level only. |\n| `ASIN_AGE_RANGE_SAME_AS` | Target an age range that is in the expressed range. This refinement can be applied for toys and games categories only. |\n| `ASIN_GENRE_SAME_AS` | Target products related to the expressed genre. This refinement can be applied for Books and eBooks categories only.   |\n| `ASIN_EXPANDED_FROM` | Target products similar in performance to the ASIN expressed.   |\n| `KEYWORD_GROUP_SAME_AS` | Target the keyword group that is the same as the keyword group expressed (Beta coming soon). |",
        "type": "string",
        "enum": [
          "ASIN_CATEGORY_SAME_AS",
          "ASIN_BRAND_SAME_AS",
          "ASIN_PRICE_LESS_THAN",
          "ASIN_PRICE_BETWEEN",
          "ASIN_PRICE_GREATER_THAN",
          "ASIN_REVIEW_RATING_LESS_THAN",
          "ASIN_REVIEW_RATING_BETWEEN",
          "ASIN_REVIEW_RATING_GREATER_THAN",
          "ASIN_SAME_AS",
          "ASIN_AGE_RANGE_SAME_AS",
          "ASIN_GENRE_SAME_AS",
          "ASIN_IS_PRIME_SHIPPING_ELIGIBLE",
          "ASIN_EXPANDED_FROM",
          "KEYWORD_GROUP_SAME_AS"
        ]
      },
      "Conversions": {
        "description": "Conversions benchmark.",
        "properties": {
          "lower": {
            "description": "lower bound.",
            "type": "integer"
          },
          "upper": {
            "description": "upper bound.",
            "type": "integer"
          }
        }
      },
      "SponsoredProductsCreateSponsoredProductsDraftNegativeTargetingClausesRequestContent": {
        "type": "object",
        "properties": {
          "negativeTargetingClauses": {
            "minItems": 0,
            "maxItems": 100,
            "description": "An array of negativeTargetingClauses.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCreateDraftNegativeTargetingClause"
            }
          }
        },
        "required": [
          "negativeTargetingClauses"
        ]
      },
      "SponsoredProductsDeleteSponsoredProductsCampaignsResponseContent": {
        "type": "object",
        "properties": {
          "campaigns": {
            "$ref": "#/components/schemas/SponsoredProductsBulkCampaignOperationResponse"
          }
        },
        "required": [
          "campaigns"
        ]
      },
      "SponsoredProductsUpdateSponsoredProductsKeywordsRequestContent": {
        "type": "object",
        "properties": {
          "keywords": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "An array of keywords with updated values.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsUpdateKeyword"
            }
          }
        },
        "required": [
          "keywords"
        ]
      },
      "BudgetUsageCampaignRequest": {
        "type": "object",
        "properties": {
          "campaignIds": {
            "minItems": 1,
            "maxItems": 100,
            "description": "A list of campaign IDs",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SponsoredProductsDeleteSponsoredProductsDraftProductAdsResponseContent": {
        "type": "object",
        "properties": {
          "productAds": {
            "$ref": "#/components/schemas/SponsoredProductsBulkDraftProductAdOperationResponse"
          }
        },
        "required": [
          "productAds"
        ]
      },
      "SponsoredProductsMalformedValueErrorReason": {
        "type": "string",
        "enum": [
          "FORBIDDEN_CHARS",
          "PATTERN_NOT_MATCHED",
          "TOO_LONG",
          "TOO_SHORT",
          "LEADING_OR_TRAILING_WHITESPACE",
          "BLANK"
        ]
      },
      "PerformanceMeasureCondition": {
        "type": "object",
        "required": [
          "comparisonOperator",
          "metricName",
          "threshold"
        ],
        "properties": {
          "metricName": {
            "$ref": "#/components/schemas/PerformanceMetric"
          },
          "comparisonOperator": {
            "$ref": "#/components/schemas/ComparisonOperator"
          },
          "threshold": {
            "format": "double",
            "description": "The performance threshold value.",
            "type": "number"
          }
        }
      },
      "KeywordGroupsRecommendationsResponse": {
        "description": "Keyword group recommendations response.",
        "type": "object",
        "required": [
          "keywordGroups"
        ],
        "properties": {
          "nextToken": {
            "description": "If present then there is more data to retrieve. To retrieve, resend request with token.",
            "type": "string"
          },
          "keywordGroups": {
            "minItems": 0,
            "maxItems": 50,
            "description": "Keyword group recommendations for input list of ASINs.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeywordGroup"
            }
          }
        }
      },
      "SponsoredProductsTargetingClauseSuccessResponseItem": {
        "type": "object",
        "properties": {
          "targetingClause": {
            "$ref": "#/components/schemas/SponsoredProductsTargetingClause"
          },
          "targetId": {
            "description": "the targetingClause ID",
            "type": "string"
          },
          "index": {
            "format": "int32",
            "description": "the index of the targetingClause in the array from the request body",
            "type": "integer",
            "minimum": 0
          }
        },
        "required": [
          "index"
        ]
      },
      "SponsoredProductsTargetAccessErrorSelector": {
        "type": "object",
        "properties": {
          "entityNotFoundError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityNotFoundError"
          },
          "missingValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMissingValueError"
          },
          "malformedValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMalformedValueError"
          },
          "internalServerError": {
            "$ref": "#/components/schemas/SponsoredProductsInternalServerError"
          },
          "rangeError": {
            "$ref": "#/components/schemas/SponsoredProductsRangeError"
          },
          "otherError": {
            "$ref": "#/components/schemas/SponsoredProductsOtherError"
          },
          "invalidInputError": {
            "$ref": "#/components/schemas/SponsoredProductsInvalidInputError"
          },
          "throttledError": {
            "$ref": "#/components/schemas/SponsoredProductsThrottledError"
          }
        }
      },
      "SponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent": {
        "type": "object",
        "properties": {
          "negativeTargetIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          },
          "campaignIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsReducedObjectIdFilter"
          },
          "stateFilter": {
            "$ref": "#/components/schemas/SponsoredProductsEntityStateFilter"
          },
          "maxResults": {
            "format": "int32",
            "description": "Number of records to include in the paginated response. Defaults to max page size for given API",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          },
          "asinFilter": {
            "$ref": "#/components/schemas/SponsoredProductsAsinFilter"
          },
          "adGroupIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsReducedObjectIdFilter"
          },
          "includeExtendedDataFields": {
            "description": "Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus",
            "type": "boolean"
          }
        }
      },
      "ProductDetailsList": {
        "minItems": 0,
        "maxItems": 50,
        "description": "The list of products in the request.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ProductDetails"
        }
      },
      "SponsoredProductsDraftProductAdMutationExceptionResponseContent": {
        "description": "Exception resulting in mutating campaign management entities",
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsInvalidArgumentErrorCode"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftProductAdMutationError"
            }
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "SponsoredProductsDraftNegativeTargetAccessExceptionResponseContent": {
        "description": "Exception resulting in accessing campaign management entities",
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsInvalidArgumentErrorCode"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftNegativeTargetAccessError"
            }
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "SponsoredProductsAdGroupSuccessResponseItem": {
        "type": "object",
        "properties": {
          "adGroup": {
            "$ref": "#/components/schemas/SponsoredProductsAdGroup"
          },
          "index": {
            "format": "int32",
            "description": "the index of the adGroup in the array from the request body",
            "type": "integer",
            "minimum": 0
          },
          "adGroupId": {
            "description": "the adGroup ID",
            "type": "string"
          }
        },
        "required": [
          "index"
        ]
      },
      "PriceRange": {
        "description": "A range of prices. We use this to retrieve the number of targetable ASINs that falls within this price range.",
        "type": "object",
        "properties": {
          "min": {
            "format": "double",
            "type": "number"
          },
          "max": {
            "format": "double",
            "type": "number"
          }
        }
      },
      "ListGlobalTargetableCategoriesResponse": {
        "type": "object",
        "properties": {
          "countryCategoryTree": {
            "description": "Map containing category tree for countries passed in the request Ex: { \"US\" : \"jsonString\"}.",
            "additionalProperties": {
              "description": "Schema : [{\n    \"id\": 2748212011,\n    \"na\": \"Art Paper\",\n    \"ch\": [{\"id\": 1234, \"na\": \"Color paper\", \"ch\": []}],\n    \"ta\": true,\n    \"asinCountRange\": {        \"min\": 57,        \"max\": 84    }\n}]",
              "type": "string"
            },
            "type": "object",
            "example": {
              "UK": "[{\"id\":12898291,\"na\":\"Tracing Paper\",\"ch\":[],\"ta\":true, \"asinCountRange\":{\"min\":24,\"max\":40}}]",
              "US": "[{\"id\":2748212011,\"na\":\"Art Paper\",\"ch\":[{\"id\":8090742011,\"na\":\"Palette Paper\",\"ch\":[],\"ta\":true, \"asinCountRange\":{\"min\":11,\"max\":19}},{\"id\":8090734011,\"na\":\"Sketchbooks & Notebooks\",\"ch\":[],\"ta\":true, \"asinCountRange\":{\"min\":3,\"max\":5}}],\"ta\":true,\"asinCountRange\":{\"min\":57,\"max\":84}},{\"id\":12898291,\"na\":\"Tracing Paper\",\"ch\":[],\"ta\":true, \"asinCountRange\":{\"min\":24,\"max\":40}}]"
            }
          }
        }
      },
      "SponsoredProductsResponseAdGroup": {
        "description": "Ad groups where targets can be promoted.",
        "type": "object",
        "properties": {
          "adGroupName": {
            "description": "The name of the ad group in the campaign.",
            "type": "string"
          },
          "adGroupId": {
            "description": "The id of the ad group in the campaign.",
            "type": "string"
          }
        }
      },
      "CountryAsinsMap": {
        "description": "Ad ASINs for each country in a ad.",
        "additionalProperties": {
          "pattern": "[a-zA-Z0-9]{10}",
          "type": "string"
        },
        "maxProperties": 50,
        "type": "object"
      },
      "SponsoredProductsGlobalEntityState": {
        "type": "object",
        "properties": {
          "marketplaceSettings": {
            "minItems": 1,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsMarketplaceState"
            }
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsEntityState"
          }
        },
        "required": [
          "state"
        ]
      },
      "SponsoredProductsBiddingError": {
        "description": "Errors related to bids",
        "type": "object",
        "properties": {
          "reason": {
            "$ref": "#/components/schemas/SponsoredProductsBiddingErrorReason"
          },
          "marketplace": {
            "$ref": "#/components/schemas/SponsoredProductsMarketplace"
          },
          "cause": {
            "$ref": "#/components/schemas/SponsoredProductsErrorCause"
          },
          "upperLimit": {
            "type": "string"
          },
          "lowerLimit": {
            "type": "string"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          }
        },
        "required": [
          "message",
          "reason"
        ]
      },
      "ProductDetails": {
        "type": "object",
        "properties": {
          "globalStoreSetting": {
            "description": "This denotes the fields related to [GlobalStore Program](https://sellercentral.amazon.com/help/hub/reference/external/202139180).",
            "type": "object",
            "properties": {
              "catalogSourceCountryCode": {
                "description": "Country code of source marketplace where seller has listed the product. Possible source country codes include US, UK, DE, JP, and AE.",
                "type": "string"
              }
            }
          },
          "asin": {
            "description": "The identifier of the product.",
            "type": "string"
          }
        }
      },
      "budgetIncreaseBy": {
        "type": "object",
        "required": [
          "type",
          "value"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/BudgetChangeType"
          },
          "value": {
            "format": "double",
            "description": "The budget value.",
            "type": "number"
          }
        }
      },
      "SponsoredProductsCreateOrUpdateBiddingStrategy": {
        "description": "The bidding strategy.\n`strategy` is required for create requests if dynamicBidding is provided, but is optional for update requests.\n| Value | Strategy name | Description |\n|----------------|---------------|-------------|\n| `LEGACY_FOR_SALES` | Dynamic bids - down only | Lowers your bids in real time when your ad may be less likely to convert to a sale. Campaigns created before the release of the bidding controls feature used this setting by default. |\n| `AUTO_FOR_SALES` | Dynamic bids - up and down | Increases or decreases your bids in real time by a maximum of 100%. With this setting bids increase when your ad is more likely to convert to a sale, and bids decrease when less likely to convert to a sale. |\n| `MANUAL` | Fixed bid | Uses your exact bid and any placement adjustments you set, and is not subject to dynamic bidding. |\n| `RULE_BASED` | Rule based bidding | See Rule based bidding documentation https://advertising.amazon.com/API/docs/en-us/sponsored-products/rule-based-bidding/overview |",
        "type": "string",
        "enum": [
          "LEGACY_FOR_SALES",
          "AUTO_FOR_SALES",
          "MANUAL",
          "RULE_BASED"
        ]
      },
      "UnauthorizedException": {
        "description": "Returns information about an UnauthorizedException.",
        "type": "object",
        "properties": {
          "code": {
            "description": "The HTTP status code of the response.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        }
      },
      "GlobalRankedTargetWithThemedBidsResponse": {
        "type": "object",
        "properties": {
          "countryCodes": {
            "additionalProperties": {
              "$ref": "#/components/schemas/RankedTargetWithThemedBidsResponseWithError"
            },
            "type": "object"
          }
        }
      },
      "SPRuleType": {
        "description": "The type of budget rule. SCHEDULE: A budget rule based on a start and end date. PERFORMANCE: A budget rule based on advertising performance criteria.",
        "type": "string",
        "enum": [
          "SCHEDULE",
          "PERFORMANCE"
        ]
      },
      "CountryBudgetsMap": {
        "description": "The budget value for each country of new campaign.",
        "additionalProperties": {
          "description": "The budget value.",
          "type": "number"
        },
        "maxProperties": 50,
        "type": "object"
      },
      "SponsoredProductsInternalServerErrorReason": {
        "type": "string",
        "enum": [
          "INTERNAL_ERROR"
        ]
      },
      "IntegerRange": {
        "type": "object",
        "properties": {
          "min": {
            "format": "int32",
            "type": "integer"
          },
          "max": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "Bidding": {
        "description": "The bidding control configuration for the new campaign.",
        "required": [
          "strategy"
        ],
        "properties": {
          "adjustments": {
            "minItems": 0,
            "maxItems": 2,
            "description": "Placement adjustment configuration for the campaign.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Adjustment"
            }
          },
          "strategy": {
            "description": "The bidding strategy selected for the campaign. Use LEGACY_FOR_SALES to lower your bid in real time when your ad may be less likely to convert to a sale. Use AUTO_FOR_SALES to increase your bid in real time when your ad may be more likely to convert to a sale or lower your bid when less likely to convert to a sale. Use MANUAL to use your exact bid along with any manual adjustments.",
            "type": "string",
            "enum": [
              "LEGACY_FOR_SALES",
              "AUTO_FOR_SALES",
              "MANUAL",
              "RULE_BASED"
            ]
          }
        }
      },
      "SponsoredProductsTargetMutationExceptionResponseContent": {
        "description": "Exception resulting in mutating campaign management entities",
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsInvalidArgumentErrorCode"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsTargetMutationError"
            }
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "SponsoredProductsListSponsoredProductsDraftCampaignsRequestContent": {
        "type": "object",
        "properties": {
          "campaignIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          },
          "portfolioIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsReducedObjectIdFilter"
          },
          "maxResults": {
            "format": "int32",
            "description": "Number of records to include in the paginated response. Defaults to max page size for given API",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          },
          "includeExtendedDataFields": {
            "description": "Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus",
            "type": "boolean"
          },
          "nameFilter": {
            "$ref": "#/components/schemas/SponsoredProductsNameFilter"
          }
        }
      },
      "SponsoredProductsTargetPromotionGroupV2": {
        "description": "A Target Promotion Group that groups an Auto-Targeting Campaign/AdGroup with a Manual-Targeting Keyword Campaign/AdGroup, and a\nManual-Targeting Product Campaign/AdGroup",
        "type": "object",
        "properties": {
          "autoTargetingCampaignId": {
            "description": "The campaign Id of the auto-targeting AdGroup associated with the target promotion group",
            "type": "string"
          },
          "targetPromotionGroupId": {
            "description": "The id of the target promotion group.",
            "type": "string"
          },
          "autoTargetingCampaignAdIds": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "The list of Product Ad Ids in the Auto-Targeting campaign's Ad Group that's tied to the Target Promotion Group.",
            "type": "array",
            "items": {
              "description": "Entity object identifier",
              "type": "string"
            }
          },
          "state": {
            "description": "The state of the target promotion group.",
            "type": "string"
          },
          "targetPromotionGroupName": {
            "description": "The name of the target promotion group.",
            "type": "string"
          },
          "manualAdGroups": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "The manual targeting AdGroups associated with the target promotion group.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsResponseAdGroup"
            }
          },
          "autoTargetingCampaignAdGroupId": {
            "description": "The Id of the auto-targeting AdGroup associated with the target promotion group",
            "type": "string"
          },
          "addNegativeTargetToSourceAdGroup": {
            "description": "If selected, every promoted target will be added as a negative target to the source Auto-Targeting ad group. This stops the ad group from\n    continuing to select targets that have already been promoted.",
            "type": "boolean"
          }
        }
      },
      "SponsoredProductsUnavailableResponseContent": {
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/SponsoredProductsErrorCode"
          },
          "message": {
            "type": "string"
          },
          "httpStatusCode": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ]
      },
      "RuleConditionMetric": {
        "description": "The advertising performance metric. ROAS is the only supported metric.",
        "type": "string",
        "enum": [
          "ROAS",
          "AVERAGE_BID"
        ]
      },
      "KeywordTargetResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/KeywordTarget"
          }
        ],
        "properties": {
          "suggestedBid": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BidSuggestion"
              }
            ]
          },
          "translation": {
            "description": "The translation of keyword if a locale is passed in",
            "type": "string"
          },
          "rank": {
            "description": "The keyword target rank",
            "type": "number"
          }
        }
      },
      "campaignOptimizationId": {
        "description": "The persistent rule identifier.",
        "type": "string",
        "maxLength": 355
      },
      "CountryWithTargets": {
        "properties": {
          "targets": {
            "minItems": 0,
            "maxItems": 100,
            "description": "A list of targets that need to be ranked",
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/KeywordTarget"
                }
              ]
            }
          }
        }
      },
      "SponsoredProductsProductAdAccessErrorSelector": {
        "type": "object",
        "properties": {
          "entityNotFoundError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityNotFoundError"
          },
          "missingValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMissingValueError"
          },
          "malformedValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMalformedValueError"
          },
          "internalServerError": {
            "$ref": "#/components/schemas/SponsoredProductsInternalServerError"
          },
          "rangeError": {
            "$ref": "#/components/schemas/SponsoredProductsRangeError"
          },
          "otherError": {
            "$ref": "#/components/schemas/SponsoredProductsOtherError"
          },
          "invalidInputError": {
            "$ref": "#/components/schemas/SponsoredProductsInvalidInputError"
          },
          "throttledError": {
            "$ref": "#/components/schemas/SponsoredProductsThrottledError"
          }
        }
      },
      "SponsoredProductsPlacementBidding": {
        "type": "object",
        "properties": {
          "percentage": {
            "format": "int32",
            "maximum": 900,
            "type": "integer",
            "minimum": 0
          },
          "placement": {
            "$ref": "#/components/schemas/SponsoredProductsPlacement"
          }
        }
      },
      "ThemeBasedBidRecommendation": {
        "type": "object",
        "properties": {
          "theme": {
            "$ref": "#/components/schemas/Theme"
          },
          "bidRecommendationsForTargetingExpressions": {
            "description": "The bid recommendations for targeting expressions listed in the request.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BidRecommendationPerTargetingExpression"
            }
          },
          "impactMetrics": {
            "$ref": "#/components/schemas/ImpactMetrics"
          }
        },
        "required": [
          "theme",
          "bidRecommendationsForTargetingExpressions"
        ],
        "example": {
          "theme": "CONVERSION_OPPORTUNITIES",
          "bidRecommendationsForTargetingExpressions": [
            {
              "bidValues": [
                {
                  "suggestedBid": "1"
                },
                {
                  "suggestedBid": "1.5"
                },
                {
                  "suggestedBid": "2"
                }
              ],
              "targetingExpression": {
                "type": "CLOSE_MATCH"
              }
            },
            {
              "bidValues": [
                {
                  "suggestedBid": "1.1"
                },
                {
                  "suggestedBid": "1.4"
                },
                {
                  "suggestedBid": "2.2"
                }
              ],
              "targetingExpression": {
                "type": "LOOSE_MATCH"
              }
            }
          ],
          "impactMetrics": {
            "clicks": {
              "values": [
                {
                  "lower": "30",
                  "upper": "70"
                },
                {
                  "lower": "80",
                  "upper": "90"
                },
                {
                  "lower": "95",
                  "upper": "120"
                }
              ]
            },
            "orders": {
              "values": [
                {
                  "lower": "3",
                  "upper": "6"
                },
                {
                  "lower": "7",
                  "upper": "10"
                },
                {
                  "lower": "11",
                  "upper": "15"
                }
              ]
            }
          }
        }
      },
      "SponsoredProductsCreateGlobalAdGroup": {
        "type": "object",
        "properties": {
          "campaignId": {
            "description": "The identifier of the campaign to which the AdGroup is associated.",
            "type": "string"
          },
          "applicableMarketplaces": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "description": "The name of the ad group.",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateGlobalEntityState"
          },
          "defaultBid": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalBid"
          }
        },
        "required": [
          "campaignId",
          "defaultBid",
          "name",
          "state"
        ]
      },
      "SponsoredProductsDuplicateValueErrorReason": {
        "type": "string",
        "enum": [
          "DUPLICATE_VALUE",
          "NAME_NOT_UNIQUE",
          "MARKETPLACE_ATTRIBUTES_REPEATED"
        ]
      },
      "SBCampaignBudgetRule": {
        "type": "object",
        "required": [
          "ruleId"
        ],
        "properties": {
          "ruleState": {
            "$ref": "#/components/schemas/state"
          },
          "lastUpdatedDate": {
            "format": "int64",
            "description": "Epoch time of budget rule update. Read-only.",
            "type": "number"
          },
          "createdDate": {
            "format": "int64",
            "description": "Epoch time of budget rule creation. Read-only.",
            "type": "number"
          },
          "ruleDetails": {
            "$ref": "#/components/schemas/SBBudgetRuleDetails"
          },
          "ruleId": {
            "description": "The budget rule identifier.",
            "type": "string"
          },
          "ruleStatus": {
            "description": "The budget rule evaluation status. Read-only.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsBulkGlobalProductAdOperationResponse": {
        "type": "object",
        "properties": {
          "success": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsGlobalProductAdSuccessResponseItem"
            }
          },
          "error": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsGlobalProductAdFailureResponseItem"
            }
          }
        }
      },
      "SponsoredProductsDeleteSponsoredProductsAdGroupsResponseContent": {
        "type": "object",
        "properties": {
          "adGroups": {
            "$ref": "#/components/schemas/SponsoredProductsBulkAdGroupOperationResponse"
          }
        },
        "required": [
          "adGroups"
        ]
      },
      "SponsoredProductsDraftProductAdMutationError": {
        "type": "object",
        "properties": {
          "errorType": {
            "description": "The type of the error",
            "type": "string"
          },
          "errorValue": {
            "$ref": "#/components/schemas/SponsoredProductsDraftProductAdMutationErrorSelector"
          }
        },
        "required": [
          "errorType",
          "errorValue"
        ]
      },
      "Recurrence": {
        "type": "object",
        "properties": {
          "intraDaySchedule": {
            "maxItems": 1,
            "description": "List of objects representing start and end time of desired intra-day budget rule window",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/timeOfDay"
            }
          },
          "type": {
            "$ref": "#/components/schemas/RecurrenceType"
          },
          "daysOfWeek": {
            "description": "Object representing days of the week for weekly type rule. It is not required for daily recurrence type",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DayOfWeek"
            }
          }
        }
      },
      "KeywordGroup": {
        "description": "Keyword group. Represents a high level keyword targeting intent. e.g. the keyword group \"gift\" can target relevant search queries containing the word gift",
        "type": "object",
        "required": [
          "id",
          "text"
        ],
        "properties": {
          "impactSummary": {
            "description": "Summary of impacts.",
            "type": "string"
          },
          "description": {
            "description": "Detailed Keyword group description.",
            "type": "string"
          },
          "sampleKeywords": {
            "minItems": 0,
            "maxItems": 10,
            "description": "Sample keywords that match the group.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "description": "Unique Identifier for the keyword group. To be passed during targeting clause creation.",
            "type": "string"
          },
          "text": {
            "description": "Keyword group text. Can be used for display purposes.",
            "type": "string"
          }
        }
      },
      "AccessDeniedException": {
        "description": "Returns information about an AccessDeniedException.",
        "type": "object",
        "properties": {
          "code": {
            "description": "The HTTP status code of the response.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        }
      },
      "GlobalBudgetRecommendationRequest": {
        "type": "object",
        "required": [
          "campaignIds"
        ],
        "properties": {
          "campaignIds": {
            "minItems": 1,
            "maxItems": 100,
            "description": "List of campaign Ids",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SponsoredProductsCreateOrUpdateDraftCampaignBudget": {
        "type": "object",
        "properties": {
          "budgetType": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateDraftCampaignBudgetType"
          },
          "budget": {
            "format": "double",
            "description": "Monetary value",
            "type": "number"
          }
        },
        "required": [
          "budget",
          "budgetType"
        ]
      },
      "SPTORBudgetRecommendationError": {
        "type": "object",
        "properties": {
          "code": {
            "description": "The HTTP status code of the response.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        },
        "example": {
          "code": "200",
          "details": "success"
        }
      },
      "SponsoredProductsAdEligibilityError": {
        "description": "Errors related to ad eligibility",
        "type": "object",
        "properties": {
          "reason": {
            "$ref": "#/components/schemas/SponsoredProductsAdEligibilityErrorReason"
          },
          "marketplace": {
            "$ref": "#/components/schemas/SponsoredProductsMarketplace"
          },
          "cause": {
            "$ref": "#/components/schemas/SponsoredProductsErrorCause"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          }
        },
        "required": [
          "message",
          "reason"
        ]
      },
      "SponsoredProductsUpdateCampaignNegativeKeyword": {
        "type": "object",
        "properties": {
          "keywordId": {
            "description": "The identifier of the keyword.",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateEntityState"
          }
        },
        "required": [
          "keywordId"
        ]
      },
      "SponsoredProductsTargetingExpressionPredicateWithoutOther": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/SponsoredProductsTargetingExpressionPredicateTypeWithoutOther"
          },
          "value": {
            "description": "The expression value",
            "type": "string"
          }
        },
        "required": [
          "type"
        ]
      },
      "OptimizationRulesAPISwaggerRequestFilter": {
        "description": "Filter used in search requests.",
        "type": "object",
        "properties": {
          "optimizationRuleFilter": {
            "$ref": "#/components/schemas/OptimizationRulesAPISwaggerOptimizationRuleFilter"
          },
          "campaignFilter": {
            "$ref": "#/components/schemas/OptimizationRulesAPISwaggerCampaignFilter"
          }
        }
      },
      "SponsoredProductsGetTargetPromotionGroupsRecommendationsInternalResponseContent": {
        "type": "object",
        "properties": {
          "totalResults": {
            "description": "Total number of records available",
            "type": "integer"
          },
          "nextToken": {
            "description": "Token for fetching the next page",
            "type": "string"
          },
          "targets": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "List of optimized targets for the request, as recommended by Amazon heuristics",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsRecommendedTarget"
            }
          }
        },
        "required": [
          "targets",
          "totalResults"
        ]
      },
      "SponsoredProductsCopyCampaign": {
        "type": "object",
        "properties": {
          "targetCampaignAttributes": {
            "$ref": "#/components/schemas/SponsoredProductsTargetCampaignAttributes"
          },
          "sourceCampaignId": {
            "description": "entity object identifier",
            "type": "string"
          }
        },
        "required": [
          "sourceCampaignId",
          "targetCampaignAttributes"
        ]
      },
      "OptimizationRulesAPISwaggerDeleteOptimizationRulesResponse": {
        "description": "Response object from deleting optimization rules.",
        "type": "object",
        "properties": {
          "success": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptimizationRulesAPISwaggerDeleteOptimizationRulesResponseSuccessItem"
            }
          },
          "error": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptimizationRulesAPISwaggerDeleteOptimizationRulesResponseErrorItem"
            }
          }
        }
      },
      "SponsoredProductsGlobalCampaignExtendedData": {
        "type": "object",
        "properties": {
          "servingStatus": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalCampaignServingStatus"
          }
        }
      },
      "GenresLoP": {
        "description": "List of Genres in a language of preference (LoP). Use the POST /sp/targets/category/{categoryId}/refinements endpoint to retrieve Genre Node IDs. Genres are only available for categories related to books.",
        "type": "array",
        "items": {
          "minItems": 0,
          "maxItems": 300,
          "$ref": "#/components/schemas/GenreLoP"
        }
      },
      "GlobalBudgetRulesRecommendationEventRequest": {
        "type": "object",
        "properties": {
          "campaignId": {
            "description": "The campaign identifier.",
            "type": "string"
          }
        },
        "required": [
          "campaignId"
        ]
      },
      "SponsoredProductsCreateTargetPromotionGroupTargetsInternalRequestContent": {
        "type": "object",
        "properties": {
          "targetPromotionGroupId": {
            "description": "Entity object identifier",
            "type": "string"
          },
          "apiGatewayContext": {
            "$ref": "#/components/schemas/SponsoredProductsApiGatewayContext"
          },
          "targets": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCreateTargetRequest"
            }
          }
        },
        "required": [
          "apiGatewayContext",
          "targetPromotionGroupId"
        ]
      },
      "SponsoredProductsDraftCampaignPromotionError": {
        "type": "object",
        "properties": {
          "errorType": {
            "description": "The type of the error",
            "type": "string"
          },
          "errorValue": {
            "$ref": "#/components/schemas/SponsoredProductsDraftCampaignPromotionErrorSelector"
          }
        },
        "required": [
          "errorType",
          "errorValue"
        ]
      },
      "BudgetUsageCampaignResponse": {
        "type": "object",
        "properties": {
          "success": {
            "description": "List of budget usage percentages that were successfully pulled",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BudgetUsageCampaign"
            }
          },
          "error": {
            "description": "List of budget usage percentages that failed to pull",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BudgetUsageCampaignBatchError"
            }
          }
        }
      },
      "SponsoredProductsUpdateSponsoredProductsGlobalCampaignNegativeKeywordsResponseContent": {
        "type": "object",
        "properties": {
          "campaignNegativeKeywords": {
            "$ref": "#/components/schemas/SponsoredProductsBulkGlobalCampaignNegativeKeywordOperationResponse"
          }
        },
        "required": [
          "campaignNegativeKeywords"
        ]
      },
      "SBBudgetRuleDetails": {
        "type": "object",
        "properties": {
          "duration": {
            "$ref": "#/components/schemas/RuleDuration"
          },
          "recurrence": {
            "$ref": "#/components/schemas/Recurrence"
          },
          "ruleType": {
            "$ref": "#/components/schemas/SBRuleType"
          },
          "budgetIncreaseBy": {
            "$ref": "#/components/schemas/budgetIncreaseBy"
          },
          "name": {
            "description": "The budget rule name. Required to be unique within a campaign.",
            "type": "string",
            "maxLength": 355
          },
          "performanceMeasureCondition": {
            "$ref": "#/components/schemas/PerformanceMeasureConditionForSB"
          }
        }
      },
      "Benchmark": {
        "description": "Forecasted impact metrics for next 7 days or during special days.",
        "properties": {
          "benchmarkStatus": {
            "description": "Specifies the processing status of the benchmark. Success - If all fields in values property (impressions, clicks, conversions) have all non-null values. Failed - If all fields in values property have all null values. Partial - If some of the fields (impressions, clicks, or conversions) in values property have null values.",
            "type": "string",
            "enum": [
              "success",
              "failed",
              "partial"
            ]
          },
          "values": {
            "$ref": "#/components/schemas/Values"
          }
        }
      },
      "SponsoredProductsBulkGlobalKeywordOperationResponse": {
        "type": "object",
        "properties": {
          "success": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsGlobalKeywordSuccessResponseItem"
            }
          },
          "error": {
            "minItems": 0,
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsGlobalKeywordFailureResponseItem"
            }
          }
        }
      },
      "SponsoredProductsListSponsoredProductsDraftNegativeTargetingClausesResponseContent": {
        "type": "object",
        "properties": {
          "totalResults": {
            "format": "int64",
            "description": "The total number of entities",
            "type": "integer"
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          },
          "negativeTargetingClauses": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsDraftNegativeTargetingClause"
            }
          }
        }
      },
      "OptimizationRulesAPISwaggerDisassociateOptimizationRulesResponseErrorItem": {
        "type": "object",
        "properties": {
          "index": {
            "description": "Index of the failed disassociation pair in the request.",
            "type": "integer"
          },
          "errors": {
            "minItems": 1,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OptimizationRulesAPISwaggerOptimizationRuleError"
            }
          }
        },
        "required": [
          "index",
          "errors"
        ]
      },
      "SponsoredProductsProductIdentifierError": {
        "description": "Errors related to product identifiers",
        "type": "object",
        "properties": {
          "reason": {
            "$ref": "#/components/schemas/SponsoredProductsProductIdentifierErrorReason"
          },
          "marketplace": {
            "$ref": "#/components/schemas/SponsoredProductsMarketplace"
          },
          "cause": {
            "$ref": "#/components/schemas/SponsoredProductsErrorCause"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          }
        },
        "required": [
          "message",
          "reason"
        ]
      },
      "SponsoredProductsCreateDraftAdGroup": {
        "type": "object",
        "properties": {
          "campaignId": {
            "description": "The identifier of the campaign to which the keyword is associated.",
            "type": "string"
          },
          "name": {
            "description": "The name of the ad group.",
            "type": "string"
          },
          "defaultBid": {
            "format": "double",
            "description": "A bid value for use when no bid is specified for keywords in the ad group. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).",
            "type": "number"
          }
        },
        "required": [
          "campaignId",
          "defaultBid"
        ]
      },
      "OptimizationRulesAPISwaggerRuleStatus": {
        "description": "The status of a rule. Only ENABLED and PAUSED are accepted in requests.",
        "type": "string",
        "enum": [
          "SCHEDULED",
          "ENABLED",
          "PAUSED",
          "ENDED"
        ]
      },
      "GlobalBudgetRulesRecommendationEventException": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GlobalBudgetRulesRecommendationError"
            }
          }
        }
      },
      "SponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent": {
        "type": "object",
        "properties": {
          "negativeTargetingClauses": {
            "minItems": 0,
            "maxItems": 1000,
            "description": "An array of negativeTargeting.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCreateNegativeTargetingClause"
            }
          }
        },
        "required": [
          "negativeTargetingClauses"
        ]
      },
      "SponsoredProductsDeleteSponsoredProductsGlobalAdGroupsResponseContent": {
        "type": "object",
        "properties": {
          "adGroups": {
            "$ref": "#/components/schemas/SponsoredProductsBulkGlobalAdGroupOperationResponse"
          }
        },
        "required": [
          "adGroups"
        ]
      },
      "SponsoredProductsDraftCampaignNegativeKeyword": {
        "type": "object",
        "properties": {
          "keywordId": {
            "description": "The identifier of the keyword.",
            "type": "string"
          },
          "campaignId": {
            "description": "The identifier of the draft to which the keyword is associated.",
            "type": "string"
          },
          "matchType": {
            "$ref": "#/components/schemas/SponsoredProductsNegativeMatchType"
          },
          "keywordText": {
            "description": "The keyword text.",
            "type": "string"
          },
          "extendedData": {
            "$ref": "#/components/schemas/SponsoredProductsDraftCampaignNegativeKeywordExtendedData"
          }
        },
        "required": [
          "campaignId",
          "keywordId",
          "keywordText",
          "matchType"
        ]
      },
      "SponsoredProductsGetTargetPromotionGroupsRecommendationsInternalRequestContent": {
        "type": "object",
        "properties": {
          "campaignIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          },
          "clientId": {
            "type": "string"
          },
          "apiScope": {
            "type": "string"
          },
          "maxResults": {
            "maximum": 1000,
            "type": "integer",
            "minimum": 1
          },
          "nextToken": {
            "description": "Token for fetching different pages in the response",
            "type": "string"
          },
          "adIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          },
          "adGroupIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          },
          "apiGatewayContext": {
            "$ref": "#/components/schemas/SponsoredProductsApiGatewayContext"
          }
        },
        "required": [
          "apiGatewayContext"
        ]
      },
      "SponsoredProductsCreateSponsoredProductsDraftKeywordsRequestContent": {
        "type": "object",
        "properties": {
          "keywords": {
            "minItems": 0,
            "maxItems": 100,
            "description": "An array of draft keywords.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsCreateDraftKeyword"
            }
          }
        },
        "required": [
          "keywords"
        ]
      },
      "SponsoredProductsDraftCampaignNegativeKeywordAccessErrorSelector": {
        "type": "object",
        "properties": {
          "entityNotFoundError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityNotFoundError"
          },
          "missingValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMissingValueError"
          },
          "malformedValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMalformedValueError"
          },
          "internalServerError": {
            "$ref": "#/components/schemas/SponsoredProductsInternalServerError"
          },
          "rangeError": {
            "$ref": "#/components/schemas/SponsoredProductsRangeError"
          },
          "otherError": {
            "$ref": "#/components/schemas/SponsoredProductsOtherError"
          },
          "throttledError": {
            "$ref": "#/components/schemas/SponsoredProductsThrottledError"
          }
        }
      },
      "SponsoredProductsLocaleErrorReason": {
        "type": "string",
        "enum": [
          "INVALID_LOCALE"
        ]
      },
      "SponsoredProductsApiGatewayContext": {
        "type": "object",
        "properties": {
          "marketplaceId": {
            "type": "string"
          },
          "clientId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "entityType": {
            "type": "string"
          },
          "entityId": {
            "type": "string"
          },
          "contentType": {
            "type": "string"
          },
          "advertiserId": {
            "type": "string"
          }
        }
      },
      "SponsoredProductsCreateSponsoredProductsDraftTargetingClausesResponseContent": {
        "type": "object",
        "properties": {
          "targetingClauses": {
            "$ref": "#/components/schemas/SponsoredProductsBulkDraftTargetingClauseOperationResponse"
          }
        },
        "required": [
          "targetingClauses"
        ]
      },
      "SponsoredProductsKeywordServingStatus": {
        "type": "string",
        "enum": [
          "TARGETING_CLAUSE_STATUS_LIVE",
          "TARGETING_CLAUSE_POLICING_SUSPENDED",
          "TARGETING_CLAUSE_PAUSED",
          "TARGETING_CLAUSE_ARCHIVED",
          "TARGETING_CLAUSE_BLOCKED",
          "AD_GROUP_STATUS_ENABLED",
          "AD_GROUP_PAUSED",
          "AD_GROUP_ARCHIVED",
          "AD_GROUP_INCOMPLETE",
          "AD_GROUP_POLICING_PENDING_REVIEW",
          "AD_GROUP_POLICING_CREATIVE_REJECTED",
          "AD_GROUP_LOW_BID",
          "CAMPAIGN_STATUS_ENABLED",
          "CAMPAIGN_PAUSED",
          "CAMPAIGN_ARCHIVED",
          "PENDING_REVIEW",
          "REJECTED",
          "PENDING_START_DATE",
          "ENDED",
          "CAMPAIGN_OUT_OF_BUDGET",
          "CAMPAIGN_INCOMPLETE",
          "PORTFOLIO_STATUS_ENABLED",
          "PORTFOLIO_PAUSED",
          "PORTFOLIO_ARCHIVED",
          "PORTFOLIO_OUT_OF_BUDGET",
          "PORTFOLIO_PENDING_START_DATE",
          "PORTFOLIO_ENDED",
          "ADVERTISER_POLICING_SUSPENDED",
          "ADVERTISER_POLICING_PENDING_REVIEW",
          "ADVERTISER_ARCHIVED",
          "ADVERTISER_PAUSED",
          "ADVERTISER_OUT_OF_BUDGET",
          "ADVERTISER_PAYMENT_FAILURE",
          "ACCOUNT_OUT_OF_BUDGET",
          "OTHER"
        ]
      },
      "SponsoredProductsNegativeTargetMutationError": {
        "type": "object",
        "properties": {
          "errorType": {
            "description": "The type of the error",
            "type": "string"
          },
          "errorValue": {
            "$ref": "#/components/schemas/SponsoredProductsNegativeTargetMutationErrorSelector"
          }
        },
        "required": [
          "errorType",
          "errorValue"
        ]
      },
      "SponsoredProductsMatchedAdGroup": {
        "description": "Response object of an adGroup that contains the same ASIN/SKUs as the AT adGroup in the request.",
        "type": "object",
        "properties": {
          "adGroupName": {
            "description": "The name of the adGroup.",
            "type": "string"
          },
          "campaignState": {
            "description": "The state of the campaign that the adGroup belongs to.",
            "type": "string"
          },
          "campaignTargetingType": {
            "$ref": "#/components/schemas/SponsoredProductsCampaignTargetingType"
          },
          "adGroupTargetingType": {
            "$ref": "#/components/schemas/SponsoredProductsAdGroupTargetingType"
          },
          "campaignId": {
            "description": "The unique identifier of the of the campaign that the adGroup belongs to.",
            "type": "string"
          },
          "state": {
            "description": "The state of the adGroup.",
            "type": "string"
          },
          "campaignName": {
            "description": "Name of the campaign that the adGroup belongs to.",
            "type": "string"
          },
          "adGroupId": {
            "description": "The unique identifier of the adGroup that contains the same ASIN/SKUs as the AT adGroup in the request.",
            "type": "string"
          },
          "defaultBid": {
            "format": "double",
            "description": "The defualt bid of the adGroup.",
            "type": "number",
            "minimum": 0
          },
          "budget": {
            "format": "double",
            "description": "The budget of the campaign that the adGroup belongs to.",
            "type": "number",
            "minimum": 0
          }
        }
      },
      "ComparisonOperator": {
        "description": "The comparison operator.",
        "type": "string",
        "enum": [
          "GREATER_THAN",
          "LESS_THAN",
          "EQUAL_TO",
          "LESS_THAN_OR_EQUAL_TO",
          "GREATER_THAN_OR_EQUAL_TO"
        ]
      },
      "SponsoredProductsUpdateTargetPromotionGroupsResponseContent": {
        "type": "object",
        "properties": {
          "targetPromotionGroup": {
            "$ref": "#/components/schemas/SponsoredProductsTargetPromotionGroupV2"
          }
        }
      },
      "MultiCountryTargetingExpressionType": {
        "type": "string",
        "enum": [
          "CLOSE_MATCH",
          "LOOSE_MATCH",
          "SUBSTITUTES",
          "COMPLEMENTS",
          "KEYWORD_BROAD_MATCH",
          "KEYWORD_EXACT_MATCH",
          "KEYWORD_PHRASE_MATCH",
          "PAT_ASIN",
          "PAT_CATEGORY",
          "PAT_CATEGORY_REFINEMENT",
          "KEYWORD_GROUP"
        ]
      },
      "CreateSBBudgetRulesRequest": {
        "type": "object",
        "properties": {
          "budgetRulesDetails": {
            "maxItems": 25,
            "description": "A list of budget rule details.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SBBudgetRuleDetails"
            }
          }
        }
      },
      "SponsoredProductsCreateGlobalCampaignNegativeKeyword": {
        "type": "object",
        "properties": {
          "campaignId": {
            "description": "The identifier of the campaign to which the keyword is associated.",
            "type": "string"
          },
          "matchType": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateNegativeMatchType"
          },
          "name": {
            "description": "Name for the keyword",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateGlobalEntityState"
          },
          "keywordText": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalNegativeKeywordText"
          }
        },
        "required": [
          "campaignId",
          "keywordText",
          "matchType",
          "state"
        ]
      },
      "SponsoredProductsCampaignAccessErrorSelector": {
        "type": "object",
        "properties": {
          "entityNotFoundError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityNotFoundError"
          },
          "missingValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMissingValueError"
          },
          "dateError": {
            "$ref": "#/components/schemas/SponsoredProductsDateError"
          },
          "malformedValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMalformedValueError"
          },
          "internalServerError": {
            "$ref": "#/components/schemas/SponsoredProductsInternalServerError"
          },
          "rangeError": {
            "$ref": "#/components/schemas/SponsoredProductsRangeError"
          },
          "otherError": {
            "$ref": "#/components/schemas/SponsoredProductsOtherError"
          },
          "throttledError": {
            "$ref": "#/components/schemas/SponsoredProductsThrottledError"
          },
          "invalidInputError": {
            "$ref": "#/components/schemas/SponsoredProductsInvalidInputError"
          }
        }
      },
      "SponsoredProductsDeleteSponsoredProductsGlobalNegativeTargetingClausesRequestContent": {
        "type": "object",
        "properties": {
          "negativeTargetIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          }
        }
      },
      "GetSPCampaignOptimizationRuleResponse": {
        "type": "object",
        "properties": {
          "CampaignOptimizationRule": {
            "$ref": "#/components/schemas/CampaignOptimizationRule"
          }
        }
      },
      "SPCampaignBudgetRule": {
        "type": "object",
        "required": [
          "ruleId"
        ],
        "properties": {
          "ruleState": {
            "$ref": "#/components/schemas/state"
          },
          "lastUpdatedDate": {
            "format": "int64",
            "description": "Epoch time of budget rule update. Read-only.",
            "type": "number"
          },
          "createdDate": {
            "format": "int64",
            "description": "Epoch time of budget rule creation. Read-only.",
            "type": "number"
          },
          "ruleDetails": {
            "$ref": "#/components/schemas/SPBudgetRuleDetails"
          },
          "ruleId": {
            "description": "The budget rule identifier.",
            "type": "string"
          },
          "ruleStatus": {
            "description": "The budget rule evaluation status. Read-only.",
            "type": "string"
          }
        }
      },
      "SponsoredProductsDeleteSponsoredProductsDraftCampaignsResponseContent": {
        "type": "object",
        "properties": {
          "campaigns": {
            "$ref": "#/components/schemas/SponsoredProductsBulkDraftCampaignOperationResponse"
          }
        },
        "required": [
          "campaigns"
        ]
      },
      "SponsoredProductsDraftNegativeTargetMutationErrorSelector": {
        "type": "object",
        "properties": {
          "entityNotFoundError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityNotFoundError"
          },
          "entityStateError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityStateError"
          },
          "missingValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMissingValueError"
          },
          "malformedValueError": {
            "$ref": "#/components/schemas/SponsoredProductsMalformedValueError"
          },
          "duplicateValueError": {
            "$ref": "#/components/schemas/SponsoredProductsDuplicateValueError"
          },
          "billingError": {
            "$ref": "#/components/schemas/SponsoredProductsBillingError"
          },
          "entityQuotaError": {
            "$ref": "#/components/schemas/SponsoredProductsEntityQuotaError"
          },
          "internalServerError": {
            "$ref": "#/components/schemas/SponsoredProductsInternalServerError"
          },
          "rangeError": {
            "$ref": "#/components/schemas/SponsoredProductsRangeError"
          },
          "otherError": {
            "$ref": "#/components/schemas/SponsoredProductsOtherError"
          },
          "throttledError": {
            "$ref": "#/components/schemas/SponsoredProductsThrottledError"
          }
        }
      },
      "SponsoredProductsNegativeKeywordSuccessResponseItem": {
        "type": "object",
        "properties": {
          "index": {
            "format": "int32",
            "description": "the index of the negativeKeyword in the array from the request body",
            "type": "integer",
            "minimum": 0
          },
          "negativeKeyword": {
            "$ref": "#/components/schemas/SponsoredProductsNegativeKeyword"
          },
          "negativeKeywordId": {
            "description": "the negativeKeyword ID",
            "type": "string"
          }
        },
        "required": [
          "index"
        ]
      },
      "SponsoredProductsUpdateCampaign": {
        "type": "object",
        "properties": {
          "portfolioId": {
            "nullable": true,
            "description": "The identifier of an existing portfolio to which the campaign is associated.",
            "type": "string"
          },
          "offAmazonSettings": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateOffAmazonSettings"
          },
          "endDate": {
            "nullable": true,
            "format": "date",
            "description": "The format of the date is YYYY-MM-DD.",
            "type": "string"
          },
          "campaignId": {
            "description": "The identifier of the campaign.",
            "type": "string"
          },
          "name": {
            "description": "The name of the campaign.",
            "type": "string"
          },
          "targetingType": {
            "$ref": "#/components/schemas/SponsoredProductsTargetingType"
          },
          "state": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateEntityState"
          },
          "dynamicBidding": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateDynamicBidding"
          },
          "startDate": {
            "format": "date",
            "description": "The format of the date is YYYY-MM-DD.",
            "type": "string"
          },
          "budget": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateBudget"
          },
          "tags": {
            "$ref": "#/components/schemas/SponsoredProductsTags"
          }
        },
        "required": [
          "campaignId"
        ]
      },
      "SponsoredProductsGlobalAdGroupSuccessResponseItem": {
        "type": "object",
        "properties": {
          "adGroup": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalAdGroup"
          },
          "index": {
            "format": "int32",
            "description": "the index of the adGroup in the array from the request body",
            "type": "integer",
            "minimum": 0
          },
          "adGroupId": {
            "description": "the adGroup ID",
            "type": "string"
          }
        },
        "required": [
          "index"
        ]
      },
      "SponsoredProductsPromoteSponsoredProductsDraftCampaignsRequestContent": {
        "type": "object",
        "properties": {
          "campaignIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          }
        },
        "required": [
          "campaignIdFilter"
        ]
      },
      "CreateAssociatedBudgetRulesResponse": {
        "type": "object",
        "properties": {
          "responses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssociatedBudgetRuleResponse"
            }
          }
        }
      },
      "BudgetRuleError": {
        "description": "The Error Response Object.",
        "type": "object",
        "properties": {
          "code": {
            "description": "An enumerated error code for machine use.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        }
      },
      "ProductRecommendationsByTheme": {
        "description": "Product recommendations grouped by theme attribute.",
        "type": "object",
        "properties": {
          "nextCursor": {
            "description": "An identifier to fetch next set of `ThemeRecommendation` records in the result set if available. This will be null when at the end of result set.",
            "type": "string",
            "example": "MTAxNTExOzI5NDE="
          },
          "previousCursor": {
            "description": "Optional parameter that links to the previous result set served to the requester.",
            "type": "string",
            "example": "OTQ1wNzI5NDE="
          },
          "recommendations": {
            "description": "An array of `ThemeRecommendation` objects",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ThemeRecommendation"
            }
          }
        }
      },
      "BidSuggestion": {
        "description": "Suggested bid range in major and minor currency units (example: dollars and cents).",
        "properties": {
          "suggested": {
            "format": "double",
            "description": "The suggested bid",
            "type": "number"
          },
          "rangeStart": {
            "format": "double",
            "description": "The bid range start",
            "type": "number"
          },
          "bidRecId": {
            "description": "The bid recommendation id",
            "type": "string"
          },
          "rangeEnd": {
            "format": "double",
            "description": "The bid range end",
            "type": "number"
          }
        }
      },
      "SponsoredProductsGlobalCampaignMutationSuccessResponseItem": {
        "type": "object",
        "properties": {
          "campaignId": {
            "description": "the campaign ID",
            "type": "string"
          },
          "index": {
            "format": "int32",
            "description": "the index of the campaign in the array from the request body",
            "type": "integer",
            "minimum": 0
          },
          "campaign": {
            "$ref": "#/components/schemas/SponsoredProductsGlobalCampaign"
          }
        },
        "required": [
          "index"
        ]
      },
      "RankedKeywordTargetsForAdGroupRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/KeywordTargetRankRecommendationRequest"
          }
        ],
        "description": "This request type is used to retrieve recommended keyword targets for an existing ad group. Set the recommendationType to KEYWORDS_FOR_ADGROUP to use this request type.",
        "required": [
          "recommendationType",
          "adGroupId",
          "campaignId"
        ],
        "properties": {
          "campaignId": {
            "description": "The identifier of the campaign",
            "type": "string"
          },
          "recommendationType": {
            "description": "The recommendationType to retrieve recommended keyword targets for an existing ad group.",
            "type": "string",
            "enum": [
              "KEYWORDS_FOR_ADGROUP"
            ]
          },
          "bidsEnabled": {
            "default": "true",
            "description": "Set this parameter to false if you do not want to retrieve bid suggestions for your keyword targets. Defaults to true.",
            "type": "boolean"
          },
          "adGroupId": {
            "description": "The identifier of the ad group",
            "type": "string"
          }
        }
      },
      "SponsoredProductsCreateOrUpdateDynamicBidding": {
        "description": "Specifies bidding controls. DynamicBidding is optional for both Create and Update requests.\nFor Create Campaign requests, if you don't specify dynamicBidding, default strategy of `LEGACY_FOR_SALES` will be applied.",
        "type": "object",
        "properties": {
          "shopperCohortBidding": {
            "minItems": 0,
            "maxItems": 1,
            "description": "Specifies Shopper Cohorts based bid adjustment controls. `shopperCohortBidding` is optional for both Create and Update requests.\nYou can enable this control to adjust your bid based on the shopper cohorts. The percentage value set is the percentage of the original bid including any other bid adjustments such as `placementBidding`. For example, a `placementBidding` with 50% adjustment on a $1.00 bid would increase the bid to $1.50, and a `shopperCohortBidding` with 100% adjustment would further increase the bid to $3.00.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsShopperCohortBidding"
            }
          },
          "placementBidding": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SponsoredProductsPlacementBidding"
            }
          },
          "strategy": {
            "$ref": "#/components/schemas/SponsoredProductsCreateOrUpdateBiddingStrategy"
          }
        }
      },
      "SponsoredProductsTargetingExpressionPredicateType": {
        "description": "The type of targeting expression. You can specify values for the following predicates:\n| Predicate | Description |\n| --- | --- |\n| `QUERY_BROAD_REL_MATCHES` | Auto Targeting - cannot be manually created - corresponds to the `Loose match` target type in the UI, this will show your ad to shoppers who use search terms loosely related to your products.|\n| `QUERY_HIGH_REL_MATCHES` | Auto Targeting - cannot be manually created - corresponds to the `Close match` target type in the UI, this will show your ad to shoppers who use search terms closely related to your products.|\n| `ASIN_ACCESSORY_RELATED` | Auto Targeting - cannot be manually created - corresponds to the `Complements` target type in the UI, this will show your ad to shoppers who view the detail pages of products that complement your product.|\n| `ASIN_SUBSTITUTE_RELATED` | Auto Targeting - cannot be manually created - corresponds to the `Substitutes` target type in the UI, this will show your ad to shoppers who use detail pages of products similar to yours.|\n| `ASIN_CATEGORY_SAME_AS` | Target the category that is the same as the category expressed |\n| `ASIN_BRAND_SAME_AS` | Target the brand that is the same as the brand expressed. |\n| `ASIN_PRICE_LESS_THAN` | Target a price that is less than the price expressed. |\n| `ASIN_PRICE_BETWEEN` | Target a price that is between the prices expressed. |\n| `ASIN_PRICE_GREATER_THAN` | Target a price that is greater than the price expressed. |\n| `ASIN_REVIEW_RATING_LESS_THAN` | Target a review rating less than the review rating that is expressed. |\n| `ASIN_REVIEW_RATING_BETWEEN` | Target a review rating that is between the review ratings expressed. |\n| `ASIN_REVIEW_RATING_GREATER_THAN` | Target a review rating that is greater than the review rating expressed. |\n| `ASIN_SAME_AS` | Target an ASIN that is the same as the ASIN expressed. |\n| `ASIN_IS_PRIME_SHIPPING_ELIGIBLE` | Target products that are Prime Shipping Eligible. This refinement can be applied at a category or brand level only. |\n| `ASIN_AGE_RANGE_SAME_AS` | Target an age range that is in the expressed range. This refinement can be applied for toys and games categories only. |\n| `ASIN_GENRE_SAME_AS` | Target products related to the expressed genre. This refinement can be applied for Books and eBooks categories only.   |\n| `ASIN_EXPANDED_FROM` | Target products similar in performance to the ASIN expressed.   |\n| `KEYWORD_GROUP_SAME_AS` | Target the keyword group that is the same as the keyword group expressed (Beta coming soon). |\n| `OTHER` | Other Type.   |",
        "type": "string",
        "enum": [
          "ASIN_CATEGORY_SAME_AS",
          "ASIN_BRAND_SAME_AS",
          "ASIN_PRICE_LESS_THAN",
          "ASIN_PRICE_BETWEEN",
          "ASIN_PRICE_GREATER_THAN",
          "ASIN_REVIEW_RATING_LESS_THAN",
          "ASIN_REVIEW_RATING_BETWEEN",
          "ASIN_REVIEW_RATING_GREATER_THAN",
          "ASIN_SAME_AS",
          "QUERY_BROAD_REL_MATCHES",
          "QUERY_HIGH_REL_MATCHES",
          "ASIN_SUBSTITUTE_RELATED",
          "ASIN_ACCESSORY_RELATED",
          "ASIN_AGE_RANGE_SAME_AS",
          "ASIN_GENRE_SAME_AS",
          "ASIN_IS_PRIME_SHIPPING_ELIGIBLE",
          "ASIN_EXPANDED_FROM",
          "KEYWORD_GROUP_SAME_AS",
          "OTHER"
        ]
      },
      "SponsoredProductsDeleteSponsoredProductsProductAdsRequestContent": {
        "type": "object",
        "properties": {
          "adIdFilter": {
            "$ref": "#/components/schemas/SponsoredProductsObjectIdFilter"
          }
        },
        "required": [
          "adIdFilter"
        ]
      },
      "SponsoredProductsMarketplaceBudget": {
        "type": "object",
        "properties": {
          "marketplace": {
            "$ref": "#/components/schemas/SponsoredProductsMarketplace"
          },
          "budget": {
            "format": "double",
            "description": "Monetary value",
            "type": "number"
          }
        },
        "required": [
          "budget"
        ]
      },
      "SponsoredProductsParentEntityError": {
        "description": "Errors related to parent entity",
        "type": "object",
        "properties": {
          "reason": {
            "$ref": "#/components/schemas/SponsoredProductsParentEntityErrorReason"
          },
          "cause": {
            "$ref": "#/components/schemas/SponsoredProductsErrorCause"
          },
          "message": {
            "description": "Human readable error message",
            "type": "string"
          }
        },
        "required": [
          "message",
          "reason"
        ]
      },
      "SponsoredProductsDraftTargetingClauseSuccessResponseItem": {
        "type": "object",
        "properties": {
          "targetingClause": {
            "$ref": "#/components/schemas/SponsoredProductsDraftTargetingClause"
          },
          "targetId": {
            "description": "the draftTargetingClause ID",
            "type": "string"
          },
          "index": {
            "format": "int32",
            "description": "the index of the draftTargetingClause in the array from the request body",
            "type": "integer",
            "minimum": 0
          }
        },
        "required": [
          "index"
        ]
      },
      "SponsoredProductsCopySponsoredProductsCampaignsStatusResponseContent": {
        "type": "object",
        "properties": {
          "asyncTaskDetail": {
            "$ref": "#/components/schemas/SponsoredProductsCopyCampaignTaskDetails"
          }
        },
        "required": [
          "asyncTaskDetail"
        ]
      }
    },
    "requestBodies": {},
    "responses": {},
    "callbacks": {},
    "links": {},
    "securitySchemes": {},
    "parameters": {}
  },
  "openapi": "3.0.1"
}
