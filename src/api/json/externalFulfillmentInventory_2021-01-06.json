{
  "swagger": "2.0",
  "info": {
    "title": "Selling Partner API for External Fulfillment Inventory Management",
    "version": "Version: 2021-01-06",
    "description": "This section provides APIs for selling partners to work with External Fulfillment inventory services."
  },
  "host": "sellingpartnerapi-na.amazon.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/externalFulfillment/inventory/2021-01-06/locations/{locationId}/skus/{skuId}": {
      "get": {
        "operationId": "getInventory",
        "description": "Get the current inventory for a given SKU at a given location.",
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "description": "String",
            "required": true,
            "type": "string"
          },
          {
            "name": "skuId",
            "in": "path",
            "description": "String",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "examples": {
              "application/json": {
                "sellableQuantity": 15,
                "reservedQuantity": 0,
                "marketplaceChannelInventories": [
                  {
                    "sellableQuantity": 13,
                    "bufferedQuantity": 2,
                    "marketplaceAttributes": {
                      "marketplaceName": "AMAZON_IN",
                      "channelName": "FBA"
                    }
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              },
              "ETag": {
                "type": "string",
                "description": "contains a number which denotes the version of inventory snapshot."
              },
              "Last-Modified": {
                "type": "string",
                "description": "Notifies the last instance when entity was modified. It should follow data/time format of rfc2616, e.g: Sun, 06 Nov 1994 08:49:37 GMT"
              }
            },
            "schema": {
              "$ref": "#/definitions/InventorySnapshot"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "locationId": {
                        "value": "43cd8cd4-a944-4fa8-a584-5e3b3efdb045"
                      },
                      "skuId": {
                        "value": "efptestsku2"
                      }
                    }
                  },
                  "response": {
                    "sellableQuantity": 15,
                    "reservedQuantity": 0,
                    "marketplaceChannelInventories": [
                      {
                        "sellableQuantity": 13,
                        "bufferedQuantity": 2,
                        "marketplaceAttributes": {
                          "marketplaceName": "AMAZON_IN",
                          "channelName": "FBA"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidInput",
                    "message": "Invalid input 'INVALID_NODE' for parameter 'locationId'"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "locationId": {
                        "value": "INVALID_NODE"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid input 'INVALID_NODE' for parameter 'locationId'"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          }
        }
      },
      "put": {
        "operationId": "updateInventory",
        "description": "Update the inventory quantity of the given SKU in the specified location to the provided value across all channel where listing exists.",
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "description": "String",
            "required": true,
            "type": "string"
          },
          {
            "name": "skuId",
            "in": "path",
            "description": "String",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "header",
            "description": "String",
            "required": false,
            "type": "string"
          },
          {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "String",
            "required": false,
            "type": "string"
          },
          {
            "name": "quantity",
            "in": "query",
            "description": "Integer",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Success.",
            "examples": {
              "application/json": {
                "sellableQuantity": 15,
                "reservedQuantity": 0,
                "marketplaceChannelInventories": [
                  {
                    "sellableQuantity": 13,
                    "bufferedQuantity": 2,
                    "marketplaceAttributes": {
                      "marketplaceName": "AMAZON_IN",
                      "channelName": "MFN"
                    }
                  },
                  {
                    "sellableQuantity": 0,
                    "bufferedQuantity": 0,
                    "marketplaceAttributes": {
                      "marketplaceName": "AMAZON_IN",
                      "channelName": "FBA"
                    },
                    "sellerActionableErrors": [
                      {
                        "errorType": "PRODUCT_ATTRIBUTE_VALIDATION_FAILURE",
                        "errorSubtype": "MISSING_WEIGHT",
                        "errorDescription": "Product is missing required attributes",
                        "errorSubtypeDescription": "No product weight entered for SKU"
                      },
                      {
                        "errorType": "PRODUCT_ATTRIBUTE_VALIDATION_FAILURE",
                        "errorSubtype": "MISSING_DIMENSIONS",
                        "errorDescription": "Product is missing required attributes",
                        "errorSubtypeDescription": "No product dimensions entered for SKU"
                      }
                    ]
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              },
              "ETag": {
                "type": "string",
                "description": "contains a number which denotes the version of inventory snapshot."
              },
              "Last-Modified": {
                "type": "string",
                "description": "Notifies the last instance when entity was modified. It should follow data/time format of rfc2616, e.g: Sun, 06 Nov 1994 08:49:37 GMT."
              }
            },
            "schema": {
              "$ref": "#/definitions/InventorySnapshot"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "locationId": {
                        "value": "43cd8cd4-a944-4fa8-a584-5e3b3efdb045"
                      },
                      "skuId": {
                        "value": "efptestsku2"
                      },
                      "quantity": {
                        "value": 15
                      }
                    }
                  },
                  "response": {
                    "sellableQuantity": 15,
                    "reservedQuantity": 0,
                    "marketplaceChannelInventories": [
                      {
                        "sellableQuantity": 13,
                        "bufferedQuantity": 2,
                        "marketplaceAttributes": {
                          "marketplaceName": "AMAZON_IN",
                          "channelName": "MFN"
                        }
                      },
                      {
                        "sellableQuantity": 0,
                        "bufferedQuantity": 0,
                        "marketplaceAttributes": {
                          "marketplaceName": "AMAZON_IN",
                          "channelName": "FBA"
                        },
                        "sellerActionableErrors": [
                          {
                            "errorType": "PRODUCT_ATTRIBUTE_VALIDATION_FAILURE",
                            "errorSubtype": "MISSING_WEIGHT",
                            "errorDescription": "Product is missing required attributes",
                            "errorSubtypeDescription": "No product weight entered for SKU"
                          },
                          {
                            "errorType": "PRODUCT_ATTRIBUTE_VALIDATION_FAILURE",
                            "errorSubtype": "MISSING_DIMENSIONS",
                            "errorDescription": "Product is missing required attributes",
                            "errorSubtypeDescription": "No product dimensions entered for SKU"
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            }
          },
          "400": {
            "description": "Request has missing or invalid parameters and cannot be parsed.",
            "examples": {
              "application/json": {
                "errors": [
                  {
                    "code": "InvalidInput",
                    "message": "Invalid input 'INVALID_NODE' for parameter 'locationId'"
                  }
                ]
              }
            },
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            },
            "x-amzn-api-sandbox": {
              "static": [
                {
                  "request": {
                    "parameters": {
                      "locationId": {
                        "value": "INVALID_NODE"
                      }
                    }
                  },
                  "response": {
                    "errors": [
                      {
                        "code": "InvalidInput",
                        "message": "Invalid input 'INVALID_NODE' for parameter 'locationId'"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "403": {
            "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "404": {
            "description": "The resource specified does not exist.",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "409": {
            "description": "The resource specified conflicts with the current state",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "412": {
            "description": "One or more conditions given in the request header fields evaluated to false",
            "headers": {
              "x-amzn-RateLimit-Limit": {
                "type": "string",
                "description": "Your rate limit (requests per second) for this operation.\n_Note:_ For this status code, the rate limit header is deprecated and no longer returned."
              },
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "413": {
            "description": "The request size exceeded the maximum accepted size.",
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "415": {
            "description": "The request payload is in an unsupported format.",
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "429": {
            "description": "The frequency of requests was greater than allowed.",
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "500": {
            "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          },
          "503": {
            "description": "Temporary overloading or maintenance of the server.",
            "headers": {
              "x-amzn-RequestId": {
                "type": "string",
                "description": "Unique request reference ID."
              }
            },
            "schema": {
              "$ref": "#/definitions/ErrorList"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string",
          "description": "An error code that identifies the type of error that occurred."
        },
        "message": {
          "type": "string",
          "description": "A message that describes the error condition in a human-readable form."
        },
        "details": {
          "type": "string",
          "description": "Additional details that can help the caller understand or fix the issue."
        }
      },
      "description": "Error response returned when the request is unsuccessful."
    },
    "ErrorList": {
      "type": "object",
      "required": [
        "errors"
      ],
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        }
      },
      "description": "A list of error responses returned when a request is unsuccessful."
    },
    "InventorySnapshot": {
      "type": "object",
      "required": [
        "marketplaceChannelInventories",
        "reservedQuantity",
        "sellableQuantity"
      ],
      "properties": {
        "sellableQuantity": {
          "type": "integer",
          "description": "The number of items of the specified SKU that are available for being purchased.",
          "minimum": 0
        },
        "reservedQuantity": {
          "type": "integer",
          "description": "The number of items of the specified SKU that have been reserved for shipment dropped from any marketplace which are yet to be fulfilled.",
          "minimum": 0
        },
        "marketplaceChannelInventories": {
          "type": "array",
          "description": "Provides a break-up of how many items of the specified SKU are available in different channels.",
          "items": {
            "$ref": "#/definitions/InventorySnapshot_marketplaceChannelInventories"
          },
          "minItems": 1
        }
      },
      "description": "An object containing all details about the inventory picture available with Amazon Yojaka for a particular SKU."
    },
    "InventorySnapshot_marketplaceAttributes": {
      "type": "object",
      "required": [
        "marketplaceName"
      ],
      "properties": {
        "marketplaceName": {
          "type": "string",
          "description": "The name of the marketplace."
        },
        "channelName": {
          "type": "string",
          "description": "The name of the channel within the marketplace (if applicable)."
        }
      },
      "description": "The details about the marketplace and channel for this inventory applies."
    },
    "InventorySnapshot_marketplaceChannelInventories": {
      "type": "object",
      "required": [
        "bufferedQuantity",
        "marketplaceAttributes",
        "sellableQuantity"
      ],
      "properties": {
        "sellableQuantity": {
          "type": "integer",
          "description": "The number of items of the specified SKU that are available for being purchased.",
          "minimum": 0
        },
        "bufferedQuantity": {
          "type": "integer",
          "description": "The number of items of a particular SKU that have been virtually buffered by Amazon Yojaka.",
          "minimum": 0
        },
        "marketplaceAttributes": {
          "$ref": "#/definitions/InventorySnapshot_marketplaceAttributes"
        },
        "sellerActionableErrors": {
          "type": "array",
          "description": "Inventory update errors that require seller action before retrying inventory update. See documentation for resolution steps for each error. This element will only exist in the UpdateInventory response.",
          "items": {
            "$ref": "#/definitions/InventorySnapshot_sellerActionableErrors"
          },
          "minItems": 0
        }
      },
      "description": "Details of the inventory of a particular SKU available in a particular channel."
    },
    "InventorySnapshot_sellerActionableErrors": {
      "type": "object",
      "properties": {
        "errorType": {
          "type": "string",
          "example": "PRODUCT_ATTRIBUTE_VALIDATION_FAILURE",
          "description": "Top level error type that may contain multiple errorSubtypes"
        },
        "errorSubtype": {
          "type": "string",
          "example": "MISSING_WEIGHT",
          "description": "Secondary level error type"
        },
        "errorDescription": {
          "type": "string",
          "example": "Product is missing required attributes",
          "description": "String description of errorType"
        },
        "errorSubtypeDescription": {
          "type": "string",
          "example": "No product weight entered for SKU",
          "description": "String description of errorSubtype"
        }
      }
    }
  }
}
