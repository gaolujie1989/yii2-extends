openapi: 3.0.2
info:
  version: "3.0"
  title: Amazon Ads API - Sponsored Brands
  description: |-
    Use the Amazon Ads API for Sponsored Brands for campaign, ad group, keyword, negative keyword, drafts, Stores, landing pages, and Brands management operations. For more information about Sponsored Brands, see the [Sponsored Brands Support Center](https://advertising.amazon.com/help#GQFZA83P55P747BZ). For onboarding information, see the [account setup](https://advertising.amazon.com/API/docs/v3/guides/account_setup) topic.
  contact:
    name: Amazon Ads API Support
    url: https://amzn-clicks.atlassian.net/servicedesk/customer/portals
  license:
    name: Amazon Ads API License Agreement
    url: https://advertising.amazon.com/API/docs/license-agreement
tags:
  - name: Keywords
  - name: Negative keywords
  - name: Product targeting
  - name: Negative product targeting
  - name: Theme targeting
  - name: Targeting recommendations
  - name: Bid recommendations
  - name: Budget Rules Recommendations
  - name: Keyword Recommendations
  - name: Stores
    description: (Not available for video campaigns)
  - name: Landing page asins
    description: (Not available for video campaigns)
  - name: Media
  - name: Brands
  - name: Moderation
    description: (Not available for video campaigns)
paths:
  /brands:
    get:
      tags:
        - Brands
      summary: getBrands
      description: Gets an array of Brand data objects for the Brand associated with the profile ID passed in the header. For more information about Brands, see [Brand Services](https://brandservices.amazon.com/).
      operationId: getBrands
      parameters:
        - $ref: '#/components/parameters/clientHeader'
        - $ref: '#/components/parameters/profileHeader'
        - name: brandTypeFilter
          schema:
            $ref: "#/components/schemas/BrandType"
          in: query
          description: |-
            The returned array is filtered to include only brands with brand type set to one of the values in the specified comma-delimited list. Returns all brands if not specified.
      responses:
        '200':
          description: Successful operation.
          content:
            application/vnd.brand.v3+json:
              schema:
                type: array
                items:
                  properties:
                    brandId:
                      description: The Brand identifier.
                      type: string
                    brandEntityId:
                      description: The Brand entity identifier.
                      type: string
                    brandRegistryName:
                      description: The Brand name.
                      type: string
  /sb/keywords:
    get:
      tags:
        - Keywords
      operationId: listKeywords
      summary: Gets an array of keywords, filtered by optional criteria.
      description: |-
        **Note**: Keywords associated with BrandVideo ad groups are only available in v3.2 version.
      parameters:
        - $ref: '#/components/parameters/clientHeader'
        - $ref: '#/components/parameters/profileHeader'
        - name: startIndex
          schema:
            type: integer
            default: 0
          in: query
          description: |-
            Sets a zero-based offset into the requested set of keywords. Use in conjunction with the `count` parameter to control pagination of the returned array.
        - name: count
          schema:
            type: integer
            default: max page size
          in: query
          description: |-
            Sets the number of keywords in the returned array. Use in conjunction with the `startIndex` parameter to control pagination. For example, to return the first ten keywords set `startIndex=0` and `count=10`. To return the next ten keywords, set `startIndex=10` and `count=10`, and so on.
        - name: matchTypeFilter
          schema:
            $ref: "#/components/schemas/MatchType"
            default: broad,exact,phrase
          in: query
          description: |-
            The returned array is filtered to include only keywords with `matchType` set to one of the values in the specified comma-delimited list.
        - name: keywordText
          schema:
            type: string
          in: query
          description: The returned array includes only keywords with the specified text.
        - name: stateFilter
          schema:
            type: string
            enum:
              - enabled
              - paused
              - archived
            default: enabled,paused
          in: query
          description: |-
            The returned array is filtered to include only keywords with 'state' set to one of the values in the specified comma-delimited list.
        - name: campaignIdFilter
          schema:
            type: string
          in: query
          description: The returned array includes only keywords associated with campaigns matching those specified by identifier in the comma-delimited string.
        - name: adGroupIdFilter
          schema:
            type: string
          in: query
          description: The returned array includes only keywords associated with ad groups matching those specified by identifier in the comma-delimited string.
        - name: keywordIdFilter
          schema:
            type: string
          in: query
          description: The returned array includes only keywords with identifiers matching those specified in the comma-delimited string.
        - name: creativeType
          schema:
            $ref: "#/components/schemas/CreativeType"
          in: query
          description: Filter by the type of creative the campaign is associated with. To get keywords associated with non-video campaigns specify 'productCollection'. To get keywords associated with video campaigns, this must be set to 'video'. Returns all keywords if not specified.
        - name: locale
          schema:
            type: string
          in: query
          description: The returned array includes only keywords with locale matching those specified string.
      responses:
        '200':
          description: Success.
          content:
            application/vnd.sbkeyword.v3.2+json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SBKeyword"
            application/vnd.sbkeyword.v3+json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SBKeyword"
    put:
      tags:
        - Keywords
      operationId: updateKeywords
      summary: Updates one or more keywords.
      description: Updates one or more targeting clauses. Operation supports a maximum list size of 100 keywords. <bold>Note</bold> that negative keywords can be updated on campaigns where campaign's serving status is not one of `archived`, `terminated`, `rejected`, or `ended`.
      parameters:
        - $ref: '#/components/parameters/clientHeader'
        - $ref: '#/components/parameters/profileHeader'
      requestBody:
        description: An array of keywords. <br/>Note the bid is only mutable when the keyword's corresponding campaign does not have any enabled optimization rule.
        content:
          application/json:
            schema:
              type: array
              maximum: 100
              items:
                properties:
                  keywordId:
                    description: The identifier of the keyword.
                    type: integer
                    format: int64
                  adGroupId:
                    description: The identifier of an existing ad group to which the keyword is associated.
                    type: integer
                    format: int64
                  campaignId:
                    description: The identifier of an existing campaign to which the keyword is associated.
                    type: integer
                    format: int64
                  state:
                    $ref: "#/components/schemas/SBKeywordState"
                  bid:
                    type: number
                    description: The bid associated with the keyword. Note that this value must be less than the budget associated with the Advertiser account. For more information, see the **Keyword bid constraints by marketplace** section of the [supported features](https://advertising.amazon.com/API/docs/v2/guides/supported_features) article.
                required:
                  - keywordId
                  - adGroupId
                  - campaignId
      responses:
        '207':
          description: Multi-status. Note that the order of the returned array matches the order of the array passed in the request.
          content:
            application/vnd.sbkeywordresponse.v3+json:
              schema:
                $ref: "#/components/schemas/SBKeywordResponse"
    post:
      tags:
        - Keywords
      operationId: createKeywords
      summary: Creates one or more keywords.
      description: Note that `state` can't be set at keyword creation. <br/>Note that keywords can be created on campaigns where serving status is not one of `archived`, `terminated`, `rejected`, or `ended`. <br/>Note that this operation supports a maximum list size of 100 keywords.
      parameters:
        - $ref: '#/components/parameters/clientHeader'
        - $ref: '#/components/parameters/profileHeader'
      requestBody:
        description: An array of keywords. <br/>Note the bid is only mutable when the keyword's corresponding campaign does not have any enabled optimization rule.
        content:
          application/json:
            schema:
              type: array
              maximum: 100
              items:
                properties:
                  adGroupId:
                    description: The identifier of an existing ad group to which the keyword is associated.
                    type: integer
                    format: int64
                  campaignId:
                    description: The identifier of an existing campaign to which the keyword is associated.
                    type: integer
                    format: int64
                  keywordText:
                    type: string
                    description: The keyword text. The maximum number of words for this string is 10.
                  nativeLanguageKeyword:
                    description: The unlocalized keyword text in the preferred locale of the advertiser.
                    type: string
                  nativeLanguageLocale:
                    description: |-
                      The locale preference of the advertiser. For example, if the advertiser’s preferred language is Simplified Chinese, set the locale to `zh_CN`. Supported locales include: Simplified Chinese (locale: zh_CN) for US, UK and CA. English (locale: en_GB) for DE, FR, IT and ES.
                    type: string
                  matchType:
                    $ref: "#/components/schemas/MatchType"
                  bid:
                    type: number
                    description: The bid associated with the keyword. Note that this value must be less than the budget associated with the Advertiser account. For more information, see [Keyword bid constraints by marketplace](https://advertising.amazon.com/API/docs/en-us/reference/concepts/limits#bid-constraints-by-marketplace).
      responses:
        '207':
          description: Multi-status. Note that the order of the returned array matches the order of the array passed in the request.
          content:
            application/vnd.sbkeywordresponse.v3+json:
              schema:
                $ref: "#/components/schemas/SBKeywordResponse"
  /sb/keywords/{keywordId}:
    get:
      tags:
        - Keywords
      operationId: getKeyword
      summary: Gets a keyword specified by identifier.
      parameters:
        - $ref: '#/components/parameters/clientHeader'
        - $ref: '#/components/parameters/profileHeader'
        - name: keywordId
          description: The identifier of an existing keyword.
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: locale
          schema:
            type: string
          in: query
          description: The returned array includes only keywords associated with locale matching those specified by identifier.
      responses:
        '200':
          description: Success.
          content:
            application/vnd.sbkeyword.v3+json:
              schema:
                $ref: "#/components/schemas/SBKeyword"
        '404':
          description: Bad request. Keyword identifier not found.
          content:
            application/vnd.error.v3+json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - Keywords
      operationId: archiveKeyword
      summary: Archives a keyword specified by identifier.
      description: This operation is equivalent to an update operation that sets the status field to 'archived'. Note that setting the status field to 'archived' is permanent and can't be undone. See [Developer
        Notes](https://advertising.amazon.com/API/docs/v2/guides/developer_notes) for more information.
      parameters:
        - $ref: '#/components/parameters/clientHeader'
        - $ref: '#/components/parameters/profileHeader'
        - name: keywordId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: "success"
          content:
            application/vnd.sbkeywordresponse.v3+json:
              schema:
                $ref: "#/components/schemas/SBKeywordResponse"
        '404':
          description: Bad request. Keyword identifier not found.
          content:
            application/vnd.error.v3+json:
              schema:
                $ref: "#/components/schemas/Error"
  /sb/negativeKeywords:
    get:
      tags:
        - Negative keywords
      operationId: listNegativeKeywords
      summary: Gets an array of negative keywords, filtered by optional criteria.
      description: |-
        **Note**: Negative keywords associated with BrandVideo ad groups are only available in v3.2 version.
      parameters:
        - $ref: '#/components/parameters/clientHeader'
        - $ref: '#/components/parameters/profileHeader'
        - name: startIndex
          schema:
            type: integer
            default: 0
          in: query
          description: |-
            Sets a zero-based offset into the requested set of negative keywords. Use in conjunction with the `count` parameter to control pagination of the returned array.
        - name: count
          schema:
            type: integer
            default: max page size
          in: query
          description: |-
            Sets the number of negative keywords in the returned array. Use in conjunction with the `startIndex` parameter to control pagination. For example, to return the first ten negative keywords set `startIndex=0` and `count=10`. To return the next ten negative keywords, set `startIndex=10` and `count=10`, and so on.
        - name: matchTypeFilter
          schema:
            $ref: "#/components/schemas/NegativeMatchType"
          in: query
          description: |-
            The returned array is filtered to include only negative keywords with `matchType` set to one of the values in the specified comma-delimited list.
        - name: keywordText
          schema:
            type: string
          in: query
          description: The returned array includes only negative keywords with the specified text.
        - name: stateFilter
          schema:
            $ref: "#/components/schemas/NegativeState"
          in: query
          description: |-
            The returned array includes only negative keywords with `state` set to the specified value.
        - name: campaignIdFilter
          schema:
            type: string
          in: query
          description: The returned array includes only negative keywords associated with campaigns matching those specified by identifier in the comma-delimited string.
        - name: adGroupIdFilter
          schema:
            type: string
          in: query
          description: The returned array includes only negative keywords associated with ad groups matching those specified by identifier in the comma-delimited string.
        - name: keywordIdFilter
          schema:
            type: string
          in: query
          description: The returned array includes only negative keywords with identifiers matching those specified in the comma-delimited string.
        - name: creativeType
          schema:
            $ref: "#/components/schemas/CreativeType"
          in: query
          description: Filter by the type of creative the campaign is associated with. To get negative keywords associated with non-video campaigns specify 'productCollection'. To get negative keywords associated with video campaigns, this must be set to 'video'. Returns all negative keywords if not specified.
      responses:
        '200':
          description: Success.
          content:
            application/vnd.sbnegativekeyword.v3.2+json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SBNegativeKeyword"
            application/vnd.sbnegativekeyword.v3+json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SBNegativeKeyword"
    put:
      tags:
        - Negative keywords
      operationId: updateNegativeKeywords
      summary: Updates one or more negative keywords.
      description: Updates one or more targeting clauses. Operation supports a maximum list size of 100 negative keywords. <bold>Note</bold> that negative keywords can be updated on campaigns where campaign's serving status is not one of `archived`, `terminated`, `rejected`, or `ended`.
      parameters:
        - $ref: '#/components/parameters/clientHeader'
        - $ref: '#/components/parameters/profileHeader'
      requestBody:
        description: An array of negative keywords.
        content:
          application/json:
            schema:
              type: array
              maximum: 100
              items:
                properties:
                  keywordId:
                    description: "The identifier of the negative keyword."
                    type: integer
                    format: int64
                  adGroupId:
                    description: "The identifier of the ad group to which the negative keyword is associated."
                    type: integer
                    format: int64
                  campaignId:
                    description: "The identifier of the campaign to which the negative keyword is associated."
                    type: integer
                    format: int64
                  state:
                    $ref: "#/components/schemas/SBNegativeKeywordState"
      responses:
        '207':
          description: Multi-status. Note that the order of the returned array matches the order of the array passed in the request.
          content:
            application/vnd.sbkeywordresponse.v3+json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SBKeywordResponse"
    post:
      tags:
        - Negative keywords
      operationId: createNegativeKeywords
      summary: Creates one or more negative keywords.
      description: |-
        Creates one or more negative targeting clauses. Operation supports a maximum list size of 100 negative keywords. The `bid` and `state` can't be set at negative keyword creation. <br/>Note that negative keywords can be created on campaigns where campaign's serving status is not one of `archived`, `terminated`, `rejected`, or `ended`.
        <br>**Note** that negative keywords *can not* be recreated for a campaign if the negative keyword has previously been associated with a campaign and subsequently archived.
      parameters:
        - $ref: '#/components/parameters/clientHeader'
        - $ref: '#/components/parameters/profileHeader'
      requestBody:
        description: An array of negative keywords.
        content:
          application/json:
            schema:
              type: array
              maximum: 100
              items:
                properties:
                  adGroupId:
                    description: "The identifier of the ad group to which the negative keyword is associated."
                    type: integer
                    format: int64
                  campaignId:
                    description: "The identifier of the campaign to which the negative keyword is associated."
                    type: integer
                    format: int64
                  keywordText:
                    type: string
                    description: "The keyword text. Maximum length is ten words if 'matchType' is 'negativeExact'. Maximum length is 4 words if 'matchType' is 'negativePhrase'"
                  matchType:
                    $ref: "#/components/schemas/NegativeMatchType"
      responses:
        '207':
          description: Multi-status. Note that the order of the returned array matches the order of the array passed in the request.
          content:
            application/vnd.sbkeywordresponse.v3+json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SBKeywordResponse"
  /sb/negativeKeywords/{keywordId}:
    get:
      tags:
        - Negative keywords
      operationId: getNegativeKeyword
      summary: Gets a negative keyword specified by identifier.
      parameters:
        - $ref: '#/components/parameters/clientHeader'
        - $ref: '#/components/parameters/profileHeader'
        - name: keywordId
          description: The identifier of an existing negative keyword.
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success.
          content:
            application/vnd.sbnegativekeyword.v3+json:
              schema:
                properties:
                  keywordId:
                    description: The identifier of the negative keyword.
                    type: integer
                    format: int64
                  adGroupId:
                    description: The identifier of the ad group to which the negative keyword is associated.
                    type: integer
                    format: int64
                  campaignId:
                    description: The identifier of the campaign to which the negative keyword is associated.
                    type: integer
                    format: int64
                  keywordText:
                    type: string
                    description: The keyword text. Maximum length of string is ten words if `matchType` is set to `negativeExact`. Maximum length is 4 words if `matchType` is set to `negativePhrase`.
                  matchType:
                    $ref: "#/components/schemas/NegativeMatchType"
                  state:
                    $ref: "#/components/schemas/SBNegativeKeywordState"
    delete:
      tags:
        - Negative keywords
      operationId: archiveNegativeKeyword
      summary: Archives a negative keyword specified by identifier.
      description: This operation is equivalent to an update operation that sets the status field to 'archived'. Note that setting the status field to 'archived' is permanent and can't be undone. See [Developer
        Notes](https://advertising.amazon.com/API/docs/v2/guides/developer_notes) for more information.
      parameters:
        - $ref: '#/components/parameters/clientHeader'
        - $ref: '#/components/parameters/profileHeader'
        - name: keywordId
          description: The identifier of an existing campaign.
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success.
          content:
            application/vnd.sbkeywordresponse.v3+json:
              schema:
                $ref: "#/components/schemas/SBKeywordResponse"
        '404':
          description: Bad request. The specified negative keyword identifier was not found.
          content:
            application/vnd.error.v3+json:
              schema:
                $ref: "#/components/schemas/Error"
  /pageAsins:
    get:
      tags:
        - Landing page asins
      operationId: listAsins
      summary: Gets ASIN information for a specified address.
      description: Note that for sellers, the addresss must be a Store page. Vendors may also specify a custom landing page address. Only the `ASINs` that are directly associated on creation with a Store landing page are returned by this API. Any other `ASINs` that are not directly associated to the Store landing page or are listed on other pages are not returned by this API. This includes `ASINs` that are on Dynamic widgets, product selections, and featured deals widgets.
      parameters:
        - $ref: '#/components/parameters/clientHeader'
        - $ref: '#/components/parameters/profileHeader'
        - name: pageUrl
          in: query
          description: For sellers, the address of a Store page. Vendors may also specify the address of a custom landing page. For more information, see the [Stores section](https://advertising.amazon.com/help#GPRM3ZHEXEY5RBFZ) of the Amazon Ads support center.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success.
          content:
            application/vnd.pageasins.v3+json:
              schema:
                properties:
                  asinList:
                    description: An array of ASINs. Note that this field is present only if there were no errors during the request. If there were errors, the `code` field is the enumerated error, and the `details` field contains a human-readable description of the error.
                    type: array
                    readOnly: false
                    items:
                      description: A single ASIN.
                      type: string
                  code:
                    description: |-
                      The enumerated response code.
                      | Code | Description |
                      |------|--------|
                      |SUCCESS| The request was successful. The `asinList` field includes all available ASINs.|
                      |INVALID_ARGUMENT| The request was not successful because the address was not for a valid landing page.|
                      |BAD_GATEWAY| The request failed because the landing page at the specified address did not have any ASINs.|
                    type: string
                  details:
                    description: A human-readable description of the `code` field.
                    type: string
  /media/complete:
    put:
      tags:
        - Media
      summary: The API is used to notify that the upload is completed.
      description: The API should be called once the media is uploaded to the location
        provided by the /media/upload API endpoint. The API creates a Media resource
        for the uploaded media. Media resource is comprised of Media Identifier. The
        Media Identifier can be used to attach media to Ad Program (Sponsored Brands).


        The API internally kicks off the asynchronous validation and processing workflow of
        the uploaded media. As a result, Media may not be immediately available for
        usage (to create Sponsored Brands Video Campaign) as soon as the response is received. See /media/describe API doc for instructions on when media is ready for campaign creation.
      parameters:
        - in: header
          name: Amazon-Advertising-API-ClientId
          description: The identifier of a client associated with a "Login with Amazon" account.
          schema:
            type: string
          required: true
        - in: header
          name: Amazon-Advertising-API-Scope
          description: The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
          schema:
            type: string
          required: true
      operationId: completeUpload
      requestBody:
        description: The  upload location
        content:
          application/json:
            schema:
              type: object
              properties:
                uploadLocation:
                  $ref: '#/components/schemas/UploadLocation'
                version:
                  type: string
                  description: The version id of the uploaded media. The upload location
                    retrieved from /media/upload API supports versioning and returns
                    version id in the upload response through `x-amz-version-id` header.
                    API user can explicitly specify the version id corresponding to
                    an upload through `version` property. `version` is optional and
                    if it is not specified, media corresponding to the most recent
                    version at the time of API call will be used.
        required: true
      responses:
        200:
          description: Media Resource
          content:
            application/json:
              schema:
                type: object
                properties:
                  mediaId:
                    $ref: '#/components/schemas/MediaId'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaPublisherAPIError'
        404:
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaPublisherAPIError'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaPublisherAPIError'
  /media/describe:
    get:
      tags:
        - Media
      summary: API to poll for media status
      description: API to poll for media status.

        In order to attach media to campaign,
        media should be in either `PendingDeepValidation` or `Available` status.


        `Available` status guarantees that media has completed processing and published for usage.


        Though media can be attached to campaign once the status of the media transitions to `PendingDeepValidation`, media could still fail additional validation and transition to `Failed` status. For example in the context of SBV, SBV campaign can be created when status transitions to `PendingDeepValidation`, it could result in SBV campaign to be rejected later if media transitions to `Failed` status.
      operationId: describeMedia
      parameters:
        - in: header
          name: Amazon-Advertising-API-ClientId
          description: The identifier of a client associated with a "Login with Amazon" account.
          schema:
            type: string
          required: true
        - in: header
          name: Amazon-Advertising-API-Scope
          description: The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
          schema:
            type: string
          required: true
        - name: mediaId
          in: query
          description: Media Identifier
          required: true
          schema:
            type: string
      responses:
        200:
          description: Media Resource
          content:
            '*/*':
              schema:
                type: object
                properties:
                  mediaId:
                    $ref: '#/components/schemas/MediaId'
                  status:
                    $ref: '#/components/schemas/MediaStatus'
                  statusMetadata:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                        message:
                          type: string
                      description: Additional status metadata. It is only available
                        when status is `Failed` and `statusMetadata` provides additional
                        detail on why media status is `Failed`. `statusMetadata` is
                        comprised of code and message.
                  publishedMediaUrl:
                    type: string
                    description: The preview URL of the media. It is only available when status is `Available`.
                  originalMediaUrl:
                    type: string
                    description: This is a signed URL which returns the original media in .mp4 file extension. The URL is only active for 7 days and requires to be regenerated if the video is not downloaded within 7 days. If you try to upload the downloaded video using the Asset Library API and get an error, then please retry upload after changing the file extension to .mov.
        404:
          description: Resource not found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MediaPublisherAPIError'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MediaPublisherAPIError'
  /stores/assets:
    get:
      tags:
        - Stores
      operationId: listAssets
      summary: Gets a list of assets associated with a specified brand entity identifier.
      description: For sellers or vendors, gets an array of assets associated with the specified brand entity identifier. Vendors are not required to specify a brand entity identifier, and in this case all assets associated with the vendor are returned.
      parameters:
        - $ref: '#/components/parameters/clientHeader'
        - $ref: '#/components/parameters/profileHeader'
        - name: brandEntityId
          in: query
          description: For sellers, this field is required. It is the Brand entity identifier of the Brand for which assets are returned. This identifier is retrieved using the [getBrands operation](https://advertising.amazon.com/API/docs/v3/reference/SponsoredBrands/brands). For vendors, this field is optional. If a vendor does not specify this field, all assets associated with the vendor are returned. For more information about the [difference between a seller and a vendor](https://advertising.amazon.com/resources/faq#advertising-basics), see the Amazon Ads FAQ.
          schema:
            type: string
        - name: mediaType
          in: query
          description: Specifies the media types used to filter the returned array. Currently, only the `brandLogo` type is supported. If not specified, all media types are returned.
          schema:
            $ref: "#/components/schemas/MediaType"
      responses:
        "200":
          description: Success.
          content:
            application/vnd.mediaasset.v3+json:
              schema:
                type: array
                items:
                  properties:
                    assetID:
                      description: The identifier of an asset associated with a store.
                      type: string
                    url:
                      description: The address where the asset is stored.
                      type: string
                    mediaType:
                      $ref: "#/components/schemas/MediaType"
                    name:
                      description: The name of the asset.
                      type: string
    post:
      tags:
        - Stores
      operationId: createAsset
      summary: Creates a new image asset.
      description: |-
        Image assets are stored in the Store Assets Library. Note that there may be a delay before the image is displayed in the console.
      parameters:
        - $ref: '#/components/parameters/clientHeader'
        - $ref: '#/components/parameters/profileHeader'
        - in: header
          name: Content-Disposition
          description: The name of the image file.
          schema:
            type: string
          required: true
        - in: header
          name: Content-Type
          description: |-
            The image format type. The following table lists the valid image types:
            |Image Type|Description|
            |----------|-----------|
            |PNG|[Portable network graphics](https://en.wikipedia.org/wiki/Portable_Network_Graphics)|
            |JPEG|[JPEG](https://en.wikipedia.org/wiki/JPEG)|
            |GIF|[Graphics interchange format](https://en.wikipedia.org/wiki/GIF)|
          schema:
            type: string
          required: true
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                assetInfo:
                  description: |-
                    A JSON object specifying the Brand entity identifier an media type. The Brand entity identifier is optional, but media type is not.
                    |Field|Type|Values|
                    |-----|-----|-----|
                    |brandEntityId|string|The Brand entity identifier.|
                    |mediaType|string| Only `brandLogo` is currently supported.|
                    Example:
                    ```
                    {
                      brandEntityId: "12345678",
                      mediaType: {
                        "brandLogo"
                      }
                    }
                    ```
                  type: string
                asset:
                  description: The binary data for the image. For more information,  File size must be smaller than 1MB, and the resolution must be a minimum of 400 pixels by 400 pixels.
                  type: string
                  format: binary
      responses:
        "200":
          description: "success"
          content:
            application/json:
              schema:
                properties:
                  assetID:
                    type: string
                    description: "ID of created asset"
                  code:
                    type: string
                  details:
                    type: string
  /sb/recommendations/bids:
    post:
      tags:
        - Bid recommendations
      operationId: getBidsRecommendations
      description: Get a list of bid recommendation objects for a specified list of keywords or products.
      parameters:
        - $ref: '#/components/parameters/clientHeader'
        - $ref: '#/components/parameters/profileHeader'
      requestBody:
        description: A list of keywords or targeting expressions for which to generate bid recommendations. Note that if a value is specified for the `campaignId` field, the past performance data for the campaign may be use to create bid recommendations.
        content:
          application/json:
            schema:
              type: object
              properties:
                campaignId:
                  type: integer
                  format: int64
                  description: The identifier of the campaign for which bid recommendations are created.
                targets:
                  type: array
                  items:
                    $ref: '#/components/schemas/SBTargetingExpressions'
                  maxItems: 100
                  description: Sum of the sizes of (targets + keywords + themeTypes) arrays should be <= 100
                keywords:
                  type: array
                  items:
                    $ref: '#/components/schemas/SBBidRecommendationKeyword'
                  maxItems: 100
                  description: Sum of the sizes of (targets + keywords + themeTypes) arrays should be <= 100
                adFormat:
                  $ref: '#/components/schemas/AdFormat'
                costType:
                  type: string
                  description: |-
                    Optional. Support `CPC` (cost per click) and `VCPM` (cost per thousand viewable impressions).
                    | costType | goal | Expected result |
                    |----------|------|-----------------|
                    | Empty | Empty | Recommendation will be generated for costType= `CPC` and goal=`PAGE_VISIT`.
                    | Specified | Empty | It will return error and no recommendation will be generated.
                    | Empty | Specified | It will use default costType based on goal selection. e.g. goal=`BRAND_IMPRESSION_SHARE` then it will use costType = `VCPM` to generate recommendation.
                    | Specified | Specified | The recommendation will be based on selected goal and costType. If the mismatch then it will generate an error.
                themeTypes:
                  type: array
                  items:
                    $ref: '#/components/schemas/ThemeType'
                  minItems: 0
                  maxItems: 100
                  description: Sum of the sizes of (targets + keywords + themeTypes) arrays should be <= 100
                goal:
                  $ref: '#/components/schemas/Goal'
      responses:
        "200":
          description: A list of bid recommendations.
          content:
            application/vnd.sbbidsrecommendation.v3+json:
              schema:
                type: object
                properties:
                  keywordsBidsRecommendationSuccessResults:
                    description: Lists the bid recommendations for the keywords specified in the request.
                    type: array
                    items:
                      type: object
                      properties:
                        recommendationId:
                          description: The identifier of the keyword bid recommendation.
                          type: string
                        recommendedBid:
                          $ref: '#/components/schemas/RecommendedBid'
                        keyword:
                          type: object
                          properties:
                            keywordText:
                              description: The text of the keyword.
                              type: string
                            matchType:
                              $ref: '#/components/schemas/MatchType'
                        keywordIndex:
                          $ref: '#/components/schemas/SBBidRecommendationKeywordIndex'
                  keywordsBidsRecommendationErrorResults:
                    description: Lists errors that occurred during creation of keyword bid recommendations.
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Error'
                        - type: object
                          properties:
                            keyword:
                              $ref: '#/components/schemas/SBKeywordExpression'
                            keywordIndex:
                              $ref: '#/components/schemas/SBBidRecommendationKeywordIndex'
                  targetsBidsRecommendationSuccessResults:
                    description: Lists the bid recommendations for the keywords or targets specified in the request.
                    type: array
                    items:
                      type: object
                      properties:
                        recommendationId:
                          description: The identifier of the target bid recommendation.
                        recommendedBid:
                          $ref: '#/components/schemas/RecommendedBid'
                        targets:
                          $ref: '#/components/schemas/SBTargetingExpressions'
                        targetsIndex:
                          $ref: '#/components/schemas/SBBidRecommendationKeywordIndex'
                  targetsBidsRecommendationErrorResults:
                    description: Lists errors that occurred during creation of target bid recommendations.
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Error'
                        - type: object
                          properties:
                            targets:
                              $ref: '#/components/schemas/SBTargetingExpressions'
                            targetsIndex:
                              $ref: '#/components/schemas/SBBidRecommendationKeywordIndex'
                  themesRecommendationSuccessResults:
                    description: Lists the theme targets recommendations for the theme targets specified in the request.
                    type: array
                    items:
                      type: object
                      properties:
                        recommendationId:
                          description: The identifier of the target bid recommendation.
                        recommendedBid:
                          $ref: '#/components/schemas/RecommendedBid'
                        themeType:
                          $ref: '#/components/schemas/ThemeType'
                        themeIndex:
                          $ref: '#/components/schemas/SBBidRecommendationThemeIndex'
                    minItems: 0
                    maxItems: 10
                  themesRecommendationErrorResults:
                    description: Lists errors that occurred during creation of theme targets bid recommendations.
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Error'
                        - type: object
                          properties:
                            themeType:
                              $ref: '#/components/schemas/ThemeType'
                            themeIndex:
                              $ref: '#/components/schemas/SBBidRecommendationThemeIndex'
                    minItems: 0
                    maxItems: 10
  /sb/campaigns/budgetRules/recommendations:
    post:
      tags:
        - Budget Rules Recommendations
      operationId: SBGetBudgetRulesRecommendation
      summary: Gets a list of special events with suggested date range and suggested budget increase for a campaign specified by identifier.
      description: |-
        A rule enables an automatic budget increase for a specified date range or for a special event. The response also includes a suggested budget increase for each special event.
        
        **Requires one of these permissions**:
        ["advertiser_campaign_edit","advertiser_campaign_view"]
      parameters:
        - $ref: '#/components/parameters/clientHeader'
        - $ref: '#/components/parameters/profileHeaderOptional'
        - $ref: "#/components/parameters/accountIdHeaderOptional"
      requestBody:
        content:
          application/vnd.sbbudgetrulesrecommendation.v3+json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/SBBudgetRulesRecommendationEventRequest'
              discriminator:
                mapping:
                  EVENTS_FOR_EXISTING_CAMPAIGN: '#/components/schemas/SBBudgetRulesRecommendationEventRequest'
                propertyName: recommendationType
      responses:
        '200':
          description: Successful Operation.
          content:
            application/vnd.sbbudgetrulesrecommendation.v3+json:
              schema:
                $ref: '#/components/schemas/SBBudgetRulesRecommendationEventResponse'
        '400':
          description: Bad Request.
          content:
            application/vnd.sbbudgetrulesrecommendation.v3+json:
              schema:
                $ref: '#/components/schemas/SBBudgetRulesRecommendationError'
        '429':
          description: Too Many Requests. Request was rate-limited. Retry later.
          content:
            application/vnd.sbbudgetrulesrecommendation.v3+json:
              schema:
                $ref: '#/components/schemas/SBBudgetRulesRecommendationError'
        '500':
          description: Internal Server Error. Something went wrong on the server.
          content:
            application/vnd.sbbudgetrulesrecommendation.v3+json:
              schema:
                $ref: '#/components/schemas/SBBudgetRulesRecommendationError'
  /sb/recommendations/keyword:
    post:
      tags:
        - Keyword Recommendations
      summary: Gets keyword recommendations
      operationId: getKeywordRecommendations
      description: |-
        Gets an array of keyword recommendation objects for a set of ASINs included either on a landing page or a Stores page. Vendors may also specify a custom landing page.
        
        **Requires one of these permissions**:
        ["advertiser_campaign_edit","advertiser_campaign_view"]
      parameters:
        - $ref: '#/components/parameters/clientHeader'
        - $ref: '#/components/parameters/profileHeader'
      requestBody:
        description: |-
          **Must contain exactly only one of** 
          
           1.) An array of ASINs for which keyword recommendations are generated. 
          
           2.) The URL of a Stores page. Vendors may also specify the URL of a custom landing page. The products on the landing page are used to generate keyword recommendations. 
          
           Optional parameters include the max number of suggestions and locale for keyword translations. Supported locales include: Simplified Chinese (locale: “zh_CN”) for US, UK and CA. English (locale:  “en_GB”) for DE, FR, IT and ES. If locale is invalid or unsupported, no translations will be returned.
        content:
          application/vnd.sbkeywordrecommendation.v3+json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/SBKeywordRecommendationRequestAsin'
                - $ref: '#/components/schemas/SBKeywordRecommendationRequestUrl'
            examples:
              URL Request:
                value:
                  goal: BRAND_IMPRESSION_SHARE
                  creativeType: VIDEO
                  maxNumSuggestions: '100'
                  locale: zh_CN
                  url: www.amazon.com/sample_landing_page
              ASIN Request:
                value:
                  asins:
                    - asin1
                    - asin2
                    - asin3
                  goal: PAGE_VISIT
                  creativeType: PRODUCT_COLLECTION
                  maxNumSuggestions: '100'
                  locale: zh_CN
      responses:
        '200':
          description: Successful recommendations response
          content:
            application/vnd.sbkeywordrecommendation.v3+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SBKeywordSuggestion'
              example:
                - searchTermImpressionShare: 1
                  matchType: PHRASE
                  translation: 跑鞋
                  searchTermImpressionRank: 10
                  recommendationId: '1111111111'
                  type: addKeyword
                  value: running shoes
        '400':
          description: Bad Request.
          content:
            application/vnd.sbkeywordrecommendation.v3+json:
              schema:
                $ref: '#/components/schemas/SBKeywordRecommendationError'
        '429':
          description: Too Many Requests - Request was rate-limited. Retry later
          content:
            application/vnd.sbkeywordrecommendation.v3+json:
              schema:
                $ref: '#/components/schemas/SBKeywordRecommendationError'
        '500':
          description: Internal Server SB Keyword Recommendations Error - Something went wrong on the server. Retry later and report an SB Keyword Recommendations Error if unresolved.
          content:
            application/vnd.sbkeywordrecommendation.v3+json:
              schema:
                $ref: '#/components/schemas/SBKeywordRecommendationError'
  /sb/targets/list:
    post:
      tags:
        - Product targeting
      operationId: listTargets
      description: |-
        Gets a list of product targets associated with the client identifier passed in the authorization header, filtered by specified criteria.

        **Note**: Product targets associated with BrandVideo ad groups are only available in v3.2 version.
      requestBody:
        description: A set of filters.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ListRequest'
                - type: object
                  properties:
                    filters:
                      description: Restricts results to targets with the specified filters.  Filters are inclusive. Filters are joined using 'and' logic. Specify one type of each filter. Specifying multiples of the same type of filter results in an error.
                      type: array
                      items:
                        anyOf:
                          - allOf:
                              - type: object
                                properties:
                                  filterType:
                                    description: Set `filterType` to `CREATIVE_TYPE` to filter by creative type. If no filter is specified, all targets will be returned.
                                    type: string
                                    enum:
                                      - CREATIVE_TYPE
                              - type: object
                                properties:
                                  values:
                                    description: A list of creative types.
                                    type: array
                                    items:
                                      type: string
                                      enum:
                                        - productCollection
                                        - video
                                    minItems: 1
                                    maxItems: 2
                          - allOf:
                              - type: object
                                properties:
                                  filterType:
                                    description: Set `filterType` to `TARGETING_STATE` to filter by target state.
                                    type: string
                                    enum:
                                      - TARGETING_STATE
                              - type: object
                                properties:
                                  values:
                                    description: A list of target states.
                                    type: array
                                    items:
                                      type: string
                                      enum:
                                        - archived
                                        - paused
                                        - enabled
                                    minItems: 1
                                    maxItems: 5
                          - allOf:
                              - type: object
                                properties:
                                  filterType:
                                    description: Set `filterType` to `CAMPAIGN_ID` to filter by campaign identifiers.
                                    type: string
                                    enum:
                                      - CAMPAIGN_ID
                              - type: object
                                properties:
                                  values:
                                    description: A list of campaign identifiers.
                                    type: array
                                    items:
                                      description: A campaign identifier.
                                      type: string
                                      minItems: 1
                                      maxItems: 100
                          - allOf:
                              - type: object
                                properties:
                                  filterType:
                                    description: Set `filterType` to `AD_GROUP_ID` to filter by ad group identifier.
                                    type: string
                                    enum:
                                      - AD_GROUP_ID
                              - type: object
                                properties:
                                  values:
                                    description: A list of ad group identifiers.
                                    type: array
                                    items:
                                      $ref: '#/components/schemas/SBAdGroupId'
                                    minItems: 1
                                    maxItems: 100
                        minItems: 0
                        maxItems: 3
      responses:
        "200":
          description: A list of targeting clauses.
          content:
            application/vnd.sblisttargetsresponse.v3.2+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ListResponse'
                  - type: object
                    properties:
                      targets:
                        type: array
                        items:
                          type: object
                          properties:
                            targetId:
                              type: integer
                              format: int64
                              description: The target identifier.
                            adGroupId:
                              type: integer
                              format: int64
                              description: The identifier of the ad group to which the target is associated.
                            campaignId:
                              type: integer
                              format: int64
                              description: The identifier of the campaign to which the target is associated.
                            expressions:
                              type: array
                              items:
                                $ref: '#/components/schemas/SBExpression'
                            resolvedExpressions:
                              type: array
                              items:
                                $ref: '#/components/schemas/SBResolvedExpression'
                            state:
                              $ref: '#/components/schemas/SBProductTargetState'
                            bid:
                              $ref: '#/components/schemas/Bid'
            application/vnd.sblisttargetsresponse.v3+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ListResponse'
                  - type: object
                    properties:
                      targets:
                        type: array
                        items:
                          type: object
                          properties:
                            targetId:
                              type: integer
                              format: int64
                              description: The target identifier.
                            adGroupId:
                              type: integer
                              format: int64
                              description: The identifier of the ad group to which the target is associated.
                            campaignId:
                              type: integer
                              format: int64
                              description: The identifier of the campaign to which the target is associated.
                            expressions:
                              type: array
                              items:
                                $ref: '#/components/schemas/SBExpression'
                            resolvedExpressions:
                              type: array
                              items:
                                $ref: '#/components/schemas/SBResolvedExpression'
                            state:
                              $ref: '#/components/schemas/SBProductTargetState'
                            bid:
                              $ref: '#/components/schemas/Bid'
  /sb/targets:
    put:
      tags:
        - Product targeting
      operationId: updateTargets
      summary: Updates one or more targets.
      requestBody:
        description: A list of targets with updated values. <br/>Note that targets can be updated on campaigns where serving status is not one of `archived`, `terminated`, `rejected`, or `ended`. <br/>Note that this operation supports a maximum list size of 100 targets. <br/>Note the bid is only mutable when the keyword's corresponding campaign does not have any enabled optimization rule.
        content:
          application/json:
            schema:
              type: object
              required:
                - targets
              properties:
                targets:
                  type: array
                  items:
                    $ref: '#/components/schemas/SBUpdateTargetingClauseRequest'
                  minItems: 1
                  maxItems: 100
      responses:
        200:
          description: A list of success and error results for targets submitted for update.
          content:
            application/vnd.updatetargetsresponse.v3+json:
              schema:
                type: object
                properties:
                  updateTargetSuccessResults:
                    description: Lists the successfully updated targets. Note that targets in the response are correlated to targets in the request using the `targetRequestIndex` field. For example, if `targetRequestIndex` is set to `2`, the values correlate to the third target object in the request.
                    type: array
                    items:
                      type: object
                      properties:
                        targetId:
                          $ref: '#/components/schemas/SBTargetId'
                        targetRequestIndex:
                          $ref: '#/components/schemas/SBTargetRequestIndex'
                  updateTargetErrorResults:
                    description: Lists errors that occured during target update. Note that errors are correlated to target update requests by the `targetRequestIndex` field. This field corresponds to the order of the target in the request. For example, if `targetRequestIndex` is set to `2`, the values correlate to the third target object in the request array.
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Error'
                        - type: object
                          properties:
                            targetId:
                              $ref: '#/components/schemas/SBTargetId'
                            targetRequestIndex:
                              $ref: '#/components/schemas/SBTargetRequestIndex'
        400:
          $ref: '#/components/responses/400BadRequest'
    post:
      tags:
        - Product targeting
      operationId: createTargets
      summary: Create one or more targets.
      requestBody:
        description: A list of targeting clauses for creation. <br/>Note that targets can be created on campaigns where serving status is not one of `archived`, `terminated`, `rejected`, or `ended`. <br/>Note that this operation supports a maximum list size of 100 targets. <br/>Note the bid is only mutable when the keyword's corresponding campaign does not have any enabled optimization rule.
        content:
          application/json:
            schema:
              type: object
              required:
                - targets
              properties:
                targets:
                  type: array
                  items:
                    $ref: '#/components/schemas/SBCreateTargetingClauseRequest'
                  minItems: 1
                  maxItems: 100
      responses:
        200:
          description: A list of success and error results for targeting clauses submitted for creation.
          content:
            application/vnd.sbcreatetargetsresponse.v3+json:
              schema:
                $ref: '#/components/schemas/SBCreateTargetsResponse'
        400:
          $ref: '#/components/responses/400BadRequest'
  /sb/targets/{targetId}:
    get:
      tags:
        - Product targeting
      operationId: getTarget
      summary: Gets a target specified by identifier.
      parameters:
        - $ref: '#/components/parameters/clientHeader'
        - $ref: '#/components/parameters/profileHeader'
        - name: targetId
          description: The identifier of an existing target.
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/SBTargetId'
      responses:
        "200":
          description: success
          content:
            application/vnd.sbtarget.v3+json:
              schema:
                $ref: '#/components/schemas/SBTargetingClause'
        "400":
          $ref: '#/components/responses/400BadRequest'
        "404":
          $ref: '#/components/responses/404NotFound'
    delete:
      tags:
        - Product targeting
      operationId: archiveTarget
      summary: Archives a target specified by identifier. Note that archiving is permanent, and once a target has been archived it can't be made active again.
      description: The identifier of an existing target.
      parameters:
        - name: targetId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/SBTargetId'
      responses:
        "200":
          description: success
          content:
            application/vnd.sbtargetresponse.v3+json:
              schema:
                $ref: '#/components/schemas/SBTargetingClauseResponse'
        "400":
          $ref: '#/components/responses/400BadRequest'
        "404":
          $ref: '#/components/responses/404NotFound'
  /sb/negativeTargets/list:
    post:
      tags:
        - Negative product targeting
      operationId: listNegativeTargets
      summary: Gets a list of product negative targets associated with the client identifier passed in the authorization header, filtered by specified criteria.
      description: |-
        **Note**: Negative targets associated with BrandVideo ad groups are only available in v3.2 version.
      requestBody:
        description: A set of filters.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ListRequest'
                - type: object
                  properties:
                    filters:
                      description: Restricts results to negative targets with the specified filters.  Filters are inclusive. Filters are joined using 'and' logic. Specify one each type of filter. Specifying multiples of the same type of filter results in an error.
                      type: array
                      items:
                        anyOf:
                          - allOf:
                              - type: object
                                properties:
                                  filterType:
                                    description: Set `filterType` to `CREATIVE_TYPE` to filter by creative type. If no filter is specified, all negative targets will be returned.
                                    type: string
                                    enum:
                                      - CREATIVE_TYPE
                              - type: object
                                properties:
                                  values:
                                    description: A list of creative types.
                                    type: array
                                    items:
                                      type: string
                                      enum:
                                        - productCollection
                                        - video
                                    minItems: 1
                                    maxItems: 2
                          - allOf:
                              - type: object
                                properties:
                                  filterType:
                                    description: Set `filterType` to `TARGETING_STATE` to filter by negative target state.
                                    type: string
                                    enum:
                                      - TARGETING_STATE
                              - type: object
                                properties:
                                  values:
                                    description: A list of negative target states.
                                    type: array
                                    items:
                                      $ref: '#/components/schemas/SBNegativeTargetState'
                                    minItems: 1
                                    maxItems: 3
                          - allOf:
                              - type: object
                                properties:
                                  filterType:
                                    description: Set `filterType` to `CAMPAIGN_ID` to filter by campaign identifiers.
                                    type: string
                                    enum:
                                      - CAMPAIGN_ID
                              - type: object
                                properties:
                                  values:
                                    description: A list of campaign identifiers.
                                    type: array
                                    items:
                                      description: An existing campaign identifier.
                                      type: string
                                    minItems: 1
                                    maxItems: 100
                          - allOf:
                              - type: object
                                properties:
                                  filterType:
                                    description: Set `filterType` to `AD_GROUP_ID` to filter by ad group identifier.
                                    type: string
                                    enum:
                                      - AD_GROUP_ID
                              - type: object
                                properties:
                                  values:
                                    description: A list of ad group identifiers.
                                    type: array
                                    items:
                                      description: An existing ad group identifier.
                                      type: string
                                    minItems: 1
                                    maxItems: 100
                      minItems: 0
                      maxItems: 3
      responses:
        200:
          description: A list of negative targets.
          content:
            application/vnd.sblistnegativetargetsresponse.v3.2+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ListResponse'
                  - type: object
                    properties:
                      negativeTargets:
                        type: array
                        items:
                          $ref: '#/components/schemas/SBTargetingClause'
            application/vnd.sblistnegativetargetsresponse.v3+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ListResponse'
                  - type: object
                    properties:
                      negativeTargets:
                        type: array
                        items:
                          $ref: '#/components/schemas/SBTargetingClause'
        400:
          $ref: '#/components/responses/400BadRequest'
  /sb/negativeTargets:
    put:
      tags:
        - Negative product targeting
      operationId: updateNegativeTargets
      summary: Updates one or more negative targets.
      requestBody:
        description: A list of negative targets with updated values. <br/>Note that negative targeting clauses can be created on campaigns where serving status is not one of `archived`, `terminated`, `rejected`, or `ended`. <br/>Note that this operation supports a maximum list size of 100 negative targets.
        content:
          application/json:
            schema:
              type: object
              properties:
                negativeTargets:
                  type: array
                  minItems: 1
                  maxItems: 100
                  items:
                    $ref: '#/components/schemas/SBUpdateNegativeTargetingClauseRequest'
      responses:
        200:
          description: A list of success and error results for negative targets submitted for update.
          content:
            application/vnd.updatenegativetargetsresponse.v3+json:
              schema:
                type: object
                properties:
                  updateTargetSuccessResults:
                    description: Lists the successfully updated negative targets. Note that negative targets in the response are correlated to negative targets in the request using the `targetRequestIndex` field. For example, if `targetRequestIndex` is set to `2`, the values correlate to the third negative target object in the request.
                    type: array
                    items:
                      type: object
                      properties:
                        targetId:
                          $ref: '#/components/schemas/SBTargetId'
                        targetRequestIndex:
                          $ref: '#/components/schemas/SBNegativeTargetRequestIndex'
                  updateTargetErrorResults:
                    description: Lists errors that occured during negative target update. Note that errors are correlated to negative target update requests by the `negativeTargetRequestIndex` field. This field corresponds to the order of the negative target in the request. For example, if `negativeTargetRequestIndex` is set to `2`, the values correlate to the third negative target object in the request.
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Error'
                        - type: object
                          properties:
                            targetId:
                              $ref: '#/components/schemas/SBTargetId'
                            targetRequestIndex:
                              $ref: '#/components/schemas/SBNegativeTargetRequestIndex'
        400:
          $ref: '#/components/responses/400BadRequest'
    post:
      tags:
        - Negative product targeting
      operationId: createNegativeTargets
      summary: Create one or more negative targets.
      requestBody:
        description: A list of negative targeting clauses for creation. <br/>Note that negative targeting clauses can be created on campaigns where serving status is not one of `archived`, `terminated`, `rejected`, or `ended`. <br/>Note that this operation supports a maximum list size of 100 negative targets.
        content:
          application/json:
            schema:
              type: object
              required:
                - negativeTargets
              properties:
                negativeTargets:
                  type: array
                  items:
                    $ref: '#/components/schemas/SBCreateNegativeTargetingClauseRequest'
                  minItems: 1
                  maxItems: 100
      responses:
        200:
          description: A list of success and error results for targeting clauses submitted for creation.
          content:
            application/vnd.sbcreatenegativetargetsrequest.v3+json:
              schema:
                $ref: '#/components/schemas/SBCreateTargetsResponse'
        400:
          $ref: '#/components/responses/400BadRequest'
  /sb/negativeTargets/{negativeTargetId}:
    get:
      tags:
        - Negative product targeting
      operationId: getNegativeTarget
      summary: Gets a negative target specified by identifier.
      parameters:
        - name: negativeTargetId
          description: The identifier of an existing negative target.
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/SBNegativeTargetId'
      responses:
        "200":
          description: success
          content:
            application/vnd.sbnegativetarget.v3+json:
              schema:
                $ref: '#/components/schemas/SBNegativeTargetingClause'
        "400":
          $ref: '#/components/responses/400BadRequest'
        "404":
          $ref: '#/components/responses/404NotFound'
    delete:
      tags:
        - Negative product targeting
      operationId: archiveNegativeTarget
      summary: Archives a negative target specified by identifier. Note that archiving is permanent, and once a negative target has been archived it can't be made active again.
      parameters:
        - name: negativeTargetId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/SBNegativeTargetId'
      responses:
        "200":
          description: success
          content:
            application/vnd.sbnegativetarget.v3+json:
              schema:
                $ref: '#/components/schemas/SBTargetingClauseResponse'
        "400":
          $ref: '#/components/responses/400BadRequest'
        "404":
          $ref: '#/components/responses/404NotFound'
  /sb/themes/list:
    post:
      tags:
        - Theme targeting
      operationId: sbListThemes
      description: Note that this endpoint does not support for **Author profiles**. Gets a list of theme targets associated with the client identifier passed in the authorization header, filtered by specified criteria.
      parameters:
        - $ref: '#/components/parameters/clientHeader'
        - $ref: '#/components/parameters/profileHeader'
      requestBody:
        description: A set of filters.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ListRequest'
                - type: object
                  properties:
                    themeIdFilter:
                      description: A list of theme targets identifiers.
                      properties:
                        include:
                          type: array
                          items:
                            description: An theme target identifier.
                            type: string
                            minItems: 1
                            maxItems: 100
                    adGroupIdFilter:
                      description: A list of ad group identifiers.
                      properties:
                        include:
                          type: array
                          items:
                            description: An ad group identifier.
                            type: string
                            minItems: 1
                            maxItems: 100
                    campaignIdFilter:
                      description: A list of campaign identifiers.
                      properties:
                        include:
                          type: array
                          items:
                            description: A campaign identifier.
                            type: string
                            minItems: 1
                            maxItems: 100
                    stateFilter:
                      description: A list of theme target states.
                      properties:
                        include:
                          type: array
                          items:
                            type: string
                            enum:
                              - paused
                              - enabled
                              - archived
                            default: enabled,paused
                            minItems: 1
                            maxItems: 3
                    themeTypeFilter:
                      description: A list of theme target type.
                      properties:
                        include:
                          type: array
                          items:
                            $ref: "#/components/schemas/ThemeType"
                          minItems: 1
                          maxItems: 2
      responses:
        "200":
          description: A list of targeting clauses.
          content:
            application/vnd.sbthemeslistresponse.v3+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ListResponse'
                  - type: object
                    properties:
                      themes:
                        type: array
                        items:
                          $ref: '#/components/schemas/SBTheme'
                        minItems: 0
                        maxItems: 5000
  /sb/themes:
    put:
      tags:
        - Theme targeting
      operationId: sbUpdateThemes
      description: Note that this endpoint does not support for **Author profiles**.
      summary: Updates one or more theme targets.
      parameters:
        - $ref: '#/components/parameters/clientHeader'
        - $ref: '#/components/parameters/profileHeader'
      requestBody:
        description: A list of theme targets with updated values. <br/>Note that theme targets can be updated on multi-adGroups campaigns and where campaign serving status is not one of `archived`, `terminated`, `rejected`, or `ended` and adgroup state is not 'archived'. <br/>Note that this operation supports a maximum list size of 100 theme targets. Also theme target can not be archived. <br/>Note the bid is only mutable when the keyword's corresponding campaign does not have any enabled optimization rule.
        content:
          application/json:
            schema:
              type: object
              required:
                - themes
              properties:
                themes:
                  type: array
                  items:
                    $ref: '#/components/schemas/SBUpdateThemesRequest'
                  minItems: 1
                  maxItems: 100
      responses:
        200:
          description: A list of success and error results for theme targets submitted for update.
          content:
            application/vnd.sbthemesupdateresponse.v3+json:
              schema:
                type: object
                properties:
                  success:
                    description: Lists the successfully updated theme targets. Note that theme targets in the response are correlated to theme targets in the request using the `index` field. For example, if `index` is set to `2`, the values correlate to the third theme target object in the request.
                    type: array
                    items:
                      type: object
                      properties:
                        themeId:
                          $ref: '#/components/schemas/SBThemeId'
                        index:
                          $ref: '#/components/schemas/SBTargetRequestIndex'
                    minItems: 0
                    maxItems: 100
                  error:
                    description: Lists errors that occurred during theme target update. Note that errors are correlated to theme target update requests by the `index` field. This field corresponds to the order of the theme target in the request. For example, if `index` is set to `2`, the values correlate to the third theme target object in the request array.
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Error'
                        - type: object
                          properties:
                            themeId:
                              $ref: '#/components/schemas/SBThemeId'
                            index:
                              $ref: '#/components/schemas/SBTargetRequestIndex'
                    minItems: 0
                    maxItems: 100
        400:
          $ref: '#/components/responses/400BadRequest'
    post:
      tags:
        - Theme targeting
      operationId: sbCreateThemes
      description: Note that this endpoint does not support for **Author profiles**.
      summary: Create one or more theme targets.
      parameters:
        - $ref: '#/components/parameters/clientHeader'
        - $ref: '#/components/parameters/profileHeader'
      requestBody:
        description: A list of theme targets for creation. <br/>Note that theme targets can be created on multi-adGroups campaigns and where campaign serving status is not one of `archived`, `terminated`, `rejected`, or `ended` and adgroup state is not 'archived'. <br/>Note that this operation supports a maximum list size of 100 theme targets and only one target can be created for each themeType per adGroup. <br/>Note the bid is only mutable when the keyword's corresponding campaign does not have any enabled optimization rule.
        content:
          application/json:
            schema:
              type: object
              required:
                - themes
              properties:
                themes:
                  type: array
                  items:
                    $ref: '#/components/schemas/SBCreateThemesRequest'
                  minItems: 1
                  maxItems: 100
      responses:
        200:
          description: A list of success and error results for theme targets submitted for creation.
          content:
            application/vnd.sbthemescreateresponse.v3+json:
              schema:
                $ref: '#/components/schemas/SBCreateThemesResponse'
        400:
          $ref: '#/components/responses/400BadRequest'
  /sb/recommendations/targets/product/list:
    post:
      tags:
        - Targeting recommendations
      operationId: getProductRecommendations
      summary: Gets a list of recommended products for targeting.
      description: Recommendations are based on the ASINs that are passed in the request.
      parameters:
        - $ref: '#/components/parameters/clientHeader'
        - $ref: '#/components/parameters/profileHeader'
      requestBody:
        description: A list of ASINs.
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/ListRecommendationsRequest'
                - type: object
                  properties:
                    filters:
                      description: Restricts recommendations to the criteria specified in the filters.
                      type: array
                      items:
                        anyOf:
                          - allOf:
                              - type: object
                                properties:
                                  filterType:
                                    type: string
                                    enum:
                                      - ASINS
                              - type: object
                                properties:
                                  values:
                                    description: A list of ASINs.
                                    type: array
                                    items:
                                      description: An ASIN.
                                      type: string
                                    minItems: 1
                                    maxItems: 100
      responses:
        '200':
          description: A list of product targeting recommendations.
          content:
            application/vnd.sbproductrecommendationsresponse.v3.1+json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ListResponse'
                  - type: object
                    properties:
                      recommendedProducts:
                        type: array
                        items:
                          type: object
                          properties:
                            recommendedTargetAsin:
                              description: The recommended target ASIN.
                              type: string
  /sb/recommendations/targets/category:
    post:
      tags:
        - Targeting recommendations
      operationId: getTargetingCategories
      summary: Gets a list of recommended categories for targeting.
      description: Recommendations are based on the ASINs that are passed in the request.
      parameters:
        - $ref: '#/components/parameters/clientHeader'
        - $ref: '#/components/parameters/profileHeader'
        - name: locale
          in: query
          description: Return the categories in the specified locale.
          required: false
          schema:
            type: string
            enum:
              - ar_AE
              - de_DE
              - en_AE
              - en_AU
              - en_CA
              - en_GB
              - en_IN
              - en_SG
              - en_US
              - es_ES
              - es_MX
              - fr_CA
              - fr_FR
              - hi_IN
              - it_IT
              - ja_JP
              - ko_KR
              - nl_NL
              - pl_PL
              - pt_BR
              - sv_SE
              - ta_IN
              - th_TH
              - tr_TR
              - vi_VN
              - zh_CN
      requestBody:
        description: List of ASINs.
        content:
          application/json:
            schema:
              type: object
              properties:
                asins:
                  type: array
                  description: A list of ASINs.
                  items:
                    type: string
                supplySource:
                  type: string
                  description: (As of 05/28/2024, `STREAMING_VIDEO` is deprecated). The supply source of the campaign. Use `AMAZON` for placements on Amazon website. Use `STREAMING_VIDEO` for off-site video placements such as IMDb TV. Default value is `AMAZON`.
                  enum:
                    - AMAZON
                    - STREAMING_VIDEO
      responses:
        '200':
          description: A list of category targeting recommendations.
          content:
            application/vnd.sbcategoryrecommendationsresponse.v3.2+json:
              schema:
                type: object
                properties:
                  categoryRecommendationResults:
                    type: array
                    items:
                      $ref: '#/components/schemas/SBCategoryResponse'
  /sb/recommendations/targets/brand:
    post:
      tags:
        - Targeting recommendations
      operationId: getBrandRecommendations
      summary: Gets a list of brand suggestions.
      description: The Brand suggestions are based on a list of either category identifiers or keywords passed in the request. It is not valid to specify both category identifiers and keywords in the request.
      parameters:
        - $ref: '#/components/parameters/clientHeader'
        - $ref: '#/components/parameters/profileHeader'
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - type: object
                  properties:
                    categoryId:
                      type: integer
                      format: int64
                      description: The category identifier for which to get recommendations.
                - type: object
                  properties:
                    keyword:
                      type: string
                      description: The keyword for which to get recommendations.
      responses:
        '200':
          description: success
          content:
            application/vnd.sbbrandrecommendationsresponse.v3.1+json:
              schema:
                type: object
                properties:
                  brandRecommendationResults:
                    type: array
                    items:
                      $ref: '#/components/schemas/SBBrandResponse'
  /sb/moderation/campaigns/{campaignId}:
    get:
      tags:
        - Moderation
      summary: Gets the moderation result for a campaign specified by identifier.
      description: Note that this resource is only available for campaigns in the US marketplace.
      parameters:
        - $ref: '#/components/parameters/clientHeader'
        - $ref: '#/components/parameters/profileHeader'
        - name: campaignId
          in: path
          description: The campaign identifier.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: success
          content:
            application/vnd.sbmoderation.v3+json:
              schema:
                type: object
                properties:
                  campaignId:
                    type: integer
                    format: int64
                    description: The campaign identifier.
                  moderationStatus:
                    type: string
                    enum:
                      - APPROVED
                      - IN_PROGRESS
                      - REJECTED
                    description: |-
                      The moderation status of the campaign.
                      |Status|Description|
                      |------|-----------|
                      |APPROVED|Moderation for the campaign is complete.|
                      |IN_PROGRESS|Moderation for the campaign is in progress. The expected date and time for completion are specfied in the `etaForModeration` field.|
                      |REJECTED|The campaign has failed moderation. Specific information about the content that violated policy is available in `policyViolations`.|
                  etaForModeration:
                    type: string
                    format: date-time
                    description: Expected date and time by which moderation will be complete. Note that this field is present in the response only when `moderationStatus` is set to `IN_PROGRESS`.
                  policyViolations:
                    type: array
                    description: A list of policy violations for a campaign that has failed moderation. Note that this field is present in the response only when `moderationStatus` is set to `REJECTED`.
                    items:
                      type: object
                      properties:
                        policyDescription:
                          type: string
                          example: Advertising alcohol is not allowed
                          description: A human-readable description of the policy.
                        policyLinkUrl:
                          type: string
                          format: uri
                          example: https://advertising.amazon.com/resources/ad-policy/en/creative-acceptance#alcohol
                          description: Address of the policy documentation. Follow the link to learn more about the specified policy.
                        violatingTextContents:
                          type: array
                          description: Information about the specific text that violates the specified policy in the campaign.
                          items:
                            type: object
                            properties:
                              moderatedComponent:
                                type: string
                                description: The ad component that includes the text that violates the specified policy.
                                example: headline
                              reviewedText:
                                type: string
                                description: The specific text reviewed during moderation.
                                example: Best alcohol money can buy
                              textEvidences:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    violatingText:
                                      type: string
                                      description: The specific text determined to violate the specified policy in `reviewedText`.
                                      example: alcohol
                                    violatingTextPosition:
                                      type: object
                                      properties:
                                        start:
                                          type: integer
                                          description: Zero-based index into the text in `reviewedText` where the text specified in `violatingText` starts.
                                          example: 5
                                        end:
                                          type: integer
                                          description: Zero-based index into the text in `reviewedText` where the text specified in `violatingText` ends.
                                          example: 11
                        violatingImageContents:
                          type: array
                          description: Information about the specific image that violates the specified policy.
                          items:
                            type: object
                            properties:
                              moderatedComponent:
                                type: string
                                description: The ad component that includes the image that violates the specified policy.
                                example: brandlogo
                              reviewedImageUrl:
                                type: string
                                description: Address of the image reviewed during moderation.
                                example: https://media-central.amazon.com/ejfkkfwkeclkmd.jpg
                              imageEvidences:
                                type: array
                                items:
                                  properties:
                                    violatingImageCrop:
                                      type: object
                                      properties:
                                        topLeftX:
                                          type: integer
                                          description: The top left X-coordinate of the content that violates the specfied policy within the image.
                                          example: 24
                                        topLeftY:
                                          type: integer
                                          description: The top left Y-coordinate of the content that violates the specfied policy within the image.
                                          example: 87
                                        height:
                                          type: integer
                                          description: The height of the content that violates the specified policy within the image.
                                          example: 50
                                        width:
                                          type: integer
                                          description: The width of the content that violates the specified policy within the image.
                                          example: 75
                        violatingAsinContents:
                          type: array
                          description: Information about the specific ASIN in the campaign that violates the specified policy.
                          items:
                            type: object
                            properties:
                              moderatedComponent:
                                type: string
                                description: The ad component that includes the ASIN that violates the specified policy.
                                example: landingPageAsin
                              asinEvidences:
                                type: array
                                items:
                                  properties:
                                    asin:
                                      type: string
                                      description: The ASIN that violates the specified policy.
                                      pattern: "[A-Za-z0-9]{10}"
                                      example: B0786PRKBP
        '404':
          description: 'Requested campaignId not found'
          content:
            application/vnd.error.v3+json:
              schema:
                $ref: '#/components/schemas/Error'
  /v2/hsa/{recordType}/report:
    post:
      tags:
        - Reports
      summary: Requests the creation of a report containing performance data related to Sponsored Brands campaigns.
      description: |-
        Use this interface to request and retrieve performance reports. **To understand the call flow for asynchronous reports, see [Getting started with sponsored ads reports](/API/docs/en-us/guides/reporting/v2/sponsored-ads-reports).**
        
        **KDP support**
        
        Note that KDP profiles cannot currently request reports for Sponsored Brands campaigns using the API. Authors should use the advertising console to download reporting data. 
        
        **Filtering**
        
        For more information, see the [Reporting FAQ](/API/docs/en-us/guides/reporting/v2/faq#can-i-filter-a-sponsored-brands-report).
        
        **Constraints of Sponsored Brands reporting**
        
        Sponsored Brands reporting data cannot be combined with Sponsored Products data into one report. Only 14-day data is available for Sponsored Brands. Attribution windows of 1, 7, and 30-day intervals are not available.
        
        **New-to-brand performance metrics**
        
        With new-to-brand metrics, advertisers can measure and optimize campaigns, as well as plan future marketing strategies to grow their customer base on Amazon. New-to-brand metrics determine whether an ad-attributed purchase was made by an existing customer or one buying a brand’s product on Amazon for the first time over the prior year. With new-to-brand metrics, advertisers receive campaign performance metrics such as total new-to-brand purchases and sales, new-to-brand purchase rate, and cost per new-to-brand customer. Advertisers now have the tools they need to estimate the cost of acquiring new customers on Amazon and identify the most efficient channels and tactics to achieve their campaign goals.
      parameters:
        - $ref: '#/components/parameters/clientHeader'
        - $ref: '#/components/parameters/profileHeader'
        - name: recordType
          in: path
          description: The type of report. Valid types are `campaigns`, `adGroups`, `ads`, `targets`, and `keywords`.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - reportDate
                - metrics
              properties:
                reportDate:
                  type: string
                  description: Date in YYYYMMDD format. The report only contains performance data for the specified date. The time zone is specified by the profile used to request the report. If this date is today, then the performance report may contain partial information. Reports are not available for data older than 60 days. For details on data latency, see [Service Guarantees](../../reference/concepts/developer-notes).
                segment:
                  type: string
                  description: |-
                    Optional. Allows you to run a report based on secondary dimensions. Use `placement` to segment a `campaigns` report by the location on a page where your ad appears. Use `query` to segment a `keywords` report and create a search terms report.
                  enum:
                    - placement
                    - query
                creativeType:
                  type: string
                  description: Optional. Supported values are `video` (for video campaigns) and `all` (for both non-video and video campaigns). If not specified, the report will contain data for non-video campaigns. For `ads` report types only, `creativeType` is required and must be set to `all` (`video` is not allowed). To return performance data for [multi-ad group campaigns](https://advertising.amazon.com/API/docs/en-us/sponsored-brands/3-0/openapi/prod#/Campaigns), you must include `creativeType` set to `all`` in your request.
                  enum:
                    - video
                    - all
                metrics:
                  type: string
                  description: |-
                    Each report type supports different metrics. **To understand supported metrics for each report type, see [Report types](/API/docs/en-us/guides/reporting/v2/report-types).**
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  reportId:
                    type: string
                    description: The unique ID for your requested report.
                  recordType:
                    type: string
                    description: The record type of the report. It can be `campaign`, `adGroup`, `keyword`, or `targets`.
                  status:
                    type: string
                    description: The status of the report. Status is one of `IN_PROGRESS`, `SUCCESS`, or `FAILURE`.
                  statusDetails:
                    type: string
                    description: Description of the status.
        '406':
          description: Failed due to report date being too far in the past. Reports are not available for data older than 60 days.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Report formed incorrectly. Report requests return a 422 status code if the parameters specified are unrecognized or if the combination of parameters is not supported. In particular, the choice of `recordType` may restrict the use of certain segments. Query segmentation can only be used in combination with keyword and product ad reports.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v2/reports/{reportId}:
    get:
      tags:
        - Reports
      summary: Returns the status of a previously requested report.
      description: To understand the call flow for asynchronous reports, see [Getting started with sponsored ads reports](/API/docs/en-us/guides/reporting/v2/sponsored-ads-reports).
      parameters:
        - $ref: '#/components/parameters/clientHeader'
        - $ref: '#/components/parameters/profileHeader'
        - name: reportId
          in: path
          description: Report ID returned by POST report method.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  reportId:
                    type: string
                    description: The unique ID for your requested report.
                  status:
                    type: string
                    description: The status of the report. Status is one of `IN_PROGRESS`, `SUCCESS`, or `FAILURE`.
                  statusDetails:
                    type: string
                    description: Description of the status.
        '404':
          description: Report not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v2/reports/{reportId}/download:
    get:
      tags:
        - Reports
      summary: Downloads a previously requested report identified by `reportId`.
      description: |-
        Gets a `307 Temporary Redirect` response that includes a `location` header with the value set to an AWS S3 path where the report is located. The path expires after 30 seconds. If the path expires before the report is downloaded, a new report request must be created. 
        
        **To understand the call flow for asynchronous reports, see [Getting started with sponsored ads reports](/API/docs/en-us/guides/reporting/v2/sponsored-ads-reports).**
        
        The report file contains one row per entity for which performance data is present. These records are represented as JSON containing the ID attribute corresponding to the `recordType`, the segment (if specified), and each of the metrics in the request.
        
        **Note**: The report files in S3 are gzipped.
        
        *Example report download*
        
        `$ curl -o /tmp/report.json.gz "https://sandboxreports.s3.amazonaws.com/amzn1.clicksAPI.v1.m1.580149D6.c7aa92c1-ca5b-435d-bb8b-51cb26ad5731?AWSAccessKeyId=AKIAIKLHNT32USZOWVRA&amp;Expires=1476479900&amp;Signature=I%2F2Gd%2B8TbcPbXbBUM6ix%2BSVP3qA%3D"`
      operationId: downloadReport
      parameters:
        - $ref: '#/components/parameters/clientHeader'
        - $ref: '#/components/parameters/profileHeader'
        - name: reportId
          in: path
          description: The identifier of the requested report.
          required: true
          schema:
            type: string
      responses:
        307:
          description: Successful operation.
          headers:
            Location:
              schema:
                type: string
              description: Redirect URI with S3 file location containing report data
        400:
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Not found - requested resource does not exist or is not visible for the authenticated user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        429:
          description: Too many requests - request was rate-limited. Retry later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal server error - something went wrong on the server. Retry later and report an error if unresolved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'



servers:
  - url: "https://advertising-api.amazon.com"
  - url: "https://advertising-api-eu.amazon.com"
  - url: "https://advertising-api-fe.amazon.com"

components:
  schemas:
    BrandType:
      type: string
      enum:
        - brandRegistry
        - bookAuthor
      description: |-
        | brandType | description |
        |-----------|-------------|
        | brandRegistry | The brand is in the brand registry. |
        | bookAuthor    | The brand is a book author. |
    BudgetType:
      description: Note that for the lifetime budget type, `startDate` and `endDate` must be specified. The lifetime budget range is from 100 to 20,000,000 and daily budget range is 1 to 1,000,000 by default for most marketplaces. For the JP marketplace, the lifetime budget range is from 10,000 to 2,000,000,000, and the daily budget range is 100 to 21,000,000.
      type: string
      enum:
        - lifetime
        - daily
    CampaignTags:
      description: A list of advertiser-specified custom identifiers for the campaign. Each customer identifier is a key-value pair. You can specify a maximum of 50 identifiers.
      type: object
      additionalProperties:
        type: string
      example:
        PONumber: examplePONumber
        accountManager: exampleAccountManager
    MediaType:
      description: The supported media types.
      type: string
      enum:
        - brandLogo
        - image
    SBUpdateCampaignResponse:
      description: |-
        Applies to:
        | Operation | Path |
        |-----------| -----|
        |[updateCampaigns](https://advertising.amazon.com/API/docs/v3/reference/SponsoredBrands/Campaigns)| PUT /sb/campaigns|
        |[archiveCampaigns](https://advertising.amazon.com/API/docs/v3/reference/SponsoredBrands/Campaigns)|DELETE /sb/campaigns/{campaignId}|
        <br/>
      properties:
        campaignId:
          description: The campaign identifier.
          type: integer
          format: int64
        code:
          description: An enumerated response code.
          type: string
        details:
          description: A human-readable description of the enumerated response code in the `code` field.
          type: string
    SBKeywordResponse:
      description: |-
        Applies to:
        | Operation | Path |
        |-----------| -----|
        |[createKeywords](https://advertising.amazon.com/API/docs/v3/reference/SponsoredBrands/Keywords)| POST /sb/keywords|
        |[createNegativeKeywords](https://advertising.amazon.com/API/docs/v3/reference/SponsoredBrands/Negative_Keywords)|POST /sb/negativeKeywords|
        |[updateNegativeKeywords](https://advertising.amazon.com/API/docs/v3/reference/SponsoredBrands/Negative_Keywords)|PUT /sb/negativeKeywords|
        |[archiveNegativeKeyword](https://advertising.amazon.com/API/docs/v3/reference/SponsoredBrands/Negative_Keywords)|DELETE /sb/negativeKeywords/{keywordId}|
        <br/>
      properties:
        keywordId:
          description: The keyword identifier.
          type: integer
          format: int64
        code:
          description: An enumerated response code.
          type: string
        description:
          description: A human-readable description of the enumerated response code in the `code` field.
          type: string
        errors:
          type: array
          items:
            $ref: "#/components/schemas/KeywordError"
          description: An array of error objects.
    SBExpressionResponse:
      properties:
        targetId:
          description: The targeting expression identifier.
          type: integer
          format: int64
        code:
          description: An enumerated response code.
          type: string
    SBKeyword:
      description: |-
        Applies to:
        | Operation | Path |
        |-----------| -----|
        |[listKeywords](https://advertising.amazon.com/API/docs/v3/reference/SponsoredBrands/Keywords)| GET /sb/keywords|
        |[getKeyword](https://advertising.amazon.com/API/docs/v3/reference/SponsoredBrands/Keywords)| GET /sb/keywords/{keywordId}|
        <br/>
      properties:
        keywordId:
          description: The keyword identifier.
          type: integer
          format: int64
        adGroupId:
          description: The identifier of the ad group associated with the keyword.
          type: integer
          format: int64
        campaignId:
          description: The identifier of the campaign associated with the keyword.
          type: integer
          format: int64
        keywordText:
          description: The keyword text. The maximum number of words for this string is 10.
          type: string
        nativeLanguageKeyword:
          description: The unlocalized keyword text in the preferred locale of the advertiser.
          type: string
        matchType:
          $ref: "#/components/schemas/MatchType"
        state:
          $ref: "#/components/schemas/SBKeywordState"
        bid:
          description: The bid associated with the keyword. Note that this value must be less than the budget associated with the Advertiser account. For more information, see the **Keyword bid constraints by marketplace** section of the [supported features](https://advertising.amazon.com/API/docs/v2/guides/supported_features) article.
          type: number
    SBDraftKeyword:
      properties:
        keywordId:
          description: The keyword identifier.
          type: integer
          format: int64
        adGroupId:
          description: The identifier of the ad group associated with the keyword.
          type: integer
          format: int64
        campaignId:
          description: The identifier of the campaign associated with the keyword.
          type: integer
          format: int64
        keywordText:
          description: The keyword text. The maximum number of words for this string is 10.
          type: string
        matchType:
          $ref: "#/components/schemas/MatchType"
        state:
          type: string
          enum:
            - draft
            - enabled
          description: |-
            | state | description |
            |-------|-------------|
            | draft | Newly created keyword. |
            | enabled | Keyword passed moderation. |
        bid:
          description: The bid associated with the keyword. Note that this value must be less than the budget associated with the Advertiser account. For more information, see the **Keyword bid constraints by marketplace** section of the [supported features](https://advertising.amazon.com/API/docs/v2/guides/supported_features) article.
          type: number
    SBNegativeKeyword:
      properties:
        keywordId:
          description: The keyword identifier.
          type: integer
          format: int64
        adGroupId:
          description: The identifier of the ad group associated with the keyword.
          type: integer
          format: int64
        campaignId:
          description: The identifier of the campaign associated with the keyword.
          type: integer
          format: int64
        keywordText:
          description: The keyword text. The maximum number of words for this string is 10.
          type: string
        matchType:
          $ref: "#/components/schemas/NegativeMatchType"
        state:
          $ref: "#/components/schemas/SBKeywordState"
    SBDraftNegativeKeyword:
      properties:
        keywordId:
          description: The keyword identifier.
          type: integer
          format: int64
        adGroupId:
          description: The identifier of the ad group associated with the keyword.
          type: integer
          format: int64
        campaignId:
          description: The identifier of the campaign associated with the keyword.
          type: integer
          format: int64
        keywordText:
          description: The keyword text. The maximum number of words for this string is 10.
          type: string
        matchType:
          $ref: "#/components/schemas/NegativeMatchType"
        state:
          type: string
          enum:
            - draft
    MatchType:
      type: string
      description: The match type. For more information, see [match types](https://advertising.amazon.com/help#GHTRFDZRJPW6764R) in the Amazon Ads support center.
      enum:
        - broad
        - exact
        - phrase
    NegativeMatchType:
      type: string
      description: The negative match type. For more information, see [negative keyword match types](https://advertising.amazon.com/help#GHTRFDZRJPW6764R) in the Amazon Ads support center.
      enum:
        - negativeExact
        - negativePhrase
    State:
      type: string
      enum:
        - enabled
        - paused
        - archived
    NegativeState:
      type: string
      enum:
        - enabled
        - archived
    AdFormat:
      type: string
      enum:
        - productCollection
        - video
      description: The type of ad format.
    Goal:
      type: string
      description: |-
        The goal type of the campaign.
        If no goal is selected then it will default to `PAGE_VISIT`.
        | goal | description |
        |-----------|-------------|
        | BRAND_IMPRESSION_SHARE | Brand Impression Share (BIS) is Top of search (ToS) impression shares for branded search terms. |
        | PAGE_VISIT | Facilitate consumers' awareness of your brand |
        | ACQUIRE_NEW_CUSTOMERS | This property is a PREVIEW ONLY and cannot be used as part of a request or response, this note will be removed once supported. This goal drives new customer acquisition for your brands. |
        | AD_VIEWS | This property is a PREVIEW ONLY and cannot be used as part of a request or response, this note will be removed once supported. This goal maximizes view for your ads. |
    AdFormatV3_2:
      type: string
      enum:
        - productCollection
        - storeSpotlight
        - video
      description: The type of ad format.
    CreativeType:
      type: string
      enum:
        - productCollection
        - video
      description: collection is deprecated in favor of productCollection.
    ThemeType:
      type: string
      description: |-
        The theme target type.
        - KEYWORDS_RELATED_TO_YOUR_BRAND - keywords related to brands.
        - KEYWORDS_RELATED_TO_YOUR_LANDING_PAGES - keywords related to your landing pages.
        - Note: Additional theme types may be added in the future.
    SBKeywordState:
      type: string
      enum:
        - enabled
        - paused
        - archived
        - draft
    SBNegativeKeywordState:
      type: string
      enum:
        - enabled
        - archived
        - draft
      description: The current state of the negative keyword.
    SBAdGroup:
      description: |-
        Applies to:
        | Operation | Path |
        |-----------| -----|
        |[listAdGroups](https://advertising.amazon.com/API/docs/v3/reference/SponsoredBrands/Ad_Groups)| GET /sb/adGroups|
        |[getAdGroup](https://advertising.amazon.com/API/docs/v3/reference/SponsoredBrands/Ad_Groups)| GET /sb/adGroups/{adGroupId}|
        <br/>
      properties:
        campaignId:
          description: The identifier of the campaign associated with the ad group.
          type: integer
          format: int64
          readOnly: true
        adGroupId:
          description: The identifier of the ad group.
          type: integer
          format: int64
          readOnly: true
        name:
          description: The name of the ad group.
          type: string
          readOnly: true
    SBCreative:
      description: Note that the values of each field in this object are immutable for an existing campaign.
      properties:
        brandName:
          type: string
          description: A brand name. Maximum length is 30 characters.
        brandLogoAssetID:
          type: string
          description: The identifier of the brand logo image from the Store assets library. See [listAssets](https://advertising.amazon.com/API/docs/v3/reference/SponsoredBrands/Stores) for more information. Note that for campaigns created in the Amazon Ads console prior to release of the Store assets library, responses will not include a value for the brandLogoAssetID field.
        brandLogoUrl:
          type: string
          readOnly: true
          description: The address of the hosted image.
        headline:
          type: string
          description: The headline text. Maximum length of the string is 50 characters for all marketplaces other than Japan, which has a maximum length of 35 characters.
        asins:
          description: An array of ASINs associated with the creative. **Note** do not pass an empty array, this results in an error.
          type: array
          minimum: 0
          maximum: 3
          items:
            type: string
        shouldOptimizeAsins:
          type: boolean
          description: |-
            **NOTE** Starting on March 25th, 2021, this property will no longer be supported. This feature is currently available in the US and UK. Existing Sponsored Brands campaigns with product optimization enabled will no longer have the products in the creative automatically optimized. Campaigns with product optimization enabled will be converted to standard Sponsored Brands product collection campaigns with the default selected products showing in the creative. For POST and PUT operations, setting this property to `true` will not have any effect. The value returned in the response will always be `false`. For the GET operation, the value of this field will always be `false`. And starting on September 25th, 2021, this property will be removed completely.
          default: false
    SBVideoCreative:
      description: Render one product image with associated media.
      allOf:
        - type: object
          properties:
            asins:
              type: array
              items:
                type: string
              description: An array of ASINs associated with the creative.
              minItems: 1
              maxItems: 1
            videoMediaIds:
              description: Video Asset IDs associated with the creative.
              type: array
              minimum: 1
              maximum: 1
              items:
                type: string
            type:
              description: Type of creative
              type: string
              enum: [ "video" ]
    SBLandingPage:
      description: Specifies either an array of ASINs for a simple landing page or the URL of a Store page. Vendors may also specify the URL of a custom landing page. Shoppers are sent to the specified simple landing page, custom landing page, or Store page when the ad is clicked. Note that this property can be updated when the campaign is in a draft state, but can't be updated while the campaign is in moderation or once it's been approved. If the campaign is rejected for any reason, it returns to a draft state.
      properties:
        asins:
          type: array
          items:
            type: string
          writeOnly: true
          description: An array of ASINs used to generate a simple landing page. The response includes the URL of the generated simple landing page. Do not include this property in the request if the `url` property is also included, these properties are mutually exclusive.
          minimum: 3
          maximum: 100
        url:
          type: string
          description: "URL of an existing simple landing page or Store page. Vendors may also specify the URL of a custom landing page. If a custom URL is specified, the landing page must include the ASINs of at least three products that are advertised as part of the campaign. Do not include this property in the request if the `asins` property is also included, these properties are mutually exclusive."
    SBCampaign:
      description: |-
        Applies to:
        | Operation | Path |
        |-----------| -----|
        |[createCampaigns](https://advertising.amazon.com/API/docs/v3/reference/SponsoredBrands/Campaigns)| POST /sb/campaigns|
        |[getCampaign](https://advertising.amazon.com/API/docs/v3/reference/SponsoredBrands/Campaigns)| GET /sb/campaigns/{campaignId}|
        <br/>
      properties:
        campaignId:
          description: The campaign identifier.
          readOnly: true
          type: integer
        name:
          type: string
          description: The name of the campaign. This name must be unique to the Amazon Ads account to which the campaign is associated. Maximum length of the string is 128 characters.
        tags:
          $ref: '#/components/schemas/CampaignTags'
        budget:
          description: The budget amount associated with the campaign.
          type: number
        budgetType:
          $ref: "#/components/schemas/BudgetType"
        startDate:
          type: string
          description: The YYYYMMDD start date for the campaign. If this field is not set to a value, the current date is used.
        endDate:
          type: string
          description: The YYYYMMDD end date for the campaign. Must be greater than the value for `startDate`. If not specified, the campaign has no end date and runs continuously.
        state:
          $ref: "#/components/schemas/State"
        servingStatus:
          type: string
          readOnly: true
          enum:
            - asinNotBuyable
            - billingError
            - ended
            - landingPageNotAvailable
            - outOfBudget
            - paused
            - pendingReview
            - ready
            - rejected
            - running
            - scheduled
            - terminated
          description: |-
            |Value|Description|
            |-----|-----------|
            |asinNotBuyable| The associated ASIN cannot be purchased due to eligibility or availability.|
            |billingError| The billing information associated with the account requires correction.|
            |ended| The value specified in the `endDate` field is in the past.|
            |landingPageNotAvailable| The specified landing page is not available. This may be caused by an incorrect address or a landing page with less than three ASINs.|
            |outOfBudget| The campaign has run out of budget.|
            |paused|The campaign state is set to `paused`.|
            |pendingReview| A newly created campaign that has not passed moderation review. Note that moderation review may take up to 72 hours.
            |ready| The campaign is scheduled for a future date.|
            |rejected| The campaign failed moderation review.|
            |running| The campaign is enabled and serving.|
            |scheduled| A transitive state between `ready` and `running`, as child entities associated with the campaign move to a running state.|
            |terminated| The state of the campaign is set to `archived`.|
            <br/>
        brandEntityId:
          writeOnly: true
          type: string
          description: The brand entity identifier. Note that this field is required for sellers. For more information, see the [Stores reference](https://advertising.amazon.com/API/docs/v2/reference/stores) or [Brands reference](https://advertising.amazon.com/API/docs/v3/reference/SponsoredBrands/Brands).
        bidOptimization:
          type: boolean
          description: Set to `true` to allow Amazon to automatically optimize bids for placements below top of search.
          default: true
        bidMultiplier:
          type: number
          description: |-
            A bid multiplier. Note that this field can only be set when 'bidOptimization' is set to false. Value is a percentage to two decimal places. Example: If set to -40.00 for a $5.00 bid, the resulting bid is $3.00.
          minimum: -99.00
          maximum: 99.00
        bidAdjustments:
          type: array
          description: List of bid adjustment for each placement group. BidMultiplier cannot be specified when bidAdjustments presents.
            `Not supported for video campaigns`
          items:
            $ref: "#/components/schemas/BidAdjustment"
        portfolioId:
          description: The identifier of the portfolio to which the campaign is associated.
          type: integer
          format: int64
        creative:
          $ref: "#/components/schemas/SBCreative"
        landingPage:
          $ref: "#/components/schemas/SBLandingPage"
        keywords:
          $ref: "#/components/schemas/SBCreateCampaignPositiveKeyword"
        negativeKeywords:
          $ref: "#/components/schemas/SBCreateCampaignNegativeKeyword"
    SBListCampaignsResponseCommon:
      properties:
        campaignId:
          description: The campaign identifier.
          readOnly: true
          type: integer
        name:
          type: string
          description: The name of the campaign. This name must be unique to the Amazon Ads account to which the campaign is associated. Maximum length of the string is 128 characters.
        tags:
          $ref: '#/components/schemas/CampaignTags'
        budget:
          description: The budget amount associated with the campaign.
          type: number
        budgetType:
          $ref: "#/components/schemas/BudgetType"
        startDate:
          type: string
          description: The YYYYMMDD start date for the campaign. If this field is not set to a value, the current date is used.
        endDate:
          type: string
          description: The YYYYMMDD end date for the campaign. Must be greater than the value for `startDate`. If not specified, the campaign has no end date and runs continuously.
        state:
          $ref: "#/components/schemas/State"
        servingStatus:
          type: string
          readOnly: true
          enum:
            - asinNotBuyable
            - billingError
            - ended
            - landingPageNotAvailable
            - outOfBudget
            - paused
            - pendingReview
            - ready
            - rejected
            - running
            - scheduled
            - terminated
          description: |-
            |Value|Description|
            |-----|-----------|
            |asinNotBuyable| The associated ASIN cannot be purchased due to eligibility or availability.|
            |billingError| The billing information associated with the account requires correction.|
            |ended| The value specified in the `endDate` field is in the past.|
            |landingPageNotAvailable| The specified landing page is not available. This may be caused by an incorrect address or a landing page with less than three ASINs.|
            |outOfBudget| The campaign has run out of budget.|
            |paused|The campaign state is set to `paused`.|
            |pendingReview| A newly created campaign that has not passed moderation review. Note that moderation review may take up to 72 hours.
            |ready| The campaign is scheduled for a future date.|
            |rejected| The campaign failed moderation review.|
            |running| The campaign is enabled and serving.|
            |scheduled| A transitive state between `ready` and `running`, as child entities associated with the campaign move to a running state.|
            |terminated| The state of the campaign is set to `archived`.|
            <br/>
        brandEntityId:
          writeOnly: true
          type: string
          description: The brand entity identifier. Note that this field is required for sellers. For more information, see the [Stores reference](https://advertising.amazon.com/API/docs/v2/reference/stores) or [Brands reference](https://advertising.amazon.com/API/docs/v3/reference/SponsoredBrands/Brands).
        portfolioId:
          description: The identifier of the portfolio to which the campaign is associated.
          type: integer
          format: int64
        landingPage:
          oneOf:
            - $ref: '#/components/schemas/SBProductListLandingPage'
            - $ref: '#/components/schemas/SBStoreLandingPage'
            - $ref: '#/components/schemas/SBDetailPageLandingPage'
            - $ref: '#/components/schemas/SBCustomUrlLandingPage'
    SBListCampaignsResponse:
      description: |-
        Applies to:
        | Operation | Path |
        |-----------| -----|
        |[listCampaigns](https://advertising.amazon.com/API/docs/v3/reference/SponsoredBrands/Campaigns)| GET /sb/campaigns|
        <br/>
      oneOf:
        - allOf:
            - $ref: "#/components/schemas/SBListCampaignsResponseCommon"
            - type: object
              properties:
                bidOptimization:
                  type: boolean
                  description: Set to `true` to allow Amazon to automatically optimize bids for placements below top of search.
                  default: true
                bidMultiplier:
                  type: number
                  description: |-
                    A bid multiplier. Note that this field can only be set when 'bidOptimization' is set to false. Value is a percentage to two decimal places. Example: If set to -40.00 for a $5.00 bid, the resulting bid is $3.00.
                  minimum: -99.00
                  maximum: 99.00
                bidAdjustments:
                  type: array
                  description: List of bid adjustment for each placement group. BidMultiplier cannot be specified when bidAdjustments presents.
                    `Not supported for video campaigns`
                  items:
                    $ref: "#/components/schemas/BidAdjustment"
                adFormat:
                  $ref: "#/components/schemas/AdFormat"
                creative:
                  $ref: "#/components/schemas/SBCreative"
        - allOf:
            - $ref: "#/components/schemas/SBListCampaignsResponseCommon"
            - type: object
              properties:
                adFormat:
                  $ref: "#/components/schemas/AdFormat"
                creative:
                  $ref: "#/components/schemas/SBVideoCreative"
    SBDraftCampaignBase:
      properties:
        draftCampaignId:
          type: integer
          description: The identifier of the draft campaign.
        name:
          type: string
          description: The name of the draft campaign. Maximum 128 characters. Duplicate campaign names are not allowed.
        tags:
          $ref: '#/components/schemas/CampaignTags'
        budget:
          type: number
          description: The budget associated with the draft campaign.
        budgetType:
          $ref: "#/components/schemas/BudgetType"
        startDate:
          type: string
          description: The YYYYMMDD start date for the campaign. If this field is not set to a value, the current date is used.
        endDate:
          type: string
          description: The YYYYMMDD end date for the campaign. Must be greater than the value for `startDate`. If not specified, the campaign has no end date and runs continuously.
        brandEntityId:
          writeOnly: true
          type: string
          description: The brand entity identifier. Note that this field is required for sellers. For more information, see the [Stores reference](https://advertising.amazon.com/API/docs/v2/reference/stores) or [Brands reference](https://advertising.amazon.com/API/docs/v3/reference/SponsoredBrands/Brands).
        bidOptimization:
          type: boolean
          description: Set to `true` to allow Amazon to automatically optimize bids for placements below top of search.
          default: true
        bidMultiplier:
          type: number
          description: |-
            A bid multiplier. Note that this field can only be set when 'bidOptimization' is set to false. Value is a percentage to two decimal places. Example: If set to -40.00 for a $5.00 bid, the resulting bid is $3.00.
          minimum: -99.00
          maximum: 99.00
        bidAdjustments:
          type: array
          description: List of bid adjustment for each placement group. BidMultiplier cannot be specified when bidAdjustments presents.
            `Not supported for video campaigns`
          items:
            $ref: "#/components/schemas/BidAdjustment"
        portfolioId:
          type: integer
          format: int64
          description: The identifier of the Portfolio to which the draft campaign is associated.
        adFormat:
          $ref: "#/components/schemas/AdFormat"
        creative:
          $ref: "#/components/schemas/SBCreative"
        landingPage:
          oneOf:
            - $ref: '#/components/schemas/SBProductListLandingPage'
            - $ref: '#/components/schemas/SBStoreLandingPage'
            - $ref: '#/components/schemas/SBCustomUrlLandingPage'
    SBDraftCampaignBaseV3_2:
      properties:
        draftCampaignId:
          type: integer
          description: The identifier of the draft campaign.
        name:
          type: string
          description: The name of the draft campaign. Maximum 128 characters. Duplicate campaign names are not allowed.
        tags:
          $ref: '#/components/schemas/CampaignTags'
        budget:
          type: number
          description: The budget associated with the draft campaign.
        budgetType:
          $ref: "#/components/schemas/BudgetType"
        startDate:
          type: string
          description: The YYYYMMDD start date for the campaign. If this field is not set to a value, the current date is used.
        endDate:
          type: string
          description: The YYYYMMDD end date for the campaign. Must be greater than the value for `startDate`. If not specified, the campaign has no end date and runs continuously.
        brandEntityId:
          writeOnly: true
          type: string
          description: The brand entity identifier. Note that this field is required for sellers. For more information, see the [Stores reference](https://advertising.amazon.com/API/docs/v2/reference/stores) or [Brands reference](https://advertising.amazon.com/API/docs/v3/reference/SponsoredBrands/Brands).
        bidOptimization:
          type: boolean
          description: Set to `true` to allow Amazon to automatically optimize bids for placements below top of search.
          default: true
        bidMultiplier:
          type: number
          description: |-
            A bid multiplier. Note that this field can only be set when 'bidOptimization' is set to false. Value is a percentage to two decimal places. Example: If set to -40.00 for a $5.00 bid, the resulting bid is $3.00.
          minimum: -99.00
          maximum: 99.00
        bidAdjustments:
          type: array
          description: List of bid adjustment for each placement group. BidMultiplier cannot be specified when bidAdjustments presents.
            `Not supported for video campaigns`
          items:
            $ref: "#/components/schemas/BidAdjustment"
        portfolioId:
          type: integer
          format: int64
          description: The identifier of the Portfolio to which the draft campaign is associated.
        adFormat:
          $ref: "#/components/schemas/AdFormatV3_2"
        creative:
          oneOf:
            - $ref: '#/components/schemas/SBProductCollectionCreative'
            - $ref: '#/components/schemas/SBStoreSpotlightCreative'
        landingPage:
          oneOf:
            - $ref: '#/components/schemas/SBProductListLandingPage'
            - $ref: '#/components/schemas/SBStoreLandingPage'
            - $ref: '#/components/schemas/SBCustomUrlLandingPage'
    SBVideoDraftCampaignBase:
      properties:
        draftCampaignId:
          type: integer
          description: The identifier of the draft campaign.
        name:
          type: string
          description: The name of the draft campaign. Maximum 128 characters. Duplicate campaign names are not allowed.
        budget:
          type: number
          description: The budget associated with the draft campaign.
        budgetType:
          $ref: "#/components/schemas/BudgetType"
        startDate:
          type: string
          description: The YYYYMMDD start date for the campaign. If this field is not set to a value, the current date is used.
        endDate:
          type: string
          description: The YYYYMMDD end date for the campaign. Must be greater than the value for `startDate`. If not specified, the campaign has no end date and runs continuously.
        brandEntityId:
          writeOnly: true
          type: string
          description: The brand entity identifier. Note that this field is required for sellers. For more information, see the [Stores reference](https://advertising.amazon.com/API/docs/v2/reference/stores) or [Brands reference](https://advertising.amazon.com/API/docs/v3/reference/SponsoredBrands/Brands).
        portfolioId:
          type: integer
          format: int64
          description: The identifier of the Portfolio to which the draft campaign is associated.
        adFormat:
          $ref: "#/components/schemas/AdFormat"
        creative:
          $ref: "#/components/schemas/SBVideoCreative"
        landingPage:
          $ref: "#/components/schemas/SBDetailPageLandingPage"
    SBDraftCampaign:
      oneOf:
        - allOf:
            - $ref: '#/components/schemas/SBDraftCampaignBase'
            - type: object
              properties:
                keywords:
                  type: array
                  description: An array of keywords associated with the draft campaign.
                  items:
                    $ref: "#/components/schemas/SBDraftKeyword"
                negativeKeywords:
                  type: array
                  description: An array of negative keywords associated with the draft campaign.
                  items:
                    $ref: "#/components/schemas/SBDraftNegativeKeyword"
        - allOf:
            - $ref: '#/components/schemas/SBDraftCampaignBase'
            - type: object
              properties:
                targets:
                  type: array
                  description: An array of targets associated with the draft campaign.
                  items:
                    $ref: "#/components/schemas/SBDraftTargetingClause"
                negativeTargets:
                  type: array
                  description: An array of negative targets associated with the draft campaign.
                  items:
                    $ref: "#/components/schemas/SBDraftNegativeTargetingClause"
        - allOf:
            - $ref: '#/components/schemas/SBVideoDraftCampaignBase'
            - type: object
              properties:
                keywords:
                  type: array
                  description: An array of keywords associated with the draft campaign.
                  items:
                    $ref: "#/components/schemas/SBDraftKeyword"
                negativeKeywords:
                  type: array
                  description: An array of negative keywords associated with the draft campaign.
                  items:
                    $ref: "#/components/schemas/SBDraftNegativeKeyword"
        - allOf:
            - $ref: '#/components/schemas/SBVideoDraftCampaignBase'
            - type: object
              properties:
                targets:
                  type: array
                  description: An array of targets associated with the draft campaign.
                  items:
                    $ref: "#/components/schemas/SBDraftTargetingClause"
                negativeTargets:
                  type: array
                  description: An array of negative targets associated with the draft campaign.
                  items:
                    $ref: "#/components/schemas/SBDraftNegativeTargetingClause"
    SBDraftCampaignV3_2:
      oneOf:
        - allOf:
            - $ref: '#/components/schemas/SBDraftCampaignBaseV3_2'
            - type: object
              properties:
                keywords:
                  type: array
                  description: An array of keywords associated with the draft campaign.
                  items:
                    $ref: "#/components/schemas/SBDraftKeyword"
                negativeKeywords:
                  type: array
                  description: An array of negative keywords associated with the draft campaign.
                  items:
                    $ref: "#/components/schemas/SBDraftNegativeKeyword"
        - allOf:
            - $ref: '#/components/schemas/SBDraftCampaignBaseV3_2'
            - type: object
              properties:
                targets:
                  type: array
                  description: An array of targets associated with the draft campaign.
                  items:
                    $ref: "#/components/schemas/SBDraftTargetingClause"
                negativeTargets:
                  type: array
                  description: An array of negative targets associated with the draft campaign.
                  items:
                    $ref: "#/components/schemas/SBDraftNegativeTargetingClause"
        - allOf:
            - $ref: '#/components/schemas/SBVideoDraftCampaignBase'
            - type: object
              properties:
                keywords:
                  type: array
                  description: An array of keywords associated with the draft campaign.
                  items:
                    $ref: "#/components/schemas/SBDraftKeyword"
                negativeKeywords:
                  type: array
                  description: An array of negative keywords associated with the draft campaign.
                  items:
                    $ref: "#/components/schemas/SBDraftNegativeKeyword"
        - allOf:
            - $ref: '#/components/schemas/SBVideoDraftCampaignBase'
            - type: object
              properties:
                targets:
                  type: array
                  description: An array of targets associated with the draft campaign.
                  items:
                    $ref: "#/components/schemas/SBDraftTargetingClause"
                negativeTargets:
                  type: array
                  description: An array of negative targets associated with the draft campaign.
                  items:
                    $ref: "#/components/schemas/SBDraftNegativeTargetingClause"
    SBDraftCampaignV3_3:
      oneOf:
        - allOf:
            - $ref: '#/components/schemas/SBDraftCampaignBaseV3_3'
            - type: object
              properties:
                keywords:
                  type: array
                  description: An array of keywords associated with the draft campaign.
                  items:
                    $ref: "#/components/schemas/SBDraftKeyword"
                negativeKeywords:
                  type: array
                  description: An array of negative keywords associated with the draft campaign.
                  items:
                    $ref: "#/components/schemas/SBDraftNegativeKeyword"
        - allOf:
            - $ref: '#/components/schemas/SBDraftCampaignBaseV3_3'
            - type: object
              properties:
                targets:
                  type: array
                  description: An array of targets associated with the draft campaign.
                  items:
                    $ref: "#/components/schemas/SBDraftTargetingClause"
                negativeTargets:
                  type: array
                  description: An array of negative targets associated with the draft campaign.
                  items:
                    $ref: "#/components/schemas/SBDraftNegativeTargetingClause"
        - allOf:
            - $ref: '#/components/schemas/SBVideoDraftCampaignBase'
            - type: object
              properties:
                keywords:
                  type: array
                  description: An array of keywords associated with the draft campaign.
                  items:
                    $ref: "#/components/schemas/SBDraftKeyword"
                negativeKeywords:
                  type: array
                  description: An array of negative keywords associated with the draft campaign.
                  items:
                    $ref: "#/components/schemas/SBDraftNegativeKeyword"
        - allOf:
            - $ref: '#/components/schemas/SBVideoDraftCampaignBase'
            - type: object
              properties:
                targets:
                  type: array
                  description: An array of targets associated with the draft campaign.
                  items:
                    $ref: "#/components/schemas/SBDraftTargetingClause"
                negativeTargets:
                  type: array
                  description: An array of negative targets associated with the draft campaign.
                  items:
                    $ref: "#/components/schemas/SBDraftNegativeTargetingClause"
    SBGetDraftCampaignResponse:
      oneOf:
        - $ref: '#/components/schemas/SBDraftCampaignBase'
        - $ref: '#/components/schemas/SBVideoDraftCampaignBase'
    SBGetDraftCampaignResponseV3_2:
      oneOf:
        - $ref: '#/components/schemas/SBDraftCampaignBaseV3_2'
        - $ref: '#/components/schemas/SBVideoDraftCampaignBase'
    SBGetDraftCampaignResponseV3_3:
      oneOf:
        - $ref: '#/components/schemas/SBDraftCampaignBaseV3_3'
        - $ref: '#/components/schemas/SBVideoDraftCampaignBase'
    SBCreateDraftCampaignRequest:
      oneOf:
        - $ref: '#/components/schemas/SBCreateDraftCampaignWithKeywords'
        - $ref: '#/components/schemas/SBCreateDraftCampaignWithProductTargets'
        - $ref: '#/components/schemas/SBVideoCreateDraftCampaignWithKeywords'
        - $ref: '#/components/schemas/SBVideoCreateDraftCampaignWithProductTargets'
    SBCreateDraftCampaignRequestV3_2:
      oneOf:
        - $ref: '#/components/schemas/SBCreateDraftCampaignWithKeywordsV3_2'
        - $ref: '#/components/schemas/SBCreateDraftCampaignWithProductTargetsV3_2'
        - $ref: '#/components/schemas/SBVideoCreateDraftCampaignWithKeywords'
        - $ref: '#/components/schemas/SBVideoCreateDraftCampaignWithProductTargets'
    SBCreateDraftCampaignRequestV3_3:
      oneOf:
        - $ref: '#/components/schemas/SBCreateDraftCampaignWithKeywordsV3_3'
        - $ref: '#/components/schemas/SBCreateDraftCampaignWithProductTargetsV3_3'
        - $ref: '#/components/schemas/SBVideoCreateDraftCampaignWithKeywords'
        - $ref: '#/components/schemas/SBVideoCreateDraftCampaignWithProductTargets'
    SBCreateDraftCampaignRequestCommon:
      required:
        - name
        - budget
        - budgetType
      properties:
        name:
          type: string
          description: The name of the draft campaign. Maximum 128 characters. Names must be unique to the Amazon Ads account to which they are associated.
        budget:
          type: number
          description: The budget associated with the draft campaign.
        budgetType:
          $ref: "#/components/schemas/BudgetType"
        startDate:
          type: string
          description: The YYYYMMDD start date of the campaign. Must be equal to or greater than the current date. If not specified, is set to current date by default.
        endDate:
          type: string
          description: The YYYYMMDD end date of the campaign. Must be greater than the value specified in the `startDate` field. If not specified, the campaign has no end date and runs continuously.
        brandEntityId:
          writeOnly: true
          type: string
          description: The brand entity identifier to which the draft campaign is associated. Note that this field is required for sellers. Retrieve using the getBrands or getStores operations in the /v2/stores resource.
        bidOptimization:
          type: boolean
          description: Set to `true` to have Amazon automatically optimize bids for placements below top of search.
          default: true
        bidMultiplier:
          type: number
          description: |-
            A bid multiplier. Note that this field can only be set when 'bidOptimization' is set to false. Value is a percentage to two decimal places. Example: If set to -40.00 for a $5.00 bid, the resulting bid is $3.00.
          minimum: -99.00
          maximum: 99.00
        bidAdjustments:
          type: array
          description: List of bid adjustment for each placement group. BidMultiplier cannot be specified when bidAdjustments presents.
            `Not supported for video campaigns`
          items:
            $ref: "#/components/schemas/BidAdjustment"
        portfolioId:
          type: integer
          format: int64
          description: The identifier of the Portfolio to which the draft campaign is associated.
        creative:
          $ref: "#/components/schemas/SBCreative"
        landingPage:
          $ref: "#/components/schemas/SBLandingPage"
    SBCreateDraftCampaignRequestCommonV3_2:
      required:
        - name
        - budget
        - budgetType
      properties:
        name:
          type: string
          description: The name of the draft campaign. Maximum 128 characters. Names must be unique to the Amazon Ads account to which they are associated.
        budget:
          type: number
          description: The budget associated with the draft campaign.
        budgetType:
          $ref: "#/components/schemas/BudgetType"
        startDate:
          type: string
          description: The YYYYMMDD start date of the campaign. Must be equal to or greater than the current date. If not specified, is set to current date by default.
        endDate:
          type: string
          description: The YYYYMMDD end date of the campaign. Must be greater than the value specified in the `startDate` field. If not specified, the campaign has no end date and runs continuously.
        adFormat:
          $ref: '#/components/schemas/AdFormatV3_2'
        brandEntityId:
          writeOnly: true
          type: string
          description: The brand entity identifier to which the draft campaign is associated. Note that this field is required for sellers. Retrieve using the getBrands or getStores operations in the /v2/stores resource.
        bidOptimization:
          type: boolean
          description: Set to `true` to have Amazon automatically optimize bids for placements below top of search.
          default: true
        bidMultiplier:
          type: number
          description: |-
            A bid multiplier. Note that this field can only be set when 'bidOptimization' is set to false. Value is a percentage to two decimal places. Example: If set to -40.00 for a $5.00 bid, the resulting bid is $3.00.
          minimum: -99.00
          maximum: 99.00
        bidAdjustments:
          type: array
          description: List of bid adjustment for each placement group. BidMultiplier cannot be specified when bidAdjustments presents.
            `Not supported for video campaigns`
          items:
            $ref: "#/components/schemas/BidAdjustment"
        portfolioId:
          type: integer
          format: int64
          description: The identifier of the Portfolio to which the draft campaign is associated.
        creative:
          oneOf:
            - $ref: '#/components/schemas/SBProductCollectionCreative'
            - $ref: '#/components/schemas/SBStoreSpotlightCreative'
        landingPage:
          $ref: "#/components/schemas/SBLandingPage"
    SBVideoCreateDraftCampaignRequestCommon:
      required:
        - name
        - budget
        - budgetType
      properties:
        name:
          type: string
          description: The name of the draft campaign. Maximum 128 characters. Names must be unique to the Amazon Ads account to which they are associated.
        budget:
          type: number
          description: The budget associated with the draft campaign.
        budgetType:
          $ref: "#/components/schemas/BudgetType"
        startDate:
          type: string
          description: The YYYYMMDD start date of the campaign. Must be equal to or greater than the current date. If not specified, is set to current date by default.
        endDate:
          type: string
          description: The YYYYMMDD end date of the campaign. Must be greater than the value specified in the `startDate` field. If not specified, the campaign has no end date and runs continuously.
        brandEntityId:
          writeOnly: true
          type: string
          description: The brand entity identifier to which the draft campaign is associated. Note that this field is required for sellers. Retrieve using the getBrands or getStores operations in the /v2/stores resource.
        portfolioId:
          type: integer
          format: int64
          description: The identifier of the Portfolio to which the draft campaign is associated.
        adFormat:
          $ref: "#/components/schemas/AdFormat"
        creative:
          $ref: "#/components/schemas/SBVideoCreative"
    SBCreateDraftCampaignWithKeywords:
      allOf:
        - $ref: '#/components/schemas/SBCreateDraftCampaignRequestCommon'
        - $ref: '#/components/schemas/SBCommonKeywords'
    SBVideoCreateDraftCampaignWithKeywords:
      allOf:
        - $ref: '#/components/schemas/SBVideoCreateDraftCampaignRequestCommon'
        - $ref: '#/components/schemas/SBCommonKeywords'
    SBCreateDraftCampaignWithProductTargets:
      allOf:
        - $ref: '#/components/schemas/SBCreateDraftCampaignRequestCommon'
        - $ref: '#/components/schemas/SBCommonTargets'
    SBVideoCreateDraftCampaignWithProductTargets:
      allOf:
        - $ref: '#/components/schemas/SBVideoCreateDraftCampaignRequestCommon'
        - $ref: '#/components/schemas/SBCommonTargets'
    SBCreateDraftCampaignWithKeywordsV3_2:
      allOf:
        - $ref: '#/components/schemas/SBCreateDraftCampaignRequestCommonV3_2'
        - $ref: '#/components/schemas/SBCommonKeywords'
    SBCreateDraftCampaignWithProductTargetsV3_2:
      allOf:
        - $ref: '#/components/schemas/SBCreateDraftCampaignRequestCommonV3_2'
        - $ref: '#/components/schemas/SBCommonTargets'
    SBUpdateDraftCampaignRequest:
      oneOf:
        - $ref: '#/components/schemas/SBUpdateDraftCampaignRequestWithKeywords'
        - $ref: '#/components/schemas/SBUpdateDraftCampaignRequestWithProductTargets'
        - $ref: '#/components/schemas/SBVideoUpdateDraftCampaignRequestWithKeywords'
        - $ref: '#/components/schemas/SBVideoUpdateDraftCampaignRequestWithProductTargets'
    SBUpdateDraftCampaignRequestV3_2:
      oneOf:
        - $ref: '#/components/schemas/SBUpdateDraftCampaignRequestWithKeywordsV3_2'
        - $ref: '#/components/schemas/SBUpdateDraftCampaignRequestWithProductTargetsV3_2'
        - $ref: '#/components/schemas/SBVideoUpdateDraftCampaignRequestWithKeywords'
        - $ref: '#/components/schemas/SBVideoUpdateDraftCampaignRequestWithProductTargets'
    SBUpdateDraftCampaignRequestCommon:
      allOf:
        - type: object
          required:
            - name
            - budget
            - budgetType
          properties:
            draftCampaignId:
              type: integer
              description: The identifier of the draft campaign.
            name:
              type: string
              description: The name of the draft campaign. Maximum 128 characters. Names must be unique to the Amazon Ads account to which they are associated.
            budget:
              type: number
              description: The budget associated with the draft campaign.
            budgetType:
              $ref: "#/components/schemas/BudgetType"
            startDate:
              type: string
              description: The YYYYMMDD start date of the campaign. Must be equal to or greater than the current date. If not specified, is set to current date by default.
            endDate:
              type: string
              description: The YYYYMMDD end date of the campaign. Must be greater than the value specified in the `startDate` field. If not specified, the campaign has no end date and runs continuously.
            brandEntityId:
              writeOnly: true
              type: string
              description: The brand entity identifier to which the draft campaign is associated. Note that this field is required for sellers. Retrieve using the getBrands or getStores operations in the /v2/stores resource.
            bidOptimization:
              type: boolean
              description: Set to `true` to have Amazon automatically optimize bids for placements below top of search.
              default: true
            bidMultiplier:
              type: number
              description: |-
                A bid multiplier. Note that this field can only be set when 'bidOptimization' is set to false. Value is a percentage to two decimal places. Example: If set to -40.00 for a $5.00 bid, the resulting bid is $3.00.
              minimum: -99.00
              maximum: 99.00
            bidAdjustments:
              type: array
              description: List of bid adjustment for each placement group. BidMultiplier cannot be specified when bidAdjustments presents.
                `Not supported for video campaigns`
              items:
                $ref: "#/components/schemas/BidAdjustment"
            portfolioId:
              type: integer
              format: int64
              description: The identifier of the Portfolio to which the draft campaign is associated.
            creative:
              $ref: "#/components/schemas/SBCreative"
    SBUpdateDraftCampaignRequestCommonV3_2:
      allOf:
        - type: object
          required:
            - name
            - budget
            - budgetType
          properties:
            draftCampaignId:
              type: integer
              description: The identifier of the draft campaign.
            name:
              type: string
              description: The name of the draft campaign. Maximum 128 characters. Names must be unique to the Amazon Ads account to which they are associated.
            budget:
              type: number
              description: The budget associated with the draft campaign.
            budgetType:
              $ref: "#/components/schemas/BudgetType"
            startDate:
              type: string
              description: The YYYYMMDD start date of the campaign. Must be equal to or greater than the current date. If not specified, is set to current date by default.
            endDate:
              type: string
              description: The YYYYMMDD end date of the campaign. Must be greater than the value specified in the `startDate` field. If not specified, the campaign has no end date and runs continuously.
            brandEntityId:
              writeOnly: true
              type: string
              description: The brand entity identifier to which the draft campaign is associated. Note that this field is required for sellers. Retrieve using the getBrands or getStores operations in the /v2/stores resource.
            bidOptimization:
              type: boolean
              description: Set to `true` to have Amazon automatically optimize bids for placements below top of search.
              default: true
            bidMultiplier:
              type: number
              description: |-
                A bid multiplier. Note that this field can only be set when 'bidOptimization' is set to false. Value is a percentage to two decimal places. Example: If set to -40.00 for a $5.00 bid, the resulting bid is $3.00.
              minimum: -99.00
              maximum: 99.00
            bidAdjustments:
              type: array
              description: List of bid adjustment for each placement group. BidMultiplier cannot be specified when bidAdjustments presents.
                `Not supported for video campaigns`
              items:
                $ref: "#/components/schemas/BidAdjustment"
            portfolioId:
              type: integer
              format: int64
              description: The identifier of the Portfolio to which the draft campaign is associated.
            creative:
              oneOf:
                - $ref: '#/components/schemas/SBProductCollectionCreative'
                - $ref: '#/components/schemas/SBStoreSpotlightCreative'
    SBVideoUpdateDraftCampaignRequestCommon:
      allOf:
        - type: object
          required:
            - name
            - budget
            - budgetType
          properties:
            draftCampaignId:
              type: integer
              description: The identifier of the draft campaign.
            name:
              type: string
              description: The name of the draft campaign. Maximum 128 characters. Names must be unique to the Amazon Ads account to which they are associated.
            budget:
              type: number
              description: The budget associated with the draft campaign.
            budgetType:
              $ref: "#/components/schemas/BudgetType"
            startDate:
              type: string
              description: The YYYYMMDD start date of the campaign. Must be equal to or greater than the current date. If not specified, is set to current date by default.
            endDate:
              type: string
              description: The YYYYMMDD end date of the campaign. Must be greater than the value specified in the `startDate` field. If not specified, the campaign has no end date and runs continuously.
            brandEntityId:
              writeOnly: true
              type: string
              description: The brand entity identifier to which the draft campaign is associated. Note that this field is required for sellers. Retrieve using the getBrands or getStores operations in the /v2/stores resource.
            portfolioId:
              type: integer
              format: int64
              description: The identifier of the Portfolio to which the draft campaign is associated.
            creative:
              $ref: "#/components/schemas/SBVideoCreative"
    SBUpdateDraftCampaignRequestWithKeywords:
      required:
        - draftCampaignId
      allOf:
        - $ref: '#/components/schemas/SBUpdateDraftCampaignRequestCommon'
        - type: object
          properties:
            keywords:
              description: An array of keywords associated with the campaign.
              writeOnly: true
              type: array
              items:
                type: object
                properties:
                  keywordText:
                    type: string
                    description: The keyword text. Maximum of 10 words.
                  matchType:
                    $ref: "#/components/schemas/MatchType"
                  bid:
                    $ref: '#/components/schemas/Bid'
            negativeKeywords:
              description: An array of negative keywords associated with the campaign.
              writeOnly: true
              type: array
              items:
                type: object
                properties:
                  keywordText:
                    description: The keyword text. Maximum of 10 words.
                    type: string
                  matchType:
                    $ref: '#/components/schemas/NegativeMatchType'
    SBUpdateDraftCampaignRequestWithProductTargets:
      required:
        - draftCampaignId
      allOf:
        - $ref: '#/components/schemas/SBUpdateDraftCampaignRequestCommon'
        - type: object
          properties:
            targets:
              type: array
              writeOnly: true
              items:
                type: object
                properties:
                  expressions:
                    type: array
                    items:
                      $ref: "#/components/schemas/SBExpression"
                  bid:
                    $ref: '#/components/schemas/Bid'
            negativeTargets:
              type: array
              writeOnly: true
              items:
                type: object
                properties:
                  expressions:
                    type: array
                    items:
                      $ref: "#/components/schemas/SBExpression"
    SBUpdateDraftCampaignRequestWithKeywordsV3_2:
      required:
        - draftCampaignId
      allOf:
        - $ref: '#/components/schemas/SBUpdateDraftCampaignRequestCommonV3_2'
        - type: object
          properties:
            keywords:
              description: An array of keywords associated with the campaign.
              writeOnly: true
              type: array
              items:
                type: object
                properties:
                  keywordText:
                    type: string
                    description: The keyword text. Maximum of 10 words.
                  matchType:
                    $ref: "#/components/schemas/MatchType"
                  bid:
                    $ref: '#/components/schemas/Bid'
            negativeKeywords:
              description: An array of negative keywords associated with the campaign.
              writeOnly: true
              type: array
              items:
                type: object
                properties:
                  keywordText:
                    description: The keyword text. Maximum of 10 words.
                    type: string
                  matchType:
                    $ref: '#/components/schemas/NegativeMatchType'
    SBUpdateDraftCampaignRequestWithProductTargetsV3_2:
      required:
        - draftCampaignId
      allOf:
        - $ref: '#/components/schemas/SBUpdateDraftCampaignRequestCommonV3_2'
        - type: object
          properties:
            targets:
              type: array
              writeOnly: true
              items:
                type: object
                properties:
                  expressions:
                    type: array
                    items:
                      $ref: "#/components/schemas/SBExpression"
                  bid:
                    $ref: '#/components/schemas/Bid'
            negativeTargets:
              type: array
              writeOnly: true
              items:
                type: object
                properties:
                  expressions:
                    type: array
                    items:
                      $ref: "#/components/schemas/SBExpression"
    SBVideoUpdateDraftCampaignRequestWithKeywords:
      required:
        - draftCampaignId
      allOf:
        - $ref: '#/components/schemas/SBVideoUpdateDraftCampaignRequestCommon'
        - type: object
          properties:
            keywords:
              description: An array of keywords associated with the campaign.
              writeOnly: true
              type: array
              items:
                type: object
                properties:
                  keywordText:
                    type: string
                    description: The keyword text. Maximum of 10 words.
                  matchType:
                    $ref: "#/components/schemas/MatchType"
                  bid:
                    $ref: '#/components/schemas/Bid'
            negativeKeywords:
              description: An array of negative keywords associated with the campaign.
              writeOnly: true
              type: array
              items:
                type: object
                properties:
                  keywordText:
                    description: The keyword text. Maximum of 10 words.
                    type: string
                  matchType:
                    $ref: '#/components/schemas/NegativeMatchType'
    SBCreateCampaignPositiveKeyword:
      description: An array of keywords associated with the campaign.
      writeOnly: true
      type: array
      items:
        properties:
          keywordText:
            type: string
            description: The keyword text. Maximum of 10 words.
          matchType:
            $ref: "#/components/schemas/MatchType"
          bid:
            type: number
            description: The bid associated with the keyword. Note that this value must be less than the budget associated with the Advertiser account. For more information, see the **Keyword bid constraints by marketplace** section of the [supported features](https://advertising.amazon.com/API/docs/v2/guides/supported_features) article.
    SBCreateCampaignNegativeKeyword:
      description: An array of negative keywords associated with the campaign.
      writeOnly: true
      type: array
      items:
        properties:
          keywordText:
            description: The keyword text. Maximum of 10 words.
            type: string
          matchType:
            $ref: "#/components/schemas/NegativeMatchType"
    SBDraftCampaignResponse:
      description: |-
        Applies to:
        | Operation | Path |
        |-----------| -----|
        |[createDraftCampaigns](https://advertising.amazon.com/API/docs/v3/reference/SponsoredBrands/Drafts)| POST /sb/drafts/campaigns|
        |[updateDraftCampaigns](https://advertising.amazon.com/API/docs/v3/reference/SponsoredBrands/Drafts)| PUT /sb/drafts/campaigns|
        |[deleteDraftCampaign](https://advertising.amazon.com/API/docs/v3/reference/SponsoredBrands/Drafts)| GET /sb/drafts/campaigns/{draftCampaignId}|
        <br/>
      oneOf:
        - $ref: '#/components/schemas/SBDraftCampaignResponseWithKeywords'
        - $ref: '#/components/schemas/SBDraftCampaignResponseWithExpressions'
    SBSubmitDraftCampaignResponse:
      oneOf:
        - allOf:
            - $ref: '#/components/schemas/SBDraftCampaignResponseWithKeywords'
            - type: object
              properties:
                campaignId:
                  type: integer
                  format: int64
                  description: The identifier of the campaign.
        - allOf:
            - $ref: '#/components/schemas/SBDraftCampaignResponseWithExpressions'
            - type: object
              properties:
                campaignId:
                  type: integer
                  format: int64
                  description: The identifier of the campaign.
    SBDraftCampaignResponseCommon:
      properties:
        draftCampaignId:
          type: integer
          format: int64
          description: The identifier of the draft campaign.
        code:
          type: string
          description: The draft campaign response code.
    SBDraftCampaignResponseWithKeywords:
      allOf:
        - $ref: '#/components/schemas/SBDraftCampaignResponseCommon'
        - type: object
          properties:
            keywordResponses:
              type: array
              items:
                $ref: "#/components/schemas/SBKeywordResponse"
            negativeKeywordResponses:
              type: array
              items:
                $ref: "#/components/schemas/SBKeywordResponse"
            details:
              type: string
              description: A human-readable description of the 'code' field value.
    SBDraftCampaignResponseWithExpressions:
      allOf:
        - $ref: '#/components/schemas/SBDraftCampaignResponseCommon'
        - type: object
          properties:
            targetingClauseResponses:
              type: array
              items:
                $ref: "#/components/schemas/SBExpressionResponse"
            negativeTargetingClauseResponses:
              type: array
              items:
                $ref: "#/components/schemas/SBExpressionResponse"
    SBCreateDraftCampaignPositiveKeyword:
      properties:
        keywordText:
          type: string
          description: "The keyword text. Maximum length is ten words."
        matchType:
          $ref: "#/components/schemas/MatchType"
        bid:
          type: number
          description: "The bid associated with the keyword. For information on the maximum allowable bid, see the 'keyword bid constraints by marketplace' section of the 'supported features' document in the 'guides' section. Note that the bid cannot not be larger than the budget associated with the campaign."
    SBCreateDraftCampaignNegativeKeyword:
      properties:
        keywordText:
          type: string
          description: "The keyword text. Maximum length is ten words."
        matchType:
          $ref: "#/components/schemas/NegativeMatchType"
    SBDraftCampaignDeleteResponse:
      properties:
        code:
          type: string
          description: The status of the deletion request.
        draftCampaignId:
          type: integer
          format: int64
          description: The campaign identifier.
    Error:
      properties:
        code:
          type: string
          readOnly: true
        details:
          type: string
          readOnly: true
    SBCampaignName:
      description: The campaign name.
      type: string
      minLength: 1
      maxLength: 128
    NextToken:
      description: Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the `NextToken` field is empty, there are no further results.
      type: string
      minLength: 1
      maxLength: 2048
    MaxResults:
      description: Sets a limit on the number of results returned by an operation.
      type: integer
      minimum: 1
      maximum: 5000
    MaxResultsRecommendations:
      description: Sets a limit on the number of results returned by an operation.
      type: integer
      minimum: 1
      maximum: 100
    ListRequest:
      properties:
        nextToken:
          $ref: '#/components/schemas/NextToken'
        maxResults:
          $ref: '#/components/schemas/MaxResults'
    ListRecommendationsRequest:
      properties:
        nextToken:
          $ref: '#/components/schemas/NextToken'
        maxResults:
          $ref: '#/components/schemas/MaxResultsRecommendations'
    ListResponse:
      properties:
        nextToken:
          $ref: '#/components/schemas/NextToken'
    StartDate:
      type: string
      description: The YYYYMMDD start date of the campaign. Must be equal to or greater than the current date. If this property is not included in the request, the startDate value is not updated. If set to null, `startDate` is set to the current date.
      nullable: true
      pattern: '^\d{8}$'
    EndDate:
      type: string
      description: The YYYYMMDD end date of the campaign. Must be greater than the value specified in the `startDate` field. If this property is not included in the request, the `endDate` value is not updated. If set to null, `endDate` is deleted from the draft campaign.
      nullable: true
      pattern: '^\d{8}$'
    SBCampaignResponse:
      oneOf:
        - $ref: '#/components/schemas/SBCampaignResponseCommon'
        - $ref: '#/components/schemas/SBVideoCampaignResponseCommon'
    SBCampaignBase:
      properties:
        campaignId:
          description: The campaign identifier.
          readOnly: true
          type: integer
          format: int64
        name:
          $ref: '#/components/schemas/SBCampaignName'
        tags:
          $ref: '#/components/schemas/CampaignTags'
        budget:
          type: number
        budgetType:
          $ref: "#/components/schemas/BudgetType"
        startDate:
          $ref: '#/components/schemas/StartDate'
        endDate:
          $ref: '#/components/schemas/EndDate'
        state:
          readOnly: true
          allOf:
            - $ref: "#/components/schemas/State"
        servingStatus:
          type: string
          readOnly: true
          enum:
            - ASIN_NOT_BUYABLE
            - BILLING_ERROR
            - ENDED
            - LANDING_PAGE_NOT_AVAILABLE
            - OUT_OF_BUDGET
            - PAUSED
            - PENDING_REVIEW
            - READY
            - REJECTED
            - RUNNING
            - SCHEDULED
            - TERMINATED
          description: |-
            |Status|Description|
            |------|-----------|
            |ASIN_NOT_BUYABLE| The ASIN can't be purchased due to eligibility or availability.|
            |BILLING_ERROR| Billing information requires correction.|
            |ENDED| THe `endDate` specified in the campaign object occurs in the past.|
            |LANDING_PAGE_NOT_AVAILABLE| The specified landing page is not available. This may be caused by an incorrect address or a landing page with less than three ASINs.|
            |OUT_OF_BUDGET| The campaign has run out of budget.|
            |PAUSED| The campaign state set to `paused`.|
            |PENDING_REVIEW|: A newly created campaign that has not passed moderation review. Note that moderation review may take up to 72 hours.|
            |READY| The campaign is scheduled for a future date.|
            |REJECTED| The campaign failed moderation review.|
            |RUNNING| The campaign is enabled and serving.|
            |SCHEDULED| A transitive state between `ready` and `running`, as child entities associated with the campaign move to a running state.|
            |TERMINATED|The state of the campaign is set to `archived`.|
        brandEntityId:
          writeOnly: true
          type: string
          description: The brand entity identifier. Note that this field is required for sellers. For more information, see the [Stores reference](https://advertising.amazon.com/API/docs/v2/reference/stores) or [Brands reference](https://advertising.amazon.com/API/docs/v3/reference/SponsoredBrands/Brands).
        portfolioId:
          description: The identifier of the portfolio to which the campaign is associated.
          type: integer
          format: int64
        adFormat:
          $ref: '#/components/schemas/AdFormat'
    SBCampaignResponseCommon:
      allOf:
        - $ref: '#/components/schemas/SBCampaignBase'
        - type: object
          properties:
            bidOptimization:
              type: boolean
              description: Set to `true` to allow Amazon to automatically optimize bids for placements below top of search.
            bidMultiplier:
              type: number
              description: A bid multiplier. Note that this field can only be set when 'bidOptimization' is set to false. Value is a percentage to two decimal places. For example, if set to -40.00 for a $5.00 bid, the resulting bid is $3.00.
              minimum: -99.00
              maximum: 99.00
            bidAdjustments:
              type: array
              description: List of bid adjustment for each placement group. BidMultiplier cannot be specified when bidAdjustments presents.
                `Not supported for video campaigns`
              items:
                $ref: "#/components/schemas/BidAdjustment"
            creative:
              $ref: '#/components/schemas/SBCollectionCreative'
            landingPage:
              oneOf:
                - $ref: '#/components/schemas/SBProductListLandingPage'
                - $ref: '#/components/schemas/SBStoreLandingPage'
                - $ref: '#/components/schemas/SBCustomUrlLandingPage'
    SBCampaignResponseCommon32:
      allOf:
        - $ref: '#/components/schemas/SBCampaignBase32'
        - type: object
          properties:
            bidOptimization:
              type: boolean
              description: Set to `true` to allow Amazon to automatically optimize bids for placements below top of search.
            bidMultiplier:
              type: number
              description: A bid multiplier. Note that this field can only be set when 'bidOptimization' is set to false. Value is a percentage to two decimal places. For example, if set to -40.00 for a $5.00 bid, the resulting bid is $3.00.
              minimum: -99.00
              maximum: 99.00
            bidAdjustments:
              type: array
              description: List of bid adjustment for each placement group. BidMultiplier cannot be specified when bidAdjustments presents.
                `Not supported for video campaigns`
              items:
                $ref: "#/components/schemas/BidAdjustment"
            creative:
              oneOf:
                - $ref: '#/components/schemas/SBProductCollectionCreative'
                - $ref: '#/components/schemas/SBStoreSpotlightCreative'
            landingPage:
              oneOf:
                - $ref: '#/components/schemas/SBProductListLandingPage'
                - $ref: '#/components/schemas/SBStoreLandingPage'
                - $ref: '#/components/schemas/SBCustomUrlLandingPage'
    SBCampaignBase32:
      properties:
        campaignId:
          description: The campaign identifier.
          readOnly: true
          type: integer
          format: int64
        name:
          $ref: '#/components/schemas/SBCampaignName'
        tags:
          $ref: '#/components/schemas/CampaignTags'
        budget:
          type: number
        budgetType:
          $ref: "#/components/schemas/BudgetType"
        startDate:
          $ref: '#/components/schemas/StartDate'
        endDate:
          $ref: '#/components/schemas/EndDate'
        state:
          readOnly: true
          allOf:
            - $ref: "#/components/schemas/State"
        servingStatus:
          type: string
          readOnly: true
          enum:
            - ASIN_NOT_BUYABLE
            - BILLING_ERROR
            - ENDED
            - LANDING_PAGE_NOT_AVAILABLE
            - OUT_OF_BUDGET
            - PAUSED
            - PENDING_REVIEW
            - READY
            - REJECTED
            - RUNNING
            - SCHEDULED
            - TERMINATED
          description: |-
            |Status|Description|
            |------|-----------|
            |ASIN_NOT_BUYABLE| The ASIN can't be purchased due to eligibility or availability.|
            |BILLING_ERROR| Billing information requires correction.|
            |ENDED| THe `endDate` specified in the campaign object occurs in the past.|
            |LANDING_PAGE_NOT_AVAILABLE| The specified landing page is not available. This may be caused by an incorrect address or a landing page with less than three ASINs.|
            |OUT_OF_BUDGET| The campaign has run out of budget.|
            |PAUSED| The campaign state set to `paused`.|
            |PENDING_REVIEW|: A newly created campaign that has not passed moderation review. Note that moderation review may take up to 72 hours.|
            |READY| The campaign is scheduled for a future date.|
            |REJECTED| The campaign failed moderation review.|
            |RUNNING| The campaign is enabled and serving.|
            |SCHEDULED| A transitive state between `ready` and `running`, as child entities associated with the campaign move to a running state.|
            |TERMINATED|The state of the campaign is set to `archived`.|
        brandEntityId:
          writeOnly: true
          type: string
          description: The brand entity identifier. Note that this field is required for sellers. For more information, see the [Stores reference](https://advertising.amazon.com/API/docs/v2/reference/stores) or [Brands reference](https://advertising.amazon.com/API/docs/v3/reference/SponsoredBrands/Brands).
        portfolioId:
          description: The identifier of the portfolio to which the campaign is associated.
          type: integer
          format: int64
        adFormat:
          $ref: '#/components/schemas/AdFormatV3_2'
    SBProductCollectionCreative:
      properties:
        brandLogoCrop:
          $ref: '#/components/schemas/SBBrandLogoCrop'
        asins:
          minItems: 0
          maxItems: 3
          type: array
          items:
            description: >-
              An array of ASINs associated with the creative. **Note** do not
              pass an empty array. This results in an error.
            type: string
        brandLogoUrl:
          description: The address of the hosted image.
          type: string
        brandName:
          description: A brand name. Maximum length is 30 characters.
          type: string
        customImageAssetId:
          description: >-
            The identifier of the Custom image from the Store assets library.
            See [the
            policy](https://advertising.amazon.com/resources/ad-policy/sponsored-ads-policies#customimage)
            for more information on what constitutes a valid Custom image.
          type: string
        shouldOptimizeAsins:
          description: >-
            Starting on March 25th, 2021, this property will no longer be
            supported. This feature is currently available in the US and UK.
            Existing Sponsored Brands campaigns with product optimization
            enabled will no longer have the products in the creative
            automatically optimized. Campaigns with product optimization enabled
            will be converted to standard Sponsored Brands product collection
            campaigns with the default selected products showing in the
            creative. For POST and PUT operations, setting this property to true
            will not have any effect. The value returned in the response will
            always be false. For the GET operation, the value of this field will
            always be false. And starting on September 25th, 2021, this property
            will be removed completely.
          type: boolean
        customImageCrop:
          $ref: '#/components/schemas/SBCustomImageCrop'
        customImageUrl:
          description: The address of the hosted Custom image.
          type: string
        brandLogoAssetID:
          description: >-
            The identifier of the brand logo image from the Store assets
            library. See
            [listAssets](https://advertising.amazon.com/API/docs/v3/reference/SponsoredBrands/Stores)
            for more information. Note that for campaigns created in the Amazon
            Advertising console prior to release of the Store assets library,
            responses will not include a value for the brandLogoAssetID field.
          type: string
        headline:
          description: >-
            The headline text. Maximum length of the string is 50 characters for
            all marketplaces other than Japan, which has a maximum length of 35
            characters.
          type: string
    SBStoreSpotlightCreative:
      properties:
        brandLogoCrop:
          $ref: '#/components/schemas/SBBrandLogoCrop'
        brandLogoUrl:
          description: The address of the hosted image.
          type: string
        brandName:
          description: A brand name. Maximum length is 30 characters.
          type: string
        subpages:
          minItems: 3
          maxItems: 3
          type: array
          items:
            type: object
            properties:
              pageTitle:
                description: The title of the subpage. Maximum length is 50 characters.
                type: string
              asin:
                description: >-
                  An ASIN on the Store subpage. The ASIN image will be used to
                  represent the subpage.
                type: string
              url:
                description: >-
                  URL of an existing Store page. Must be a subpage of the Store
                  landing page associated with the campaign.
                type: string
        brandLogoAssetID:
          description: >-
            The identifier of the brand logo image from the Store assets
            library. See
            [listAssets](https://advertising.amazon.com/API/docs/v3/reference/SponsoredBrands/Stores)
            for more information. Note that for campaigns created in the Amazon
            Advertising console prior to release of the Store assets library,
            responses will not include a value for the brandLogoAssetID field.
          type: string
        headline:
          description: >-
            The headline text. Maximum length of the string is 50 characters for
            all marketplaces other than Japan, which has a maximum length of 35
            characters.
          type: string
    SBBrandLogoCrop:
      description: >-
        The crop to apply to the selected Brand logo. A Brand logo must have
        minimum dimensions of 400x400. If a brandLogoAssetID is supplied but a
        crop is not, the crop will be defaulted to the whole image.
      properties:
        top:
          description: The highest pixel from which to begin cropping
          type: integer
        left:
          description: The leftmost pixel from which to begin cropping
          type: integer
        width:
          description: >-
            The number of pixels to crop rightwards from the value specified as
            `left`
          type: integer
        height:
          description: The number of pixels to crop down from the value specified as `top`
          type: integer
    SBCustomImageCrop:
      description: >-
        The crop to apply to the selected Custom image. A Custom image must have
        a 1200x628 aspect ratio, with a .01 delta for floating point precision.
        If a customImageAssetId is supplied but a crop is not, the crop will be
        defaulted.
      properties:
        top:
          description: The highest pixel from which to begin cropping
          type: integer
        left:
          description: The leftmost pixel from which to begin cropping
          type: integer
        width:
          description: >-
            The number of pixels to crop rightwards from the value specified as
            `left`
          type: integer
        height:
          description: The number of pixels to crop down from the value specified as `top`
          type: integer

    SBVideoCampaignResponseCommon:
      allOf:
        - $ref: '#/components/schemas/SBCampaignBase'
        - type: object
          properties:
            portfolioId:
              description: The identifier of the portfolio to which the campaign is associated.
              type: integer
              format: int64
            creative:
              $ref: '#/components/schemas/SBVideoCreative'
            landingPage:
              $ref: '#/components/schemas/SBDetailPageLandingPage'
    SBCreateCampaignRequestCommon:
      properties:
        name:
          type: string
          description: The name of the campaign. This name must be unique to the Amazon Ads account to which the campaign is associated. Maximum length of the string is 128 characters. Note that idempotency for this field works different for sellers and vendors. Sellers aren't allowed to have duplicate campaign names, but vendors can have duplicate campaign names.
        tags:
          $ref: '#/components/schemas/CampaignTags'
        budget:
          description: The budget amount associated with the campaign.
          type: number
        budgetType:
          $ref: "#/components/schemas/BudgetType"
        startDate:
          $ref: '#/components/schemas/StartDate'
        endDate:
          $ref: '#/components/schemas/EndDate'
        adFormat:
          $ref: '#/components/schemas/AdFormat'
        state:
          $ref: "#/components/schemas/State"
        brandEntityId:
          writeOnly: true
          type: string
          description: The brand entity identifier. Note that this field is required for sellers. For more information, see the [Stores reference](https://advertising.amazon.com/API/docs/v2/reference/stores) or [Brands reference](https://advertising.amazon.com/API/docs/v3/reference/SponsoredBrands/Brands).
        bidOptimization:
          type: boolean
          description: Set to `true` to allow Amazon to automatically optimize bids for placements below top of search.
          default: true
        bidMultiplier:
          type: number
          description: |-
            A bid multiplier. Note that this field can only be set when 'bidOptimization' is set to false. Value is a percentage to two decimal places. Example: If set to -40.00 for a $5.00 bid, the resulting bid is $3.00.
          minimum: -99.00
          maximum: 99.00
        bidAdjustments:
          type: array
          description: List of bid adjustment for each placement group. BidMultiplier cannot be specified when bidAdjustments presents.
            `Not supported for video campaigns`
          items:
            $ref: "#/components/schemas/BidAdjustment"
        portfolioId:
          description: The identifier of the portfolio to which the campaign is associated.
          type: integer
          format: int64
        creative:
          $ref: '#/components/schemas/SBCreative'
        landingPage:
          $ref: '#/components/schemas/SBLandingPage'
    SBCreateCampaignRequestCommonV3_2:
      properties:
        name:
          type: string
          description: The name of the campaign. This name must be unique to the Amazon Ads account to which the campaign is associated. Maximum length of the string is 128 characters. Note that idempotency for this field works different for sellers and vendors. Sellers aren't allowed to have duplicate campaign names, but vendors can have duplicate campaign names.
        tags:
          $ref: '#/components/schemas/CampaignTags'
        budget:
          description: The budget amount associated with the campaign.
          type: number
        budgetType:
          $ref: "#/components/schemas/BudgetType"
        startDate:
          $ref: '#/components/schemas/StartDate'
        endDate:
          $ref: '#/components/schemas/EndDate'
        adFormat:
          $ref: '#/components/schemas/AdFormatV3_2'
        state:
          $ref: "#/components/schemas/State"
        brandEntityId:
          writeOnly: true
          type: string
          description: The brand entity identifier. Note that this field is required for sellers. For more information, see the [Stores reference](https://advertising.amazon.com/API/docs/v2/reference/stores) or [Brands reference](https://advertising.amazon.com/API/docs/v3/reference/SponsoredBrands/Brands).
        bidOptimization:
          type: boolean
          description: Set to `true` to allow Amazon to automatically optimize bids for placements below top of search.
          default: true
        bidMultiplier:
          type: number
          description: |-
            A bid multiplier. Note that this field can only be set when 'bidOptimization' is set to false. Value is a percentage to two decimal places. Example: If set to -40.00 for a $5.00 bid, the resulting bid is $3.00.
          minimum: -99.00
          maximum: 99.00
        bidAdjustments:
          type: array
          description: List of bid adjustment for each placement group. BidMultiplier cannot be specified when bidAdjustments presents.
            `Not supported for video campaigns`
          items:
            $ref: "#/components/schemas/BidAdjustment"
        portfolioId:
          description: The identifier of the portfolio to which the campaign is associated.
          type: integer
          format: int64
        creative:
          oneOf:
            - $ref: '#/components/schemas/SBProductCollectionCreative'
            - $ref: '#/components/schemas/SBStoreSpotlightCreative'
        landingPage:
          $ref: '#/components/schemas/SBLandingPage'
    SBCreateCampaignRequestCommonV3_3:
      allOf:
        - $ref: '#/components/schemas/SBCreateCampaignRequestCommonV3_2'
        - $ref: '#/components/schemas/ShopperSegmentBiddingControls'
    SBVideoCreateCampaignRequestCommon:
      properties:
        name:
          type: string
          description: The name of the campaign. This name must be unique to the Amazon Ads account to which the campaign is associated. Maximum length of the string is 128 characters.
        budget:
          description: The budget amount associated with the campaign.
          type: number
        budgetType:
          $ref: "#/components/schemas/BudgetType"
        startDate:
          $ref: '#/components/schemas/StartDate'
        endDate:
          $ref: '#/components/schemas/EndDate'
        adFormat:
          $ref: '#/components/schemas/AdFormat'
        state:
          $ref: "#/components/schemas/State"
        brandEntityId:
          writeOnly: true
          type: string
          description: The brand entity identifier. Note that this field is required for sellers. For more information, see the [Stores reference](https://advertising.amazon.com/API/docs/v2/reference/stores) or [Brands reference](https://advertising.amazon.com/API/docs/v3/reference/SponsoredBrands/Brands).
        portfolioId:
          description: The identifier of the portfolio to which the campaign is associated.
          type: integer
          format: int64
        creative:
          $ref: '#/components/schemas/SBVideoCreative'
    SBCreateCampaignRequest:
      oneOf:
        - $ref: '#/components/schemas/SBCreateCampaignWithKeywords'
        - $ref: '#/components/schemas/SBCreateCampaignWithExpressions'
        - $ref: '#/components/schemas/SBVideoCreateCampaignWithKeywords'
        - $ref: '#/components/schemas/SBVideoCreateCampaignWithExpressions'
    SBCreateCampaignRequestV3_2:
      oneOf:
        - $ref: '#/components/schemas/SBCreateCampaignWithKeywordsV3_2'
        - $ref: '#/components/schemas/SBCreateCampaignWithExpressionsV3_2'
        - $ref: '#/components/schemas/SBVideoCreateCampaignWithKeywords'
        - $ref: '#/components/schemas/SBVideoCreateCampaignWithExpressions'
    SBCreateCampaignRequestV3_3:
      oneOf:
        - $ref: '#/components/schemas/SBCreateCampaignWithKeywordsV3_3'
        - $ref: '#/components/schemas/SBCreateCampaignWithExpressionsV3_3'
        - $ref: '#/components/schemas/SBVideoCreateCampaignWithKeywords'
        - $ref: '#/components/schemas/SBVideoCreateCampaignWithExpressions'
    SBCreateCampaignWithKeywords:
      allOf:
        - $ref: '#/components/schemas/SBCreateCampaignRequestCommon'
        - $ref: '#/components/schemas/SBCommonKeywords'
    SBVideoCreateCampaignWithKeywords:
      allOf:
        - $ref: '#/components/schemas/SBVideoCreateCampaignRequestCommon'
        - $ref: '#/components/schemas/SBCommonKeywords'
    SBCreateCampaignWithExpressions:
      allOf:
        - $ref: '#/components/schemas/SBCreateCampaignRequestCommon'
        - $ref: '#/components/schemas/SBCommonTargets'
    SBVideoCreateCampaignWithExpressions:
      allOf:
        - $ref: '#/components/schemas/SBVideoCreateCampaignRequestCommon'
        - $ref: '#/components/schemas/SBCommonTargets'
    SBCreateCampaignWithKeywordsV3_2:
      allOf:
        - $ref: '#/components/schemas/SBCreateCampaignRequestCommonV3_2'
        - $ref: '#/components/schemas/SBCommonKeywords'
    SBCreateCampaignWithExpressionsV3_2:
      allOf:
        - $ref: '#/components/schemas/SBCreateCampaignRequestCommonV3_2'
        - $ref: '#/components/schemas/SBCommonTargets'
    SBCreateCampaignWithKeywordsV3_3:
      allOf:
        - $ref: '#/components/schemas/SBCreateCampaignRequestCommonV3_3'
        - $ref: '#/components/schemas/SBCommonKeywords'
    SBCreateCampaignWithExpressionsV3_3:
      allOf:
        - $ref: '#/components/schemas/SBCreateCampaignRequestCommonV3_3'
        - $ref: '#/components/schemas/SBCommonTargets'
    SBCommonKeywords:
      properties:
        keywords:
          description: An array of keywords associated with the campaign.
          writeOnly: true
          type: array
          minItems: 1
          maxItems: 100
          items:
            type: object
            properties:
              keywordText:
                type: string
                description: The keyword text. Maximum of 10 words.
              nativeLanguageKeyword:
                type: string
                description: The unlocalized keyword text in the preferred locale of the advertiser.
              nativeLanguageLocale:
                type: string
                description: |-
                  The locale preference of the advertiser. For example, if the advertiser’s preferred language is Simplified Chinese, set the locale to `zh_CN`. Supported locales include: Simplified Chinese (locale: zh_CN) for US, UK and CA. English (locale: en_GB) for DE, FR, IT and ES.
              matchType:
                $ref: "#/components/schemas/MatchType"
              bid:
                $ref: '#/components/schemas/Bid'
        negativeKeywords:
          description: An array of negative keywords associated with the campaign.
          writeOnly: true
          type: array
          minItems: 1
          maxItems: 100
          items:
            type: object
            properties:
              keywordText:
                description: The keyword text. Maximum of 10 words.
                type: string
              matchType:
                $ref: '#/components/schemas/NegativeMatchType'
    SBCommonTargets:
      properties:
        targets:
          type: array
          minItems: 1
          maxItems: 100
          items:
            type: object
            properties:
              expressions:
                description: An array of targets associated with the campaign.
                writeOnly: true
                type: array
                items:
                  $ref: "#/components/schemas/SBExpression"
              bid:
                $ref: '#/components/schemas/Bid'
        negativeTargets:
          type: array
          minItems: 1
          maxItems: 100
          items:
            type: object
            properties:
              expressions:
                description: An array of targets associated with the campaign.
                writeOnly: true
                type: array
                items:
                  $ref: "#/components/schemas/SBExpression"
    SBCollectionCreative:
      description: Render one or more product images and product details.
      allOf:
        - $ref: '#/components/schemas/SBCreative'
        - type: object
          properties:
            brandName:
              type: string
              description: The brand name.
              maxLength: 30
            brandLogoAssetId:
              type: string
              description: The identifier of the brand logo image from the Store assets library. See [listAssets](https://advertising.amazon.com/API/docs/v3/reference/SponsoredBrands/Stores) for more information. Note that for campaigns created in the Amazon Ads console prior to release of the Store assets library, responses will not include a value for the brandLogoAssetID field.
            brandLogoUrl:
              type: string
              readOnly: true
              description: The address of the hosted image.
            headline:
              type: string
              description: The headline text. Maximum length of the string is 50 characters for all marketplaces other than Japan, which has a maximum length of 35 characters.
              maxLength: 50
            asins:
              type: array
              items:
                type: string
              description: An array of ASINs associated with the creative. **Note** do not pass an empty array. This results in an error.
              maxItems: 3
            shouldOptimizeAsins:
              type: boolean
              description: Note that this field is supported only in the US and UK marketplaces. Set to `true` to have Amazon show other products from your landing page in the advertisement if they are more relevant to the shopper's search. Set to `false` to use the ASINs specified in the `asins` field. Do not specify in unsupported marketplaces.
    SBProductListLandingPage:
      description: A landing page showcasing a list of ASINs.
      allOf:
        - type: object
          properties:
            pageType:
              type: string
            url:
              type: string
    SBStoreLandingPage:
      description: An Amazon Store page or subpage.
      allOf:
        - type: object
          properties:
            pageType:
              type: string
            url:
              type: string
    SBDetailPageLandingPage:
      description: An Amazon product detail page.
      allOf:
        - type: object
          properties:
            pageType:
              type: string
            url:
              type: string
    SBCustomUrlLandingPage:
      description: A landing page including at least 3 ASINs. Note that custom landing page URLs can only be specified by vendors.
      allOf:
        - type: object
          properties:
            pageType:
              type: string
            url:
              type: string
    SBBidRecommendationKeyword:
      type: object
      properties:
        matchType:
          $ref: '#/components/schemas/MatchType'
          description: MatchType should be non-null and non-empty
        keywordText:
          description: The text of the keyword. Maximum of 10 words.
          type: string
          minLength: 1
    SBKeywordExpression:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/MatchType'
        value:
          description: The text of the keyword. Maximum of 10 words.
          type: string
          minLength: 1
    RecommendedBid:
      type: object
      properties:
        rangeEnd:
          type: number
          format: double
        rangeStart:
          type: number
          format: double
        recommended:
          type: number
          format: double
    SBExpression:
      description: |-
        A name value pair that defines a targeting expression. The `type` field defines the predicate. The `value` field defines the value to match for the predicate.
      properties:
        type:
          $ref: '#/components/schemas/ProductPredicateType'
        value:
          type: string
          description: The text of the targeting expression. The `-` token defines a range. For example, `2-4` defines a range of 2, 3, and 4.
    SBTargetingExpressions:
      type: array
      items:
        $ref: "#/components/schemas/SBExpression"
    ProductPredicateType:
      type: string
      enum:
        - asinCategorySameAs
        - asinBrandSameAs
        - asinPriceLessThan
        - asinPriceBetween
        - asinPriceGreaterThan
        - asinReviewRatingLessThan
        - asinReviewRatingBetween
        - asinReviewRatingGreaterThan
        - asinSameAs
    Bid:
      type: number
      description: The associated bid. Note that this value must be less than the budget associated with the Advertiser account. For more information, see [supported features](https://advertising.amazon.com/API/docs/v2/guides/supported_features).
    SBNegativeTargetingExpressions:
      type: array
      items:
        $ref: "#/components/schemas/SBNegativeExpression"
    SBNegativeExpression:
      properties:
        type:
          type: string
          enum:
            - asinBrandSameAs
            - asinSameAs
        value:
          type: string
          description: The text of the negative expression.
    SBNegativeTargetState:
      type: string
      enum:
        - enabled
        - archived
    SBAdGroupId:
      type: integer
      format: int64
      description: The ad group identifier.
    SBTargetingClause:
      properties:
        targetId:
          type: integer
          format: int64
          description: The target identifier.
        adGroupId:
          type: integer
          format: int64
          description: The identifier of the ad group to which the target is associated.
        campaignId:
          type: integer
          format: int64
          description: The identifier of the campaign to which the target is associated.
        expressions:
          $ref: '#/components/schemas/SBExpression'
        resolvedExpressions:
          $ref: '#/components/schemas/SBResolvedExpression'
        state:
          $ref: '#/components/schemas/SBProductTargetState'
        bid:
          $ref: '#/components/schemas/Bid'
    SBDraftTargetingClause:
      properties:
        targetId:
          type: integer
          format: int64
          description: The target identifier.
        adGroupId:
          type: integer
          format: int64
          description: The identifier of the ad group to which the target is associated.
        campaignId:
          type: integer
          format: int64
          description: The identifier of the campaign to which the target is associated.
        expressions:
          $ref: '#/components/schemas/SBExpression'
        resolvedExpressions:
          $ref: '#/components/schemas/SBResolvedExpression'
        bid:
          $ref: '#/components/schemas/Bid'
    SBNegativeTargetingClause:
      properties:
        targetId:
          type: integer
          format: int64
          description: The target identifier.
        adGroupId:
          type: integer
          format: int64
          description: The identifier of an existing ad group. The newly created target is associated to this ad group
        campaignId:
          type: integer
          format: int64
          description: The identifier of an existing campaign. The newly created target is associated to this campaign
        expressions:
          $ref: '#/components/schemas/SBNegativeTargetingExpressions'
        resolvedExpressions:
          $ref: '#/components/schemas/SBResolvedExpression'
        state:
          $ref: '#/components/schemas/SBProductTargetState'
    SBDraftNegativeTargetingClause:
      properties:
        targetId:
          type: integer
          format: int64
          description: The target identifier.
        adGroupId:
          type: integer
          format: int64
          description: The identifier of an existing ad group. The newly created target is associated to the specified ad group.
        campaignId:
          type: integer
          format: int64
          description: The identifier of an existing campaign. The newly created target is associated to the specified campaign.
        expressions:
          $ref: '#/components/schemas/SBNegativeTargetingExpressions'
        resolvedExpressions:
          $ref: '#/components/schemas/SBResolvedExpression'
    SBResolvedExpression:
      properties:
        type:
          $ref: '#/components/schemas/ProductPredicateType'
        value:
          readOnly: true
          type: string
          description: The human-readable target text.
    SBNegativeResolvedExpression:
      properties:
        type:
          type: string
          enum:
            - asinBrandSameAs
            - asinSameAs
        value:
          readOnly: true
          type: string
          description: The human-readable negative target text.
    SBProductTargetState:
      type: string
      enum:
        - enabled
        - paused
        - archived
        - draft
    SBTheme:
      description: |-
        | themeType | description |
        |-----------|-------------|
        | KEYWORDS_RELATED_TO_YOUR_BRAND | keywords related to brands. |
        | KEYWORDS_RELATED_TO_YOUR_LANDING_PAGES | keywords related to your landing pages. |
      properties:
        themeId:
          description: The theme target identifier.
          type: string
        adGroupId:
          description: The identifier of the ad group associated with the theme target.
          type: string
        campaignId:
          description: The identifier of the campaign associated with the theme target.
          type: string
        themeType:
          $ref: "#/components/schemas/ThemeType"
        state:
          $ref: "#/components/schemas/SBThemeState"
        bid:
          description: The associated bid. Note that this value must be less than the budget associated with the Advertiser account. For more information, see [supported features](https://advertising.amazon.com/API/docs/v2/guides/supported_features).
          type: number
    SBThemeState:
      type: string
      enum:
        - enabled
        - paused
        - archived
    SBCreateTargetsResponse:
      properties:
        createTargetSuccessResults:
          description: Lists the successfully created targets. Note that targets in the response are correlated to targets in the request using the `targetRequestIndex` field. For example, if `targetRequestIndex` is set to `2`, the values correlate to the third target object in the request.
          type: array
          items:
            type: object
            properties:
              targetRequestIndex:
                $ref: '#/components/schemas/SBTargetRequestIndex'
              targetId:
                $ref: '#/components/schemas/SBTargetId'
        createTargetErrorResults:
          description: Lists errors that occured during target creation. Note that errors are correlated to target create requests by the `targetRequestIndex` field. This field corresponds to the order of the target object in the request. For example, if `targetRequestIndex` is set to `3`, an error occured during creation of the fourth target in the request.
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/Error'
              - type: object
                properties:
                  targetRequestIndex:
                    $ref: '#/components/schemas/SBTargetRequestIndex'
                  targetId:
                    $ref: '#/components/schemas/SBTargetId'
    SBCreateTargetingClauseRequest:
      properties:
        adGroupId:
          type: integer
          format: int64
          description: The identifier of an existing ad group. The newly created target is associated to this ad group.
        campaignId:
          type: integer
          format: int64
          description: The identifier of an existing campaign. The newly created target is associated to this campaign.
        expressions:
          $ref: '#/components/schemas/SBTargetingExpressions'
        bid:
          $ref: '#/components/schemas/Bid'
    SBUpdateTargetingClauseRequest:
      properties:
        targetId:
          type: integer
          format: int64
          description: The identifier of the target.
        adGroupId:
          type: integer
          format: int64
          description: The identifier of the ad group to which the target is associated.
        campaignId:
          type: integer
          format: int64
          description: The identifier of the campaign to which the target is associated.
        state:
          $ref: '#/components/schemas/SBProductTargetState'
        bid:
          $ref: '#/components/schemas/Bid'
    SBCreateThemesResponse:
      properties:
        success:
          description: Lists the successfully created theme targets. Note that theme targets in the response are correlated to theme targets in the request using the `index` field. For example, if `index` is set to `2`, the values correlate to the third theme target object in the request.
          type: array
          items:
            type: object
            properties:
              index:
                $ref: '#/components/schemas/SBTargetRequestIndex'
              themeId:
                $ref: '#/components/schemas/SBThemeId'
          minItems: 0
          maxItems: 100
        error:
          description: Lists errors that occurred during theme target creation. Note that errors are correlated to theme target create requests by the `index` field. This field corresponds to the order of the target object in the request. For example, if `index` is set to `3`, an error occurred during creation of the fourth theme target in the request.
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/Error'
              - type: object
                properties:
                  index:
                    $ref: '#/components/schemas/SBTargetRequestIndex'
          minItems: 0
          maxItems: 100
    SBCreateThemesRequest:
      properties:
        adGroupId:
          type: string
          description: The identifier of the ad group to which the target is associated.
        campaignId:
          type: string
          description: The identifier of the campaign to which the target is associated.
        themeType:
          $ref: '#/components/schemas/ThemeType'
        bid:
          $ref: '#/components/schemas/Bid'
      required:
        - adGroupId
        - themeType
        - bid
    SBUpdateThemesRequest:
      properties:
        themeId:
          type: string
          description: The identifier of the theme target.
        adGroupId:
          type: string
          description: The identifier of the ad group to which the target is associated.
        campaignId:
          type: string
          description: The identifier of the campaign to which the target is associated.
        state:
          $ref: '#/components/schemas/SBThemeState'
        bid:
          $ref: '#/components/schemas/Bid'
      required:
        - themeId
        - adGroupId
    SBTargetId:
      type: integer
      format: int64
      description: The identifier of a target.
    SBThemeId:
      type: string
      description: The identifier of theme target.
    SBExpressionRequestIndex:
      description: Correlates the expression to the expression array index specified in the request. Zero-based.
      type: number
    SBNegativeExpressionRequestIndex:
      description: Correlates the negative expression to the negative expression array index specified in the request. Zero-based.
      type: number
    SBTargetRequestIndex:
      description: Correlates the target to the target array index specified in the request. Zero-based.
      type: number
    SBNegativeTargetRequestIndex:
      description: Correlates the negative target to the negative target array index specified in the request. Zero-based.
      type: number
    SBBidRecommendationKeywordIndex:
      description: Correlates the keyword to the keyword array index specified in the request. Zero-based.
      type: number
    SBBidRecommendationTargetsIndex:
      description: Correlates the target to the targets array index specified in the request. Zero-based.
      type: number
    SBBidRecommendationThemeIndex:
      description: Correlates the theme targets to the theme targets array index specified in the request. Zero-based.
      type: number
    SBTargetingClauseResponse:
      properties:
        targetId:
          type: integer
          format: int64
          description: The target identifier.
        code:
          type: string
    SBUpdateNegativeTargetingClauseRequest:
      properties:
        targetId:
          type: integer
          format: int64
          description: The target identifier.
        adGroupId:
          type: integer
          format: int64
          description: The identifier of an existing ad group. The newly created target is associated to this ad group.
        state:
          $ref: '#/components/schemas/SBProductTargetState'
    SBCreateNegativeTargetingClauseRequest:
      properties:
        adGroupId:
          type: integer
          format: int64
          description: The identifier of an existing ad group. The newly created target is associated to this ad group.
        campaignId:
          type: integer
          format: int64
          description: The identifier of an existing campaign. The newly created target is associated to this campaign.
        expressions:
          $ref: '#/components/schemas/SBNegativeTargetingExpressions'
    SBNegativeTargetId:
      type: integer
      format: int64
      description: The identifier of a negative target.
    SBCategoryResponse:
      properties:
        id:
          type: integer
          format: int64
          description: The category identifier.
        name:
          type: string
          description: The category name.
        translatedName:
          type: string
          description: The category name translated to the specified locale in the request.
        isTargetable:
          type: boolean
          description: Set to `true` if the category can be targeted in a targeting expression, and `false` if not.
        path:
          type: string
          description: The path of the category within the category catalogue.
        translatedPath:
          type: string
          description: The path of the category within the category catalogue translated to the specified locale in the request.
        estimatedReach:
          type: string
          description: (As of 05/28/2024, `STREAMING_VIDEO` is deprecated). The estimated daily reach range of the category. Only set when supply source is `STREAMING_VIDEO`
    SBBrandResponse:
      properties:
        id:
          type: integer
          format: int64
          description: The Brand identifier.
        name:
          type: string
          description: The Brand name.
    MediaId:
      type: string
      description: The Media identifier.
    MediaStatus:
      type: string
      description: |
        Media status:
         * `Processing` - The media is being processed
         * `PendingDeepValidation` - The media is pending additional validation carried out during media conversion.
         * `Available` - Media has successfully finished validation and conversion and the media is published.
         * `Failed` - Media processing failed
      enum:
        - Processing
        - PendingDeepValidation
        - Available
        - Failed
    UploadLocation:
      type: string
      description: The url to upload the media. The url expires in 15 minutes. The
        upload location only supports `PUT` HTTP Method to upload the media content.
    Program:
      required:
        - creativeType
        - programType
      type: object
      properties:
        programType:
          type: string
          enum:
            - SponsoredBrands
        creativeType:
          type: string
          enum:
            - Video
      description: The Ad Program that the media will be attached to. Currently, we
        support `SponsoredBrands` with creative type `Video`
    MediaPublisherAPIError:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
    SBCampaignResponseCommonV3_3:
      allOf:
        - $ref: '#/components/schemas/SBCampaignResponseCommon32'
        - $ref: '#/components/schemas/ShopperSegmentBiddingControls'
    ShopperSegmentBiddingControls:
      properties:
        bidOptimizationStrategy:
          $ref: '#/components/schemas/BidOptimizationStrategy'
        bidAdjustments:
          type: array
          description: List of bid adjustments for placement group and shopper segments. BidMultiplier cannot be specified when bidAdjustments are present.
            `Not supported for video campaigns`
          items:
            $ref: '#/components/schemas/BidAdjustmentV3_3'
          minItems: 0
          maxItems: 4
    BidAdjustmentV3_3:
      properties:
        bidAdjustmentPredicate:
          description:
            |-
            Determines the predicate (placement groups and shopper segments) that the bid adjustment will be made for.
            |BidAdjustmentPredicate|Description|
            |------|-----------|
            |PLACEMENT_GROUP_DETAIL_PAGE|Predicate for adjusting bids at detail page placement.|
            |PLACEMENT_GROUP_HOME|Predicate for adjusting bids at home page placement.|
            |PLACEMENT_GROUP_OTHER|Predicate for adjusting bids at pages other than detail and home pages placement.|
            |SHOPPER_SEGMENT_NEW_TO_BRAND_PURCHASE|Predicate for adjusting bids for new-to-brand purchase shopper segment.|
          type: string
          enum:
            - placementGroupDetailPage
            - placementGroupHome
            - placementGroupOther
            - shopperSegmentNewToBrandPurchase
        bidAdjustmentPercent:
          description:
            |-
            Bid adjustment for placement groups and shopper segments. Value is a percentage to two decimal places. For bid adjustments in placement groups, min is -99.00 and max is 900.00. For bid adjustments in shopper segments, min is 0.00 and max is 900.00. For example: If -40.00 is set for a $5.00 bid, the resulting bid is $3.00.
          type: number
          minimum: -99
          maximum: 900
    BidOptimizationStrategy:
      type: string
      description:
        |-
        Automated bid optimization strategy.
        |Bid optimization strategy|Description|
        |------|-----------|
        |MAXIMIZE_IMMEDIATE_SALES|Bid optimization strategy for maximizing immediate sales.|
        |MAXIMIZE_NEW_TO_BRAND_CUSTOMERS|Bid optimization strategy for maximizing new to brand customers.|
        `Not supported for video campaigns`
      enum:
        - MAXIMIZE_IMMEDIATE_SALES
        - MAXIMIZE_NEW_TO_BRAND_CUSTOMERS
    Keyword:
      type: object
      properties:
        keywordText:
          type: string
          description: The keyword text. Maximum of 10 words.
        nativeLanguageKeyword:
          type: string
          description: The unlocalized keyword text in the preferred locale of the advertiser.
        nativeLanguageLocale:
          type: string
          description: 'The locale preference of the advertiser. For example, if the advertiser’s preferred language is Simplified Chinese, set the locale to `zh_CN`. Supported locales include: Simplified Chinese (locale: zh_CN) for US, UK and CA. English (locale: en_GB) for DE, FR, IT and ES.'
        matchType:
          $ref: '#/components/schemas/SBMatchType'
        bid:
          $ref: '#/components/schemas/SBAPIBid'
    SBAPIBid:
      x-amazon-advertising-package: SBPublicAPISwagger
      type: number
      format: double
      description: 'The associated bid. Note that this value must be less than the budget associated with the Advertiser account. For more information, see [supported features](https://advertising.amazon.com/API/docs/v2/guides/supported_features).'
    SBMatchType:
      x-amazon-advertising-package: SBPublicAPISwagger
      type: string
      description: 'The match type. For more information, see [match types](https://advertising.amazon.com/help#GHTRFDZRJPW6764R) in the Amazon Ads support center.'
      enum:
        - broad
        - exact
        - phrase
    NegativeKeyword:
      x-amazon-advertising-package: SBPublicAPISwagger
      type: object
      properties:
        keywordText:
          description: The keyword text. Maximum of 10 words.
          type: string
        matchType:
          $ref: '#/components/schemas/SBNegativeMatchType'
    SBNegativeMatchType:
      x-amazon-advertising-package: SBPublicAPISwagger
      type: string
      description: 'The negative match type. For more information, see [negative keyword match types](https://advertising.amazon.com/help#GHTRFDZRJPW6764R) in the Amazon Ads support center.'
      enum:
        - negativeExact
        - negativePhrase
    KeywordEntry:
      x-amazon-advertising-package: SBPublicAPISwagger
      type: object
      properties:
        expressions:
          type: array
          description: An array of targets associated with the campaign.
          items:
            $ref: '#/components/schemas/Expression'
        bid:
          $ref: '#/components/schemas/SBAPIBid'
    Expression:
      x-amazon-advertising-package: SBPublicAPISwagger
      type: object
      properties:
        type:
          $ref: '#/components/schemas/SBAPIProductPredicateType'
        value:
          description: 'The text of the targeting expression. The - token defines a range. For example, 2-4 defines a range of 2, 3, and 4.'
          type: string
    SBAPIProductPredicateType:
      x-amazon-advertising-package: SBPublicAPISwagger
      type: string
      enum:
        - asinCategorySameAs
        - asinBrandSameAs
        - asinPriceLessThan
        - asinPriceBetween
        - asinPriceGreaterThan
        - asinReviewRatingLessThan
        - asinReviewRatingBetween
        - asinReviewRatingGreaterThan
        - asinSameAs
    SBVideoListCampaignItem:
      allOf:
        - $ref: '#/components/schemas/SBCampaignBase'
        - type: object
          properties:
            landingPage:
              $ref: '#/components/schemas/SBDetailPageLandingPage'
            creative:
              $ref: '#/components/schemas/SBVideoCreative'
            supplySource:
              $ref: '#/components/schemas/SupplySource'
    SupplySource:
      x-amazon-advertising-package: SBPublicAPISwagger
      description: (As of 05/28/2024, `STREAMING_VIDEO` is deprecated). The supply source of the campaign. Use `AMAZON` for placements on Amazon website. Use `STREAMING_VIDEO` for off-site video placements such as IMDb TV. Default value is `AMAZON`
      type: string
      enum:
        - AMAZON
        - STREAMING_VIDEO
    SBCreateDraftCampaignWithKeywordsV3_3:
      allOf:
        - $ref: '#/components/schemas/SBCreateDraftCampaignRequestCommonV3_3'
        - $ref: '#/components/schemas/SBCommonKeywords'
    SBCreateDraftCampaignWithProductTargetsV3_3:
      allOf:
        - $ref: '#/components/schemas/SBCreateDraftCampaignRequestCommonV3_3'
        - $ref: '#/components/schemas/SBCommonTargets'
    SBKeywordsNegativeKeywords:
      x-amazon-advertising-package: SBPublicAPISwagger
      type: object
      properties:
        keywords:
          description: An array of keywords associated with the campaign.
          writeOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Keyword'
        negativeKeywords:
          description: An array of negative keywords associated with the campaign.
          writeOnly: true
          type: array
          items:
            $ref: '#/components/schemas/NegativeKeyword'
    SBCreateDraftCampaignRequestCommonV3_3:
      allOf:
        - $ref: '#/components/schemas/SBCreateDraftCampaignRequestCommonV3_2'
        - $ref: '#/components/schemas/ShopperSegmentBiddingControls'
    SBUpdateDraftCampaignRequestV3_3:
      oneOf:
        - $ref: '#/components/schemas/SBUpdateDraftCampaignRequestWithKeywordsV3_3'
        - $ref: '#/components/schemas/SBUpdateDraftCampaignRequestWithProductTargetsV3_3'
        - $ref: '#/components/schemas/SBVideoUpdateDraftCampaignRequestWithKeywords'
        - $ref: '#/components/schemas/SBVideoUpdateDraftCampaignRequestWithProductTargets'
    SBVideoUpdateDraftCampaignRequestWithProductTargets:
      x-amazon-advertising-package: SBPublicAPISwagger
      allOf:
        - $ref: '#/components/schemas/SBVideoUpdateDraftCampaignRequestCommon'
        - $ref: '#/components/schemas/SBTargetsNegativeTargets'
    SBTargetsNegativeTargets:
      x-amazon-advertising-package: SBPublicAPISwagger
      properties:
        targets:
          type: array
          items:
            $ref: '#/components/schemas/SBTarget'
        negativeTargets:
          type: array
          items:
            $ref: '#/components/schemas/SBNegativeTarget'
    SBNegativeTarget:
      x-amazon-advertising-package: SBPublicAPISwagger
      properties:
        expressions:
          type: array
          items:
            $ref: '#/components/schemas/SBExpression'
    SBTarget:
      x-amazon-advertising-package: SBPublicAPISwagger
      properties:
        expressions:
          type: array
          items:
            $ref: '#/components/schemas/SBExpression'
        bid:
          $ref: '#/components/schemas/SBAPIBid'
    SBUpdateDraftCampaignRequestWithKeywordsV3_3:
      allOf:
        - $ref: '#/components/schemas/SBUpdateDraftCampaignRequestWithKeywordsV3_2'
        - $ref: '#/components/schemas/ShopperSegmentBiddingControls'
    SBUpdateDraftCampaignRequestWithProductTargetsV3_3:
      x-amazon-advertising-package: SBPublicAPISwagger
      allOf:
        - $ref: '#/components/schemas/SBUpdateDraftCampaignRequestWithProductTargetsV3_2'
        - $ref: '#/components/schemas/ShopperSegmentBiddingControls'
    SBListCampaignItemV3_3:
      allOf:
        - $ref: '#/components/schemas/SBListCampaignItem'
        - $ref: '#/components/schemas/ShopperSegmentBiddingControls'
    SBListCampaignItem:
      allOf:
        - $ref: '#/components/schemas/SBCampaignBase'
        - type: object
          properties:
            landingPage:
              oneOf:
                - $ref: '#/components/schemas/SBProductListLandingPage'
                - $ref: '#/components/schemas/SBStoreLandingPage'
                - $ref: '#/components/schemas/SBCustomUrlLandingPage'
            bidOptimization:
              type: boolean
              description: Set to true to allow Amazon to automatically optimize bids for placements below top of search.
            bidMultiplier:
              type: number
              format: double
              description: 'A bid multiplier. Note that this field can only be set when ''bidOptimization'' is set to false. Value is a percentage to two decimal places. Example: If set to -40.00 for a $5.00 bid, the resulting bid is $3.00.'
            creative:
              $ref: '#/components/schemas/SBCreative'
            bidAdjustments:
              type: array
              description: List of bid adjustment for each placement group. BidMultiplier cannot be specified when bidAdjustments presents.
                `Not supported for video campaigns`
              items:
                $ref: '#/components/schemas/BidAdjustment'
    BidAdjustment:
      x-amazon-advertising-package: SBPublicAPISwagger
      properties:
        bidAdjustmentPredicate:
          description: The enum for placement group name
          type: string
          enum:
            - placementGroupDetailPage
            - placementGroupHome
            - placementGroupOther
        bidAdjustmentPercent:
          description: 'Bid adjustment for placement group. Value is a percentage to two decimal places. Example: If this is set to -40.00 for a $5.00 bid, the resulting bid is $3.00.'
          type: number
          minimum: -99
          maximum: 900
    SBCreateCampaignsResponseFullV3_3:
      x-amazon-advertising-package: SBPublicAPISwagger
      description: |-
        |-
                Applies to:
                | Operation | Path |
                |-----------| -----|
                |[createCampaigns](https://advertising.amazon.com/API/docs/v3/reference/SponsoredBrands/Campaigns)| POST /sb/campaigns|
                <br/>
      type: object
      properties:
        campaign:
          $ref: '#/components/schemas/SBCampaignResponseV3_3'
        allOf:
          $ref: '#/components/schemas/SBCreateCampaignsResponseDefault'
    SBCreateCampaignsResponseDefault:
      x-amazon-advertising-package: SBPublicAPISwagger
      description: |-
        |-
                Applies to:
                | Operation | Path |
                |-----------| -----|
                |[createCampaigns](https://advertising.amazon.com/API/docs/v3/reference/SponsoredBrands/Campaigns)| POST /sb/campaigns|
                <br/>
      type: object
      properties:
        campaignId:
          description: The campaign identifier.
          type: integer
          format: int64
        adGroupResponses:
          description: An array of ad groups associated with the campaign.
          type: array
          items:
            type: object
            properties:
              adGroupId:
                description: The ad group identifier.
                type: integer
                format: int64
              code:
                description: An enumerated response code.
                type: string
              description:
                description: A human-readable description of the enumerated response code in the `code` field.
                type: string
        keywordResponses:
          description: An array of keywords associated with the campaign.
          type: array
          items:
            $ref: '#/components/schemas/SBKeywordResponse'
        negativeKeywordResponses:
          description: An array of negative keywords associated with the campaign.
          type: array
          items:
            $ref: '#/components/schemas/SBKeywordResponse'
        targetingClauseResponses:
          description: An array of targets associated with the campaign.
          type: array
          items:
            $ref: '#/components/schemas/SBTargetingClauseResponse'
        negativeTargetingClauseResponses:
          description: An array of negative targets associated with the campaign.
          type: array
          items:
            $ref: '#/components/schemas/SBTargetingClauseResponse'
        code:
          description: An enumerated response code.
          type: string
        description:
          description: A human-readable description of the enumerated response code in the `code` field.
          type: string
    SBCampaignResponseV3_3:
      description: SB campaign
      oneOf:
        - $ref: '#/components/schemas/SBCampaignResponseCommonV3_3'
        - $ref: '#/components/schemas/SBVideoCampaignResponseCommon'
    SBUpdateCampaignResponseDefault:
      x-amazon-advertising-package: SBPublicAPISwagger
      description: |-
        |-
                Applies to:
                | Operation | Path |
                |-----------| -----|
                |[updateCampaigns](https://advertising.amazon.com/API/docs/v3/reference/SponsoredBrands/Campaigns)| PUT /sb/campaigns|
                |[archiveCampaigns](https://advertising.amazon.com/API/docs/v3/reference/SponsoredBrands/Campaigns)|DELETE /sb/campaigns/{campaignId}|
                <br/>
      type: object
      properties:
        campaignId:
          type: integer
          format: int64
          description: The campaign identifier.
        code:
          type: string
          description: An enumerated response code.
        description:
          type: string
          description: A human-readable description of the enumerated response code in the `code` field.
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorEntry'
    ErrorEntry:
      x-amazon-advertising-package: SBPublicAPISwagger
      oneOf:
        - $ref: '#/components/schemas/AdFormatError'
        - $ref: '#/components/schemas/AdGroupError'
        - $ref: '#/components/schemas/AssetsError'
        - $ref: '#/components/schemas/AuthorizationError'
        - $ref: '#/components/schemas/BidError'
        - $ref: '#/components/schemas/BrandsError'
        - $ref: '#/components/schemas/BudgetError'
        - $ref: '#/components/schemas/CampaignError'
        - $ref: '#/components/schemas/CreativeError'
        - $ref: '#/components/schemas/DraftsError'
        - $ref: '#/components/schemas/Error'
        - $ref: '#/components/schemas/FilterError'
        - $ref: '#/components/schemas/KDPError'
        - $ref: '#/components/schemas/KeywordError'
        - $ref: '#/components/schemas/LandingPageError'
        - $ref: '#/components/schemas/MarketplaceError'
        - $ref: '#/components/schemas/PageAsinsError'
        - $ref: '#/components/schemas/PaginationError'
        - $ref: '#/components/schemas/ProductItemsError'
        - $ref: '#/components/schemas/ProfileError'
        - $ref: '#/components/schemas/RecommendationError'
        - $ref: '#/components/schemas/SpooferError'
        - $ref: '#/components/schemas/TargetError'
    BasicErrorObject:
      x-amazon-advertising-package: SBPublicAPISwagger
      required:
        - message
        - reason
      properties:
        message:
          type: string
        reason:
          type: string
        location:
          type: string
        trigger:
          type: string
    AdFormatError:
      x-amazon-advertising-package: SBPublicAPISwagger
      type: object
      properties:
        AdFormatError:
          allOf:
            - $ref: '#/components/schemas/BasicErrorObject'
    AdGroupError:
      x-amazon-advertising-package: SBPublicAPISwagger
      type: object
      properties:
        AdGroupError:
          allOf:
            - $ref: '#/components/schemas/BasicErrorObject'
    AssetsError:
      x-amazon-advertising-package: SBPublicAPISwagger
      type: object
      properties:
        AssetsError:
          allOf:
            - $ref: '#/components/schemas/BasicErrorObject'
    AuthorizationError:
      x-amazon-advertising-package: SBPublicAPISwagger
      type: object
      properties:
        AuthorizationError:
          allOf:
            - $ref: '#/components/schemas/BasicErrorObject'
    BidError:
      x-amazon-advertising-package: SBPublicAPISwagger
      type: object
      properties:
        BidError:
          allOf:
            - $ref: '#/components/schemas/BasicErrorObject'
            - type: object
              properties:
                lowerLimit:
                  type: string
                upperLimit:
                  type: string
    BrandsError:
      x-amazon-advertising-package: SBPublicAPISwagger
      type: object
      properties:
        BrandsError:
          allOf:
            - $ref: '#/components/schemas/BasicErrorObject'
    BudgetError:
      x-amazon-advertising-package: SBPublicAPISwagger
      type: object
      properties:
        BudgetError:
          allOf:
            - $ref: '#/components/schemas/BasicErrorObject'
            - type: object
              properties:
                budgetType:
                  type: string
                minBudget:
                  type: string
                maxBudget:
                  type: string
                precision:
                  type: string
    CampaignError:
      x-amazon-advertising-package: SBPublicAPISwagger
      type: object
      properties:
        CampaignError:
          allOf:
            - $ref: '#/components/schemas/BasicErrorObject'
            - type: object
              properties:
                maxLength:
                  type: string
                invalidCharacters:
                  type: string
                note:
                  type: string
                maxCampaigns:
                  type: string
                supportedStates:
                  type: string
    CreativeError:
      x-amazon-advertising-package: SBPublicAPISwagger
      type: object
      properties:
        CreativeError:
          allOf:
            - $ref: '#/components/schemas/BasicErrorObject'
            - type: object
              properties:
                maxLength:
                  type: string
                emoji:
                  type: string
                invalidCharacters:
                  type: string
                note:
                  type: string
                expectedType:
                  type: string
                actualType:
                  type: string
                maxSize:
                  type: string
                asins:
                  type: string
                cropField:
                  type: string
                min:
                  type: string
                top:
                  type: string
                cropHeight:
                  type: string
                imageHeight:
                  type: string
                left:
                  type: string
                cropWidth:
                  type: string
                imageWidth:
                  type: string
                aspectRatio:
                  type: string
                requiredAspectRatio:
                  type: string
    DraftsError:
      x-amazon-advertising-package: SBPublicAPISwagger
      type: object
      properties:
        DraftsError:
          allOf:
            - $ref: '#/components/schemas/BasicErrorObject'
    FilterError:
      x-amazon-advertising-package: SBPublicAPISwagger
      type: object
      properties:
        FilterError:
          allOf:
            - $ref: '#/components/schemas/BasicErrorObject'
    KDPError:
      x-amazon-advertising-package: SBPublicAPISwagger
      type: object
      properties:
        KDPError:
          allOf:
            - $ref: '#/components/schemas/BasicErrorObject'
    KeywordError:
      x-amazon-advertising-package: SBPublicAPISwagger
      type: object
      properties:
        KeywordError:
          allOf:
            - $ref: '#/components/schemas/BasicErrorObject'
            - type: object
              properties:
                keywordText:
                  type: string
                matchType:
                  type: string
                bid:
                  type: string
                note:
                  type: string
    LandingPageError:
      x-amazon-advertising-package: SBPublicAPISwagger
      type: object
      properties:
        LandingPageError:
          allOf:
            - $ref: '#/components/schemas/BasicErrorObject'
            - type: object
              properties:
                expected:
                  type: string
                actual:
                  type: string
    MarketplaceError:
      x-amazon-advertising-package: SBPublicAPISwagger
      type: object
      properties:
        MarketplaceError:
          allOf:
            - $ref: '#/components/schemas/BasicErrorObject'
    PageAsinsError:
      x-amazon-advertising-package: SBPublicAPISwagger
      type: object
      properties:
        PageAsinsError:
          allOf:
            - $ref: '#/components/schemas/BasicErrorObject'
            - type: object
              properties:
                pageUrl:
                  type: string
    PaginationError:
      x-amazon-advertising-package: SBPublicAPISwagger
      type: object
      properties:
        PaginationError:
          allOf:
            - $ref: '#/components/schemas/BasicErrorObject'
            - type: object
              properties:
                upperLimit:
                  type: string
                expected:
                  type: string
    ProductItemsError:
      x-amazon-advertising-package: SBPublicAPISwagger
      type: object
      properties:
        ProductItemsError:
          allOf:
            - $ref: '#/components/schemas/BasicErrorObject'
    ProfileError:
      x-amazon-advertising-package: SBPublicAPISwagger
      type: object
      properties:
        ProfileError:
          allOf:
            - $ref: '#/components/schemas/BasicErrorObject'
    RecommendationError:
      x-amazon-advertising-package: SBPublicAPISwagger
      type: object
      properties:
        RecommendationError:
          allOf:
            - $ref: '#/components/schemas/BasicErrorObject'
            - type: object
              properties:
                maxCount:
                  type: string
    SpooferError:
      x-amazon-advertising-package: SBPublicAPISwagger
      type: object
      properties:
        SpooferError:
          allOf:
            - $ref: '#/components/schemas/BasicErrorObject'
    TargetError:
      x-amazon-advertising-package: SBPublicAPISwagger
      type: object
      properties:
        TargetError:
          allOf:
            - $ref: '#/components/schemas/BasicErrorObject'
            - type: object
              properties:
                validStates:
                  type: string
                matchType:
                  type: string
                targetType:
                  type: string
                note:
                  type: string
                maxTargets:
                  type: string
    SBDraftCampaignBaseV3_3:
      allOf:
        - $ref: '#/components/schemas/SBDraftCampaignBaseV3_2'
        - $ref: '#/components/schemas/ShopperSegmentBiddingControls'
    SBDraftCampaignWithKeywordsV3_3:
      x-amazon-advertising-package: SBPublicAPISwagger
      description: SB create campaign with keywords
      allOf:
        - $ref: '#/components/schemas/SBDraftCampaignBaseV3_3'
        - $ref: '#/components/schemas/SBDraftKeywordsNegativeKeywords'
    SBDraftCampaignWithTargetsV3_3:
      x-amazon-advertising-package: SBPublicAPISwagger
      description: SB create campaign with targets
      allOf:
        - $ref: '#/components/schemas/SBDraftCampaignBaseV3_3'
        - $ref: '#/components/schemas/SBDraftAllTargetingClauses'
    SBVideoDraftCampaignWithKeywords:
      x-amazon-advertising-package: SBPublicAPISwagger
      description: SB create video campaign with keywords
      allOf:
        - $ref: '#/components/schemas/SBVideoDraftCampaignBase'
        - $ref: '#/components/schemas/SBDraftKeywordsNegativeKeywords'
    SBVideoDraftCampaignWithTargets:
      x-amazon-advertising-package: SBPublicAPISwagger
      description: SB create video campaign with targets
      allOf:
        - $ref: '#/components/schemas/SBVideoDraftCampaignBase'
        - $ref: '#/components/schemas/SBDraftAllTargetingClauses'
    SBDraftKeywordsNegativeKeywords:
      x-amazon-advertising-package: SBPublicAPISwagger
      type: object
      properties:
        keywords:
          description: An array of keywords associated with the Draft campaign.
          writeOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SBDraftKeyword'
        negativeKeywords:
          description: An array of negative keywords associated with the Draft campaign.
          writeOnly: true
          type: array
          items:
            $ref: '#/components/schemas/SBDraftNegativeKeyword'
    SBDraftAllTargetingClauses:
      x-amazon-advertising-package: SBPublicAPISwagger
      properties:
        targets:
          type: array
          description: An array of targets associated with the draft campaign.
          items:
            $ref: '#/components/schemas/SBDraftTargetingClause'
        negativeTargets:
          type: array
          description: An array of negative keywords associated with the draft campaign.
          items:
            $ref: '#/components/schemas/SBDraftNegativeTargetingClause'
    SBBudgetRulesRecommendationEventRequest:
      type: object
      properties:
        campaignId:
          description: The campaign identifier.
          type: string
      required:
        - campaignId
    SBBudgetRulesRecommendationError:
      description: The Error Response Object.
      type: object
      properties:
        code:
          description: The HTTP status code of the response.
          type: string
        details:
          description: A human-readable description of the response.
          type: string
    SBBudgetRulesRecommendationEventResponse:
      description: Special events with date range and suggested budget increase.
      type: object
      properties:
        recommendedBudgetRuleEvents:
          description: A list of recommended special events with date range and suggested budget increase.
          type: array
          items:
            $ref: '#/components/schemas/SBBudgetRulesRecommendationEvent'
    SBBudgetRulesRecommendationEvent:
      type: object
      properties:
        eventId:
          description: The event identifier.
          type: string
        endDate:
          description: The end date in YYYYMMDD format.
          type: string
        suggestedBudgetIncreasePercent:
          description: The suggested budget increase expressed as a percent.
          type: number
        eventName:
          description: The event name.
          type: string
        startDate:
          description: The start date in YYYYMMDD format.
          type: string
    SBKeywordRecommendationRequestAsin:
      type: object
      required:
        - asins
      properties:
        asins:
          type: array
          items:
            description: An array of landing page ASINs.
            maximum: 100
            type: string
            minimum: 1
        goal:
          $ref: '#/components/schemas/SBKeywordRecommendationGoal'
        creativeType:
          $ref: '#/components/schemas/SBKeywordRecommendationCreativeType'
        maxNumSuggestions:
          format: int64
          description: Maximum number of suggestions to return. Max value is 1000. If not provided, default to 100.
          type: integer
        creativeAsins:
          type: array
          items:
            description: Optional. An array of creative ASINs that are displayed in the SB creative.
            maximum: 3
            type: string
            minimum: 0
        locale:
          description: 'Optional locale to request keyword suggestion translations. For example, to request Simplified Chinese translations in US, provide locale “zh_CN”. Response will include both keyword suggestions and their translations. Supported locales include: Simplified Chinese (locale: “zh_CN”) for US, UK and CA. English (locale: “en_GB”) for DE, FR, IT and ES.'
          type: string
    SBKeywordRecommendationRequestUrl:
      type: object
      required:
        - url
      properties:
        goal:
          $ref: '#/components/schemas/SBKeywordRecommendationGoal'
        creativeType:
          $ref: '#/components/schemas/SBKeywordRecommendationCreativeType'
        maxNumSuggestions:
          format: int64
          description: Maximum number of suggestions to return. Max value is 1000. If not provided, default to 100.
          type: integer
        creativeAsins:
          type: array
          items:
            description: Optional. An array of creative ASINs that are displayed in the SB creative.
            maximum: 3
            type: string
            minimum: 0
        locale:
          description: 'Optional locale to request keyword suggestion translations. For example, to request Simplified Chinese translations in US, provide locale “zh_CN”. Response will include both keyword suggestions and their translations. Supported locales include: Simplified Chinese (locale: “zh_CN”) for US, UK and CA. English (locale: “en_GB”) for DE, FR, IT and ES.'
          type: string
        url:
          description: The URL of the Stores page, or, Vendors may also specify the URL of a custom landing page.
          type: string
    SBKeywordRecommendationGoal:
      default: PAGE_VISIT
      description: |-
        Optionally indicate the desired goal of your campaign. Different keyword recommendations will be provided depending on your specified goal. 
        |Identifier|Description|
        |----------|-----------|
        |PAGE_VISIT| Boost the visits to your landing page|
        |BRAND_IMPRESSION_SHARE| Facilitate consumers' awareness of your brand|
        |ACQUIRE_NEW_CUSTOMERS| This property is a PREVIEW ONLY and cannot be used as part of a request or response, this note will be removed once supported. This goal drives new customer acquisition for your brands|
        |AD_VIEWS| This property is a PREVIEW ONLY and cannot be used as part of a request or response, this note will be removed once supported. This goal maximizes view for your ads|<br/>
      type: string
      enum:
        - PAGE_VISIT
        - BRAND_IMPRESSION_SHARE
        - ACQUIRE_NEW_CUSTOMERS
        - AD_VIEWS
    SBKeywordRecommendationCreativeType:
      description: |-
        Optional SB creative type used for generating static or video generated keyword recommendations.  Inferred by asins if not included.
        |Identifier|Description|Recommendations|
        |----------|-----------|-----------|
        |PRODUCT_COLLECTION| Showcase multiple products within a branded shopping experience|Static|
        |AUTHOR_COLLECTION| Showcase books under your name that direct to your Book Brand landing page|Static|
        |STORE_SPOTLIGHT| Showcase your brand logo, headline, and up to 3 product categories or sub-pages|Static|
        |VIDEO| Display a video ad promoting a product that redirects to its landing page|Video|
        |BRAND_VIDEO| Display a branded video ad that redirects shoppers to your Brand Store landing page|Video|
        <br/>
      type: string
      enum:
        - PRODUCT_COLLECTION
        - AUTHOR_COLLECTION
        - STORE_SPOTLIGHT
        - VIDEO
        - BRAND_VIDEO
    SBKeywordRecommendationError:
      description: The Error Response Object.
      type: object
      properties:
        code:
          description: The HTTP status code of the response.
          type: string
        details:
          description: A human-readable description of the response.
          type: string
    SBKeywordSuggestion:
      type: object
      properties:
        searchTermImpressionShare:
          $ref: '#/components/schemas/SBKeywordRecommendationImpressionShare'
        matchType:
          $ref: '#/components/schemas/SBKeywordRecommendationMatchType'
        translation:
          description: Localized keyword value if locale was specified.
          type: string
        searchTermImpressionRank:
          $ref: '#/components/schemas/SBKeywordRecommendationImpressionRank'
        recommendationId:
          description: Unique ID for each recommendation.
          type: string
        type:
          $ref: '#/components/schemas/SBKeywordRecommendationType'
        value:
          description: Recommended keyword value.
          type: string
    SBKeywordRecommendationImpressionShare:
      format: double
      maximum: 100
      description: The account-level ad-attributed impression share for the search-term / keyword. Provides percentage share of all ad impressions the advertiser has for the keyword in the last 7 days. This metric helps advertisers identify potential opportunities based on their share of relevant keywords.
      type: number
      minimum: 0
    SBKeywordRecommendationMatchType:
      description: The match type. For more information, see [match types](https://advertising.amazon.com/help#GHTRFDZRJPW6764R) in the Amazon Advertising support center.
      type: string
      enum:
        - broad
        - exact
        - phrase
    SBKeywordRecommendationImpressionRank:
      format: int64
      description: The account-level ad-attributed impression rank for the search-term / keyword. Provides the [1:N] place the advertiser ranks among all advertisers for the keyword by ad impressions in a marketplace in the last 7 days. It tells an advertiser how many advertisers had higher share of ad impressions.
      type: integer
    SBKeywordRecommendationType:
      description: |-
        A recommendation identifier that describes the suggested action for the recommendation.
        |Identifier|Description|
        |----------|-----------|
        |addKeyword|The suggested action is to add the keyword.|
        <br/>
      type: string
      enum:
        - addKeyword
  parameters:
    clientHeader:
      name: Amazon-Advertising-API-ClientId
      in: header
      description: The identifier of a client associated with a **Login with Amazon** account.
      required: true
      schema:
        type: string
    profileHeader:
      name: Amazon-Advertising-API-Scope
      in: header
      description: The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
      required: true
      schema:
        type: string
    profileHeaderOptional:
      name: Amazon-Advertising-API-Scope
      in: header
      description: The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
      required: false
      schema:
        type: string
    accountIdHeaderOptional:
      name: Amazon-Ads-AccountId
      in: header
      description: The identifier of an account. The account must be a global advertising account..
      required: false
      schema:
        type: string


  examples:
    StoreSpotlightCampaignListExample:
      summary: A list of campaign cases containing store spotlight case
      value:
        - campaignId: 0
          name: string
          tags:
            additionalProp1: string
            additionalProp2: string
            additionalProp3: string
          budget: 0
          budgetType: lifetime
          startDate: string
          endDate: string
          state: enabled
          servingStatus: asinNotBuyable
          brandEntityId: string
          portfolioId: 0
          adFormat: storeSpotlight
          landingPage:
            pageType: string
            url: string
          bidOptimization: true
          bidMultiplier: 0
          creative:
            type: storeSpotlight
            brandName: string
            brandLogoAssetID: string
            brandLogoCrop:
              height: 0
              top: 0
              left: 0
              width: 0
            headline: string
            asins: [ ]
            subpages:
              - url: string
                pageTitle: string
                asin: string
              - url: string
                pageTitle: string
                asin: string
              - url: string
                pageTitle: string
                asin: string
          bidAdjustments:
            - bidAdjustmentPredicate: placementGroupHome
              bidAdjustmentPercent: 900
            - bidAdjustmentPredicate: placementGroupDetailPage
              bidAdjustmentPercent: 200
            - bidAdjustmentPredicate: placementGroupOther
              bidAdjustmentPercent: -50
        - campaignId: 0
          name: string
          tags:
            additionalProp1: string
            additionalProp2: string
            additionalProp3: string
          budget: 0
          budgetType: lifetime
          startDate: string
          endDate: string
          state: enabled
          servingStatus: asinNotBuyable
          brandEntityId: string
          portfolioId: 0
          adFormat: authorCollection
          landingPage:
            pageType: string
            url: string
          creative:
            asins:
              - string
            videoMediaIds:
              - string
            type: video
          supplySource: AMAZON
    StoreSpotlightSingleCampaignExample:
      summary: An example of store spotlight campaign case
      value:
        campaignId: 0
        name: string
        tags:
          additionalProp1: string
          additionalProp2: string
          additionalProp3: string
        budget: 0
        budgetType: lifetime
        startDate: string
        endDate: string
        state: enabled
        servingStatus: asinNotBuyable
        brandEntityId: string
        portfolioId: 0
        adFormat: storeSpotlight
        bidOptimization: true
        bidMultiplier: 0
        creative:
          type: storeSpotlight
          brandName: string
          brandLogoAssetID: string
          brandLogoCrop:
            height: 0
            top: 0
            left: 0
            width: 0
          headline: string
          asins: [ ]
          subpages:
            - url: string
              pageTitle: string
              asin: string
            - url: string
              pageTitle: string
              asin: string
            - url: string
              pageTitle: string
              asin: string
        landingPage:
          pageType: string
          url: string
        bidAdjustments:
          - bidAdjustmentPredicate: placementGroupHome
            bidAdjustmentPercent: 900
          - bidAdjustmentPredicate: placementGroupDetailPage
            bidAdjustmentPercent: 200
          - bidAdjustmentPredicate: placementGroupOther
            bidAdjustmentPercent: -50
    StoreSpotlightDraftListExample:
      summary: A list of draft cases containing store spotlight case
      value:
        - draftCampaignId: 0
          name: string
          tags:
            additionalProp1: string
            additionalProp2: string
            additionalProp3: string
          budget: 0
          budgetType: lifetime
          startDate: string
          endDate: string
          brandEntityId: string
          bidOptimization: true
          bidMultiplier: 99
          portfolioId: 0
          adFormat: storeSpotlight
          creative:
            type: storeSpotlight
            brandName: string
            brandLogoAssetID: string
            brandLogoCrop:
              height: 0
              top: 0
              left: 0
              width: 0
            headline: string
            asins: [ ]
            subpages:
              - url: string
                pageTitle: string
                asin: string
              - url: string
                pageTitle: string
                asin: string
              - url: string
                pageTitle: string
                asin: string
          landingPage:
            pageType: string
            url: string
          adGroupIds:
            - 0
        - draftCampaignId: 0
          name: string
          tags:
            additionalProp1: string
            additionalProp2: string
            additionalProp3: string
          budget: 0
          budgetType: lifetime
          startDate: string
          endDate: string
          brandEntityId: string
          portfolioId: 0
          adFormat: authorCollection
          creative:
            asins:
              - string
            videoMediaIds:
              - string
            type: video
          landingPage:
            pageType: string
            url: string
          supplySource: AMAZON
    StoreSpotlightSingleDraftExample:
      summary: An example of store spotlight draft case
      value:
        draftCampaignId: 0
        name: string
        tags:
          additionalProp1: string
          additionalProp2: string
          additionalProp3: string
        budget: 0
        budgetType: lifetime
        startDate: string
        endDate: string
        brandEntityId: string
        bidOptimization: true
        bidMultiplier: 99
        portfolioId: 0
        adFormat: storeSpotlight
        creative:
          type: storeSpotlight
          brandName: string
          brandLogoAssetID: string
          brandLogoCrop:
            height: 0
            top: 0
            left: 0
            width: 0
          headline: string
          asins: [ ]
          subpages:
            - url: string
              pageTitle: string
              asin: string
            - url: string
              pageTitle: string
              asin: string
            - url: string
              pageTitle: string
              asin: string
        landingPage:
          pageType: string
          url: string
        adGroupIds:
          - 0
        keywords:
          - keywordId: 0
            adGroupId: 0
            campaignId: 0
            keywordText: string
            matchType: broad
            state: draft
            bid: 0
        negativeKeywords:
          - keywordId: 0
            adGroupId: 0
            campaignId: 0
            keywordText: string
            matchType: negativeExact
            state: draft
  securitySchemes:
    oauth2AuthorizationCode:
      type: oauth2
      description: Login with Amazon. For more information see [Login with Amazon authorization code grant](https://developer.amazon.com/docs/login-with-amazon/authorization-code-grant.html).
      flows:
        authorizationCode:
          authorizationUrl: https://www.amazon.com/ap/oa
          tokenUrl: https://api.amazon.com/auth/o2/token
          scopes:
            cpc_advertising:campaign_management: Modify your advertising campaigns and access performance data
    bearerAuth:
      type: http
      scheme: bearer
  responses:
    400BadRequest:
      description: Bad request.
      content:
        application/vnd.sberror.v3.0+json:
          schema:
            $ref: '#/components/schemas/Error'
    404NotFound:
      description: The requested resource was not found.
      content:
        application/vnd.sberror.v3.0+json:
          schema:
            $ref: '#/components/schemas/Error'
security:
  - bearerAuth: [ ]
