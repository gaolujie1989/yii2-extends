<?php /** @noinspection ALL */
/**
 * This is the template for generating the openapi class.
 */

use yii\helpers\ArrayHelper;
use yii\helpers\Inflector;

/* @var $this yii\web\View */
/* @var $generator \lujie\extend\gii\generators\openapi\Generator */
/* @var $apiClassNames array api class names */

echo "<?php\n";
?>

namespace <?= $generator->factoryNs ?>;

use lujie\common\account\models\Account;
use lujie\common\oauth\OAuthClientFactory;
<?php foreach ($apiClassNames as $apiClassName): ?>
use <?= $generator->ns . '\\' . $apiClassName ?>;
<?php endforeach; ?>
use yii\authclient\InvalidResponseException;
use yii\authclient\OAuth2;
use yii\base\BaseObject;
use yii\httpclient\Exception;

/**
* This class is autogenerated by the OpenAPI gii generator
*/
class <?= $generator->factoryClass ?> extends BaseObject
{

    public $clientId;
    public $clientSecret;

    /**
    * @return array
    */
    protected function getConfig(): array
    {
        return [
            'clientId' => $this->clientId,
            'clientSecret' => $this->clientSecret,
        ];
    }
<?php foreach ($apiClassNames as $apiClassName): ?>

    /**
    * @param Account $account
    * @return <?= $apiClassName ?>|OAuth2
    * @throws InvalidResponseException
    * @throws Exception
    */
    public function get<?= $apiClassName ?>(Account $account): <?= $apiClassName ?>|OAuth2
    {
        return OAuthClientFactory::createClient(<?= $apiClassName ?>::class, $account, $this->getConfig());
    }
<?php endforeach; ?>

}
